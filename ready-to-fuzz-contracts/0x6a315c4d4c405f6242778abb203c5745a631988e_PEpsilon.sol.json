{"name":"PEpsilon","address":"0x6a315c4d4c405f6242778abb203c5745a631988e","source":"pragma solidity ^0.4.24;\n\n\n/** @title PEpsilonLastRound\n *  @author based on a contract by Daniel Babbev, modified by William George\n *\n *  This contract implements a p + epsilon attack against the Kleros court where the bribe is only offered to jurors in the last appeal round.\n *  The attack is described by VitaliK Buterin here: https://blog.ethereum.org/2015/01/28/p-epsilon-attack/\n */\ncontract PEpsilon {\n  Pinakion public pinakion;\n  Kleros public court;\n   uint public balance;\n  uint public disputeID;\n  uint public desiredOutcome;\n  uint public epsilon;\n  bool public settled;\n  uint public maxAppeals; // The maximum number of appeals this cotracts promises to pay\n  mapping (address => uint) public withdraw; // We'll use a withdraw pattern here to avoid multiple sends when a juror has voted multiple times.\n   address public attacker;\n  uint public remainingWithdraw; // Here we keep the total amount bribed jurors have available for withdraw.\n   modifier onlyBy(address _account) {require(msg.sender == _account); _;}\n   event AmountShift(uint val, uint epsilon ,address juror);\n  event Log(uint val, address addr, string message);\n   /** @dev Constructor.\n   *  @param _pinakion The PNK contract.\n   *  @param _kleros   The Kleros court.\n   *  @param _disputeID The dispute we are targeting.\n   *  @param _desiredOutcome The desired ruling of the dispute.\n   *  @param _epsilon  Jurors will be paid epsilon more for voting for the desiredOutcome.\n   *  @param _maxAppeals The maximum number of appeals this contract promises to pay out\n   */\n  constructor(Pinakion _pinakion, Kleros _kleros, uint _disputeID, uint _desiredOutcome, uint _epsilon, uint _maxAppeals) public {\n    pinakion = _pinakion;\n    court = _kleros;\n    disputeID = _disputeID;\n    desiredOutcome = _desiredOutcome;\n    epsilon = _epsilon;\n    attacker = msg.sender;\n    maxAppeals = _maxAppeals;\n  }\n   /** @dev Callback of approveAndCall - transfer pinakions in the contract. Should be called by the pinakion contract. TRUSTED.\n   *  The attacker has to deposit sufficiently large amount of PNK to cover the payouts to the jurors.\n   *  @param _from The address making the transfer.\n   *  @param _amount Amount of tokens to transfer to this contract (in basic units).\n   */\n  function receiveApproval(address _from, uint _amount, address, bytes) public onlyBy(pinakion) {\n    require(pinakion.transferFrom(_from, this, _amount));\n     balance += _amount;\n  }\n   /** @dev Jurors can withdraw their PNK from here\n   */\n  function withdrawJuror() {\n    withdrawSelect(msg.sender);\n  }\n   /** @dev Withdraw the funds of a given juror\n   *  @param _juror The address of the juror\n   */\n  function withdrawSelect(address _juror) {\n    uint amount = withdraw[_juror];\n    withdraw[_juror] = 0;\n     balance = sub(balance, amount); // Could underflow\n    remainingWithdraw = sub(remainingWithdraw, amount);\n     // The juror receives d + p + e (deposit + p + epsilon)\n    require(pinakion.transfer(_juror, amount));\n  }\n   /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n   /** @dev The attacker can withdraw their PNK from here after the bribe has been settled.\n   */\n  function withdrawAttacker(){\n    require(settled);\n     if (balance > remainingWithdraw) {\n      // The remaning balance of PNK after settlement is transfered to the attacker.\n      uint amount = balance - remainingWithdraw;\n      balance = remainingWithdraw;\n       require(pinakion.transfer(attacker, amount));\n    }\n  }\n   /** @dev Settles the p + e bribe with the jurors.\n   * If the dispute is ruled differently from desiredOutcome:\n   *    The jurors who voted for desiredOutcome receive p + d + e in rewards from this contract.\n   * If the dispute is ruled as in desiredOutcome:\n   *    The jurors don't receive anything from this contract.\n   */\n  function settle() public {\n    require(court.disputeStatus(disputeID) ==  Arbitrator.DisputeStatus.Solved); // The case must be solved.\n    require(!settled); // This function can be executed only once.\n     settled = true; // settle the bribe\n     // From the dispute we get the # of appeals and the available choices\n    var (, , appeals, choices, , , ,) = court.disputes(disputeID);\n     if (court.currentRuling(disputeID) != desiredOutcome){\n      // Calculate the redistribution amounts.\n      uint amountShift = court.getStakePerDraw();\n      uint winningChoice = court.getWinningChoice(disputeID, appeals);\n       // Rewards are calculated as per the one shot token reparation.\n      uint lastRound = (appeals > maxAppeals ? maxAppeals : appeals);\n       // Note that we don't check if the result was a tie becuse we are getting a funny compiler error: \"stack is too deep\" if we check.\n      // TODO: Account for ties\n      if (winningChoice != 0){\n        // votesLen is the length of the votes per each appeal. There is no getter function for that, so we have to calculate it here.\n        // We must end up with the exact same value as if we would have called dispute.votes[lastRound].length\n        uint votesLen = 0;\n        for (uint c = 0; c <= choices; c++) { // Iterate for each choice of the dispute.\n          votesLen += court.getVoteCount(disputeID, lastRound, c);\n        }\n         emit Log(amountShift, 0x0 ,\"stakePerDraw\");\n        emit Log(votesLen, 0x0, \"votesLen\");\n         uint totalToRedistribute = 0;\n        uint nbCoherent = 0;\n         // Now we will use votesLen as a substitute for dispute.votes[lastRound].length\n        for (uint j=0; j < votesLen; j++){\n          uint voteRuling = court.getVoteRuling(disputeID, lastRound, j);\n          address voteAccount = court.getVoteAccount(disputeID, lastRound, j);\n           emit Log(voteRuling, voteAccount, \"voted\");\n           if (voteRuling != winningChoice){\n            totalToRedistribute += amountShift;\n             if (voteRuling == desiredOutcome){ // If the juror voted as we desired.\n              // Transfer this juror back the penalty.\n              withdraw[voteAccount] += amountShift + epsilon;\n              remainingWithdraw += amountShift + epsilon;\n              emit AmountShift(amountShift, epsilon, voteAccount);\n            }\n          } else {\n            nbCoherent++;\n          }\n        }\n        // toRedistribute is the amount each juror received when he voted coherently.\n        uint toRedistribute = (totalToRedistribute - amountShift) / (nbCoherent + 1);\n         // We use votesLen again as a substitute for dispute.votes[lastRound].length\n        for (j = 0; j < votesLen; j++){\n          voteRuling = court.getVoteRuling(disputeID, lastRound, j);\n          voteAccount = court.getVoteAccount(disputeID, lastRound, j);\n           if (voteRuling == desiredOutcome){\n            // Add the coherent juror reward to the total payout.\n            withdraw[voteAccount] += toRedistribute;\n            remainingWithdraw += toRedistribute;\n            emit AmountShift(toRedistribute, 0, voteAccount);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n *  @title Kleros\n *  @author Clément Lesaege - <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"2d4e4148404843596d41485e4c484a48034e4240\">[email protected]</a>>\n *  This code implements a simple version of Kleros.\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\n */\n\npragma solidity ^0.4.24;\n\n\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\n}\n\n/// @dev The token controller contract must implement these functions\ncontract TokenController {\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\n    /// @param _owner The address that sent the ether to create tokens\n    /// @return True if the ether is accepted, false if it throws\n    function proxyPayment(address _owner) public payable returns(bool);\n\n    /// @notice Notifies the controller about a token transfer allowing the\n    ///  controller to react if desired\n    /// @param _from The origin of the transfer\n    /// @param _to The destination of the transfer\n    /// @param _amount The amount of the transfer\n    /// @return False if the controller does not authorize the transfer\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\n\n    /// @notice Notifies the controller about an approval allowing the\n    ///  controller to react if desired\n    /// @param _owner The address that calls `approve()`\n    /// @param _spender The spender in the `approve()` call\n    /// @param _amount The amount in the `approve()` call\n    /// @return False if the controller does not authorize the approval\n    function onApprove(address _owner, address _spender, uint _amount) public\n        returns(bool);\n}\n\ncontract Controlled {\n    /// @notice The address of the controller is the only address that can call\n    ///  a function with this modifier\n    modifier onlyController { require(msg.sender == controller); _; }\n\n    address public controller;\n\n    function Controlled() public { controller = msg.sender;}\n\n    /// @notice Changes the controller of the contract\n    /// @param _newController The new controller of the contract\n    function changeController(address _newController) public onlyController {\n        controller = _newController;\n    }\n}\n\n/// @dev The actual token contract, the default controller is the msg.sender\n///  that deploys the contract, so usually this token will be deployed by a\n///  token controller contract, which Giveth will call a \"Campaign\"\ncontract Pinakion is Controlled {\n\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\n    uint8 public decimals;             //Number of decimals of the smallest unit\n    string public symbol;              //An identifier: e.g. REP\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\n\n\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\n    ///  given value, the block number attached is the one that last changed the\n    ///  value\n    struct  Checkpoint {\n\n        // `fromBlock` is the block number that the value was generated from\n        uint128 fromBlock;\n\n        // `value` is the amount of tokens at a specific block number\n        uint128 value;\n    }\n\n    // `parentToken` is the Token address that was cloned to produce this token;\n    //  it will be 0x0 for a token that was not cloned\n    Pinakion public parentToken;\n\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\n    //  used to determine the initial distribution of the Clone Token\n    uint public parentSnapShotBlock;\n\n    // `creationBlock` is the block number that the Clone Token was created\n    uint public creationBlock;\n\n    // `balances` is the map that tracks the balance of each address, in this\n    //  contract when the balance changes the block number that the change\n    //  occurred is also included in the map\n    mapping (address => Checkpoint[]) balances;\n\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\n    mapping (address => mapping (address => uint256)) allowed;\n\n    // Tracks the history of the `totalSupply` of the token\n    Checkpoint[] totalSupplyHistory;\n\n    // Flag that determines if the token is transferable or not.\n    bool public transfersEnabled;\n\n    // The factory used to create new clone tokens\n    MiniMeTokenFactory public tokenFactory;\n\n////////////////\n// Constructor\n////////////////\n\n    /// @notice Constructor to create a Pinakion\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\n    ///  will create the Clone token contracts, the token factory needs to be\n    ///  deployed first\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\n    ///  new token\n    /// @param _parentSnapShotBlock Block of the parent token that will\n    ///  determine the initial distribution of the clone token, set to 0 if it\n    ///  is a new token\n    /// @param _tokenName Name of the new token\n    /// @param _decimalUnits Number of decimals of the new token\n    /// @param _tokenSymbol Token Symbol for the new token\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\n    function Pinakion(\n        address _tokenFactory,\n        address _parentToken,\n        uint _parentSnapShotBlock,\n        string _tokenName,\n        uint8 _decimalUnits,\n        string _tokenSymbol,\n        bool _transfersEnabled\n    ) public {\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\n        name = _tokenName;                                 // Set the name\n        decimals = _decimalUnits;                          // Set the decimals\n        symbol = _tokenSymbol;                             // Set the symbol\n        parentToken = Pinakion(_parentToken);\n        parentSnapShotBlock = _parentSnapShotBlock;\n        transfersEnabled = _transfersEnabled;\n        creationBlock = block.number;\n    }\n\n\n///////////////////\n// ERC20 Methods\n///////////////////\n\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\n        require(transfersEnabled);\n        doTransfer(msg.sender, _to, _amount);\n        return true;\n    }\n\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\n    ///  is approved by `_from`\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function transferFrom(address _from, address _to, uint256 _amount\n    ) public returns (bool success) {\n\n        // The controller of this contract can move tokens around at will,\n        //  this is important to recognize! Confirm that you trust the\n        //  controller of this contract, which in most situations should be\n        //  another open source smart contract or 0x0\n        if (msg.sender != controller) {\n            require(transfersEnabled);\n\n            // The standard ERC 20 transferFrom functionality\n            require(allowed[_from][msg.sender] >= _amount);\n            allowed[_from][msg.sender] -= _amount;\n        }\n        doTransfer(_from, _to, _amount);\n        return true;\n    }\n\n    /// @dev This is the actual transfer function in the token contract, it can\n    ///  only be called by other functions in this contract.\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function doTransfer(address _from, address _to, uint _amount\n    ) internal {\n\n           if (_amount == 0) {\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\n               return;\n           }\n\n           require(parentSnapShotBlock < block.number);\n\n           // Do not allow transfer to 0x0 or the token contract itself\n           require((_to != 0) && (_to != address(this)));\n\n           // If the amount being transfered is more than the balance of the\n           //  account the transfer throws\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\n\n           require(previousBalanceFrom >= _amount);\n\n           // Alerts the token controller of the transfer\n           if (isContract(controller)) {\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\n           }\n\n           // First update the balance array with the new value for the address\n           //  sending the tokens\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\n\n           // Then update the balance array with the new value for the address\n           //  receiving the tokens\n           var previousBalanceTo = balanceOfAt(_to, block.number);\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\n\n           // An event to make the transfer easy to find on the blockchain\n           Transfer(_from, _to, _amount);\n\n    }\n\n    /// @param _owner The address that's balance is being requested\n    /// @return The balance of `_owner` at the current block\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balanceOfAt(_owner, block.number);\n    }\n\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n    ///  its behalf. This is the standard version to allow backward compatibility.\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the approval was successful\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\n        require(transfersEnabled);\n\n        // Alerts the token controller of the approve function call\n        if (isContract(controller)) {\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\n        }\n\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    /// @dev This function makes it easy to read the `allowed[]` map\n    /// @param _owner The address of the account that owns the token\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\n    ///  to spend\n    function allowance(address _owner, address _spender\n    ) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\n    ///  its behalf, and then a function is triggered in the contract that is\n    ///  being approved, `_spender`. This allows users to use their tokens to\n    ///  interact with contracts in one function call instead of two\n    /// @param _spender The address of the contract able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the function call was successful\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\n    ) public returns (bool success) {\n        require(approve(_spender, _amount));\n\n        ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        );\n\n        return true;\n    }\n\n    /// @dev This function makes it easy to get the total number of tokens\n    /// @return The total number of tokens\n    function totalSupply() public constant returns (uint) {\n        return totalSupplyAt(block.number);\n    }\n\n\n////////////////\n// Query balance and totalSupply in History\n////////////////\n\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\n    /// @param _owner The address from which the balance will be retrieved\n    /// @param _blockNumber The block number when the balance is queried\n    /// @return The balance at `_blockNumber`\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\n        returns (uint) {\n\n        // These next few lines are used when the balance of the token is\n        //  requested before a check point was ever created for this token, it\n        //  requires that the `parentToken.balanceOfAt` be queried at the\n        //  genesis block for that token as this contains initial balance of\n        //  this token\n        if ((balances[_owner].length == 0)\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\n            if (address(parentToken) != 0) {\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\n            } else {\n                // Has no parent\n                return 0;\n            }\n\n        // This will return the expected balance during normal situations\n        } else {\n            return getValueAt(balances[_owner], _blockNumber);\n        }\n    }\n\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\n    /// @param _blockNumber The block number when the totalSupply is queried\n    /// @return The total amount of tokens at `_blockNumber`\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\n\n        // These next few lines are used when the totalSupply of the token is\n        //  requested before a check point was ever created for this token, it\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\n        //  genesis block for this token as that contains totalSupply of this\n        //  token at this block number.\n        if ((totalSupplyHistory.length == 0)\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\n            if (address(parentToken) != 0) {\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\n            } else {\n                return 0;\n            }\n\n        // This will return the expected totalSupply during normal situations\n        } else {\n            return getValueAt(totalSupplyHistory, _blockNumber);\n        }\n    }\n\n////////////////\n// Clone Token Method\n////////////////\n\n    /// @notice Creates a new clone token with the initial distribution being\n    ///  this token at `_snapshotBlock`\n    /// @param _cloneTokenName Name of the clone token\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\n    /// @param _cloneTokenSymbol Symbol of the clone token\n    /// @param _snapshotBlock Block when the distribution of the parent token is\n    ///  copied to set the initial distribution of the new clone token;\n    ///  if the block is zero than the actual block, the current block is used\n    /// @param _transfersEnabled True if transfers are allowed in the clone\n    /// @return The address of the new MiniMeToken Contract\n    function createCloneToken(\n        string _cloneTokenName,\n        uint8 _cloneDecimalUnits,\n        string _cloneTokenSymbol,\n        uint _snapshotBlock,\n        bool _transfersEnabled\n        ) public returns(address) {\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\n        Pinakion cloneToken = tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            );\n\n        cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(address _owner, uint _amount\n    ) public onlyController returns (bool) {\n        uint curTotalSupply = totalSupply();\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\n        uint previousBalanceTo = balanceOf(_owner);\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\n        Transfer(0, _owner, _amount);\n        return true;\n    }\n\n\n    /// @notice Burns `_amount` tokens from `_owner`\n    /// @param _owner The address that will lose the tokens\n    /// @param _amount The quantity of tokens to burn\n    /// @return True if the tokens are burned correctly\n    function destroyTokens(address _owner, uint _amount\n    ) onlyController public returns (bool) {\n        uint curTotalSupply = totalSupply();\n        require(curTotalSupply >= _amount);\n        uint previousBalanceFrom = balanceOf(_owner);\n        require(previousBalanceFrom >= _amount);\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\n        Transfer(_owner, 0, _amount);\n        return true;\n    }\n\n////////////////\n// Enable tokens transfers\n////////////////\n\n\n    /// @notice Enables token holders to transfer their tokens freely if true\n    /// @param _transfersEnabled True if transfers are allowed in the clone\n    function enableTransfers(bool _transfersEnabled) public onlyController {\n        transfersEnabled = _transfersEnabled;\n    }\n\n////////////////\n// Internal helper functions to query and set a value in a snapshot array\n////////////////\n\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\n    /// @param checkpoints The history of values being queried\n    /// @param _block The block number to retrieve the value at\n    /// @return The number of tokens being queried\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\n    ) constant internal returns (uint) {\n        if (checkpoints.length == 0) return 0;\n\n        // Shortcut for the actual value\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\n            return checkpoints[checkpoints.length-1].value;\n        if (_block < checkpoints[0].fromBlock) return 0;\n\n        // Binary search of the value in the array\n        uint min = 0;\n        uint max = checkpoints.length-1;\n        while (max > min) {\n            uint mid = (max + min + 1)/ 2;\n            if (checkpoints[mid].fromBlock<=_block) {\n                min = mid;\n            } else {\n                max = mid-1;\n            }\n        }\n        return checkpoints[min].value;\n    }\n\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\n    ///  `totalSupplyHistory`\n    /// @param checkpoints The history of data being updated\n    /// @param _value The new number of tokens\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\n    ) internal  {\n        if ((checkpoints.length == 0)\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\n               newCheckPoint.fromBlock =  uint128(block.number);\n               newCheckPoint.value = uint128(_value);\n           } else {\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\n               oldCheckPoint.value = uint128(_value);\n           }\n    }\n\n    /// @dev Internal function to determine if an address is a contract\n    /// @param _addr The address being queried\n    /// @return True if `_addr` is a contract\n    function isContract(address _addr) constant internal returns(bool) {\n        uint size;\n        if (_addr == 0) return false;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        return size>0;\n    }\n\n    /// @dev Helper function to return a min betwen the two uints\n    function min(uint a, uint b) pure internal returns (uint) {\n        return a < b ? a : b;\n    }\n\n    /// @notice The fallback function: If the contract's controller has not been\n    ///  set to 0, then the `proxyPayment` method is called which relays the\n    ///  ether and creates tokens as described in the token controller contract\n    function () public payable {\n        require(isContract(controller));\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\n    }\n\n//////////\n// Safety Methods\n//////////\n\n    /// @notice This method can be used by the controller to extract mistakenly\n    ///  sent tokens to this contract.\n    /// @param _token The address of the token contract that you want to recover\n    ///  set to 0 in case you want to extract ether.\n    function claimTokens(address _token) public onlyController {\n        if (_token == 0x0) {\n            controller.transfer(this.balance);\n            return;\n        }\n\n        Pinakion token = Pinakion(_token);\n        uint balance = token.balanceOf(this);\n        token.transfer(controller, balance);\n        ClaimedTokens(_token, controller, balance);\n    }\n\n////////////////\n// Events\n////////////////\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _amount\n        );\n\n}\n\n\n////////////////\n// MiniMeTokenFactory\n////////////////\n\n/// @dev This contract is used to generate clone contracts from a contract.\n///  In solidity this is the way to create a contract from a contract of the\n///  same class\ncontract MiniMeTokenFactory {\n\n    /// @notice Update the DApp by creating a new token with new functionalities\n    ///  the msg.sender becomes the controller of this clone token\n    /// @param _parentToken Address of the token being cloned\n    /// @param _snapshotBlock Block of the parent token that will\n    ///  determine the initial distribution of the clone token\n    /// @param _tokenName Name of the new token\n    /// @param _decimalUnits Number of decimals of the new token\n    /// @param _tokenSymbol Token Symbol for the new token\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\n    /// @return The address of the new token contract\n    function createCloneToken(\n        address _parentToken,\n        uint _snapshotBlock,\n        string _tokenName,\n        uint8 _decimalUnits,\n        string _tokenSymbol,\n        bool _transfersEnabled\n    ) public returns (Pinakion) {\n        Pinakion newToken = new Pinakion(\n            this,\n            _parentToken,\n            _snapshotBlock,\n            _tokenName,\n            _decimalUnits,\n            _tokenSymbol,\n            _transfersEnabled\n            );\n\n        newToken.changeController(msg.sender);\n        return newToken;\n    }\n}\n\ncontract RNG{\n\n    /** @dev Contribute to the reward of a random number.\n     *  @param _block Block the random number is linked to.\n     */\n    function contribute(uint _block) public payable;\n\n    /** @dev Request a random number.\n     *  @param _block Block linked to the request.\n     */\n    function requestRN(uint _block) public payable {\n        contribute(_block);\n    }\n\n    /** @dev Get the random number.\n     *  @param _block Block the random number is linked to.\n     *  @return RN Random Number. If the number is not ready or has not been required 0 instead.\n     */\n    function getRN(uint _block) public returns (uint RN);\n\n    /** @dev Get a uncorrelated random number. Act like getRN but give a different number for each sender.\n     *  This is to prevent users from getting correlated numbers.\n     *  @param _block Block the random number is linked to.\n     *  @return RN Random Number. If the number is not ready or has not been required 0 instead.\n     */\n    function getUncorrelatedRN(uint _block) public returns (uint RN) {\n        uint baseRN=getRN(_block);\n        if (baseRN==0)\n            return 0;\n        else\n            return uint(keccak256(msg.sender,baseRN));\n    }\n\n }\n\n/** Simple Random Number Generator returning the blockhash.\n *  Allows saving the random number for use in the future.\n *  It allows the contract to still access the blockhash even after 256 blocks.\n *  The first party to call the save function gets the reward.\n */\ncontract BlockHashRNG is RNG {\n\n    mapping (uint => uint) public randomNumber; // randomNumber[block] is the random number for this block, 0 otherwise.\n    mapping (uint => uint) public reward; // reward[block] is the amount to be paid to the party w.\n\n\n\n    /** @dev Contribute to the reward of a random number.\n     *  @param _block Block the random number is linked to.\n     */\n    function contribute(uint _block) public payable { reward[_block]+=msg.value; }\n\n\n    /** @dev Return the random number. If it has not been saved and is still computable compute it.\n     *  @param _block Block the random number is linked to.\n     *  @return RN Random Number. If the number is not ready or has not been requested 0 instead.\n     */\n    function getRN(uint _block) public returns (uint RN) {\n        RN=randomNumber[_block];\n        if (RN==0){\n            saveRN(_block);\n            return randomNumber[_block];\n        }\n        else\n            return RN;\n    }\n\n    /** @dev Save the random number for this blockhash and give the reward to the caller.\n     *  @param _block Block the random number is linked to.\n     */\n    function saveRN(uint _block) public {\n        if (blockhash(_block) != 0x0)\n            randomNumber[_block] = uint(blockhash(_block));\n        if (randomNumber[_block] != 0) { // If the number is set.\n            uint rewardToSend = reward[_block];\n            reward[_block] = 0;\n            msg.sender.send(rewardToSend); // Note that the use of send is on purpose as we don't want to block in case msg.sender has a fallback issue.\n        }\n    }\n\n}\n\n\n/** Random Number Generator returning the blockhash with a backup behaviour.\n *  Allows saving the random number for use in the future. \n *  It allows the contract to still access the blockhash even after 256 blocks.\n *  The first party to call the save function gets the reward.\n *  If no one calls the contract within 256 blocks, the contract fallback in returning the blockhash of the previous block.\n */\ncontract BlockHashRNGFallback is BlockHashRNG {\n    \n    /** @dev Save the random number for this blockhash and give the reward to the caller.\n     *  @param _block Block the random number is linked to.\n     */\n    function saveRN(uint _block) public {\n        if (_block<block.number && randomNumber[_block]==0) {// If the random number is not already set and can be.\n            if (blockhash(_block)!=0x0) // Normal case.\n                randomNumber[_block]=uint(blockhash(_block));\n            else // The contract was not called in time. Fallback to returning previous blockhash.\n                randomNumber[_block]=uint(blockhash(block.number-1));\n        }\n        if (randomNumber[_block] != 0) { // If the random number is set.\n            uint rewardToSend=reward[_block];\n            reward[_block]=0;\n            msg.sender.send(rewardToSend); // Note that the use of send is on purpose as we don't want to block in case the msg.sender has a fallback issue.\n        }\n    }\n    \n}\n\n/** @title Arbitrable\n *  Arbitrable abstract contract.\n *  When developing arbitrable contracts, we need to:\n *  -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\n *  -Allow dispute creation. For this a function must:\n *      -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\n *      -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);\n */\ncontract Arbitrable{\n    Arbitrator public arbitrator;\n    bytes public arbitratorExtraData; // Extra data to require particular dispute and appeal behaviour.\n\n    modifier onlyArbitrator {require(msg.sender==address(arbitrator)); _;}\n\n    /** @dev To be raised when a ruling is given.\n     *  @param _arbitrator The arbitrator giving the ruling.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling The ruling which was given.\n     */\n    event Ruling(Arbitrator indexed _arbitrator, uint indexed _disputeID, uint _ruling);\n\n    /** @dev To be emmited when meta-evidence is submitted.\n     *  @param _metaEvidenceID Unique identifier of meta-evidence.\n     *  @param _evidence A link to the meta-evidence JSON.\n     */\n    event MetaEvidence(uint indexed _metaEvidenceID, string _evidence);\n\n    /** @dev To be emmited when a dispute is created to link the correct meta-evidence to the disputeID\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _metaEvidenceID Unique identifier of meta-evidence.\n     */\n    event Dispute(Arbitrator indexed _arbitrator, uint indexed _disputeID, uint _metaEvidenceID);\n\n    /** @dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due to gas considerations).\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n     *  @param _evidence A URI to the evidence JSON file whose name should be its keccak256 hash followed by .json.\n     */\n    event Evidence(Arbitrator indexed _arbitrator, uint indexed _disputeID, address _party, string _evidence);\n\n    /** @dev Constructor. Choose the arbitrator.\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\n     */\n    constructor(Arbitrator _arbitrator, bytes _arbitratorExtraData) public {\n        arbitrator = _arbitrator;\n        arbitratorExtraData = _arbitratorExtraData;\n    }\n\n    /** @dev Give a ruling for a dispute. Must be called by the arbitrator.\n     *  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\n     */\n    function rule(uint _disputeID, uint _ruling) public onlyArbitrator {\n        emit Ruling(Arbitrator(msg.sender),_disputeID,_ruling);\n\n        executeRuling(_disputeID,_ruling);\n    }\n\n\n    /** @dev Execute a ruling of a dispute.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\n     */\n    function executeRuling(uint _disputeID, uint _ruling) internal;\n}\n\n/** @title Arbitrator\n *  Arbitrator abstract contract.\n *  When developing arbitrator contracts we need to:\n *  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n *  -Define the functions for cost display (arbitrationCost and appealCost).\n *  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).\n */\ncontract Arbitrator{\n\n    enum DisputeStatus {Waiting, Appealable, Solved}\n\n    modifier requireArbitrationFee(bytes _extraData) {require(msg.value>=arbitrationCost(_extraData)); _;}\n    modifier requireAppealFee(uint _disputeID, bytes _extraData) {require(msg.value>=appealCost(_disputeID, _extraData)); _;}\n\n    /** @dev To be raised when a dispute can be appealed.\n     *  @param _disputeID ID of the dispute.\n     */\n    event AppealPossible(uint _disputeID);\n\n    /** @dev To be raised when a dispute is created.\n     *  @param _disputeID ID of the dispute.\n     *  @param _arbitrable The contract which created the dispute.\n     */\n    event DisputeCreation(uint indexed _disputeID, Arbitrable _arbitrable);\n\n    /** @dev To be raised when the current ruling is appealed.\n     *  @param _disputeID ID of the dispute.\n     *  @param _arbitrable The contract which created the dispute.\n     */\n    event AppealDecision(uint indexed _disputeID, Arbitrable _arbitrable);\n\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\n     *  Must be paid at least arbitrationCost(_extraData).\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return disputeID ID of the dispute created.\n     */\n    function createDispute(uint _choices, bytes _extraData) public requireArbitrationFee(_extraData) payable returns(uint disputeID)  {}\n\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return fee Amount to be paid.\n     */\n    function arbitrationCost(bytes _extraData) public constant returns(uint fee);\n\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Can be used to give extra info on the appeal.\n     */\n    function appeal(uint _disputeID, bytes _extraData) public requireAppealFee(_disputeID,_extraData) payable {\n        emit AppealDecision(_disputeID, Arbitrable(msg.sender));\n    }\n\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return fee Amount to be paid.\n     */\n    function appealCost(uint _disputeID, bytes _extraData) public constant returns(uint fee);\n\n    /** @dev Return the status of a dispute.\n     *  @param _disputeID ID of the dispute to rule.\n     *  @return status The status of the dispute.\n     */\n    function disputeStatus(uint _disputeID) public constant returns(DisputeStatus status);\n\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n     *  @param _disputeID ID of the dispute.\n     *  @return ruling The ruling which has been given or the one which will be given if there is no appeal.\n     */\n    function currentRuling(uint _disputeID) public constant returns(uint ruling);\n\n}\n\n\n\ncontract Kleros is Arbitrator, ApproveAndCallFallBack {\n\n    // **************************** //\n    // *    Contract variables    * //\n    // **************************** //\n\n    // Variables which should not change after initialization.\n    Pinakion public pinakion;\n    uint public constant NON_PAYABLE_AMOUNT = (2**256 - 2) / 2; // An astronomic amount, practically can't be paid.\n\n    // Variables which will subject to the governance mechanism.\n    // Note they will only be able to be changed during the activation period (because a session assumes they don't change after it).\n    RNG public rng; // Random Number Generator used to draw jurors.\n    uint public arbitrationFeePerJuror = 0.05 ether; // The fee which will be paid to each juror.\n    uint16 public defaultNumberJuror = 3; // Number of drawn jurors unless specified otherwise.\n    uint public minActivatedToken = 0.1 * 1e18; // Minimum of tokens to be activated (in basic units).\n    uint[5] public timePerPeriod; // The minimum time each period lasts (seconds).\n    uint public alpha = 2000; // alpha in ‱ (1 / 10 000).\n    uint constant ALPHA_DIVISOR = 1e4; // Amount we need to divided alpha in ‱ to get the float value of alpha.\n    uint public maxAppeals = 5; // Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.\n    // Initially, the governor will be an address controlled by the Kleros team. At a later stage,\n    // the governor will be switched to a governance contract with liquid voting.\n    address public governor; // Address of the governor contract.\n\n    // Variables changing during day to day interaction.\n    uint public session = 1;      // Current session of the court.\n    uint public lastPeriodChange; // The last time we changed of period (seconds).\n    uint public segmentSize;      // Size of the segment of activated tokens.\n    uint public rnBlock;          // The block linked with the RN which is requested.\n    uint public randomNumber;     // Random number of the session.\n\n    enum Period {\n        Activation, // When juror can deposit their tokens and parties give evidences.\n        Draw,       // When jurors are drawn at random, note that this period is fast.\n        Vote,       // Where jurors can vote on disputes.\n        Appeal,     // When parties can appeal the rulings.\n        Execution   // When where token redistribution occurs and Kleros call the arbitrated contracts.\n    }\n\n    Period public period;\n\n    struct Juror {\n        uint balance;      // The amount of tokens the contract holds for this juror.\n        uint atStake;      // Total number of tokens the jurors can loose in disputes they are drawn in. Those tokens are locked. Note that we can have atStake > balance but it should be statistically unlikely and does not pose issues.\n        uint lastSession;  // Last session the tokens were activated.\n        uint segmentStart; // Start of the segment of activated tokens.\n        uint segmentEnd;   // End of the segment of activated tokens.\n    }\n\n    mapping (address => Juror) public jurors;\n\n    struct Vote {\n        address account; // The juror who casted the vote.\n        uint ruling;     // The ruling which was given.\n    }\n\n    struct VoteCounter {\n        uint winningChoice; // The choice which currently has the highest amount of votes. Is 0 in case of a tie.\n        uint winningCount;  // The number of votes for winningChoice. Or for the choices which are tied.\n        mapping (uint => uint) voteCount; // voteCount[choice] is the number of votes for choice.\n    }\n\n    enum DisputeState {\n        Open,       // The dispute is opened but the outcome is not available yet (this include when jurors voted but appeal is still possible).\n        Resolving,  // The token repartition has started. Note that if it's done in just one call, this state is skipped.\n        Executable, // The arbitrated contract can be called to enforce the decision.\n        Executed    // Everything has been done and the dispute can't be interacted with anymore.\n    }\n\n    struct Dispute {\n        Arbitrable arbitrated;       // Contract to be arbitrated.\n        uint session;                // First session the dispute was schedule.\n        uint appeals;                // Number of appeals.\n        uint choices;                // The number of choices available to the jurors.\n        uint16 initialNumberJurors;  // The initial number of jurors.\n        uint arbitrationFeePerJuror; // The fee which will be paid to each juror.\n        DisputeState state;          // The state of the dispute.\n        Vote[][] votes;              // The votes in the form vote[appeals][voteID].\n        VoteCounter[] voteCounter;   // The vote counters in the form voteCounter[appeals].\n        mapping (address => uint) lastSessionVote; // Last session a juror has voted on this dispute. Is 0 if he never did.\n        uint currentAppealToRepartition; // The current appeal we are repartitioning.\n        AppealsRepartitioned[] appealsRepartitioned; // Track a partially repartitioned appeal in the form AppealsRepartitioned[appeal].\n    }\n\n    enum RepartitionStage { // State of the token repartition if oneShotTokenRepartition would throw because there are too many votes.\n        Incoherent,\n        Coherent,\n        AtStake,\n        Complete\n    }\n\n    struct AppealsRepartitioned {\n        uint totalToRedistribute;   // Total amount of tokens we have to redistribute.\n        uint nbCoherent;            // Number of coherent jurors for session.\n        uint currentIncoherentVote; // Current vote for the incoherent loop.\n        uint currentCoherentVote;   // Current vote we need to count.\n        uint currentAtStakeVote;    // Current vote we need to count.\n        RepartitionStage stage;     // Use with multipleShotTokenRepartition if oneShotTokenRepartition would throw.\n    }\n\n    Dispute[] public disputes;\n\n    // **************************** //\n    // *          Events          * //\n    // **************************** //\n\n    /** @dev Emitted when we pass to a new period.\n     *  @param _period The new period.\n     *  @param _session The current session.\n     */\n    event NewPeriod(Period _period, uint indexed _session);\n\n    /** @dev Emitted when a juror wins or loses tokens.\n      * @param _account The juror affected.\n      * @param _disputeID The ID of the dispute.\n      * @param _amount The amount of parts of token which was won. Can be negative for lost amounts.\n      */\n    event TokenShift(address indexed _account, uint _disputeID, int _amount);\n\n    /** @dev Emited when a juror wins arbitration fees.\n      * @param _account The account affected.\n      * @param _disputeID The ID of the dispute.\n      * @param _amount The amount of weis which was won.\n      */\n    event ArbitrationReward(address indexed _account, uint _disputeID, uint _amount);\n\n    // **************************** //\n    // *         Modifiers        * //\n    // **************************** //\n    modifier onlyBy(address _account) {require(msg.sender == _account); _;}\n    modifier onlyDuring(Period _period) {require(period == _period); _;}\n    modifier onlyGovernor() {require(msg.sender == governor); _;}\n\n\n    /** @dev Constructor.\n     *  @param _pinakion The address of the pinakion contract.\n     *  @param _rng The random number generator which will be used.\n     *  @param _timePerPeriod The minimal time for each period (seconds).\n     *  @param _governor Address of the governor contract.\n     */\n    constructor(Pinakion _pinakion, RNG _rng, uint[5] _timePerPeriod, address _governor) public {\n        pinakion = _pinakion;\n        rng = _rng;\n        lastPeriodChange = now;\n        timePerPeriod = _timePerPeriod;\n        governor = _governor;\n    }\n\n    // **************************** //\n    // *  Functions interacting   * //\n    // *  with Pinakion contract  * //\n    // **************************** //\n\n    /** @dev Callback of approveAndCall - transfer pinakions of a juror in the contract. Should be called by the pinakion contract. TRUSTED.\n     *  @param _from The address making the transfer.\n     *  @param _amount Amount of tokens to transfer to Kleros (in basic units).\n     */\n    function receiveApproval(address _from, uint _amount, address, bytes) public onlyBy(pinakion) {\n        require(pinakion.transferFrom(_from, this, _amount));\n\n        jurors[_from].balance += _amount;\n    }\n\n    /** @dev Withdraw tokens. Note that we can't withdraw the tokens which are still atStake. \n     *  Jurors can't withdraw their tokens if they have deposited some during this session.\n     *  This is to prevent jurors from withdrawing tokens they could loose.\n     *  @param _value The amount to withdraw.\n     */\n    function withdraw(uint _value) public {\n        Juror storage juror = jurors[msg.sender];\n        require(juror.atStake <= juror.balance); // Make sure that there is no more at stake than owned to avoid overflow.\n        require(_value <= juror.balance-juror.atStake);\n        require(juror.lastSession != session);\n\n        juror.balance -= _value;\n        require(pinakion.transfer(msg.sender,_value));\n    }\n\n    // **************************** //\n    // *      Court functions     * //\n    // *    Modifying the state   * //\n    // **************************** //\n\n    /** @dev To call to go to a new period. TRUSTED.\n     */\n    function passPeriod() public {\n        require(now-lastPeriodChange >= timePerPeriod[uint8(period)]);\n\n        if (period == Period.Activation) {\n            rnBlock = block.number + 1;\n            rng.requestRN(rnBlock);\n            period = Period.Draw;\n        } else if (period == Period.Draw) {\n            randomNumber = rng.getUncorrelatedRN(rnBlock);\n            require(randomNumber != 0);\n            period = Period.Vote;\n        } else if (period == Period.Vote) {\n            period = Period.Appeal;\n        } else if (period == Period.Appeal) {\n            period = Period.Execution;\n        } else if (period == Period.Execution) {\n            period = Period.Activation;\n            ++session;\n            segmentSize = 0;\n            rnBlock = 0;\n            randomNumber = 0;\n        }\n\n\n        lastPeriodChange = now;\n        NewPeriod(period, session);\n    }\n\n\n    /** @dev Deposit tokens in order to have chances of being drawn. Note that once tokens are deposited, \n     *  there is no possibility of depositing more.\n     *  @param _value Amount of tokens (in basic units) to deposit.\n     */\n    function activateTokens(uint _value) public onlyDuring(Period.Activation) {\n        Juror storage juror = jurors[msg.sender];\n        require(_value <= juror.balance);\n        require(_value >= minActivatedToken);\n        require(juror.lastSession != session); // Verify that tokens were not already activated for this session.\n\n        juror.lastSession = session;\n        juror.segmentStart = segmentSize;\n        segmentSize += _value;\n        juror.segmentEnd = segmentSize;\n\n    }\n\n    /** @dev Vote a ruling. Juror must input the draw ID he was drawn.\n     *  Note that the complexity is O(d), where d is amount of times the juror was drawn.\n     *  Since being drawn multiple time is a rare occurrence and that a juror can always vote with less weight than it has, it is not a problem.\n     *  But note that it can lead to arbitration fees being kept by the contract and never distributed.\n     *  @param _disputeID The ID of the dispute the juror was drawn.\n     *  @param _ruling The ruling given.\n     *  @param _draws The list of draws the juror was drawn. Draw numbering starts at 1 and the numbers should be increasing.\n     */\n    function voteRuling(uint _disputeID, uint _ruling, uint[] _draws) public onlyDuring(Period.Vote) {\n        Dispute storage dispute = disputes[_disputeID];\n        Juror storage juror = jurors[msg.sender];\n        VoteCounter storage voteCounter = dispute.voteCounter[dispute.appeals];\n        require(dispute.lastSessionVote[msg.sender] != session); // Make sure juror hasn't voted yet.\n        require(_ruling <= dispute.choices);\n        // Note that it throws if the draws are incorrect.\n        require(validDraws(msg.sender, _disputeID, _draws));\n\n        dispute.lastSessionVote[msg.sender] = session;\n        voteCounter.voteCount[_ruling] += _draws.length;\n        if (voteCounter.winningCount < voteCounter.voteCount[_ruling]) {\n            voteCounter.winningCount = voteCounter.voteCount[_ruling];\n            voteCounter.winningChoice = _ruling;\n        } else if (voteCounter.winningCount==voteCounter.voteCount[_ruling] && _draws.length!=0) { // Verify draw length to be non-zero to avoid the possibility of setting tie by casting 0 votes.\n            voteCounter.winningChoice = 0; // It's currently a tie.\n        }\n        for (uint i = 0; i < _draws.length; ++i) {\n            dispute.votes[dispute.appeals].push(Vote({\n                account: msg.sender,\n                ruling: _ruling\n            }));\n        }\n\n        juror.atStake += _draws.length * getStakePerDraw();\n        uint feeToPay = _draws.length * dispute.arbitrationFeePerJuror;\n        msg.sender.transfer(feeToPay);\n        ArbitrationReward(msg.sender, _disputeID, feeToPay);\n    }\n\n    /** @dev Steal part of the tokens and the arbitration fee of a juror who failed to vote.\n     *  Note that a juror who voted but without all his weight can't be penalized.\n     *  It is possible to not penalize with the maximum weight.\n     *  But note that it can lead to arbitration fees being kept by the contract and never distributed.\n     *  @param _jurorAddress Address of the juror to steal tokens from.\n     *  @param _disputeID The ID of the dispute the juror was drawn.\n     *  @param _draws The list of draws the juror was drawn. Numbering starts at 1 and the numbers should be increasing.\n     */\n    function penalizeInactiveJuror(address _jurorAddress, uint _disputeID, uint[] _draws) public {\n        Dispute storage dispute = disputes[_disputeID];\n        Juror storage inactiveJuror = jurors[_jurorAddress];\n        require(period > Period.Vote);\n        require(dispute.lastSessionVote[_jurorAddress] != session); // Verify the juror hasn't voted.\n        dispute.lastSessionVote[_jurorAddress] = session; // Update last session to avoid penalizing multiple times.\n        require(validDraws(_jurorAddress, _disputeID, _draws));\n        uint penality = _draws.length * minActivatedToken * 2 * alpha / ALPHA_DIVISOR;\n        penality = (penality < inactiveJuror.balance) ? penality : inactiveJuror.balance; // Make sure the penality is not higher than the balance.\n        inactiveJuror.balance -= penality;\n        TokenShift(_jurorAddress, _disputeID, -int(penality));\n        jurors[msg.sender].balance += penality / 2; // Give half of the penalty to the caller.\n        TokenShift(msg.sender, _disputeID, int(penality / 2));\n        jurors[governor].balance += penality / 2; // The other half to the governor.\n        TokenShift(governor, _disputeID, int(penality / 2));\n        msg.sender.transfer(_draws.length*dispute.arbitrationFeePerJuror); // Give the arbitration fees to the caller.\n    }\n\n    /** @dev Execute all the token repartition.\n     *  Note that this function could consume to much gas if there is too much votes. \n     *  It is O(v), where v is the number of votes for this dispute.\n     *  In the next version, there will also be a function to execute it in multiple calls \n     *  (but note that one shot execution, if possible, is less expensive).\n     *  @param _disputeID ID of the dispute.\n     */\n    function oneShotTokenRepartition(uint _disputeID) public onlyDuring(Period.Execution) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(dispute.state == DisputeState.Open);\n        require(dispute.session+dispute.appeals <= session);\n\n        uint winningChoice = dispute.voteCounter[dispute.appeals].winningChoice;\n        uint amountShift = getStakePerDraw();\n        for (uint i = 0; i <= dispute.appeals; ++i) {\n            // If the result is not a tie, some parties are incoherent. Note that 0 (refuse to arbitrate) winning is not a tie.\n            // Result is a tie if the winningChoice is 0 (refuse to arbitrate) and the choice 0 is not the most voted choice.\n            // Note that in case of a \"tie\" among some choices including 0, parties who did not vote 0 are considered incoherent.\n            if (winningChoice!=0 || (dispute.voteCounter[dispute.appeals].voteCount[0] == dispute.voteCounter[dispute.appeals].winningCount)) {\n                uint totalToRedistribute = 0;\n                uint nbCoherent = 0;\n                // First loop to penalize the incoherent votes.\n                for (uint j = 0; j < dispute.votes[i].length; ++j) {\n                    Vote storage vote = dispute.votes[i][j];\n                    if (vote.ruling != winningChoice) {\n                        Juror storage juror = jurors[vote.account];\n                        uint penalty = amountShift<juror.balance ? amountShift : juror.balance;\n                        juror.balance -= penalty;\n                        TokenShift(vote.account, _disputeID, int(-penalty));\n                        totalToRedistribute += penalty;\n                    } else {\n                        ++nbCoherent;\n                    }\n                }\n                if (nbCoherent == 0) { // No one was coherent at this stage. Give the tokens to the governor.\n                    jurors[governor].balance += totalToRedistribute;\n                    TokenShift(governor, _disputeID, int(totalToRedistribute));\n                } else { // otherwise, redistribute them.\n                    uint toRedistribute = totalToRedistribute / nbCoherent; // Note that few fractions of tokens can be lost but due to the high amount of decimals we don't care.\n                    // Second loop to redistribute.\n                    for (j = 0; j < dispute.votes[i].length; ++j) {\n                        vote = dispute.votes[i][j];\n                        if (vote.ruling == winningChoice) {\n                            juror = jurors[vote.account];\n                            juror.balance += toRedistribute;\n                            TokenShift(vote.account, _disputeID, int(toRedistribute));\n                        }\n                    }\n                }\n            }\n            // Third loop to lower the atStake in order to unlock tokens.\n            for (j = 0; j < dispute.votes[i].length; ++j) {\n                vote = dispute.votes[i][j];\n                juror = jurors[vote.account];\n                juror.atStake -= amountShift; // Note that it can't underflow due to amountShift not changing between vote and redistribution.\n            }\n        }\n        dispute.state = DisputeState.Executable; // Since it was solved in one shot, go directly to the executable step.\n    }\n\n    /** @dev Execute token repartition on a dispute for a specific number of votes.\n     *  This should only be called if oneShotTokenRepartition will throw because there are too many votes (will use too much gas).\n     *  Note that There are 3 iterations per vote. e.g. A dispute with 1 appeal (2 sessions) and 3 votes per session will have 18 iterations\n     *  @param _disputeID ID of the dispute.\n     *  @param _maxIterations the maxium number of votes to repartition in this iteration\n     */\n    function multipleShotTokenRepartition(uint _disputeID, uint _maxIterations) public onlyDuring(Period.Execution) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(dispute.state <= DisputeState.Resolving);\n        require(dispute.session+dispute.appeals <= session);\n        dispute.state = DisputeState.Resolving; // Mark as resolving so oneShotTokenRepartition cannot be called on dispute.\n\n        uint winningChoice = dispute.voteCounter[dispute.appeals].winningChoice;\n        uint amountShift = getStakePerDraw();\n        uint currentIterations = 0; // Total votes we have repartitioned this iteration.\n        for (uint i = dispute.currentAppealToRepartition; i <= dispute.appeals; ++i) {\n            // Allocate space for new AppealsRepartitioned.\n            if (dispute.appealsRepartitioned.length < i+1) {\n                dispute.appealsRepartitioned.length++;\n            }\n\n            // If the result is a tie, no parties are incoherent and no need to move tokens. Note that 0 (refuse to arbitrate) winning is not a tie.\n            if (winningChoice==0 && (dispute.voteCounter[dispute.appeals].voteCount[0] != dispute.voteCounter[dispute.appeals].winningCount)) {\n                // If ruling is a tie we can skip to at stake.\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\n            }\n\n            // First loop to penalize the incoherent votes.\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Incoherent) {\n                for (uint j = dispute.appealsRepartitioned[i].currentIncoherentVote; j < dispute.votes[i].length; ++j) {\n                    if (currentIterations >= _maxIterations) {\n                        return;\n                    }\n                    Vote storage vote = dispute.votes[i][j];\n                    if (vote.ruling != winningChoice) {\n                        Juror storage juror = jurors[vote.account];\n                        uint penalty = amountShift<juror.balance ? amountShift : juror.balance;\n                        juror.balance -= penalty;\n                        TokenShift(vote.account, _disputeID, int(-penalty));\n                        dispute.appealsRepartitioned[i].totalToRedistribute += penalty;\n                    } else {\n                        ++dispute.appealsRepartitioned[i].nbCoherent;\n                    }\n\n                    ++dispute.appealsRepartitioned[i].currentIncoherentVote;\n                    ++currentIterations;\n                }\n\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.Coherent;\n            }\n\n            // Second loop to reward coherent voters\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Coherent) {\n                if (dispute.appealsRepartitioned[i].nbCoherent == 0) { // No one was coherent at this stage. Give the tokens to the governor.\n                    jurors[governor].balance += dispute.appealsRepartitioned[i].totalToRedistribute;\n                    TokenShift(governor, _disputeID, int(dispute.appealsRepartitioned[i].totalToRedistribute));\n                    dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\n                } else { // Otherwise, redistribute them.\n                    uint toRedistribute = dispute.appealsRepartitioned[i].totalToRedistribute / dispute.appealsRepartitioned[i].nbCoherent; // Note that few fractions of tokens can be lost but due to the high amount of decimals we don't care.\n                    // Second loop to redistribute.\n                    for (j = dispute.appealsRepartitioned[i].currentCoherentVote; j < dispute.votes[i].length; ++j) {\n                        if (currentIterations >= _maxIterations) {\n                            return;\n                        }\n                        vote = dispute.votes[i][j];\n                        if (vote.ruling == winningChoice) {\n                            juror = jurors[vote.account];\n                            juror.balance += toRedistribute;\n                            TokenShift(vote.account, _disputeID, int(toRedistribute));\n                        }\n\n                        ++currentIterations;\n                        ++dispute.appealsRepartitioned[i].currentCoherentVote;\n                    }\n\n                    dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\n                }\n            }\n\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.AtStake) {\n                // Third loop to lower the atStake in order to unlock tokens.\n                for (j = dispute.appealsRepartitioned[i].currentAtStakeVote; j < dispute.votes[i].length; ++j) {\n                    if (currentIterations >= _maxIterations) {\n                        return;\n                    }\n                    vote = dispute.votes[i][j];\n                    juror = jurors[vote.account];\n                    juror.atStake -= amountShift; // Note that it can't underflow due to amountShift not changing between vote and redistribution.\n\n                    ++currentIterations;\n                    ++dispute.appealsRepartitioned[i].currentAtStakeVote;\n                }\n\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.Complete;\n            }\n\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Complete) {\n                ++dispute.currentAppealToRepartition;\n            }\n        }\n\n        dispute.state = DisputeState.Executable;\n    }\n\n    // **************************** //\n    // *      Court functions     * //\n    // *     Constant and Pure    * //\n    // **************************** //\n\n    /** @dev Return the amount of jurors which are or will be drawn in the dispute.\n     *  The number of jurors is doubled and 1 is added at each appeal. We have proven the formula by recurrence.\n     *  This avoid having a variable number of jurors which would be updated in order to save gas.\n     *  @param _disputeID The ID of the dispute we compute the amount of jurors.\n     *  @return nbJurors The number of jurors which are drawn.\n     */\n    function amountJurors(uint _disputeID) public view returns (uint nbJurors) {\n        Dispute storage dispute = disputes[_disputeID];\n        return (dispute.initialNumberJurors + 1) * 2**dispute.appeals - 1;\n    }\n\n    /** @dev Must be used to verify that a juror has been draw at least _draws.length times.\n     *  We have to require the user to specify the draws that lead the juror to be drawn.\n     *  Because doing otherwise (looping through all draws) could consume too much gas.\n     *  @param _jurorAddress Address of the juror we want to verify draws.\n     *  @param _disputeID The ID of the dispute the juror was drawn.\n     *  @param _draws The list of draws the juror was drawn. It draw numbering starts at 1 and the numbers should be increasing.\n     *  Note that in most cases this list will just contain 1 number.\n     *  @param valid true if the draws are valid.\n     */\n    function validDraws(address _jurorAddress, uint _disputeID, uint[] _draws) public view returns (bool valid) {\n        uint draw = 0;\n        Juror storage juror = jurors[_jurorAddress];\n        Dispute storage dispute = disputes[_disputeID];\n        uint nbJurors = amountJurors(_disputeID);\n\n        if (juror.lastSession != session) return false; // Make sure that the tokens were deposited for this session.\n        if (dispute.session+dispute.appeals != session) return false; // Make sure there is currently a dispute.\n        if (period <= Period.Draw) return false; // Make sure that jurors are already drawn.\n        for (uint i = 0; i < _draws.length; ++i) {\n            if (_draws[i] <= draw) return false; // Make sure that draws are always increasing to avoid someone inputing the same multiple times.\n            draw = _draws[i];\n            if (draw > nbJurors) return false;\n            uint position = uint(keccak256(randomNumber, _disputeID, draw)) % segmentSize; // Random position on the segment for draw.\n            require(position >= juror.segmentStart);\n            require(position < juror.segmentEnd);\n        }\n\n        return true;\n    }\n\n    // **************************** //\n    // *   Arbitrator functions   * //\n    // *   Modifying the state    * //\n    // **************************** //\n\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\n     *  Must be paid at least arbitrationCost().\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\n     *  @param _extraData Null for the default number. Otherwise, first 16 bytes will be used to return the number of jurors.\n     *  @return disputeID ID of the dispute created.\n     */\n    function createDispute(uint _choices, bytes _extraData) public payable returns (uint disputeID) {\n        uint16 nbJurors = extraDataToNbJurors(_extraData);\n        require(msg.value >= arbitrationCost(_extraData));\n\n        disputeID = disputes.length++;\n        Dispute storage dispute = disputes[disputeID];\n        dispute.arbitrated = Arbitrable(msg.sender);\n        if (period < Period.Draw) // If drawing did not start schedule it for the current session.\n            dispute.session = session;\n        else // Otherwise schedule it for the next one.\n            dispute.session = session+1;\n        dispute.choices = _choices;\n        dispute.initialNumberJurors = nbJurors;\n        dispute.arbitrationFeePerJuror = arbitrationFeePerJuror; // We store it as the general fee can be changed through the governance mechanism.\n        dispute.votes.length++;\n        dispute.voteCounter.length++;\n\n        DisputeCreation(disputeID, Arbitrable(msg.sender));\n        return disputeID;\n    }\n\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Standard but not used by this contract.\n     */\n    function appeal(uint _disputeID, bytes _extraData) public payable onlyDuring(Period.Appeal) {\n        super.appeal(_disputeID,_extraData);\n        Dispute storage dispute = disputes[_disputeID];\n        require(msg.value >= appealCost(_disputeID, _extraData));\n        require(dispute.session+dispute.appeals == session); // Dispute of the current session.\n        require(dispute.arbitrated == msg.sender);\n        \n        dispute.appeals++;\n        dispute.votes.length++;\n        dispute.voteCounter.length++;\n    }\n\n    /** @dev Execute the ruling of a dispute which is in the state executable. UNTRUSTED.\n     *  @param disputeID ID of the dispute to execute the ruling.\n     */\n    function executeRuling(uint disputeID) public {\n        Dispute storage dispute = disputes[disputeID];\n        require(dispute.state == DisputeState.Executable);\n\n        dispute.state = DisputeState.Executed;\n        dispute.arbitrated.rule(disputeID, dispute.voteCounter[dispute.appeals].winningChoice);\n    }\n\n    // **************************** //\n    // *   Arbitrator functions   * //\n    // *    Constant and pure     * //\n    // **************************** //\n\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, \n     *  as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n     *  @return fee Amount to be paid.\n     */\n    function arbitrationCost(bytes _extraData) public view returns (uint fee) {\n        return extraDataToNbJurors(_extraData) * arbitrationFeePerJuror;\n    }\n\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, \n     *  as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Is not used there.\n     *  @return fee Amount to be paid.\n     */\n    function appealCost(uint _disputeID, bytes _extraData) public view returns (uint fee) {\n        Dispute storage dispute = disputes[_disputeID];\n\n        if(dispute.appeals >= maxAppeals) return NON_PAYABLE_AMOUNT;\n\n        return (2*amountJurors(_disputeID) + 1) * dispute.arbitrationFeePerJuror;\n    }\n\n    /** @dev Compute the amount of jurors to be drawn.\n     *  @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n     *  Note that it does not check that the number of jurors is odd, but users are advised to choose a odd number of jurors.\n     */\n    function extraDataToNbJurors(bytes _extraData) internal view returns (uint16 nbJurors) {\n        if (_extraData.length < 2)\n            return defaultNumberJuror;\n        else\n            return (uint16(_extraData[0]) << 8) + uint16(_extraData[1]);\n    }\n\n    /** @dev Compute the minimum activated pinakions in alpha.\n     *  Note there may be multiple draws for a single user on a single dispute.\n     */\n    function getStakePerDraw() public view returns (uint minActivatedTokenInAlpha) {\n        return (alpha * minActivatedToken) / ALPHA_DIVISOR;\n    }\n\n\n    // **************************** //\n    // *     Constant getters     * //\n    // **************************** //\n\n    /** @dev Getter for account in Vote.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @param _voteID The ID of the vote for this appeal (or initial session).\n     *  @return account The address of the voter.\n     */\n    function getVoteAccount(uint _disputeID, uint _appeals, uint _voteID) public view returns (address account) {\n        return disputes[_disputeID].votes[_appeals][_voteID].account;\n    }\n\n    /** @dev Getter for ruling in Vote.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @param _voteID The ID of the vote for this appeal (or initial session).\n     *  @return ruling The ruling given by the voter.\n     */\n    function getVoteRuling(uint _disputeID, uint _appeals, uint _voteID) public view returns (uint ruling) {\n        return disputes[_disputeID].votes[_appeals][_voteID].ruling;\n    }\n\n    /** @dev Getter for winningChoice in VoteCounter.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @return winningChoice The currently winning choice (or 0 if it's tied). Note that 0 can also be return if the majority refuses to arbitrate.\n     */\n    function getWinningChoice(uint _disputeID, uint _appeals) public view returns (uint winningChoice) {\n        return disputes[_disputeID].voteCounter[_appeals].winningChoice;\n    }\n\n    /** @dev Getter for winningCount in VoteCounter.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @return winningCount The amount of votes the winning choice (or those who are tied) has.\n     */\n    function getWinningCount(uint _disputeID, uint _appeals) public view returns (uint winningCount) {\n        return disputes[_disputeID].voteCounter[_appeals].winningCount;\n    }\n\n    /** @dev Getter for voteCount in VoteCounter.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @param _choice The choice.\n     *  @return voteCount The amount of votes the winning choice (or those who are tied) has.\n     */\n    function getVoteCount(uint _disputeID, uint _appeals, uint _choice) public view returns (uint voteCount) {\n        return disputes[_disputeID].voteCounter[_appeals].voteCount[_choice];\n    }\n\n    /** @dev Getter for lastSessionVote in Dispute.\n     *  @param _disputeID ID of the dispute.\n     *  @param _juror The juror we want to get the last session he voted.\n     *  @return lastSessionVote The last session the juror voted.\n     */\n    function getLastSessionVote(uint _disputeID, address _juror) public view returns (uint lastSessionVote) {\n        return disputes[_disputeID].lastSessionVote[_juror];\n    }\n\n    /** @dev Is the juror drawn in the draw of the dispute.\n     *  @param _disputeID ID of the dispute.\n     *  @param _juror The juror.\n     *  @param _draw The draw. Note that it starts at 1.\n     *  @return drawn True if the juror is drawn, false otherwise.\n     */\n    function isDrawn(uint _disputeID, address _juror, uint _draw) public view returns (bool drawn) {\n        Dispute storage dispute = disputes[_disputeID];\n        Juror storage juror = jurors[_juror];\n        if (juror.lastSession != session\n        || (dispute.session+dispute.appeals != session)\n        || period<=Period.Draw\n        || _draw>amountJurors(_disputeID)\n        || _draw==0\n        || segmentSize==0\n        ) {\n            return false;\n        } else {\n            uint position = uint(keccak256(randomNumber,_disputeID,_draw)) % segmentSize;\n            return (position >= juror.segmentStart) && (position < juror.segmentEnd);\n        }\n\n    }\n\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n     *  @param _disputeID ID of the dispute.\n     *  @return ruling The current ruling which will be given if there is no appeal. If it is not available, return 0.\n     */\n    function currentRuling(uint _disputeID) public view returns (uint ruling) {\n        Dispute storage dispute = disputes[_disputeID];\n        return dispute.voteCounter[dispute.appeals].winningChoice;\n    }\n\n    /** @dev Return the status of a dispute.\n     *  @param _disputeID ID of the dispute to rule.\n     *  @return status The status of the dispute.\n     */\n    function disputeStatus(uint _disputeID) public view returns (DisputeStatus status) {\n        Dispute storage dispute = disputes[_disputeID];\n        if (dispute.session+dispute.appeals < session) // Dispute of past session.\n            return DisputeStatus.Solved;\n        else if(dispute.session+dispute.appeals == session) { // Dispute of current session.\n            if (dispute.state == DisputeState.Open) {\n                if (period < Period.Appeal)\n                    return DisputeStatus.Waiting;\n                else if (period == Period.Appeal)\n                    return DisputeStatus.Appealable;\n                else return DisputeStatus.Solved;\n            } else return DisputeStatus.Solved;\n        } else return DisputeStatus.Waiting; // Dispute for future session.\n    }\n\n    // **************************** //\n    // *     Governor Functions   * //\n    // **************************** //\n\n    /** @dev General call function where the contract execute an arbitrary call with data and ETH following governor orders.\n     *  @param _data Transaction data.\n     *  @param _value Transaction value.\n     *  @param _target Transaction target.\n     */\n    function executeOrder(bytes32 _data, uint _value, address _target) public onlyGovernor {\n        _target.call.value(_value)(_data);\n    }\n\n    /** @dev Setter for rng.\n     *  @param _rng An instance of RNG.\n     */\n    function setRng(RNG _rng) public onlyGovernor {\n        rng = _rng;\n    }\n\n    /** @dev Setter for arbitrationFeePerJuror.\n     *  @param _arbitrationFeePerJuror The fee which will be paid to each juror.\n     */\n    function setArbitrationFeePerJuror(uint _arbitrationFeePerJuror) public onlyGovernor {\n        arbitrationFeePerJuror = _arbitrationFeePerJuror;\n    }\n\n    /** @dev Setter for defaultNumberJuror.\n     *  @param _defaultNumberJuror Number of drawn jurors unless specified otherwise.\n     */\n    function setDefaultNumberJuror(uint16 _defaultNumberJuror) public onlyGovernor {\n        defaultNumberJuror = _defaultNumberJuror;\n    }\n\n    /** @dev Setter for minActivatedToken.\n     *  @param _minActivatedToken Minimum of tokens to be activated (in basic units).\n     */\n    function setMinActivatedToken(uint _minActivatedToken) public onlyGovernor {\n        minActivatedToken = _minActivatedToken;\n    }\n\n    /** @dev Setter for timePerPeriod.\n     *  @param _timePerPeriod The minimum time each period lasts (seconds).\n     */\n    function setTimePerPeriod(uint[5] _timePerPeriod) public onlyGovernor {\n        timePerPeriod = _timePerPeriod;\n    }\n\n    /** @dev Setter for alpha.\n     *  @param _alpha Alpha in ‱.\n     */\n    function setAlpha(uint _alpha) public onlyGovernor {\n        alpha = _alpha;\n    }\n\n    /** @dev Setter for maxAppeals.\n     *  @param _maxAppeals Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.\n     */\n    function setMaxAppeals(uint _maxAppeals) public onlyGovernor {\n        maxAppeals = _maxAppeals;\n    }\n\n    /** @dev Setter for governor.\n     *  @param _governor Address of the governor contract.\n     */\n    function setGovernor(address _governor) public onlyGovernor {\n        governor = _governor;\n    }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[],\"name\":\"court\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_juror\",\"type\":\"address\"}],\"name\":\"withdrawSelect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"attacker\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"epsilon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawJuror\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAppeals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAttacker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"desiredOutcome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pinakion\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_pinakion\",\"type\":\"address\"},{\"name\":\"_kleros\",\"type\":\"address\"},{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_desiredOutcome\",\"type\":\"uint256\"},{\"name\":\"_epsilon\",\"type\":\"uint256\"},{\"name\":\"_maxAppeals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"epsilon\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"juror\",\"type\":\"address\"}],\"name\":\"AmountShift\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"}]","bin":"608060405234801561001057600080fd5b5060405160c08061195f833981018060405281019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600381905550826004819055508160058190555033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600781905550505050505050611807806101586000396000f3006080604052600436106100e5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062971a30146100ea57806311da60b41461014157806337a318951461015857806348eb76ee1461019b57806351cff8d9146101f25780638f4ffcb1146102495780638f775839146102fc578063a7ba9fb11461032b578063b0a1e2b414610356578063b63005ec14610381578063b69ef8a814610398578063da93f938146103c3578063ddd6d79a146103ee578063e664755b14610419578063e7255ef914610430578063fbf405b01461045b575b600080fd5b3480156100f657600080fd5b506100ff6104b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566104d8565b005b34801561016457600080fd5b50610199600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611246565b005b3480156101a757600080fd5b506101b0611401565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101fe57600080fd5b50610233600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611427565b6040518082815260200191505060405180910390f35b34801561025557600080fd5b506102fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061143f565b005b34801561030857600080fd5b506103116115f0565b604051808215151515815260200191505060405180910390f35b34801561033757600080fd5b50610340611603565b6040518082815260200191505060405180910390f35b34801561036257600080fd5b5061036b611609565b6040518082815260200191505060405180910390f35b34801561038d57600080fd5b5061039661160f565b005b3480156103a457600080fd5b506103ad61161a565b6040518082815260200191505060405180910390f35b3480156103cf57600080fd5b506103d8611620565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b50610403611626565b6040518082815260200191505060405180910390f35b34801561042557600080fd5b5061042e61162c565b005b34801561043c57600080fd5b50610445611797565b6040518082815260200191505060405180910390f35b34801561046757600080fd5b5061047061179d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008060008060008060008060006002808111156104f857fe5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310f169e86003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d60208110156105b557600080fd5b810190808051906020019092919050505060028111156105d157fe5b1415156105dd57600080fd5b600660009054906101000a900460ff161515156105f957600080fd5b6001600660006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663564a565d6003546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505061010060405180830381600087803b1580156106a857600080fd5b505af11580156106bc573d6000803e3d6000fd5b505050506040513d6101008110156106d357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050509e509e505050600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c3db16d6003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b810190808051906020019092919050505014151561123757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e59a29a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505050506040513d60208110156108bc57600080fd5b81019080805190602001909291905050509a50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8860f416003548f6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050602060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050506040513d602081101561099457600080fd5b810190808051906020019092919050505099506007548d116109b6578c6109ba565b6007545b985060008a1415156112365760009750600096505b8b87111515610ac757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c9732486003548b8a6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610a7b57600080fd5b505af1158015610a8f573d6000803e3d6000fd5b505050506040513d6020811015610aa557600080fd5b81019080805190602001909291905050508801975086806001019750506109cf565b7f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98b6000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252600c8152602001807f7374616b65506572447261770000000000000000000000000000000000000000815250602001935050505060405180910390a17f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c9886000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260088152602001807f766f7465734c656e000000000000000000000000000000000000000000000000815250602001935050505060405180910390a16000955060009450600093505b87841015610f6c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610c9d57600080fd5b505af1158015610cb1573d6000803e3d6000fd5b505050506040513d6020811015610cc757600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610d7d57600080fd5b505af1158015610d91573d6000803e3d6000fd5b505050506040513d6020811015610da757600080fd5b810190808051906020019092919050505091507f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260058152602001807f766f746564000000000000000000000000000000000000000000000000000000815250602001935050505060405180910390a18983141515610f56578a86019550600454831415610f51576005548b01600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506005548b01600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee338b60055484604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b610f5f565b84806001019550505b8380600101945050610bf2565b600185018b8703811515610f7c57fe5b049050600093505b8784101561123557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561102f57600080fd5b505af1158015611043573d6000803e3d6000fd5b505050506040513d602081101561105957600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561110f57600080fd5b505af1158015611123573d6000803e3d6000fd5b505050506040513d602081101561113957600080fd5b810190808051906020019092919050505091506004548314156112285780600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee3381600084604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b8380600101945050610f84565b5b5b50505050505050505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112db600254826117c2565b6002819055506112ed600a54826117c2565b600a819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156113b757600080fd5b505af11580156113cb573d6000803e3d6000fd5b505050506040513d60208110156113e157600080fd5b810190808051906020019092919050505015156113fd57600080fd5b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561149b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561159357600080fd5b505af11580156115a7573d6000803e3d6000fd5b505050506040513d60208110156115bd57600080fd5b810190808051906020019092919050505015156115d957600080fd5b836002600082825401925050819055505050505050565b600660009054906101000a900460ff1681565b60055481565b60035481565b61161833611246565b565b60025481565b60075481565b600a5481565b6000600660009054906101000a900460ff16151561164957600080fd5b600a54600254111561179457600a54600254039050600a546002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561174d57600080fd5b505af1158015611761573d6000803e3d6000fd5b505050506040513d602081101561177757600080fd5b8101908080519060200190929190505050151561179357600080fd5b5b50565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111515156117d057fe5b8183039050929150505600a165627a7a723058206a7da79820b4fb49f2c7cdd88d5bb6ba1e1dc4681db585ba60dee354011a7cf90029","bin-runtime":"6080604052600436106100e5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062971a30146100ea57806311da60b41461014157806337a318951461015857806348eb76ee1461019b57806351cff8d9146101f25780638f4ffcb1146102495780638f775839146102fc578063a7ba9fb11461032b578063b0a1e2b414610356578063b63005ec14610381578063b69ef8a814610398578063da93f938146103c3578063ddd6d79a146103ee578063e664755b14610419578063e7255ef914610430578063fbf405b01461045b575b600080fd5b3480156100f657600080fd5b506100ff6104b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566104d8565b005b34801561016457600080fd5b50610199600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611246565b005b3480156101a757600080fd5b506101b0611401565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101fe57600080fd5b50610233600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611427565b6040518082815260200191505060405180910390f35b34801561025557600080fd5b506102fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061143f565b005b34801561030857600080fd5b506103116115f0565b604051808215151515815260200191505060405180910390f35b34801561033757600080fd5b50610340611603565b6040518082815260200191505060405180910390f35b34801561036257600080fd5b5061036b611609565b6040518082815260200191505060405180910390f35b34801561038d57600080fd5b5061039661160f565b005b3480156103a457600080fd5b506103ad61161a565b6040518082815260200191505060405180910390f35b3480156103cf57600080fd5b506103d8611620565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b50610403611626565b6040518082815260200191505060405180910390f35b34801561042557600080fd5b5061042e61162c565b005b34801561043c57600080fd5b50610445611797565b6040518082815260200191505060405180910390f35b34801561046757600080fd5b5061047061179d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008060008060008060008060006002808111156104f857fe5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310f169e86003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d60208110156105b557600080fd5b810190808051906020019092919050505060028111156105d157fe5b1415156105dd57600080fd5b600660009054906101000a900460ff161515156105f957600080fd5b6001600660006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663564a565d6003546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505061010060405180830381600087803b1580156106a857600080fd5b505af11580156106bc573d6000803e3d6000fd5b505050506040513d6101008110156106d357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050509e509e505050600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c3db16d6003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b810190808051906020019092919050505014151561123757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e59a29a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505050506040513d60208110156108bc57600080fd5b81019080805190602001909291905050509a50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8860f416003548f6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050602060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050506040513d602081101561099457600080fd5b810190808051906020019092919050505099506007548d116109b6578c6109ba565b6007545b985060008a1415156112365760009750600096505b8b87111515610ac757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c9732486003548b8a6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610a7b57600080fd5b505af1158015610a8f573d6000803e3d6000fd5b505050506040513d6020811015610aa557600080fd5b81019080805190602001909291905050508801975086806001019750506109cf565b7f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98b6000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252600c8152602001807f7374616b65506572447261770000000000000000000000000000000000000000815250602001935050505060405180910390a17f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c9886000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260088152602001807f766f7465734c656e000000000000000000000000000000000000000000000000815250602001935050505060405180910390a16000955060009450600093505b87841015610f6c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610c9d57600080fd5b505af1158015610cb1573d6000803e3d6000fd5b505050506040513d6020811015610cc757600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610d7d57600080fd5b505af1158015610d91573d6000803e3d6000fd5b505050506040513d6020811015610da757600080fd5b810190808051906020019092919050505091507f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260058152602001807f766f746564000000000000000000000000000000000000000000000000000000815250602001935050505060405180910390a18983141515610f56578a86019550600454831415610f51576005548b01600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506005548b01600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee338b60055484604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b610f5f565b84806001019550505b8380600101945050610bf2565b600185018b8703811515610f7c57fe5b049050600093505b8784101561123557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561102f57600080fd5b505af1158015611043573d6000803e3d6000fd5b505050506040513d602081101561105957600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561110f57600080fd5b505af1158015611123573d6000803e3d6000fd5b505050506040513d602081101561113957600080fd5b810190808051906020019092919050505091506004548314156112285780600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee3381600084604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b8380600101945050610f84565b5b5b50505050505050505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112db600254826117c2565b6002819055506112ed600a54826117c2565b600a819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156113b757600080fd5b505af11580156113cb573d6000803e3d6000fd5b505050506040513d60208110156113e157600080fd5b810190808051906020019092919050505015156113fd57600080fd5b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561149b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561159357600080fd5b505af11580156115a7573d6000803e3d6000fd5b505050506040513d60208110156115bd57600080fd5b810190808051906020019092919050505015156115d957600080fd5b836002600082825401925050819055505050505050565b600660009054906101000a900460ff1681565b60055481565b60035481565b61161833611246565b565b60025481565b60075481565b600a5481565b6000600660009054906101000a900460ff16151561164957600080fd5b600a54600254111561179457600a54600254039050600a546002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561174d57600080fd5b505af1158015611761573d6000803e3d6000fd5b505050506040513d602081101561177757600080fd5b8101908080519060200190929190505050151561179357600080fd5b5b50565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111515156117d057fe5b8183039050929150505600a165627a7a723058206a7da79820b4fb49f2c7cdd88d5bb6ba1e1dc4681db585ba60dee354011a7cf90029","srcmap":"391:6750:0:-;;;1560:326;8:9:-1;5:2;;;30:1;27;20:12;5:2;1560:326:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:9;1693:8;;:20;;;;;;;;;;;;;;;;;;1727:7;1719:5;;:15;;;;;;;;;;;;;;;;;;1752:10;1740:9;:22;;;;1785:15;1768:14;:32;;;;1816:8;1806:7;:18;;;;1841:10;1830:8;;:21;;;;;;;;;;;;;;;;;;1870:11;1857:10;:24;;;;1560:326;;;;;;391:6750;;;;;;","srcmap-runtime":"391:6750:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;3984:3155;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3984:3155:0;;;;;;2671:328;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2671:328:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;824:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;678:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;678:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2264:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;566:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;543;;8:9:-1;5:2;;;30:1;27;20:12;5:2;543:19:0;;;;;;;;;;;;;;;;;;;;;;;488:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;488:21:0;;;;;;;;;;;;;;;;;;;;;;;2507:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2507:62:0;;;;;;465:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;465:19:0;;;;;;;;;;;;;;;;;;;;;;;589:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;589:22:0;;;;;;;;;;;;;;;;;;;;;;;851:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;851:29:0;;;;;;;;;;;;;;;;;;;;;;;3328:322;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3328:322:0;;;;;;513:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;513:26:0;;;;;;;;;;;;;;;;;;;;;;;413:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;441:19;;;;;;;;;;;;;:::o;3984:3155::-;4316:7;4325;4483:16;4533:18;4675:14;5194:13;5226:6;5486:24;5524:15;5647:6;5687:15;5761:19;6480;4058:31;4023:66;;;;;;;;:5;;;;;;;;;;;:19;;;4043:9;;4023:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4023:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4023:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4023:30:0;;;;;;;;;;;;;;;;:66;;;;;;;;;4015:75;;;;;;;;4133:7;;;;;;;;;;;4132:8;4124:17;;;;;;;;4202:4;4192:7;;:14;;;;;;;;;;;;;;;;;;4343:5;;;;;;;;;;;:14;;;4358:9;;4343:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4343:25:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4343:25:0;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4343:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4307:61;;;;;;;;;;4413:14;;4379:5;;;;;;;;;;;:19;;;4399:9;;4379:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4379:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4379:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4379:30:0;;;;;;;;;;;;;;;;:48;;4375:2760;;;4502:5;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4502:23:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4502:23:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4502:23:0;;;;;;;;;;;;;;;;4483:42;;4554:5;;;;;;;;;;;:22;;;4577:9;;4588:7;4554:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4554:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4554:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4554:42:0;;;;;;;;;;;;;;;;4533:63;;4703:10;;4693:7;:20;:43;;4729:7;4693:43;;;4716:10;;4693:43;4675:62;;4936:1;4919:13;:18;;4915:2214;;;5210:1;5194:17;;5235:1;5226:10;;5221:157;5243:7;5238:1;:12;;5221:157;;;5324:5;;;;;;;;;;;:18;;;5343:9;;5354;5365:1;5324:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5324:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5324:43:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5324:43:0;;;;;;;;;;;;;;;;5312:55;;;;5252:3;;;;;;;5221:157;;;5393:37;5397:11;5410:3;5393:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:30;5449:8;5459:3;5445:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5513:1;5486:28;;5542:1;5524:19;;5654:1;5647:8;;5642:743;5661:8;5657:1;:12;5642:743;;;5705:5;;;;;;;;;;;:19;;;5725:9;;5736;5747:1;5705:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5705:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5705:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5705:44:0;;;;;;;;;;;;;;;;5687:62;;5783:5;;;;;;;;;;;:20;;;5804:9;;5815;5826:1;5783:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5783:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5783:45:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5783:45:0;;;;;;;;;;;;;;;;5761:67;;5846:37;5850:10;5862:11;5846:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5914:13;5900:10;:27;;5896:479;;;5965:11;5942:34;;;;6009:14;;5995:10;:28;5991:327;;;6171:7;;6157:11;:21;6132:8;:21;6141:11;6132:21;;;;;;;;;;;;;;;;:46;;;;;;;;;;;6229:7;;6215:11;:21;6194:17;;:42;;;;;;;;;;;6257:46;6269:11;6282:7;;6291:11;6257:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5991:327;5896:479;;;6350:12;;;;;;;5896:479;5671:3;;;;;;;5642:743;;;6554:1;6541:10;:14;6525:11;6503:19;:33;6502:54;;;;;;;;6480:76;;6661:1;6657:5;;6652:469;6668:8;6664:1;:12;6652:469;;;6707:5;;;;;;;;;;;:19;;;6727:9;;6738;6749:1;6707:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6707:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6707:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6707:44:0;;;;;;;;;;;;;;;;6694:57;;6777:5;;;;;;;;;;;:20;;;6798:9;;6809;6820:1;6777:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6777:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6777:45:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6777:45:0;;;;;;;;;;;;;;;;6763:59;;6853:14;;6839:10;:28;6835:276;;;6973:14;6948:8;:21;6957:11;6948:21;;;;;;;;;;;;;;;;:39;;;;;;;;;;;7022:14;7001:17;;:35;;;;;;;;;;;7055:43;7067:14;7083:1;7086:11;7055:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6835:276;6678:3;;;;;;;6652:469;;;4915:2214;4375:2760;3984:3155;;;;;;;;;;;;;:::o;2671:328::-;2717:11;2731:8;:16;2740:6;2731:16;;;;;;;;;;;;;;;;2717:30;;2772:1;2753:8;:16;2762:6;2753:16;;;;;;;;;;;;;;;:20;;;;2790;2794:7;;2803:6;2790:3;:20::i;:::-;2780:7;:30;;;;2855;2859:17;;2878:6;2855:3;:30::i;:::-;2835:17;:50;;;;2960:8;;;;;;;;;;;:17;;;2978:6;2986;2960:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2960:33:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2960:33:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2960:33:0;;;;;;;;;;;;;;;;2952:42;;;;;;;;2671:328;;:::o;824:23::-;;;;;;;;;;;;;:::o;678:41::-;;;;;;;;;;;;;;;;;:::o;2264:182::-;2348:8;;;;;;;;;;;1018;1004:22;;:10;:22;;;996:31;;;;;;;;2372:8;;;;;;;;;;;:21;;;2394:5;2401:4;2407:7;2372:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:43:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:43:0;;;;;;;;;;;;;;;;2364:52;;;;;;;;2434:7;2423;;:18;;;;;;;;;;;2264:182;;;;;:::o;566:19::-;;;;;;;;;;;;;:::o;543:::-;;;;:::o;488:21::-;;;;:::o;2507:62::-;2538:26;2553:10;2538:14;:26::i;:::-;2507:62::o;465:19::-;;;;:::o;589:22::-;;;;:::o;851:29::-;;;;:::o;3328:322::-;3510:11;3369:7;;;;;;;;;;;3361:16;;;;;;;;3398:17;;3388:7;;:27;3384:262;;;3534:17;;3524:7;;:27;3510:41;;3569:17;;3559:7;:27;;;;3603:8;;;;;;;;;;;:17;;;3621:8;;;;;;;;;;;3631:6;3603:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3603:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3603:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3603:35:0;;;;;;;;;;;;;;;;3595:44;;;;;;;;3384:262;3328:322;:::o;513:26::-;;;;:::o;413:24::-;;;;;;;;;;;;;:::o;3111:116::-;3171:7;3199:2;3193;:8;;3186:16;;;;;;3220:2;3215;:7;3208:14;;3111:116;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0x6a315c4d4c405f6242778abb203c5745a631988e_PEpsilon.sol","exportedSymbols":{"ApproveAndCallFallBack":[491],"Arbitrable":[1925],"Arbitrator":[2042],"BlockHashRNG":[1751],"BlockHashRNGFallback":[1828],"Controlled":[556],"Kleros":[4532],"MiniMeTokenFactory":[1598],"PEpsilon":[478],"Pinakion":[1557],"RNG":[1649],"TokenController":[521]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title PEpsilonLastRound\n @author based on a contract by Daniel Babbev, modified by William George\n *  This contract implements a p + epsilon attack against the Kleros court where the bribe is only offered to jurors in the last appeal round.\n The attack is described by VitaliK Buterin here: https://blog.ethereum.org/2015/01/28/p-epsilon-attack/","fullyImplemented":true,"linearizedBaseContracts":[478],"name":"PEpsilon","scope":4533},"children":[{"attributes":{"constant":false,"name":"pinakion","scope":478,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":2,"name":"UserDefinedTypeName","src":"413:8:0"}],"id":3,"name":"VariableDeclaration","src":"413:24:0"},{"attributes":{"constant":false,"name":"court","scope":478,"stateVariable":true,"storageLocation":"default","type":"contract Kleros","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Kleros","referencedDeclaration":4532,"type":"contract Kleros"},"id":4,"name":"UserDefinedTypeName","src":"441:6:0"}],"id":5,"name":"VariableDeclaration","src":"441:19:0"},{"attributes":{"constant":false,"name":"balance","scope":478,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":6,"name":"ElementaryTypeName","src":"465:4:0"}],"id":7,"name":"VariableDeclaration","src":"465:19:0"},{"attributes":{"constant":false,"name":"disputeID","scope":478,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":8,"name":"ElementaryTypeName","src":"488:4:0"}],"id":9,"name":"VariableDeclaration","src":"488:21:0"},{"attributes":{"constant":false,"name":"desiredOutcome","scope":478,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":10,"name":"ElementaryTypeName","src":"513:4:0"}],"id":11,"name":"VariableDeclaration","src":"513:26:0"},{"attributes":{"constant":false,"name":"epsilon","scope":478,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":12,"name":"ElementaryTypeName","src":"543:4:0"}],"id":13,"name":"VariableDeclaration","src":"543:19:0"},{"attributes":{"constant":false,"name":"settled","scope":478,"stateVariable":true,"storageLocation":"default","type":"bool","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":14,"name":"ElementaryTypeName","src":"566:4:0"}],"id":15,"name":"VariableDeclaration","src":"566:19:0"},{"attributes":{"constant":false,"name":"maxAppeals","scope":478,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":16,"name":"ElementaryTypeName","src":"589:4:0"}],"id":17,"name":"VariableDeclaration","src":"589:22:0"},{"attributes":{"constant":false,"name":"withdraw","scope":478,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":18,"name":"ElementaryTypeName","src":"687:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":19,"name":"ElementaryTypeName","src":"698:4:0"}],"id":20,"name":"Mapping","src":"678:25:0"}],"id":21,"name":"VariableDeclaration","src":"678:41:0"},{"attributes":{"constant":false,"name":"attacker","scope":478,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":22,"name":"ElementaryTypeName","src":"824:7:0"}],"id":23,"name":"VariableDeclaration","src":"824:23:0"},{"attributes":{"constant":false,"name":"remainingWithdraw","scope":478,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":24,"name":"ElementaryTypeName","src":"851:4:0"}],"id":25,"name":"VariableDeclaration","src":"851:29:0"},{"attributes":{"documentation":null,"name":"onlyBy","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_account","scope":38,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":26,"name":"ElementaryTypeName","src":"977:7:0"}],"id":27,"name":"VariableDeclaration","src":"977:16:0"}],"id":28,"name":"ParameterList","src":"976:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":29,"name":"Identifier","src":"996:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":30,"name":"Identifier","src":"1004:3:0"}],"id":31,"name":"MemberAccess","src":"1004:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"address","value":"_account"},"id":32,"name":"Identifier","src":"1018:8:0"}],"id":33,"name":"BinaryOperation","src":"1004:22:0"}],"id":34,"name":"FunctionCall","src":"996:31:0"}],"id":35,"name":"ExpressionStatement","src":"996:31:0"},{"id":36,"name":"PlaceholderStatement","src":"1029:1:0"}],"id":37,"name":"Block","src":"995:37:0"}],"id":38,"name":"ModifierDefinition","src":"961:71:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"AmountShift"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"val","scope":46,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":39,"name":"ElementaryTypeName","src":"1054:4:0"}],"id":40,"name":"VariableDeclaration","src":"1054:8:0"},{"attributes":{"constant":false,"indexed":false,"name":"epsilon","scope":46,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":41,"name":"ElementaryTypeName","src":"1064:4:0"}],"id":42,"name":"VariableDeclaration","src":"1064:12:0"},{"attributes":{"constant":false,"indexed":false,"name":"juror","scope":46,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":43,"name":"ElementaryTypeName","src":"1078:7:0"}],"id":44,"name":"VariableDeclaration","src":"1078:13:0"}],"id":45,"name":"ParameterList","src":"1053:39:0"}],"id":46,"name":"EventDefinition","src":"1036:57:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Log"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"val","scope":54,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":47,"name":"ElementaryTypeName","src":"1106:4:0"}],"id":48,"name":"VariableDeclaration","src":"1106:8:0"},{"attributes":{"constant":false,"indexed":false,"name":"addr","scope":54,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":49,"name":"ElementaryTypeName","src":"1116:7:0"}],"id":50,"name":"VariableDeclaration","src":"1116:12:0"},{"attributes":{"constant":false,"indexed":false,"name":"message","scope":54,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":51,"name":"ElementaryTypeName","src":"1130:6:0"}],"id":52,"name":"VariableDeclaration","src":"1130:14:0"}],"id":53,"name":"ParameterList","src":"1105:40:0"}],"id":54,"name":"EventDefinition","src":"1096:50:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor.\n @param _pinakion The PNK contract.\n @param _kleros   The Kleros court.\n @param _disputeID The dispute we are targeting.\n @param _desiredOutcome The desired ruling of the dispute.\n @param _epsilon  Jurors will be paid epsilon more for voting for the desiredOutcome.\n @param _maxAppeals The maximum number of appeals this contract promises to pay out","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":478,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_pinakion","scope":99,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":55,"name":"UserDefinedTypeName","src":"1572:8:0"}],"id":56,"name":"VariableDeclaration","src":"1572:18:0"},{"attributes":{"constant":false,"name":"_kleros","scope":99,"stateVariable":false,"storageLocation":"default","type":"contract Kleros","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Kleros","referencedDeclaration":4532,"type":"contract Kleros"},"id":57,"name":"UserDefinedTypeName","src":"1592:6:0"}],"id":58,"name":"VariableDeclaration","src":"1592:14:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":99,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":59,"name":"ElementaryTypeName","src":"1608:4:0"}],"id":60,"name":"VariableDeclaration","src":"1608:15:0"},{"attributes":{"constant":false,"name":"_desiredOutcome","scope":99,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":61,"name":"ElementaryTypeName","src":"1625:4:0"}],"id":62,"name":"VariableDeclaration","src":"1625:20:0"},{"attributes":{"constant":false,"name":"_epsilon","scope":99,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":63,"name":"ElementaryTypeName","src":"1647:4:0"}],"id":64,"name":"VariableDeclaration","src":"1647:13:0"},{"attributes":{"constant":false,"name":"_maxAppeals","scope":99,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":65,"name":"ElementaryTypeName","src":"1662:4:0"}],"id":66,"name":"VariableDeclaration","src":"1662:16:0"}],"id":67,"name":"ParameterList","src":"1571:108:0"},{"attributes":{"parameters":[null]},"children":[],"id":68,"name":"ParameterList","src":"1687:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"contract Pinakion","value":"pinakion"},"id":69,"name":"Identifier","src":"1693:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"contract Pinakion","value":"_pinakion"},"id":70,"name":"Identifier","src":"1704:9:0"}],"id":71,"name":"Assignment","src":"1693:20:0"}],"id":72,"name":"ExpressionStatement","src":"1693:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Kleros"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":73,"name":"Identifier","src":"1719:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":58,"type":"contract Kleros","value":"_kleros"},"id":74,"name":"Identifier","src":"1727:7:0"}],"id":75,"name":"Assignment","src":"1719:15:0"}],"id":76,"name":"ExpressionStatement","src":"1719:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":77,"name":"Identifier","src":"1740:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":60,"type":"uint256","value":"_disputeID"},"id":78,"name":"Identifier","src":"1752:10:0"}],"id":79,"name":"Assignment","src":"1740:22:0"}],"id":80,"name":"ExpressionStatement","src":"1740:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":11,"type":"uint256","value":"desiredOutcome"},"id":81,"name":"Identifier","src":"1768:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":62,"type":"uint256","value":"_desiredOutcome"},"id":82,"name":"Identifier","src":"1785:15:0"}],"id":83,"name":"Assignment","src":"1768:32:0"}],"id":84,"name":"ExpressionStatement","src":"1768:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"uint256","value":"epsilon"},"id":85,"name":"Identifier","src":"1806:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":64,"type":"uint256","value":"_epsilon"},"id":86,"name":"Identifier","src":"1816:8:0"}],"id":87,"name":"Assignment","src":"1806:18:0"}],"id":88,"name":"ExpressionStatement","src":"1806:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"address","value":"attacker"},"id":89,"name":"Identifier","src":"1830:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":90,"name":"Identifier","src":"1841:3:0"}],"id":91,"name":"MemberAccess","src":"1841:10:0"}],"id":92,"name":"Assignment","src":"1830:21:0"}],"id":93,"name":"ExpressionStatement","src":"1830:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":17,"type":"uint256","value":"maxAppeals"},"id":94,"name":"Identifier","src":"1857:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":66,"type":"uint256","value":"_maxAppeals"},"id":95,"name":"Identifier","src":"1870:11:0"}],"id":96,"name":"Assignment","src":"1857:24:0"}],"id":97,"name":"ExpressionStatement","src":"1857:24:0"}],"id":98,"name":"Block","src":"1687:199:0"}],"id":99,"name":"FunctionDefinition","src":"1560:326:0"},{"attributes":{"constant":false,"documentation":"@dev Callback of approveAndCall - transfer pinakions in the contract. Should be called by the pinakion contract. TRUSTED.\n The attacker has to deposit sufficiently large amount of PNK to cover the payouts to the jurors.\n @param _from The address making the transfer.\n @param _amount Amount of tokens to transfer to this contract (in basic units).","implemented":true,"isConstructor":false,"name":"receiveApproval","payable":false,"scope":478,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":127,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":100,"name":"ElementaryTypeName","src":"2289:7:0"}],"id":101,"name":"VariableDeclaration","src":"2289:13:0"},{"attributes":{"constant":false,"name":"_amount","scope":127,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":102,"name":"ElementaryTypeName","src":"2304:4:0"}],"id":103,"name":"VariableDeclaration","src":"2304:12:0"},{"attributes":{"constant":false,"name":"","scope":127,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":104,"name":"ElementaryTypeName","src":"2318:7:0"}],"id":105,"name":"VariableDeclaration","src":"2318:7:0"},{"attributes":{"constant":false,"name":"","scope":127,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":106,"name":"ElementaryTypeName","src":"2327:5:0"}],"id":107,"name":"VariableDeclaration","src":"2327:5:0"}],"id":108,"name":"ParameterList","src":"2288:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":112,"name":"ParameterList","src":"2358:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":38,"type":"modifier (address)","value":"onlyBy"},"id":109,"name":"Identifier","src":"2341:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"contract Pinakion","value":"pinakion"},"id":110,"name":"Identifier","src":"2348:8:0"}],"id":111,"name":"ModifierInvocation","src":"2341:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":113,"name":"Identifier","src":"2364:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_PEpsilon_$478","typeString":"contract PEpsilon"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":724,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"contract Pinakion","value":"pinakion"},"id":114,"name":"Identifier","src":"2372:8:0"}],"id":115,"name":"MemberAccess","src":"2372:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":101,"type":"address","value":"_from"},"id":116,"name":"Identifier","src":"2394:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4560,"type":"contract PEpsilon","value":"this"},"id":117,"name":"Identifier","src":"2401:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":103,"type":"uint256","value":"_amount"},"id":118,"name":"Identifier","src":"2407:7:0"}],"id":119,"name":"FunctionCall","src":"2372:43:0"}],"id":120,"name":"FunctionCall","src":"2364:52:0"}],"id":121,"name":"ExpressionStatement","src":"2364:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"balance"},"id":122,"name":"Identifier","src":"2423:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":103,"type":"uint256","value":"_amount"},"id":123,"name":"Identifier","src":"2434:7:0"}],"id":124,"name":"Assignment","src":"2423:18:0"}],"id":125,"name":"ExpressionStatement","src":"2423:18:0"}],"id":126,"name":"Block","src":"2358:88:0"}],"id":127,"name":"FunctionDefinition","src":"2264:182:0"},{"attributes":{"constant":false,"documentation":"@dev Jurors can withdraw their PNK from here","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdrawJuror","payable":false,"scope":478,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":128,"name":"ParameterList","src":"2529:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":129,"name":"ParameterList","src":"2532:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":176,"type":"function (address)","value":"withdrawSelect"},"id":130,"name":"Identifier","src":"2538:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":131,"name":"Identifier","src":"2553:3:0"}],"id":132,"name":"MemberAccess","src":"2553:10:0"}],"id":133,"name":"FunctionCall","src":"2538:26:0"}],"id":134,"name":"ExpressionStatement","src":"2538:26:0"}],"id":135,"name":"Block","src":"2532:37:0"}],"id":136,"name":"FunctionDefinition","src":"2507:62:0"},{"attributes":{"constant":false,"documentation":"@dev Withdraw the funds of a given juror\n @param _juror The address of the juror","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdrawSelect","payable":false,"scope":478,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_juror","scope":176,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":137,"name":"ElementaryTypeName","src":"2695:7:0"}],"id":138,"name":"VariableDeclaration","src":"2695:14:0"}],"id":139,"name":"ParameterList","src":"2694:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":140,"name":"ParameterList","src":"2711:0:0"},{"children":[{"attributes":{"assignments":[142]},"children":[{"attributes":{"constant":false,"name":"amount","scope":176,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":141,"name":"ElementaryTypeName","src":"2717:4:0"}],"id":142,"name":"VariableDeclaration","src":"2717:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":21,"type":"mapping(address => uint256)","value":"withdraw"},"id":143,"name":"Identifier","src":"2731:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":138,"type":"address","value":"_juror"},"id":144,"name":"Identifier","src":"2740:6:0"}],"id":145,"name":"IndexAccess","src":"2731:16:0"}],"id":146,"name":"VariableDeclarationStatement","src":"2717:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":21,"type":"mapping(address => uint256)","value":"withdraw"},"id":147,"name":"Identifier","src":"2753:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":138,"type":"address","value":"_juror"},"id":148,"name":"Identifier","src":"2762:6:0"}],"id":149,"name":"IndexAccess","src":"2753:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":150,"name":"Literal","src":"2772:1:0"}],"id":151,"name":"Assignment","src":"2753:20:0"}],"id":152,"name":"ExpressionStatement","src":"2753:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"balance"},"id":153,"name":"Identifier","src":"2780:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":196,"type":"function (uint256,uint256) pure returns (uint256)","value":"sub"},"id":154,"name":"Identifier","src":"2790:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"balance"},"id":155,"name":"Identifier","src":"2794:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":142,"type":"uint256","value":"amount"},"id":156,"name":"Identifier","src":"2803:6:0"}],"id":157,"name":"FunctionCall","src":"2790:20:0"}],"id":158,"name":"Assignment","src":"2780:30:0"}],"id":159,"name":"ExpressionStatement","src":"2780:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"remainingWithdraw"},"id":160,"name":"Identifier","src":"2835:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":196,"type":"function (uint256,uint256) pure returns (uint256)","value":"sub"},"id":161,"name":"Identifier","src":"2855:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"remainingWithdraw"},"id":162,"name":"Identifier","src":"2859:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":142,"type":"uint256","value":"amount"},"id":163,"name":"Identifier","src":"2878:6:0"}],"id":164,"name":"FunctionCall","src":"2855:30:0"}],"id":165,"name":"Assignment","src":"2835:50:0"}],"id":166,"name":"ExpressionStatement","src":"2835:50:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":167,"name":"Identifier","src":"2952:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":674,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"contract Pinakion","value":"pinakion"},"id":168,"name":"Identifier","src":"2960:8:0"}],"id":169,"name":"MemberAccess","src":"2960:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":138,"type":"address","value":"_juror"},"id":170,"name":"Identifier","src":"2978:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":142,"type":"uint256","value":"amount"},"id":171,"name":"Identifier","src":"2986:6:0"}],"id":172,"name":"FunctionCall","src":"2960:33:0"}],"id":173,"name":"FunctionCall","src":"2952:42:0"}],"id":174,"name":"ExpressionStatement","src":"2952:42:0"}],"id":175,"name":"Block","src":"2711:288:0"}],"id":176,"name":"FunctionDefinition","src":"2671:328:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).","implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":478,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_a","scope":196,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":177,"name":"ElementaryTypeName","src":"3124:7:0"}],"id":178,"name":"VariableDeclaration","src":"3124:10:0"},{"attributes":{"constant":false,"name":"_b","scope":196,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":179,"name":"ElementaryTypeName","src":"3136:7:0"}],"id":180,"name":"VariableDeclaration","src":"3136:10:0"}],"id":181,"name":"ParameterList","src":"3123:24:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":196,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":182,"name":"ElementaryTypeName","src":"3171:7:0"}],"id":183,"name":"VariableDeclaration","src":"3171:7:0"}],"id":184,"name":"ParameterList","src":"3170:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":4536,"type":"function (bool) pure","value":"assert"},"id":185,"name":"Identifier","src":"3186:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":180,"type":"uint256","value":"_b"},"id":186,"name":"Identifier","src":"3193:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":178,"type":"uint256","value":"_a"},"id":187,"name":"Identifier","src":"3199:2:0"}],"id":188,"name":"BinaryOperation","src":"3193:8:0"}],"id":189,"name":"FunctionCall","src":"3186:16:0"}],"id":190,"name":"ExpressionStatement","src":"3186:16:0"},{"attributes":{"functionReturnParameters":184},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":178,"type":"uint256","value":"_a"},"id":191,"name":"Identifier","src":"3215:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":180,"type":"uint256","value":"_b"},"id":192,"name":"Identifier","src":"3220:2:0"}],"id":193,"name":"BinaryOperation","src":"3215:7:0"}],"id":194,"name":"Return","src":"3208:14:0"}],"id":195,"name":"Block","src":"3180:47:0"}],"id":196,"name":"FunctionDefinition","src":"3111:116:0"},{"attributes":{"constant":false,"documentation":"@dev The attacker can withdraw their PNK from here after the bribe has been settled.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdrawAttacker","payable":false,"scope":478,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":197,"name":"ParameterList","src":"3353:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":198,"name":"ParameterList","src":"3355:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":199,"name":"Identifier","src":"3361:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":15,"type":"bool","value":"settled"},"id":200,"name":"Identifier","src":"3369:7:0"}],"id":201,"name":"FunctionCall","src":"3361:16:0"}],"id":202,"name":"ExpressionStatement","src":"3361:16:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"balance"},"id":203,"name":"Identifier","src":"3388:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"remainingWithdraw"},"id":204,"name":"Identifier","src":"3398:17:0"}],"id":205,"name":"BinaryOperation","src":"3388:27:0"},{"children":[{"attributes":{"assignments":[207]},"children":[{"attributes":{"constant":false,"name":"amount","scope":227,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":206,"name":"ElementaryTypeName","src":"3510:4:0"}],"id":207,"name":"VariableDeclaration","src":"3510:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"balance"},"id":208,"name":"Identifier","src":"3524:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"remainingWithdraw"},"id":209,"name":"Identifier","src":"3534:17:0"}],"id":210,"name":"BinaryOperation","src":"3524:27:0"}],"id":211,"name":"VariableDeclarationStatement","src":"3510:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"balance"},"id":212,"name":"Identifier","src":"3559:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"remainingWithdraw"},"id":213,"name":"Identifier","src":"3569:17:0"}],"id":214,"name":"Assignment","src":"3559:27:0"}],"id":215,"name":"ExpressionStatement","src":"3559:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":216,"name":"Identifier","src":"3595:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":674,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"contract Pinakion","value":"pinakion"},"id":217,"name":"Identifier","src":"3603:8:0"}],"id":218,"name":"MemberAccess","src":"3603:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"address","value":"attacker"},"id":219,"name":"Identifier","src":"3621:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":207,"type":"uint256","value":"amount"},"id":220,"name":"Identifier","src":"3631:6:0"}],"id":221,"name":"FunctionCall","src":"3603:35:0"}],"id":222,"name":"FunctionCall","src":"3595:44:0"}],"id":223,"name":"ExpressionStatement","src":"3595:44:0"}],"id":224,"name":"Block","src":"3417:229:0"}],"id":225,"name":"IfStatement","src":"3384:262:0"}],"id":226,"name":"Block","src":"3355:295:0"}],"id":227,"name":"FunctionDefinition","src":"3328:322:0"},{"attributes":{"constant":false,"documentation":"@dev Settles the p + e bribe with the jurors.\nIf the dispute is ruled differently from desiredOutcome:\n   The jurors who voted for desiredOutcome receive p + d + e in rewards from this contract.\nIf the dispute is ruled as in desiredOutcome:\n   The jurors don't receive anything from this contract.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"settle","payable":false,"scope":478,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":228,"name":"ParameterList","src":"3999:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":229,"name":"ParameterList","src":"4009:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":230,"name":"Identifier","src":"4015:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeStatus_$1929","typeString":"enum Arbitrator.DisputeStatus"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"enum Arbitrator.DisputeStatus","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"disputeStatus","referencedDeclaration":4411,"type":"function (uint256) view external returns (enum Arbitrator.DisputeStatus)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":231,"name":"Identifier","src":"4023:5:0"}],"id":232,"name":"MemberAccess","src":"4023:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":233,"name":"Identifier","src":"4043:9:0"}],"id":234,"name":"FunctionCall","src":"4023:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"DisputeStatus","referencedDeclaration":1929,"type":"type(enum Arbitrator.DisputeStatus)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2042,"type":"type(contract Arbitrator)","value":"Arbitrator"},"id":235,"name":"Identifier","src":"4058:10:0"}],"id":236,"name":"MemberAccess","src":"4058:24:0"}],"id":237,"name":"MemberAccess","src":"4058:31:0"}],"id":238,"name":"BinaryOperation","src":"4023:66:0"}],"id":239,"name":"FunctionCall","src":"4015:75:0"}],"id":240,"name":"ExpressionStatement","src":"4015:75:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":241,"name":"Identifier","src":"4124:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":15,"type":"bool","value":"settled"},"id":242,"name":"Identifier","src":"4133:7:0"}],"id":243,"name":"UnaryOperation","src":"4132:8:0"}],"id":244,"name":"FunctionCall","src":"4124:17:0"}],"id":245,"name":"ExpressionStatement","src":"4124:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":15,"type":"bool","value":"settled"},"id":246,"name":"Identifier","src":"4192:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":247,"name":"Literal","src":"4202:4:0"}],"id":248,"name":"Assignment","src":"4192:14:0"}],"id":249,"name":"ExpressionStatement","src":"4192:14:0"},{"attributes":{"assignments":[null,null,250,251,null,null,null,null]},"children":[{"attributes":{"constant":false,"name":"appeals","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":250,"name":"VariableDeclaration","src":"4316:7:0"},{"attributes":{"constant":false,"name":"choices","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":251,"name":"VariableDeclaration","src":"4325:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(contract Arbitrable,uint256,uint256,uint256,uint16,uint256,enum Kleros.DisputeState,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"disputes","referencedDeclaration":2191,"type":"function (uint256) view external returns (contract Arbitrable,uint256,uint256,uint256,uint16,uint256,enum Kleros.DisputeState,uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":252,"name":"Identifier","src":"4343:5:0"}],"id":253,"name":"MemberAccess","src":"4343:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":254,"name":"Identifier","src":"4358:9:0"}],"id":255,"name":"FunctionCall","src":"4343:25:0"}],"id":256,"name":"VariableDeclarationStatement","src":"4307:61:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"currentRuling","referencedDeclaration":4345,"type":"function (uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":257,"name":"Identifier","src":"4379:5:0"}],"id":258,"name":"MemberAccess","src":"4379:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":259,"name":"Identifier","src":"4399:9:0"}],"id":260,"name":"FunctionCall","src":"4379:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":11,"type":"uint256","value":"desiredOutcome"},"id":261,"name":"Identifier","src":"4413:14:0"}],"id":262,"name":"BinaryOperation","src":"4379:48:0"},{"children":[{"attributes":{"assignments":[264]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":263,"name":"ElementaryTypeName","src":"4483:4:0"}],"id":264,"name":"VariableDeclaration","src":"4483:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getStakePerDraw","referencedDeclaration":4120,"type":"function () view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":265,"name":"Identifier","src":"4502:5:0"}],"id":266,"name":"MemberAccess","src":"4502:21:0"}],"id":267,"name":"FunctionCall","src":"4502:23:0"}],"id":268,"name":"VariableDeclarationStatement","src":"4483:42:0"},{"attributes":{"assignments":[270]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":269,"name":"ElementaryTypeName","src":"4533:4:0"}],"id":270,"name":"VariableDeclaration","src":"4533:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getWinningChoice","referencedDeclaration":4182,"type":"function (uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":271,"name":"Identifier","src":"4554:5:0"}],"id":272,"name":"MemberAccess","src":"4554:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":273,"name":"Identifier","src":"4577:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"uint256","value":"appeals"},"id":274,"name":"Identifier","src":"4588:7:0"}],"id":275,"name":"FunctionCall","src":"4554:42:0"}],"id":276,"name":"VariableDeclarationStatement","src":"4533:63:0"},{"attributes":{"assignments":[278]},"children":[{"attributes":{"constant":false,"name":"lastRound","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":277,"name":"ElementaryTypeName","src":"4675:4:0"}],"id":278,"name":"VariableDeclaration","src":"4675:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"uint256","value":"appeals"},"id":279,"name":"Identifier","src":"4693:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":17,"type":"uint256","value":"maxAppeals"},"id":280,"name":"Identifier","src":"4703:10:0"}],"id":281,"name":"BinaryOperation","src":"4693:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":17,"type":"uint256","value":"maxAppeals"},"id":282,"name":"Identifier","src":"4716:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"uint256","value":"appeals"},"id":283,"name":"Identifier","src":"4729:7:0"}],"id":284,"name":"Conditional","src":"4693:43:0"}],"id":285,"name":"TupleExpression","src":"4692:45:0"}],"id":286,"name":"VariableDeclarationStatement","src":"4675:62:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"uint256","value":"winningChoice"},"id":287,"name":"Identifier","src":"4919:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":288,"name":"Literal","src":"4936:1:0"}],"id":289,"name":"BinaryOperation","src":"4919:18:0"},{"children":[{"attributes":{"assignments":[291]},"children":[{"attributes":{"constant":false,"name":"votesLen","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":290,"name":"ElementaryTypeName","src":"5194:4:0"}],"id":291,"name":"VariableDeclaration","src":"5194:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":292,"name":"Literal","src":"5210:1:0"}],"id":293,"name":"VariableDeclarationStatement","src":"5194:17:0"},{"children":[{"attributes":{"assignments":[295]},"children":[{"attributes":{"constant":false,"name":"c","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":294,"name":"ElementaryTypeName","src":"5226:4:0"}],"id":295,"name":"VariableDeclaration","src":"5226:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":296,"name":"Literal","src":"5235:1:0"}],"id":297,"name":"VariableDeclarationStatement","src":"5226:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":295,"type":"uint256","value":"c"},"id":298,"name":"Identifier","src":"5238:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":251,"type":"uint256","value":"choices"},"id":299,"name":"Identifier","src":"5243:7:0"}],"id":300,"name":"BinaryOperation","src":"5238:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":295,"type":"uint256","value":"c"},"id":301,"name":"Identifier","src":"5252:1:0"}],"id":302,"name":"UnaryOperation","src":"5252:3:0"}],"id":303,"name":"ExpressionStatement","src":"5252:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":291,"type":"uint256","value":"votesLen"},"id":304,"name":"Identifier","src":"5312:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteCount","referencedDeclaration":4222,"type":"function (uint256,uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":305,"name":"Identifier","src":"5324:5:0"}],"id":306,"name":"MemberAccess","src":"5324:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":307,"name":"Identifier","src":"5343:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"lastRound"},"id":308,"name":"Identifier","src":"5354:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":295,"type":"uint256","value":"c"},"id":309,"name":"Identifier","src":"5365:1:0"}],"id":310,"name":"FunctionCall","src":"5324:43:0"}],"id":311,"name":"Assignment","src":"5312:55:0"}],"id":312,"name":"ExpressionStatement","src":"5312:55:0"}],"id":313,"name":"Block","src":"5257:121:0"}],"id":314,"name":"ForStatement","src":"5221:157:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_ab1943efbb744847144c6533956c229ccf6f232d1db2d467ea1c3e92d78a939d","typeString":"literal_string \"stakePerDraw\""}],"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"function (uint256,address,string memory)","value":"Log"},"id":315,"name":"Identifier","src":"5393:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"uint256","value":"amountShift"},"id":316,"name":"Identifier","src":"5397:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":317,"name":"Literal","src":"5410:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"7374616b6550657244726177","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"stakePerDraw\"","value":"stakePerDraw"},"id":318,"name":"Literal","src":"5415:14:0"}],"id":319,"name":"FunctionCall","src":"5393:37:0"}],"id":320,"name":"EmitStatement","src":"5388:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_f8149ef8ca56c6a5f5a85623345f6d5775c50a1c648e938ddd62cbc9fd968bb7","typeString":"literal_string \"votesLen\""}],"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"function (uint256,address,string memory)","value":"Log"},"id":321,"name":"Identifier","src":"5445:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":291,"type":"uint256","value":"votesLen"},"id":322,"name":"Identifier","src":"5449:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":323,"name":"Literal","src":"5459:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"766f7465734c656e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"votesLen\"","value":"votesLen"},"id":324,"name":"Literal","src":"5464:10:0"}],"id":325,"name":"FunctionCall","src":"5445:30:0"}],"id":326,"name":"EmitStatement","src":"5440:35:0"},{"attributes":{"assignments":[328]},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":327,"name":"ElementaryTypeName","src":"5486:4:0"}],"id":328,"name":"VariableDeclaration","src":"5486:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":329,"name":"Literal","src":"5513:1:0"}],"id":330,"name":"VariableDeclarationStatement","src":"5486:28:0"},{"attributes":{"assignments":[332]},"children":[{"attributes":{"constant":false,"name":"nbCoherent","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":331,"name":"ElementaryTypeName","src":"5524:4:0"}],"id":332,"name":"VariableDeclaration","src":"5524:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":333,"name":"Literal","src":"5542:1:0"}],"id":334,"name":"VariableDeclarationStatement","src":"5524:19:0"},{"children":[{"attributes":{"assignments":[336]},"children":[{"attributes":{"constant":false,"name":"j","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":335,"name":"ElementaryTypeName","src":"5647:4:0"}],"id":336,"name":"VariableDeclaration","src":"5647:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":337,"name":"Literal","src":"5654:1:0"}],"id":338,"name":"VariableDeclarationStatement","src":"5647:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":339,"name":"Identifier","src":"5657:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":291,"type":"uint256","value":"votesLen"},"id":340,"name":"Identifier","src":"5661:8:0"}],"id":341,"name":"BinaryOperation","src":"5657:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":342,"name":"Identifier","src":"5671:1:0"}],"id":343,"name":"UnaryOperation","src":"5671:3:0"}],"id":344,"name":"ExpressionStatement","src":"5671:3:0"},{"children":[{"attributes":{"assignments":[346]},"children":[{"attributes":{"constant":false,"name":"voteRuling","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":345,"name":"ElementaryTypeName","src":"5687:4:0"}],"id":346,"name":"VariableDeclaration","src":"5687:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteRuling","referencedDeclaration":4164,"type":"function (uint256,uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":347,"name":"Identifier","src":"5705:5:0"}],"id":348,"name":"MemberAccess","src":"5705:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":349,"name":"Identifier","src":"5725:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"lastRound"},"id":350,"name":"Identifier","src":"5736:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":351,"name":"Identifier","src":"5747:1:0"}],"id":352,"name":"FunctionCall","src":"5705:44:0"}],"id":353,"name":"VariableDeclarationStatement","src":"5687:62:0"},{"attributes":{"assignments":[355]},"children":[{"attributes":{"constant":false,"name":"voteAccount","scope":477,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":354,"name":"ElementaryTypeName","src":"5761:7:0"}],"id":355,"name":"VariableDeclaration","src":"5761:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteAccount","referencedDeclaration":4142,"type":"function (uint256,uint256,uint256) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":356,"name":"Identifier","src":"5783:5:0"}],"id":357,"name":"MemberAccess","src":"5783:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":358,"name":"Identifier","src":"5804:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"lastRound"},"id":359,"name":"Identifier","src":"5815:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":360,"name":"Identifier","src":"5826:1:0"}],"id":361,"name":"FunctionCall","src":"5783:45:0"}],"id":362,"name":"VariableDeclarationStatement","src":"5761:67:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_91a99e229c0c327658e89d7662627165602af3cfa1201b7ca2f124b813866300","typeString":"literal_string \"voted\""}],"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"function (uint256,address,string memory)","value":"Log"},"id":363,"name":"Identifier","src":"5846:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":346,"type":"uint256","value":"voteRuling"},"id":364,"name":"Identifier","src":"5850:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"address","value":"voteAccount"},"id":365,"name":"Identifier","src":"5862:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"766f746564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"voted\"","value":"voted"},"id":366,"name":"Literal","src":"5875:7:0"}],"id":367,"name":"FunctionCall","src":"5846:37:0"}],"id":368,"name":"EmitStatement","src":"5841:42:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":346,"type":"uint256","value":"voteRuling"},"id":369,"name":"Identifier","src":"5900:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"uint256","value":"winningChoice"},"id":370,"name":"Identifier","src":"5914:13:0"}],"id":371,"name":"BinaryOperation","src":"5900:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":328,"type":"uint256","value":"totalToRedistribute"},"id":372,"name":"Identifier","src":"5942:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"uint256","value":"amountShift"},"id":373,"name":"Identifier","src":"5965:11:0"}],"id":374,"name":"Assignment","src":"5942:34:0"}],"id":375,"name":"ExpressionStatement","src":"5942:34:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":346,"type":"uint256","value":"voteRuling"},"id":376,"name":"Identifier","src":"5995:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":11,"type":"uint256","value":"desiredOutcome"},"id":377,"name":"Identifier","src":"6009:14:0"}],"id":378,"name":"BinaryOperation","src":"5995:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":21,"type":"mapping(address => uint256)","value":"withdraw"},"id":379,"name":"Identifier","src":"6132:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"address","value":"voteAccount"},"id":380,"name":"Identifier","src":"6141:11:0"}],"id":381,"name":"IndexAccess","src":"6132:21:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"uint256","value":"amountShift"},"id":382,"name":"Identifier","src":"6157:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"uint256","value":"epsilon"},"id":383,"name":"Identifier","src":"6171:7:0"}],"id":384,"name":"BinaryOperation","src":"6157:21:0"}],"id":385,"name":"Assignment","src":"6132:46:0"}],"id":386,"name":"ExpressionStatement","src":"6132:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"remainingWithdraw"},"id":387,"name":"Identifier","src":"6194:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"uint256","value":"amountShift"},"id":388,"name":"Identifier","src":"6215:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"uint256","value":"epsilon"},"id":389,"name":"Identifier","src":"6229:7:0"}],"id":390,"name":"BinaryOperation","src":"6215:21:0"}],"id":391,"name":"Assignment","src":"6194:42:0"}],"id":392,"name":"ExpressionStatement","src":"6194:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":46,"type":"function (uint256,uint256,address)","value":"AmountShift"},"id":393,"name":"Identifier","src":"6257:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"uint256","value":"amountShift"},"id":394,"name":"Identifier","src":"6269:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"uint256","value":"epsilon"},"id":395,"name":"Identifier","src":"6282:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"address","value":"voteAccount"},"id":396,"name":"Identifier","src":"6291:11:0"}],"id":397,"name":"FunctionCall","src":"6257:46:0"}],"id":398,"name":"EmitStatement","src":"6252:51:0"}],"id":399,"name":"Block","src":"6024:294:0"}],"id":400,"name":"IfStatement","src":"5991:327:0"}],"id":401,"name":"Block","src":"5928:402:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":332,"type":"uint256","value":"nbCoherent"},"id":402,"name":"Identifier","src":"6350:10:0"}],"id":403,"name":"UnaryOperation","src":"6350:12:0"}],"id":404,"name":"ExpressionStatement","src":"6350:12:0"}],"id":405,"name":"Block","src":"6336:39:0"}],"id":406,"name":"IfStatement","src":"5896:479:0"}],"id":407,"name":"Block","src":"5675:710:0"}],"id":408,"name":"ForStatement","src":"5642:743:0"},{"attributes":{"assignments":[410]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":477,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":409,"name":"ElementaryTypeName","src":"6480:4:0"}],"id":410,"name":"VariableDeclaration","src":"6480:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":328,"type":"uint256","value":"totalToRedistribute"},"id":411,"name":"Identifier","src":"6503:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"uint256","value":"amountShift"},"id":412,"name":"Identifier","src":"6525:11:0"}],"id":413,"name":"BinaryOperation","src":"6503:33:0"}],"id":414,"name":"TupleExpression","src":"6502:35:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":332,"type":"uint256","value":"nbCoherent"},"id":415,"name":"Identifier","src":"6541:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":416,"name":"Literal","src":"6554:1:0"}],"id":417,"name":"BinaryOperation","src":"6541:14:0"}],"id":418,"name":"TupleExpression","src":"6540:16:0"}],"id":419,"name":"BinaryOperation","src":"6502:54:0"}],"id":420,"name":"VariableDeclarationStatement","src":"6480:76:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":421,"name":"Identifier","src":"6657:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":422,"name":"Literal","src":"6661:1:0"}],"id":423,"name":"Assignment","src":"6657:5:0"}],"id":424,"name":"ExpressionStatement","src":"6657:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":425,"name":"Identifier","src":"6664:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":291,"type":"uint256","value":"votesLen"},"id":426,"name":"Identifier","src":"6668:8:0"}],"id":427,"name":"BinaryOperation","src":"6664:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":428,"name":"Identifier","src":"6678:1:0"}],"id":429,"name":"UnaryOperation","src":"6678:3:0"}],"id":430,"name":"ExpressionStatement","src":"6678:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":346,"type":"uint256","value":"voteRuling"},"id":431,"name":"Identifier","src":"6694:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteRuling","referencedDeclaration":4164,"type":"function (uint256,uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":432,"name":"Identifier","src":"6707:5:0"}],"id":433,"name":"MemberAccess","src":"6707:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":434,"name":"Identifier","src":"6727:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"lastRound"},"id":435,"name":"Identifier","src":"6738:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":436,"name":"Identifier","src":"6749:1:0"}],"id":437,"name":"FunctionCall","src":"6707:44:0"}],"id":438,"name":"Assignment","src":"6694:57:0"}],"id":439,"name":"ExpressionStatement","src":"6694:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"address","value":"voteAccount"},"id":440,"name":"Identifier","src":"6763:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteAccount","referencedDeclaration":4142,"type":"function (uint256,uint256,uint256) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"contract Kleros","value":"court"},"id":441,"name":"Identifier","src":"6777:5:0"}],"id":442,"name":"MemberAccess","src":"6777:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"disputeID"},"id":443,"name":"Identifier","src":"6798:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":278,"type":"uint256","value":"lastRound"},"id":444,"name":"Identifier","src":"6809:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":336,"type":"uint256","value":"j"},"id":445,"name":"Identifier","src":"6820:1:0"}],"id":446,"name":"FunctionCall","src":"6777:45:0"}],"id":447,"name":"Assignment","src":"6763:59:0"}],"id":448,"name":"ExpressionStatement","src":"6763:59:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":346,"type":"uint256","value":"voteRuling"},"id":449,"name":"Identifier","src":"6839:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":11,"type":"uint256","value":"desiredOutcome"},"id":450,"name":"Identifier","src":"6853:14:0"}],"id":451,"name":"BinaryOperation","src":"6839:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":21,"type":"mapping(address => uint256)","value":"withdraw"},"id":452,"name":"Identifier","src":"6948:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"address","value":"voteAccount"},"id":453,"name":"Identifier","src":"6957:11:0"}],"id":454,"name":"IndexAccess","src":"6948:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":410,"type":"uint256","value":"toRedistribute"},"id":455,"name":"Identifier","src":"6973:14:0"}],"id":456,"name":"Assignment","src":"6948:39:0"}],"id":457,"name":"ExpressionStatement","src":"6948:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"uint256","value":"remainingWithdraw"},"id":458,"name":"Identifier","src":"7001:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":410,"type":"uint256","value":"toRedistribute"},"id":459,"name":"Identifier","src":"7022:14:0"}],"id":460,"name":"Assignment","src":"7001:35:0"}],"id":461,"name":"ExpressionStatement","src":"7001:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":46,"type":"function (uint256,uint256,address)","value":"AmountShift"},"id":462,"name":"Identifier","src":"7055:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":410,"type":"uint256","value":"toRedistribute"},"id":463,"name":"Identifier","src":"7067:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":464,"name":"Literal","src":"7083:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"address","value":"voteAccount"},"id":465,"name":"Identifier","src":"7086:11:0"}],"id":466,"name":"FunctionCall","src":"7055:43:0"}],"id":467,"name":"EmitStatement","src":"7050:48:0"}],"id":468,"name":"Block","src":"6868:243:0"}],"id":469,"name":"IfStatement","src":"6835:276:0"}],"id":470,"name":"Block","src":"6682:439:0"}],"id":471,"name":"ForStatement","src":"6652:469:0"}],"id":472,"name":"Block","src":"4938:2191:0"}],"id":473,"name":"IfStatement","src":"4915:2214:0"}],"id":474,"name":"Block","src":"4428:2707:0"}],"id":475,"name":"IfStatement","src":"4375:2760:0"}],"id":476,"name":"Block","src":"4009:3130:0"}],"id":477,"name":"FunctionDefinition","src":"3984:3155:0"}],"id":478,"name":"ContractDefinition","src":"391:6750:0"},{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":479,"name":"PragmaDirective","src":"7466:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[491],"name":"ApproveAndCallFallBack","scope":4533},"children":[{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"receiveApproval","payable":false,"scope":491,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":490,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":480,"name":"ElementaryTypeName","src":"7556:7:0"}],"id":481,"name":"VariableDeclaration","src":"7556:12:0"},{"attributes":{"constant":false,"name":"_amount","scope":490,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":482,"name":"ElementaryTypeName","src":"7570:7:0"}],"id":483,"name":"VariableDeclaration","src":"7570:15:0"},{"attributes":{"constant":false,"name":"_token","scope":490,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":484,"name":"ElementaryTypeName","src":"7587:7:0"}],"id":485,"name":"VariableDeclaration","src":"7587:14:0"},{"attributes":{"constant":false,"name":"_data","scope":490,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":486,"name":"ElementaryTypeName","src":"7603:5:0"}],"id":487,"name":"VariableDeclaration","src":"7603:11:0"}],"id":488,"name":"ParameterList","src":"7555:60:0"},{"attributes":{"parameters":[null]},"children":[],"id":489,"name":"ParameterList","src":"7622:0:0"}],"id":490,"name":"FunctionDefinition","src":"7531:92:0"}],"id":491,"name":"ContractDefinition","src":"7493:132:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@dev The token controller contract must implement these functions","fullyImplemented":false,"linearizedBaseContracts":[521],"name":"TokenController","scope":4533},"children":[{"attributes":{"body":null,"constant":false,"documentation":"@notice Called when `_owner` sends ether to the MiniMe Token contract\n @param _owner The address that sent the ether to create tokens\n @return True if the ether is accepted, false if it throws","implemented":false,"isConstructor":false,"modifiers":[null],"name":"proxyPayment","payable":true,"scope":521,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":498,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":492,"name":"ElementaryTypeName","src":"7965:7:0"}],"id":493,"name":"VariableDeclaration","src":"7965:14:0"}],"id":494,"name":"ParameterList","src":"7964:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":498,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":495,"name":"ElementaryTypeName","src":"8004:4:0"}],"id":496,"name":"VariableDeclaration","src":"8004:4:0"}],"id":497,"name":"ParameterList","src":"8003:6:0"}],"id":498,"name":"FunctionDefinition","src":"7943:67:0"},{"attributes":{"body":null,"constant":false,"documentation":"@notice Notifies the controller about a token transfer allowing the\n  controller to react if desired\n @param _from The origin of the transfer\n @param _to The destination of the transfer\n @param _amount The amount of the transfer\n @return False if the controller does not authorize the transfer","implemented":false,"isConstructor":false,"modifiers":[null],"name":"onTransfer","payable":false,"scope":521,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":509,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":499,"name":"ElementaryTypeName","src":"8373:7:0"}],"id":500,"name":"VariableDeclaration","src":"8373:13:0"},{"attributes":{"constant":false,"name":"_to","scope":509,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":501,"name":"ElementaryTypeName","src":"8388:7:0"}],"id":502,"name":"VariableDeclaration","src":"8388:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":509,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":503,"name":"ElementaryTypeName","src":"8401:4:0"}],"id":504,"name":"VariableDeclaration","src":"8401:12:0"}],"id":505,"name":"ParameterList","src":"8372:42:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":509,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":506,"name":"ElementaryTypeName","src":"8430:4:0"}],"id":507,"name":"VariableDeclaration","src":"8430:4:0"}],"id":508,"name":"ParameterList","src":"8429:6:0"}],"id":509,"name":"FunctionDefinition","src":"8353:83:0"},{"attributes":{"body":null,"constant":false,"documentation":"@notice Notifies the controller about an approval allowing the\n  controller to react if desired\n @param _owner The address that calls `approve()`\n @param _spender The spender in the `approve()` call\n @param _amount The amount in the `approve()` call\n @return False if the controller does not authorize the approval","implemented":false,"isConstructor":false,"modifiers":[null],"name":"onApprove","payable":false,"scope":521,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":520,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":510,"name":"ElementaryTypeName","src":"8819:7:0"}],"id":511,"name":"VariableDeclaration","src":"8819:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":520,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":512,"name":"ElementaryTypeName","src":"8835:7:0"}],"id":513,"name":"VariableDeclaration","src":"8835:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":520,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":514,"name":"ElementaryTypeName","src":"8853:4:0"}],"id":515,"name":"VariableDeclaration","src":"8853:12:0"}],"id":516,"name":"ParameterList","src":"8818:48:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":520,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":517,"name":"ElementaryTypeName","src":"8890:4:0"}],"id":518,"name":"VariableDeclaration","src":"8890:4:0"}],"id":519,"name":"ParameterList","src":"8889:6:0"}],"id":520,"name":"FunctionDefinition","src":"8800:96:0"}],"id":521,"name":"ContractDefinition","src":"7697:1201:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[556],"name":"Controlled","scope":4533},"children":[{"attributes":{"documentation":"@notice The address of the controller is the only address that can call\n  a function with this modifier","name":"onlyController","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":522,"name":"ParameterList","src":"9069:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":523,"name":"Identifier","src":"9071:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":524,"name":"Identifier","src":"9079:3:0"}],"id":525,"name":"MemberAccess","src":"9079:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":526,"name":"Identifier","src":"9093:10:0"}],"id":527,"name":"BinaryOperation","src":"9079:24:0"}],"id":528,"name":"FunctionCall","src":"9071:33:0"}],"id":529,"name":"ExpressionStatement","src":"9071:33:0"},{"id":530,"name":"PlaceholderStatement","src":"9106:1:0"}],"id":531,"name":"Block","src":"9069:41:0"}],"id":532,"name":"ModifierDefinition","src":"9045:65:0"},{"attributes":{"constant":false,"name":"controller","scope":556,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":533,"name":"ElementaryTypeName","src":"9116:7:0"}],"id":534,"name":"VariableDeclaration","src":"9116:25:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"Controlled","payable":false,"scope":556,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":535,"name":"ParameterList","src":"9167:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":536,"name":"ParameterList","src":"9177:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":537,"name":"Identifier","src":"9179:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":538,"name":"Identifier","src":"9192:3:0"}],"id":539,"name":"MemberAccess","src":"9192:10:0"}],"id":540,"name":"Assignment","src":"9179:23:0"}],"id":541,"name":"ExpressionStatement","src":"9179:23:0"}],"id":542,"name":"Block","src":"9177:27:0"}],"id":543,"name":"FunctionDefinition","src":"9148:56:0"},{"attributes":{"constant":false,"documentation":"@notice Changes the controller of the contract\n @param _newController The new controller of the contract","implemented":true,"isConstructor":false,"name":"changeController","payable":false,"scope":556,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newController","scope":555,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":544,"name":"ElementaryTypeName","src":"9356:7:0"}],"id":545,"name":"VariableDeclaration","src":"9356:22:0"}],"id":546,"name":"ParameterList","src":"9355:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":549,"name":"ParameterList","src":"9402:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":532,"type":"modifier ()","value":"onlyController"},"id":547,"name":"Identifier","src":"9387:14:0"}],"id":548,"name":"ModifierInvocation","src":"9387:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":550,"name":"Identifier","src":"9412:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":545,"type":"address","value":"_newController"},"id":551,"name":"Identifier","src":"9425:14:0"}],"id":552,"name":"Assignment","src":"9412:27:0"}],"id":553,"name":"ExpressionStatement","src":"9412:27:0"}],"id":554,"name":"Block","src":"9402:44:0"}],"id":555,"name":"FunctionDefinition","src":"9330:116:0"}],"id":556,"name":"ContractDefinition","src":"8900:548:0"},{"attributes":{"contractDependencies":[556],"contractKind":"contract","documentation":"@dev The actual token contract, the default controller is the msg.sender\n  that deploys the contract, so usually this token will be deployed by a\n  token controller contract, which Giveth will call a \"Campaign\"","fullyImplemented":true,"linearizedBaseContracts":[1557,556],"name":"Pinakion","scope":4533},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Controlled","referencedDeclaration":556,"type":"contract Controlled"},"id":557,"name":"UserDefinedTypeName","src":"9692:10:0"}],"id":558,"name":"InheritanceSpecifier","src":"9692:10:0"},{"attributes":{"constant":false,"name":"name","scope":1557,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":559,"name":"ElementaryTypeName","src":"9710:6:0"}],"id":560,"name":"VariableDeclaration","src":"9710:18:0"},{"attributes":{"constant":false,"name":"decimals","scope":1557,"stateVariable":true,"storageLocation":"default","type":"uint8","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":561,"name":"ElementaryTypeName","src":"9790:5:0"}],"id":562,"name":"VariableDeclaration","src":"9790:21:0"},{"attributes":{"constant":false,"name":"symbol","scope":1557,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":563,"name":"ElementaryTypeName","src":"9871:6:0"}],"id":564,"name":"VariableDeclaration","src":"9871:20:0"},{"attributes":{"constant":false,"name":"version","scope":1557,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":565,"name":"ElementaryTypeName","src":"9936:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"4d4d545f302e32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"MMT_0.2\"","value":"MMT_0.2"},"id":566,"name":"Literal","src":"9960:9:0"}],"id":567,"name":"VariableDeclaration","src":"9936:33:0"},{"attributes":{"canonicalName":"Pinakion.Checkpoint","name":"Checkpoint","scope":1557,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"fromBlock","scope":572,"stateVariable":false,"storageLocation":"default","type":"uint128","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint128","type":"uint128"},"id":568,"name":"ElementaryTypeName","src":"10290:7:0"}],"id":569,"name":"VariableDeclaration","src":"10290:17:0"},{"attributes":{"constant":false,"name":"value","scope":572,"stateVariable":false,"storageLocation":"default","type":"uint128","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint128","type":"uint128"},"id":570,"name":"ElementaryTypeName","src":"10388:7:0"}],"id":571,"name":"VariableDeclaration","src":"10388:13:0"}],"id":572,"name":"StructDefinition","src":"10183:225:0"},{"attributes":{"constant":false,"name":"parentToken","scope":1557,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":573,"name":"UserDefinedTypeName","src":"10550:8:0"}],"id":574,"name":"VariableDeclaration","src":"10550:27:0"},{"attributes":{"constant":false,"name":"parentSnapShotBlock","scope":1557,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":575,"name":"ElementaryTypeName","src":"10734:4:0"}],"id":576,"name":"VariableDeclaration","src":"10734:31:0"},{"attributes":{"constant":false,"name":"creationBlock","scope":1557,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":577,"name":"ElementaryTypeName","src":"10848:4:0"}],"id":578,"name":"VariableDeclaration","src":"10848:25:0"},{"attributes":{"constant":false,"name":"balances","scope":1557,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct Pinakion.Checkpoint[])","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => struct Pinakion.Checkpoint[])"},"children":[{"attributes":{"name":"address","type":"address"},"id":579,"name":"ElementaryTypeName","src":"11087:7:0"},{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":572,"type":"struct Pinakion.Checkpoint"},"id":580,"name":"UserDefinedTypeName","src":"11098:10:0"}],"id":581,"name":"ArrayTypeName","src":"11098:12:0"}],"id":582,"name":"Mapping","src":"11078:33:0"}],"id":583,"name":"VariableDeclaration","src":"11078:42:0"},{"attributes":{"constant":false,"name":"allowed","scope":1557,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":584,"name":"ElementaryTypeName","src":"11209:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":585,"name":"ElementaryTypeName","src":"11229:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":586,"name":"ElementaryTypeName","src":"11240:7:0"}],"id":587,"name":"Mapping","src":"11220:28:0"}],"id":588,"name":"Mapping","src":"11200:49:0"}],"id":589,"name":"VariableDeclaration","src":"11200:57:0"},{"attributes":{"constant":false,"name":"totalSupplyHistory","scope":1557,"stateVariable":true,"storageLocation":"default","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":572,"type":"struct Pinakion.Checkpoint"},"id":590,"name":"UserDefinedTypeName","src":"11324:10:0"}],"id":591,"name":"ArrayTypeName","src":"11324:12:0"}],"id":592,"name":"VariableDeclaration","src":"11324:31:0"},{"attributes":{"constant":false,"name":"transfersEnabled","scope":1557,"stateVariable":true,"storageLocation":"default","type":"bool","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":593,"name":"ElementaryTypeName","src":"11427:4:0"}],"id":594,"name":"VariableDeclaration","src":"11427:28:0"},{"attributes":{"constant":false,"name":"tokenFactory","scope":1557,"stateVariable":true,"storageLocation":"default","type":"contract MiniMeTokenFactory","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"MiniMeTokenFactory","referencedDeclaration":1598,"type":"contract MiniMeTokenFactory"},"id":595,"name":"UserDefinedTypeName","src":"11513:18:0"}],"id":596,"name":"VariableDeclaration","src":"11513:38:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Constructor to create a Pinakion\n @param _tokenFactory The address of the MiniMeTokenFactory contract that\n  will create the Clone token contracts, the token factory needs to be\n  deployed first\n @param _parentToken Address of the parent token, set to 0x0 if it is a\n  new token\n @param _parentSnapShotBlock Block of the parent token that will\n  determine the initial distribution of the clone token, set to 0 if it\n  is a new token\n @param _tokenName Name of the new token\n @param _decimalUnits Number of decimals of the new token\n @param _tokenSymbol Token Symbol for the new token\n @param _transfersEnabled If true, tokens will be able to be transferred","implemented":true,"isConstructor":true,"modifiers":[null],"name":"Pinakion","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_tokenFactory","scope":651,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":597,"name":"ElementaryTypeName","src":"12392:7:0"}],"id":598,"name":"VariableDeclaration","src":"12392:21:0"},{"attributes":{"constant":false,"name":"_parentToken","scope":651,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":599,"name":"ElementaryTypeName","src":"12423:7:0"}],"id":600,"name":"VariableDeclaration","src":"12423:20:0"},{"attributes":{"constant":false,"name":"_parentSnapShotBlock","scope":651,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":601,"name":"ElementaryTypeName","src":"12453:4:0"}],"id":602,"name":"VariableDeclaration","src":"12453:25:0"},{"attributes":{"constant":false,"name":"_tokenName","scope":651,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":603,"name":"ElementaryTypeName","src":"12488:6:0"}],"id":604,"name":"VariableDeclaration","src":"12488:17:0"},{"attributes":{"constant":false,"name":"_decimalUnits","scope":651,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":605,"name":"ElementaryTypeName","src":"12515:5:0"}],"id":606,"name":"VariableDeclaration","src":"12515:19:0"},{"attributes":{"constant":false,"name":"_tokenSymbol","scope":651,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":607,"name":"ElementaryTypeName","src":"12544:6:0"}],"id":608,"name":"VariableDeclaration","src":"12544:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":651,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":609,"name":"ElementaryTypeName","src":"12573:4:0"}],"id":610,"name":"VariableDeclaration","src":"12573:22:0"}],"id":611,"name":"ParameterList","src":"12382:219:0"},{"attributes":{"parameters":[null]},"children":[],"id":612,"name":"ParameterList","src":"12609:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract MiniMeTokenFactory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":596,"type":"contract MiniMeTokenFactory","value":"tokenFactory"},"id":613,"name":"Identifier","src":"12619:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract MiniMeTokenFactory","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1598,"type":"type(contract MiniMeTokenFactory)","value":"MiniMeTokenFactory"},"id":614,"name":"Identifier","src":"12634:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":598,"type":"address","value":"_tokenFactory"},"id":615,"name":"Identifier","src":"12653:13:0"}],"id":616,"name":"FunctionCall","src":"12634:33:0"}],"id":617,"name":"Assignment","src":"12619:48:0"}],"id":618,"name":"ExpressionStatement","src":"12619:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":560,"type":"string storage ref","value":"name"},"id":619,"name":"Identifier","src":"12677:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":604,"type":"string memory","value":"_tokenName"},"id":620,"name":"Identifier","src":"12684:10:0"}],"id":621,"name":"Assignment","src":"12677:17:0"}],"id":622,"name":"ExpressionStatement","src":"12677:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":562,"type":"uint8","value":"decimals"},"id":623,"name":"Identifier","src":"12752:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":606,"type":"uint8","value":"_decimalUnits"},"id":624,"name":"Identifier","src":"12763:13:0"}],"id":625,"name":"Assignment","src":"12752:24:0"}],"id":626,"name":"ExpressionStatement","src":"12752:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":564,"type":"string storage ref","value":"symbol"},"id":627,"name":"Identifier","src":"12831:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":608,"type":"string memory","value":"_tokenSymbol"},"id":628,"name":"Identifier","src":"12840:12:0"}],"id":629,"name":"Assignment","src":"12831:21:0"}],"id":630,"name":"ExpressionStatement","src":"12831:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"contract Pinakion","value":"parentToken"},"id":631,"name":"Identifier","src":"12908:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1557,"type":"type(contract Pinakion)","value":"Pinakion"},"id":632,"name":"Identifier","src":"12922:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"address","value":"_parentToken"},"id":633,"name":"Identifier","src":"12931:12:0"}],"id":634,"name":"FunctionCall","src":"12922:22:0"}],"id":635,"name":"Assignment","src":"12908:36:0"}],"id":636,"name":"ExpressionStatement","src":"12908:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":576,"type":"uint256","value":"parentSnapShotBlock"},"id":637,"name":"Identifier","src":"12954:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":602,"type":"uint256","value":"_parentSnapShotBlock"},"id":638,"name":"Identifier","src":"12976:20:0"}],"id":639,"name":"Assignment","src":"12954:42:0"}],"id":640,"name":"ExpressionStatement","src":"12954:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"bool","value":"transfersEnabled"},"id":641,"name":"Identifier","src":"13006:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":610,"type":"bool","value":"_transfersEnabled"},"id":642,"name":"Identifier","src":"13025:17:0"}],"id":643,"name":"Assignment","src":"13006:36:0"}],"id":644,"name":"ExpressionStatement","src":"13006:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256","value":"creationBlock"},"id":645,"name":"Identifier","src":"13052:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":646,"name":"Identifier","src":"13068:5:0"}],"id":647,"name":"MemberAccess","src":"13068:12:0"}],"id":648,"name":"Assignment","src":"13052:28:0"}],"id":649,"name":"ExpressionStatement","src":"13052:28:0"}],"id":650,"name":"Block","src":"12609:478:0"}],"id":651,"name":"FunctionDefinition","src":"12365:722:0"},{"attributes":{"constant":false,"documentation":"////////////////\n @notice Send `_amount` tokens to `_to` from `msg.sender`\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return Whether the transfer was successful or not","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":674,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":652,"name":"ElementaryTypeName","src":"13404:7:0"}],"id":653,"name":"VariableDeclaration","src":"13404:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":674,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":654,"name":"ElementaryTypeName","src":"13417:7:0"}],"id":655,"name":"VariableDeclaration","src":"13417:15:0"}],"id":656,"name":"ParameterList","src":"13403:30:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":674,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":657,"name":"ElementaryTypeName","src":"13450:4:0"}],"id":658,"name":"VariableDeclaration","src":"13450:12:0"}],"id":659,"name":"ParameterList","src":"13449:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":660,"name":"Identifier","src":"13474:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"bool","value":"transfersEnabled"},"id":661,"name":"Identifier","src":"13482:16:0"}],"id":662,"name":"FunctionCall","src":"13474:25:0"}],"id":663,"name":"ExpressionStatement","src":"13474:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":835,"type":"function (address,address,uint256)","value":"doTransfer"},"id":664,"name":"Identifier","src":"13509:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":665,"name":"Identifier","src":"13520:3:0"}],"id":666,"name":"MemberAccess","src":"13520:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":653,"type":"address","value":"_to"},"id":667,"name":"Identifier","src":"13532:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":655,"type":"uint256","value":"_amount"},"id":668,"name":"Identifier","src":"13537:7:0"}],"id":669,"name":"FunctionCall","src":"13509:36:0"}],"id":670,"name":"ExpressionStatement","src":"13509:36:0"},{"attributes":{"functionReturnParameters":659},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":671,"name":"Literal","src":"13562:4:0"}],"id":672,"name":"Return","src":"13555:11:0"}],"id":673,"name":"Block","src":"13464:109:0"}],"id":674,"name":"FunctionDefinition","src":"13386:187:0"},{"attributes":{"constant":false,"documentation":"@notice Send `_amount` tokens to `_to` from `_from` on the condition it\n  is approved by `_from`\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":724,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":675,"name":"ElementaryTypeName","src":"13945:7:0"}],"id":676,"name":"VariableDeclaration","src":"13945:13:0"},{"attributes":{"constant":false,"name":"_to","scope":724,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":677,"name":"ElementaryTypeName","src":"13960:7:0"}],"id":678,"name":"VariableDeclaration","src":"13960:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":724,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":679,"name":"ElementaryTypeName","src":"13973:7:0"}],"id":680,"name":"VariableDeclaration","src":"13973:15:0"}],"id":681,"name":"ParameterList","src":"13944:50:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":724,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":682,"name":"ElementaryTypeName","src":"14011:4:0"}],"id":683,"name":"VariableDeclaration","src":"14011:12:0"}],"id":684,"name":"ParameterList","src":"14010:14:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":685,"name":"Identifier","src":"14316:3:0"}],"id":686,"name":"MemberAccess","src":"14316:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":687,"name":"Identifier","src":"14330:10:0"}],"id":688,"name":"BinaryOperation","src":"14316:24:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":689,"name":"Identifier","src":"14356:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"bool","value":"transfersEnabled"},"id":690,"name":"Identifier","src":"14364:16:0"}],"id":691,"name":"FunctionCall","src":"14356:25:0"}],"id":692,"name":"ExpressionStatement","src":"14356:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":693,"name":"Identifier","src":"14458:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":589,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":694,"name":"Identifier","src":"14466:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":676,"type":"address","value":"_from"},"id":695,"name":"Identifier","src":"14474:5:0"}],"id":696,"name":"IndexAccess","src":"14466:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":697,"name":"Identifier","src":"14481:3:0"}],"id":698,"name":"MemberAccess","src":"14481:10:0"}],"id":699,"name":"IndexAccess","src":"14466:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":680,"type":"uint256","value":"_amount"},"id":700,"name":"Identifier","src":"14496:7:0"}],"id":701,"name":"BinaryOperation","src":"14466:37:0"}],"id":702,"name":"FunctionCall","src":"14458:46:0"}],"id":703,"name":"ExpressionStatement","src":"14458:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":589,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":704,"name":"Identifier","src":"14518:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":676,"type":"address","value":"_from"},"id":705,"name":"Identifier","src":"14526:5:0"}],"id":708,"name":"IndexAccess","src":"14518:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":706,"name":"Identifier","src":"14533:3:0"}],"id":707,"name":"MemberAccess","src":"14533:10:0"}],"id":709,"name":"IndexAccess","src":"14518:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":680,"type":"uint256","value":"_amount"},"id":710,"name":"Identifier","src":"14548:7:0"}],"id":711,"name":"Assignment","src":"14518:37:0"}],"id":712,"name":"ExpressionStatement","src":"14518:37:0"}],"id":713,"name":"Block","src":"14342:224:0"}],"id":714,"name":"IfStatement","src":"14312:254:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":835,"type":"function (address,address,uint256)","value":"doTransfer"},"id":715,"name":"Identifier","src":"14575:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":676,"type":"address","value":"_from"},"id":716,"name":"Identifier","src":"14586:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":678,"type":"address","value":"_to"},"id":717,"name":"Identifier","src":"14593:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":680,"type":"uint256","value":"_amount"},"id":718,"name":"Identifier","src":"14598:7:0"}],"id":719,"name":"FunctionCall","src":"14575:31:0"}],"id":720,"name":"ExpressionStatement","src":"14575:31:0"},{"attributes":{"functionReturnParameters":684},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":721,"name":"Literal","src":"14623:4:0"}],"id":722,"name":"Return","src":"14616:11:0"}],"id":723,"name":"Block","src":"14025:609:0"}],"id":724,"name":"FunctionDefinition","src":"13923:711:0"},{"attributes":{"constant":false,"documentation":"@dev This is the actual transfer function in the token contract, it can\n  only be called by other functions in this contract.\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"doTransfer","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":835,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":725,"name":"ElementaryTypeName","src":"15033:7:0"}],"id":726,"name":"VariableDeclaration","src":"15033:13:0"},{"attributes":{"constant":false,"name":"_to","scope":835,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":727,"name":"ElementaryTypeName","src":"15048:7:0"}],"id":728,"name":"VariableDeclaration","src":"15048:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":835,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":729,"name":"ElementaryTypeName","src":"15061:4:0"}],"id":730,"name":"VariableDeclaration","src":"15061:12:0"}],"id":731,"name":"ParameterList","src":"15032:47:0"},{"attributes":{"parameters":[null]},"children":[],"id":732,"name":"ParameterList","src":"15089:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":733,"name":"Identifier","src":"15107:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":734,"name":"Literal","src":"15118:1:0"}],"id":735,"name":"BinaryOperation","src":"15107:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1542,"type":"function (address,address,uint256)","value":"Transfer"},"id":736,"name":"Identifier","src":"15138:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":726,"type":"address","value":"_from"},"id":737,"name":"Identifier","src":"15147:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":728,"type":"address","value":"_to"},"id":738,"name":"Identifier","src":"15154:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":739,"name":"Identifier","src":"15159:7:0"}],"id":740,"name":"FunctionCall","src":"15138:29:0"}],"id":741,"name":"ExpressionStatement","src":"15138:29:0"},{"attributes":{"expression":null,"functionReturnParameters":732},"id":742,"name":"Return","src":"15241:7:0"}],"id":743,"name":"Block","src":"15121:140:0"}],"id":744,"name":"IfStatement","src":"15103:158:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":745,"name":"Identifier","src":"15274:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":576,"type":"uint256","value":"parentSnapShotBlock"},"id":746,"name":"Identifier","src":"15282:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":747,"name":"Identifier","src":"15304:5:0"}],"id":748,"name":"MemberAccess","src":"15304:12:0"}],"id":749,"name":"BinaryOperation","src":"15282:34:0"}],"id":750,"name":"FunctionCall","src":"15274:43:0"}],"id":751,"name":"ExpressionStatement","src":"15274:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":752,"name":"Identifier","src":"15403:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":728,"type":"address","value":"_to"},"id":753,"name":"Identifier","src":"15412:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":754,"name":"Literal","src":"15419:1:0"}],"id":755,"name":"BinaryOperation","src":"15412:8:0"}],"id":756,"name":"TupleExpression","src":"15411:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":728,"type":"address","value":"_to"},"id":757,"name":"Identifier","src":"15426:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":758,"name":"ElementaryTypeNameExpression","src":"15433:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4568,"type":"contract Pinakion","value":"this"},"id":759,"name":"Identifier","src":"15441:4:0"}],"id":760,"name":"FunctionCall","src":"15433:13:0"}],"id":761,"name":"BinaryOperation","src":"15426:20:0"}],"id":762,"name":"TupleExpression","src":"15425:22:0"}],"id":763,"name":"BinaryOperation","src":"15411:36:0"}],"id":764,"name":"FunctionCall","src":"15403:45:0"}],"id":765,"name":"ExpressionStatement","src":"15403:45:0"},{"attributes":{"assignments":[766]},"children":[{"attributes":{"constant":false,"name":"previousBalanceFrom","scope":835,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":766,"name":"VariableDeclaration","src":"15582:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1013,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":767,"name":"Identifier","src":"15608:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":726,"type":"address","value":"_from"},"id":768,"name":"Identifier","src":"15620:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":769,"name":"Identifier","src":"15627:5:0"}],"id":770,"name":"MemberAccess","src":"15627:12:0"}],"id":771,"name":"FunctionCall","src":"15608:32:0"}],"id":772,"name":"VariableDeclarationStatement","src":"15582:58:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":773,"name":"Identifier","src":"15654:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":766,"type":"uint256","value":"previousBalanceFrom"},"id":774,"name":"Identifier","src":"15662:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":775,"name":"Identifier","src":"15685:7:0"}],"id":776,"name":"BinaryOperation","src":"15662:30:0"}],"id":777,"name":"FunctionCall","src":"15654:39:0"}],"id":778,"name":"ExpressionStatement","src":"15654:39:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1438,"type":"function (address) view returns (bool)","value":"isContract"},"id":779,"name":"Identifier","src":"15769:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":780,"name":"Identifier","src":"15780:10:0"}],"id":781,"name":"FunctionCall","src":"15769:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":782,"name":"Identifier","src":"15810:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"onTransfer","referencedDeclaration":509,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":521,"type":"type(contract TokenController)","value":"TokenController"},"id":783,"name":"Identifier","src":"15818:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":784,"name":"Identifier","src":"15834:10:0"}],"id":785,"name":"FunctionCall","src":"15818:27:0"}],"id":786,"name":"MemberAccess","src":"15818:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":726,"type":"address","value":"_from"},"id":787,"name":"Identifier","src":"15857:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":728,"type":"address","value":"_to"},"id":788,"name":"Identifier","src":"15864:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":789,"name":"Identifier","src":"15869:7:0"}],"id":790,"name":"FunctionCall","src":"15818:59:0"}],"id":791,"name":"FunctionCall","src":"15810:68:0"}],"id":792,"name":"ExpressionStatement","src":"15810:68:0"}],"id":793,"name":"Block","src":"15793:99:0"}],"id":794,"name":"IfStatement","src":"15765:127:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1416,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":795,"name":"Identifier","src":"16019:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":796,"name":"Identifier","src":"16036:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":726,"type":"address","value":"_from"},"id":797,"name":"Identifier","src":"16045:5:0"}],"id":798,"name":"IndexAccess","src":"16036:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":766,"type":"uint256","value":"previousBalanceFrom"},"id":799,"name":"Identifier","src":"16053:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":800,"name":"Identifier","src":"16075:7:0"}],"id":801,"name":"BinaryOperation","src":"16053:29:0"}],"id":802,"name":"FunctionCall","src":"16019:64:0"}],"id":803,"name":"ExpressionStatement","src":"16019:64:0"},{"attributes":{"assignments":[804]},"children":[{"attributes":{"constant":false,"name":"previousBalanceTo","scope":835,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":804,"name":"VariableDeclaration","src":"16212:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1013,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":805,"name":"Identifier","src":"16236:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":728,"type":"address","value":"_to"},"id":806,"name":"Identifier","src":"16248:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":807,"name":"Identifier","src":"16253:5:0"}],"id":808,"name":"MemberAccess","src":"16253:12:0"}],"id":809,"name":"FunctionCall","src":"16236:30:0"}],"id":810,"name":"VariableDeclarationStatement","src":"16212:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":811,"name":"Identifier","src":"16279:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":804,"type":"uint256","value":"previousBalanceTo"},"id":812,"name":"Identifier","src":"16287:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":813,"name":"Identifier","src":"16307:7:0"}],"id":814,"name":"BinaryOperation","src":"16287:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":804,"type":"uint256","value":"previousBalanceTo"},"id":815,"name":"Identifier","src":"16318:17:0"}],"id":816,"name":"BinaryOperation","src":"16287:48:0"}],"id":817,"name":"FunctionCall","src":"16279:57:0"}],"id":818,"name":"ExpressionStatement","src":"16279:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1416,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":819,"name":"Identifier","src":"16371:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":820,"name":"Identifier","src":"16388:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":728,"type":"address","value":"_to"},"id":821,"name":"Identifier","src":"16397:3:0"}],"id":822,"name":"IndexAccess","src":"16388:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":804,"type":"uint256","value":"previousBalanceTo"},"id":823,"name":"Identifier","src":"16403:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":824,"name":"Identifier","src":"16423:7:0"}],"id":825,"name":"BinaryOperation","src":"16403:27:0"}],"id":826,"name":"FunctionCall","src":"16371:60:0"}],"id":827,"name":"ExpressionStatement","src":"16371:60:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1542,"type":"function (address,address,uint256)","value":"Transfer"},"id":828,"name":"Identifier","src":"16520:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":726,"type":"address","value":"_from"},"id":829,"name":"Identifier","src":"16529:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":728,"type":"address","value":"_to"},"id":830,"name":"Identifier","src":"16536:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":730,"type":"uint256","value":"_amount"},"id":831,"name":"Identifier","src":"16541:7:0"}],"id":832,"name":"FunctionCall","src":"16520:29:0"}],"id":833,"name":"ExpressionStatement","src":"16520:29:0"}],"id":834,"name":"Block","src":"15089:1468:0"}],"id":835,"name":"FunctionDefinition","src":"15013:1544:0"},{"attributes":{"constant":true,"documentation":"@param _owner The address that's balance is being requested\n @return The balance of `_owner` at the current block","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":1557,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":849,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":836,"name":"ElementaryTypeName","src":"16711:7:0"}],"id":837,"name":"VariableDeclaration","src":"16711:14:0"}],"id":838,"name":"ParameterList","src":"16710:16:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":849,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":839,"name":"ElementaryTypeName","src":"16752:7:0"}],"id":840,"name":"VariableDeclaration","src":"16752:15:0"}],"id":841,"name":"ParameterList","src":"16751:17:0"},{"children":[{"attributes":{"functionReturnParameters":841},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1013,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":842,"name":"Identifier","src":"16786:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":837,"type":"address","value":"_owner"},"id":843,"name":"Identifier","src":"16798:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":844,"name":"Identifier","src":"16806:5:0"}],"id":845,"name":"MemberAccess","src":"16806:12:0"}],"id":846,"name":"FunctionCall","src":"16786:33:0"}],"id":847,"name":"Return","src":"16779:40:0"}],"id":848,"name":"Block","src":"16769:57:0"}],"id":849,"name":"FunctionDefinition","src":"16692:134:0"},{"attributes":{"constant":false,"documentation":"@notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n  its behalf. This is the standard version to allow backward compatibility.\n @param _spender The address of the account able to transfer the tokens\n @param _amount The amount of tokens to be approved for transfer\n @return True if the approval was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":898,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":850,"name":"ElementaryTypeName","src":"17213:7:0"}],"id":851,"name":"VariableDeclaration","src":"17213:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":898,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":852,"name":"ElementaryTypeName","src":"17231:7:0"}],"id":853,"name":"VariableDeclaration","src":"17231:15:0"}],"id":854,"name":"ParameterList","src":"17212:35:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":898,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":855,"name":"ElementaryTypeName","src":"17264:4:0"}],"id":856,"name":"VariableDeclaration","src":"17264:12:0"}],"id":857,"name":"ParameterList","src":"17263:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":858,"name":"Identifier","src":"17288:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"bool","value":"transfersEnabled"},"id":859,"name":"Identifier","src":"17296:16:0"}],"id":860,"name":"FunctionCall","src":"17288:25:0"}],"id":861,"name":"ExpressionStatement","src":"17288:25:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1438,"type":"function (address) view returns (bool)","value":"isContract"},"id":862,"name":"Identifier","src":"17396:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":863,"name":"Identifier","src":"17407:10:0"}],"id":864,"name":"FunctionCall","src":"17396:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":865,"name":"Identifier","src":"17434:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"onApprove","referencedDeclaration":520,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":521,"type":"type(contract TokenController)","value":"TokenController"},"id":866,"name":"Identifier","src":"17442:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":867,"name":"Identifier","src":"17458:10:0"}],"id":868,"name":"FunctionCall","src":"17442:27:0"}],"id":869,"name":"MemberAccess","src":"17442:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":870,"name":"Identifier","src":"17480:3:0"}],"id":871,"name":"MemberAccess","src":"17480:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":851,"type":"address","value":"_spender"},"id":872,"name":"Identifier","src":"17492:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":853,"type":"uint256","value":"_amount"},"id":873,"name":"Identifier","src":"17502:7:0"}],"id":874,"name":"FunctionCall","src":"17442:68:0"}],"id":875,"name":"FunctionCall","src":"17434:77:0"}],"id":876,"name":"ExpressionStatement","src":"17434:77:0"}],"id":877,"name":"Block","src":"17420:102:0"}],"id":878,"name":"IfStatement","src":"17392:130:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":589,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":879,"name":"Identifier","src":"17532:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":880,"name":"Identifier","src":"17540:3:0"}],"id":881,"name":"MemberAccess","src":"17540:10:0"}],"id":883,"name":"IndexAccess","src":"17532:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":851,"type":"address","value":"_spender"},"id":882,"name":"Identifier","src":"17552:8:0"}],"id":884,"name":"IndexAccess","src":"17532:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":853,"type":"uint256","value":"_amount"},"id":885,"name":"Identifier","src":"17564:7:0"}],"id":886,"name":"Assignment","src":"17532:39:0"}],"id":887,"name":"ExpressionStatement","src":"17532:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1556,"type":"function (address,address,uint256)","value":"Approval"},"id":888,"name":"Identifier","src":"17581:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":889,"name":"Identifier","src":"17590:3:0"}],"id":890,"name":"MemberAccess","src":"17590:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":851,"type":"address","value":"_spender"},"id":891,"name":"Identifier","src":"17602:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":853,"type":"uint256","value":"_amount"},"id":892,"name":"Identifier","src":"17612:7:0"}],"id":893,"name":"FunctionCall","src":"17581:39:0"}],"id":894,"name":"ExpressionStatement","src":"17581:39:0"},{"attributes":{"functionReturnParameters":857},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":895,"name":"Literal","src":"17637:4:0"}],"id":896,"name":"Return","src":"17630:11:0"}],"id":897,"name":"Block","src":"17278:370:0"}],"id":898,"name":"FunctionDefinition","src":"17196:452:0"},{"attributes":{"constant":true,"documentation":"@dev This function makes it easy to read the `allowed[]` map\n @param _owner The address of the account that owns the token\n @param _spender The address of the account able to transfer the tokens\n @return Amount of remaining tokens of _owner that _spender is allowed\n  to spend","implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":1557,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":914,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":899,"name":"ElementaryTypeName","src":"17986:7:0"}],"id":900,"name":"VariableDeclaration","src":"17986:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":914,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":901,"name":"ElementaryTypeName","src":"18002:7:0"}],"id":902,"name":"VariableDeclaration","src":"18002:16:0"}],"id":903,"name":"ParameterList","src":"17985:39:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":914,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":904,"name":"ElementaryTypeName","src":"18050:7:0"}],"id":905,"name":"VariableDeclaration","src":"18050:17:0"}],"id":906,"name":"ParameterList","src":"18049:19:0"},{"children":[{"attributes":{"functionReturnParameters":906},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":589,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":907,"name":"Identifier","src":"18086:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":900,"type":"address","value":"_owner"},"id":908,"name":"Identifier","src":"18094:6:0"}],"id":909,"name":"IndexAccess","src":"18086:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":902,"type":"address","value":"_spender"},"id":910,"name":"Identifier","src":"18102:8:0"}],"id":911,"name":"IndexAccess","src":"18086:25:0"}],"id":912,"name":"Return","src":"18079:32:0"}],"id":913,"name":"Block","src":"18069:49:0"}],"id":914,"name":"FunctionDefinition","src":"17967:151:0"},{"attributes":{"constant":false,"documentation":"@notice `msg.sender` approves `_spender` to send `_amount` tokens on\n  its behalf, and then a function is triggered in the contract that is\n  being approved, `_spender`. This allows users to use their tokens to\n  interact with contracts in one function call instead of two\n @param _spender The address of the contract able to transfer the tokens\n @param _amount The amount of tokens to be approved for transfer\n @return True if the function call was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approveAndCall","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":946,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":915,"name":"ElementaryTypeName","src":"18659:7:0"}],"id":916,"name":"VariableDeclaration","src":"18659:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":946,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":917,"name":"ElementaryTypeName","src":"18677:7:0"}],"id":918,"name":"VariableDeclaration","src":"18677:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":946,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":919,"name":"ElementaryTypeName","src":"18694:5:0"}],"id":920,"name":"VariableDeclaration","src":"18694:16:0"}],"id":921,"name":"ParameterList","src":"18658:58:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":946,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":922,"name":"ElementaryTypeName","src":"18733:4:0"}],"id":923,"name":"VariableDeclaration","src":"18733:12:0"}],"id":924,"name":"ParameterList","src":"18732:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":925,"name":"Identifier","src":"18757:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":898,"type":"function (address,uint256) returns (bool)","value":"approve"},"id":926,"name":"Identifier","src":"18765:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":916,"type":"address","value":"_spender"},"id":927,"name":"Identifier","src":"18773:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":918,"type":"uint256","value":"_amount"},"id":928,"name":"Identifier","src":"18783:7:0"}],"id":929,"name":"FunctionCall","src":"18765:26:0"}],"id":930,"name":"FunctionCall","src":"18757:35:0"}],"id":931,"name":"ExpressionStatement","src":"18757:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"receiveApproval","referencedDeclaration":490,"type":"function (address,uint256,address,bytes memory) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract ApproveAndCallFallBack","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":491,"type":"type(contract ApproveAndCallFallBack)","value":"ApproveAndCallFallBack"},"id":932,"name":"Identifier","src":"18803:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":916,"type":"address","value":"_spender"},"id":933,"name":"Identifier","src":"18826:8:0"}],"id":934,"name":"FunctionCall","src":"18803:32:0"}],"id":935,"name":"MemberAccess","src":"18803:48:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":936,"name":"Identifier","src":"18865:3:0"}],"id":937,"name":"MemberAccess","src":"18865:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":918,"type":"uint256","value":"_amount"},"id":938,"name":"Identifier","src":"18889:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4568,"type":"contract Pinakion","value":"this"},"id":939,"name":"Identifier","src":"18910:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":920,"type":"bytes memory","value":"_extraData"},"id":940,"name":"Identifier","src":"18928:10:0"}],"id":941,"name":"FunctionCall","src":"18803:145:0"}],"id":942,"name":"ExpressionStatement","src":"18803:145:0"},{"attributes":{"functionReturnParameters":924},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":943,"name":"Literal","src":"18966:4:0"}],"id":944,"name":"Return","src":"18959:11:0"}],"id":945,"name":"Block","src":"18747:230:0"}],"id":946,"name":"FunctionDefinition","src":"18635:342:0"},{"attributes":{"constant":true,"documentation":"@dev This function makes it easy to get the total number of tokens\n @return The total number of tokens","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":1557,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":947,"name":"ParameterList","src":"19121:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":957,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":948,"name":"ElementaryTypeName","src":"19149:4:0"}],"id":949,"name":"VariableDeclaration","src":"19149:4:0"}],"id":950,"name":"ParameterList","src":"19148:6:0"},{"children":[{"attributes":{"functionReturnParameters":950},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1060,"type":"function (uint256) view returns (uint256)","value":"totalSupplyAt"},"id":951,"name":"Identifier","src":"19172:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":952,"name":"Identifier","src":"19186:5:0"}],"id":953,"name":"MemberAccess","src":"19186:12:0"}],"id":954,"name":"FunctionCall","src":"19172:27:0"}],"id":955,"name":"Return","src":"19165:34:0"}],"id":956,"name":"Block","src":"19155:51:0"}],"id":957,"name":"FunctionDefinition","src":"19101:105:0"},{"attributes":{"constant":true,"documentation":"/////////////\n @dev Queries the balance of `_owner` at a specific `_blockNumber`\n @param _owner The address from which the balance will be retrieved\n @param _blockNumber The block number when the balance is queried\n @return The balance at `_blockNumber`","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOfAt","payable":false,"scope":1557,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":1013,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":958,"name":"ElementaryTypeName","src":"19581:7:0"}],"id":959,"name":"VariableDeclaration","src":"19581:14:0"},{"attributes":{"constant":false,"name":"_blockNumber","scope":1013,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":960,"name":"ElementaryTypeName","src":"19597:4:0"}],"id":961,"name":"VariableDeclaration","src":"19597:17:0"}],"id":962,"name":"ParameterList","src":"19580:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1013,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":963,"name":"ElementaryTypeName","src":"19649:4:0"}],"id":964,"name":"VariableDeclaration","src":"19649:4:0"}],"id":965,"name":"ParameterList","src":"19648:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":966,"name":"Identifier","src":"19998:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":959,"type":"address","value":"_owner"},"id":967,"name":"Identifier","src":"20007:6:0"}],"id":968,"name":"IndexAccess","src":"19998:16:0"}],"id":969,"name":"MemberAccess","src":"19998:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":970,"name":"Literal","src":"20025:1:0"}],"id":971,"name":"BinaryOperation","src":"19998:28:0"}],"id":972,"name":"TupleExpression","src":"19997:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":569,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":973,"name":"Identifier","src":"20044:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":959,"type":"address","value":"_owner"},"id":974,"name":"Identifier","src":"20053:6:0"}],"id":975,"name":"IndexAccess","src":"20044:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":976,"name":"Literal","src":"20061:1:0"}],"id":977,"name":"IndexAccess","src":"20044:19:0"}],"id":978,"name":"MemberAccess","src":"20044:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":961,"type":"uint256","value":"_blockNumber"},"id":979,"name":"Identifier","src":"20076:12:0"}],"id":980,"name":"BinaryOperation","src":"20044:44:0"}],"id":981,"name":"TupleExpression","src":"20043:46:0"}],"id":982,"name":"BinaryOperation","src":"19997:92:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":983,"name":"ElementaryTypeNameExpression","src":"20109:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"contract Pinakion","value":"parentToken"},"id":984,"name":"Identifier","src":"20117:11:0"}],"id":985,"name":"FunctionCall","src":"20109:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":986,"name":"Literal","src":"20133:1:0"}],"id":987,"name":"BinaryOperation","src":"20109:25:0"},{"children":[{"attributes":{"functionReturnParameters":965},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOfAt","referencedDeclaration":1013,"type":"function (address,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"contract Pinakion","value":"parentToken"},"id":988,"name":"Identifier","src":"20161:11:0"}],"id":989,"name":"MemberAccess","src":"20161:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":959,"type":"address","value":"_owner"},"id":990,"name":"Identifier","src":"20185:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1455,"type":"function (uint256,uint256) pure returns (uint256)","value":"min"},"id":991,"name":"Identifier","src":"20193:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":961,"type":"uint256","value":"_blockNumber"},"id":992,"name":"Identifier","src":"20197:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":576,"type":"uint256","value":"parentSnapShotBlock"},"id":993,"name":"Identifier","src":"20211:19:0"}],"id":994,"name":"FunctionCall","src":"20193:38:0"}],"id":995,"name":"FunctionCall","src":"20161:71:0"}],"id":996,"name":"Return","src":"20154:78:0"}],"id":997,"name":"Block","src":"20136:111:0"},{"children":[{"attributes":{"functionReturnParameters":965},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":998,"name":"Literal","src":"20311:1:0"}],"id":999,"name":"Return","src":"20304:8:0"}],"id":1000,"name":"Block","src":"20253:74:0"}],"id":1001,"name":"IfStatement","src":"20105:222:0"}],"id":1002,"name":"Block","src":"20091:321:0"},{"children":[{"attributes":{"functionReturnParameters":965},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1345,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)","value":"getValueAt"},"id":1003,"name":"Identifier","src":"20439:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":1004,"name":"Identifier","src":"20450:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":959,"type":"address","value":"_owner"},"id":1005,"name":"Identifier","src":"20459:6:0"}],"id":1006,"name":"IndexAccess","src":"20450:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":961,"type":"uint256","value":"_blockNumber"},"id":1007,"name":"Identifier","src":"20468:12:0"}],"id":1008,"name":"FunctionCall","src":"20439:42:0"}],"id":1009,"name":"Return","src":"20432:49:0"}],"id":1010,"name":"Block","src":"20418:74:0"}],"id":1011,"name":"IfStatement","src":"19993:499:0"}],"id":1012,"name":"Block","src":"19655:843:0"}],"id":1013,"name":"FunctionDefinition","src":"19560:938:0"},{"attributes":{"constant":true,"documentation":"@notice Total amount of tokens at a specific `_blockNumber`.\n @param _blockNumber The block number when the totalSupply is queried\n @return The total amount of tokens at `_blockNumber`","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupplyAt","payable":false,"scope":1557,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_blockNumber","scope":1060,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1014,"name":"ElementaryTypeName","src":"20734:4:0"}],"id":1015,"name":"VariableDeclaration","src":"20734:17:0"}],"id":1016,"name":"ParameterList","src":"20733:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1060,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1017,"name":"ElementaryTypeName","src":"20777:4:0"}],"id":1018,"name":"VariableDeclaration","src":"20777:4:0"}],"id":1019,"name":"ParameterList","src":"20776:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":592,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1020,"name":"Identifier","src":"21150:18:0"}],"id":1021,"name":"MemberAccess","src":"21150:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1022,"name":"Literal","src":"21179:1:0"}],"id":1023,"name":"BinaryOperation","src":"21150:30:0"}],"id":1024,"name":"TupleExpression","src":"21149:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":569,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":592,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1025,"name":"Identifier","src":"21198:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1026,"name":"Literal","src":"21217:1:0"}],"id":1027,"name":"IndexAccess","src":"21198:21:0"}],"id":1028,"name":"MemberAccess","src":"21198:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1015,"type":"uint256","value":"_blockNumber"},"id":1029,"name":"Identifier","src":"21232:12:0"}],"id":1030,"name":"BinaryOperation","src":"21198:46:0"}],"id":1031,"name":"TupleExpression","src":"21197:48:0"}],"id":1032,"name":"BinaryOperation","src":"21149:96:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1033,"name":"ElementaryTypeNameExpression","src":"21265:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"contract Pinakion","value":"parentToken"},"id":1034,"name":"Identifier","src":"21273:11:0"}],"id":1035,"name":"FunctionCall","src":"21265:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1036,"name":"Literal","src":"21289:1:0"}],"id":1037,"name":"BinaryOperation","src":"21265:25:0"},{"children":[{"attributes":{"functionReturnParameters":1019},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"totalSupplyAt","referencedDeclaration":1060,"type":"function (uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"contract Pinakion","value":"parentToken"},"id":1038,"name":"Identifier","src":"21317:11:0"}],"id":1039,"name":"MemberAccess","src":"21317:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1455,"type":"function (uint256,uint256) pure returns (uint256)","value":"min"},"id":1040,"name":"Identifier","src":"21343:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1015,"type":"uint256","value":"_blockNumber"},"id":1041,"name":"Identifier","src":"21347:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":576,"type":"uint256","value":"parentSnapShotBlock"},"id":1042,"name":"Identifier","src":"21361:19:0"}],"id":1043,"name":"FunctionCall","src":"21343:38:0"}],"id":1044,"name":"FunctionCall","src":"21317:65:0"}],"id":1045,"name":"Return","src":"21310:72:0"}],"id":1046,"name":"Block","src":"21292:105:0"},{"children":[{"attributes":{"functionReturnParameters":1019},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1047,"name":"Literal","src":"21428:1:0"}],"id":1048,"name":"Return","src":"21421:8:0"}],"id":1049,"name":"Block","src":"21403:41:0"}],"id":1050,"name":"IfStatement","src":"21261:183:0"}],"id":1051,"name":"Block","src":"21247:286:0"},{"children":[{"attributes":{"functionReturnParameters":1019},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1345,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)","value":"getValueAt"},"id":1052,"name":"Identifier","src":"21560:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":592,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1053,"name":"Identifier","src":"21571:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1015,"type":"uint256","value":"_blockNumber"},"id":1054,"name":"Identifier","src":"21591:12:0"}],"id":1055,"name":"FunctionCall","src":"21560:44:0"}],"id":1056,"name":"Return","src":"21553:51:0"}],"id":1057,"name":"Block","src":"21539:76:0"}],"id":1058,"name":"IfStatement","src":"21145:470:0"}],"id":1059,"name":"Block","src":"20783:838:0"}],"id":1060,"name":"FunctionDefinition","src":"20711:910:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Creates a new clone token with the initial distribution being\n  this token at `_snapshotBlock`\n @param _cloneTokenName Name of the clone token\n @param _cloneDecimalUnits Number of decimals of the smallest unit\n @param _cloneTokenSymbol Symbol of the clone token\n @param _snapshotBlock Block when the distribution of the parent token is\n  copied to set the initial distribution of the new clone token;\n  if the block is zero than the actual block, the current block is used\n @param _transfersEnabled True if transfers are allowed in the clone\n @return The address of the new MiniMeToken Contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createCloneToken","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_cloneTokenName","scope":1115,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1061,"name":"ElementaryTypeName","src":"22393:6:0"}],"id":1062,"name":"VariableDeclaration","src":"22393:22:0"},{"attributes":{"constant":false,"name":"_cloneDecimalUnits","scope":1115,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1063,"name":"ElementaryTypeName","src":"22425:5:0"}],"id":1064,"name":"VariableDeclaration","src":"22425:24:0"},{"attributes":{"constant":false,"name":"_cloneTokenSymbol","scope":1115,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1065,"name":"ElementaryTypeName","src":"22459:6:0"}],"id":1066,"name":"VariableDeclaration","src":"22459:24:0"},{"attributes":{"constant":false,"name":"_snapshotBlock","scope":1115,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1067,"name":"ElementaryTypeName","src":"22493:4:0"}],"id":1068,"name":"VariableDeclaration","src":"22493:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":1115,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1069,"name":"ElementaryTypeName","src":"22522:4:0"}],"id":1070,"name":"VariableDeclaration","src":"22522:22:0"}],"id":1071,"name":"ParameterList","src":"22383:171:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1115,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1072,"name":"ElementaryTypeName","src":"22570:7:0"}],"id":1073,"name":"VariableDeclaration","src":"22570:7:0"}],"id":1074,"name":"ParameterList","src":"22569:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1068,"type":"uint256","value":"_snapshotBlock"},"id":1075,"name":"Identifier","src":"22593:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1076,"name":"Literal","src":"22611:1:0"}],"id":1077,"name":"BinaryOperation","src":"22593:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1068,"type":"uint256","value":"_snapshotBlock"},"id":1078,"name":"Identifier","src":"22614:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":1079,"name":"Identifier","src":"22631:5:0"}],"id":1080,"name":"MemberAccess","src":"22631:12:0"}],"id":1081,"name":"Assignment","src":"22614:29:0"}],"id":1082,"name":"ExpressionStatement","src":"22614:29:0"}],"id":1083,"name":"IfStatement","src":"22589:54:0"},{"attributes":{"assignments":[1085]},"children":[{"attributes":{"constant":false,"name":"cloneToken","scope":1115,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":1084,"name":"UserDefinedTypeName","src":"22653:8:0"}],"id":1085,"name":"VariableDeclaration","src":"22653:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"createCloneToken","referencedDeclaration":1597,"type":"function (address,uint256,string memory,uint8,string memory,bool) external returns (contract Pinakion)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":596,"type":"contract MiniMeTokenFactory","value":"tokenFactory"},"id":1086,"name":"Identifier","src":"22675:12:0"}],"id":1087,"name":"MemberAccess","src":"22675:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4568,"type":"contract Pinakion","value":"this"},"id":1088,"name":"Identifier","src":"22718:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1068,"type":"uint256","value":"_snapshotBlock"},"id":1089,"name":"Identifier","src":"22736:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1062,"type":"string memory","value":"_cloneTokenName"},"id":1090,"name":"Identifier","src":"22764:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1064,"type":"uint8","value":"_cloneDecimalUnits"},"id":1091,"name":"Identifier","src":"22793:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1066,"type":"string memory","value":"_cloneTokenSymbol"},"id":1092,"name":"Identifier","src":"22825:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1070,"type":"bool","value":"_transfersEnabled"},"id":1093,"name":"Identifier","src":"22856:17:0"}],"id":1094,"name":"FunctionCall","src":"22675:212:0"}],"id":1095,"name":"VariableDeclarationStatement","src":"22653:234:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"changeController","referencedDeclaration":555,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1085,"type":"contract Pinakion","value":"cloneToken"},"id":1096,"name":"Identifier","src":"22898:10:0"}],"id":1098,"name":"MemberAccess","src":"22898:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1099,"name":"Identifier","src":"22926:3:0"}],"id":1100,"name":"MemberAccess","src":"22926:10:0"}],"id":1101,"name":"FunctionCall","src":"22898:39:0"}],"id":1102,"name":"ExpressionStatement","src":"22898:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1548,"type":"function (address,uint256)","value":"NewCloneToken"},"id":1103,"name":"Identifier","src":"23017:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1104,"name":"ElementaryTypeNameExpression","src":"23031:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1085,"type":"contract Pinakion","value":"cloneToken"},"id":1105,"name":"Identifier","src":"23039:10:0"}],"id":1106,"name":"FunctionCall","src":"23031:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1068,"type":"uint256","value":"_snapshotBlock"},"id":1107,"name":"Identifier","src":"23052:14:0"}],"id":1108,"name":"FunctionCall","src":"23017:50:0"}],"id":1109,"name":"ExpressionStatement","src":"23017:50:0"},{"attributes":{"functionReturnParameters":1074},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1110,"name":"ElementaryTypeNameExpression","src":"23084:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1085,"type":"contract Pinakion","value":"cloneToken"},"id":1111,"name":"Identifier","src":"23092:10:0"}],"id":1112,"name":"FunctionCall","src":"23084:19:0"}],"id":1113,"name":"Return","src":"23077:26:0"}],"id":1114,"name":"Block","src":"22579:531:0"}],"id":1115,"name":"FunctionDefinition","src":"22358:752:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Generates `_amount` tokens that are assigned to `_owner`\n @param _owner The address that will be assigned the new tokens\n @param _amount The quantity of tokens generated\n @return True if the tokens are generated correctly","implemented":true,"isConstructor":false,"name":"generateTokens","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":1178,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1116,"name":"ElementaryTypeName","src":"23465:7:0"}],"id":1117,"name":"VariableDeclaration","src":"23465:14:0"},{"attributes":{"constant":false,"name":"_amount","scope":1178,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1118,"name":"ElementaryTypeName","src":"23481:4:0"}],"id":1119,"name":"VariableDeclaration","src":"23481:12:0"}],"id":1120,"name":"ParameterList","src":"23464:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1178,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1123,"name":"ElementaryTypeName","src":"23531:4:0"}],"id":1124,"name":"VariableDeclaration","src":"23531:4:0"}],"id":1125,"name":"ParameterList","src":"23530:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":532,"type":"modifier ()","value":"onlyController"},"id":1121,"name":"Identifier","src":"23507:14:0"}],"id":1122,"name":"ModifierInvocation","src":"23507:14:0"},{"children":[{"attributes":{"assignments":[1127]},"children":[{"attributes":{"constant":false,"name":"curTotalSupply","scope":1178,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1126,"name":"ElementaryTypeName","src":"23547:4:0"}],"id":1127,"name":"VariableDeclaration","src":"23547:19:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":957,"type":"function () view returns (uint256)","value":"totalSupply"},"id":1128,"name":"Identifier","src":"23569:11:0"}],"id":1129,"name":"FunctionCall","src":"23569:13:0"}],"id":1130,"name":"VariableDeclarationStatement","src":"23547:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1131,"name":"Identifier","src":"23592:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1127,"type":"uint256","value":"curTotalSupply"},"id":1132,"name":"Identifier","src":"23600:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1119,"type":"uint256","value":"_amount"},"id":1133,"name":"Identifier","src":"23617:7:0"}],"id":1134,"name":"BinaryOperation","src":"23600:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1127,"type":"uint256","value":"curTotalSupply"},"id":1135,"name":"Identifier","src":"23628:14:0"}],"id":1136,"name":"BinaryOperation","src":"23600:42:0"}],"id":1137,"name":"FunctionCall","src":"23592:51:0"}],"id":1138,"name":"ExpressionStatement","src":"23592:51:0"},{"attributes":{"assignments":[1140]},"children":[{"attributes":{"constant":false,"name":"previousBalanceTo","scope":1178,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1139,"name":"ElementaryTypeName","src":"23675:4:0"}],"id":1140,"name":"VariableDeclaration","src":"23675:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":849,"type":"function (address) view returns (uint256)","value":"balanceOf"},"id":1141,"name":"Identifier","src":"23700:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1117,"type":"address","value":"_owner"},"id":1142,"name":"Identifier","src":"23710:6:0"}],"id":1143,"name":"FunctionCall","src":"23700:17:0"}],"id":1144,"name":"VariableDeclarationStatement","src":"23675:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1145,"name":"Identifier","src":"23727:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1140,"type":"uint256","value":"previousBalanceTo"},"id":1146,"name":"Identifier","src":"23735:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1119,"type":"uint256","value":"_amount"},"id":1147,"name":"Identifier","src":"23755:7:0"}],"id":1148,"name":"BinaryOperation","src":"23735:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1140,"type":"uint256","value":"previousBalanceTo"},"id":1149,"name":"Identifier","src":"23766:17:0"}],"id":1150,"name":"BinaryOperation","src":"23735:48:0"}],"id":1151,"name":"FunctionCall","src":"23727:57:0"}],"id":1152,"name":"ExpressionStatement","src":"23727:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1416,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1153,"name":"Identifier","src":"23816:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":592,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1154,"name":"Identifier","src":"23833:18:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1127,"type":"uint256","value":"curTotalSupply"},"id":1155,"name":"Identifier","src":"23853:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1119,"type":"uint256","value":"_amount"},"id":1156,"name":"Identifier","src":"23870:7:0"}],"id":1157,"name":"BinaryOperation","src":"23853:24:0"}],"id":1158,"name":"FunctionCall","src":"23816:62:0"}],"id":1159,"name":"ExpressionStatement","src":"23816:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1416,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1160,"name":"Identifier","src":"23888:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":1161,"name":"Identifier","src":"23905:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1117,"type":"address","value":"_owner"},"id":1162,"name":"Identifier","src":"23914:6:0"}],"id":1163,"name":"IndexAccess","src":"23905:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1140,"type":"uint256","value":"previousBalanceTo"},"id":1164,"name":"Identifier","src":"23923:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1119,"type":"uint256","value":"_amount"},"id":1165,"name":"Identifier","src":"23943:7:0"}],"id":1166,"name":"BinaryOperation","src":"23923:27:0"}],"id":1167,"name":"FunctionCall","src":"23888:63:0"}],"id":1168,"name":"ExpressionStatement","src":"23888:63:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1542,"type":"function (address,address,uint256)","value":"Transfer"},"id":1169,"name":"Identifier","src":"23961:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1170,"name":"Literal","src":"23970:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1117,"type":"address","value":"_owner"},"id":1171,"name":"Identifier","src":"23973:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1119,"type":"uint256","value":"_amount"},"id":1172,"name":"Identifier","src":"23981:7:0"}],"id":1173,"name":"FunctionCall","src":"23961:28:0"}],"id":1174,"name":"ExpressionStatement","src":"23961:28:0"},{"attributes":{"functionReturnParameters":1125},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1175,"name":"Literal","src":"24006:4:0"}],"id":1176,"name":"Return","src":"23999:11:0"}],"id":1177,"name":"Block","src":"23537:480:0"}],"id":1178,"name":"FunctionDefinition","src":"23441:576:0"},{"attributes":{"constant":false,"documentation":"@notice Burns `_amount` tokens from `_owner`\n @param _owner The address that will lose the tokens\n @param _amount The quantity of tokens to burn\n @return True if the tokens are burned correctly","implemented":true,"isConstructor":false,"name":"destroyTokens","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":1237,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1179,"name":"ElementaryTypeName","src":"24270:7:0"}],"id":1180,"name":"VariableDeclaration","src":"24270:14:0"},{"attributes":{"constant":false,"name":"_amount","scope":1237,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1181,"name":"ElementaryTypeName","src":"24286:4:0"}],"id":1182,"name":"VariableDeclaration","src":"24286:12:0"}],"id":1183,"name":"ParameterList","src":"24269:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1237,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1186,"name":"ElementaryTypeName","src":"24336:4:0"}],"id":1187,"name":"VariableDeclaration","src":"24336:4:0"}],"id":1188,"name":"ParameterList","src":"24335:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":532,"type":"modifier ()","value":"onlyController"},"id":1184,"name":"Identifier","src":"24305:14:0"}],"id":1185,"name":"ModifierInvocation","src":"24305:14:0"},{"children":[{"attributes":{"assignments":[1190]},"children":[{"attributes":{"constant":false,"name":"curTotalSupply","scope":1237,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1189,"name":"ElementaryTypeName","src":"24352:4:0"}],"id":1190,"name":"VariableDeclaration","src":"24352:19:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":957,"type":"function () view returns (uint256)","value":"totalSupply"},"id":1191,"name":"Identifier","src":"24374:11:0"}],"id":1192,"name":"FunctionCall","src":"24374:13:0"}],"id":1193,"name":"VariableDeclarationStatement","src":"24352:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1194,"name":"Identifier","src":"24397:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1190,"type":"uint256","value":"curTotalSupply"},"id":1195,"name":"Identifier","src":"24405:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1182,"type":"uint256","value":"_amount"},"id":1196,"name":"Identifier","src":"24423:7:0"}],"id":1197,"name":"BinaryOperation","src":"24405:25:0"}],"id":1198,"name":"FunctionCall","src":"24397:34:0"}],"id":1199,"name":"ExpressionStatement","src":"24397:34:0"},{"attributes":{"assignments":[1201]},"children":[{"attributes":{"constant":false,"name":"previousBalanceFrom","scope":1237,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1200,"name":"ElementaryTypeName","src":"24441:4:0"}],"id":1201,"name":"VariableDeclaration","src":"24441:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":849,"type":"function (address) view returns (uint256)","value":"balanceOf"},"id":1202,"name":"Identifier","src":"24468:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1180,"type":"address","value":"_owner"},"id":1203,"name":"Identifier","src":"24478:6:0"}],"id":1204,"name":"FunctionCall","src":"24468:17:0"}],"id":1205,"name":"VariableDeclarationStatement","src":"24441:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1206,"name":"Identifier","src":"24495:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1201,"type":"uint256","value":"previousBalanceFrom"},"id":1207,"name":"Identifier","src":"24503:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1182,"type":"uint256","value":"_amount"},"id":1208,"name":"Identifier","src":"24526:7:0"}],"id":1209,"name":"BinaryOperation","src":"24503:30:0"}],"id":1210,"name":"FunctionCall","src":"24495:39:0"}],"id":1211,"name":"ExpressionStatement","src":"24495:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1416,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1212,"name":"Identifier","src":"24544:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":592,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1213,"name":"Identifier","src":"24561:18:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1190,"type":"uint256","value":"curTotalSupply"},"id":1214,"name":"Identifier","src":"24581:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1182,"type":"uint256","value":"_amount"},"id":1215,"name":"Identifier","src":"24598:7:0"}],"id":1216,"name":"BinaryOperation","src":"24581:24:0"}],"id":1217,"name":"FunctionCall","src":"24544:62:0"}],"id":1218,"name":"ExpressionStatement","src":"24544:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$572_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1416,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1219,"name":"Identifier","src":"24616:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":1220,"name":"Identifier","src":"24633:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1180,"type":"address","value":"_owner"},"id":1221,"name":"Identifier","src":"24642:6:0"}],"id":1222,"name":"IndexAccess","src":"24633:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1201,"type":"uint256","value":"previousBalanceFrom"},"id":1223,"name":"Identifier","src":"24651:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1182,"type":"uint256","value":"_amount"},"id":1224,"name":"Identifier","src":"24673:7:0"}],"id":1225,"name":"BinaryOperation","src":"24651:29:0"}],"id":1226,"name":"FunctionCall","src":"24616:65:0"}],"id":1227,"name":"ExpressionStatement","src":"24616:65:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1542,"type":"function (address,address,uint256)","value":"Transfer"},"id":1228,"name":"Identifier","src":"24691:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1180,"type":"address","value":"_owner"},"id":1229,"name":"Identifier","src":"24700:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1230,"name":"Literal","src":"24708:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1182,"type":"uint256","value":"_amount"},"id":1231,"name":"Identifier","src":"24711:7:0"}],"id":1232,"name":"FunctionCall","src":"24691:28:0"}],"id":1233,"name":"ExpressionStatement","src":"24691:28:0"},{"attributes":{"functionReturnParameters":1188},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1234,"name":"Literal","src":"24736:4:0"}],"id":1235,"name":"Return","src":"24729:11:0"}],"id":1236,"name":"Block","src":"24342:405:0"}],"id":1237,"name":"FunctionDefinition","src":"24247:500:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Enables token holders to transfer their tokens freely if true\n @param _transfersEnabled True if transfers are allowed in the clone","implemented":true,"isConstructor":false,"name":"enableTransfers","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_transfersEnabled","scope":1249,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1238,"name":"ElementaryTypeName","src":"24995:4:0"}],"id":1239,"name":"VariableDeclaration","src":"24995:22:0"}],"id":1240,"name":"ParameterList","src":"24994:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":1243,"name":"ParameterList","src":"25041:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":532,"type":"modifier ()","value":"onlyController"},"id":1241,"name":"Identifier","src":"25026:14:0"}],"id":1242,"name":"ModifierInvocation","src":"25026:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":594,"type":"bool","value":"transfersEnabled"},"id":1244,"name":"Identifier","src":"25051:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1239,"type":"bool","value":"_transfersEnabled"},"id":1245,"name":"Identifier","src":"25070:17:0"}],"id":1246,"name":"Assignment","src":"25051:36:0"}],"id":1247,"name":"ExpressionStatement","src":"25051:36:0"}],"id":1248,"name":"Block","src":"25041:53:0"}],"id":1249,"name":"FunctionDefinition","src":"24970:124:0"},{"attributes":{"constant":true,"documentation":"/////////////\n @dev `getValueAt` retrieves the number of tokens at a given block number\n @param checkpoints The history of values being queried\n @param _block The block number to retrieve the value at\n @return The number of tokens being queried","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getValueAt","payable":false,"scope":1557,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"checkpoints","scope":1345,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":572,"type":"struct Pinakion.Checkpoint"},"id":1250,"name":"UserDefinedTypeName","src":"25488:10:0"}],"id":1251,"name":"ArrayTypeName","src":"25488:12:0"}],"id":1252,"name":"VariableDeclaration","src":"25488:32:0"},{"attributes":{"constant":false,"name":"_block","scope":1345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1253,"name":"ElementaryTypeName","src":"25522:4:0"}],"id":1254,"name":"VariableDeclaration","src":"25522:11:0"}],"id":1255,"name":"ParameterList","src":"25487:52:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1256,"name":"ElementaryTypeName","src":"25567:4:0"}],"id":1257,"name":"VariableDeclaration","src":"25567:4:0"}],"id":1258,"name":"ParameterList","src":"25566:6:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1259,"name":"Identifier","src":"25587:11:0"}],"id":1260,"name":"MemberAccess","src":"25587:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1261,"name":"Literal","src":"25609:1:0"}],"id":1262,"name":"BinaryOperation","src":"25587:23:0"},{"attributes":{"functionReturnParameters":1258},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1263,"name":"Literal","src":"25619:1:0"}],"id":1264,"name":"Return","src":"25612:8:0"}],"id":1265,"name":"IfStatement","src":"25583:37:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1254,"type":"uint256","value":"_block"},"id":1266,"name":"Identifier","src":"25676:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":569,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1267,"name":"Identifier","src":"25686:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1268,"name":"Identifier","src":"25698:11:0"}],"id":1269,"name":"MemberAccess","src":"25698:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1270,"name":"Literal","src":"25717:1:0"}],"id":1271,"name":"BinaryOperation","src":"25698:20:0"}],"id":1272,"name":"IndexAccess","src":"25686:33:0"}],"id":1273,"name":"MemberAccess","src":"25686:43:0"}],"id":1274,"name":"BinaryOperation","src":"25676:53:0"},{"attributes":{"functionReturnParameters":1258},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":571,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1275,"name":"Identifier","src":"25750:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1276,"name":"Identifier","src":"25762:11:0"}],"id":1277,"name":"MemberAccess","src":"25762:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1278,"name":"Literal","src":"25781:1:0"}],"id":1279,"name":"BinaryOperation","src":"25762:20:0"}],"id":1280,"name":"IndexAccess","src":"25750:33:0"}],"id":1281,"name":"MemberAccess","src":"25750:39:0"}],"id":1282,"name":"Return","src":"25743:46:0"}],"id":1283,"name":"IfStatement","src":"25672:117:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1254,"type":"uint256","value":"_block"},"id":1284,"name":"Identifier","src":"25803:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":569,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1285,"name":"Identifier","src":"25812:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1286,"name":"Literal","src":"25824:1:0"}],"id":1287,"name":"IndexAccess","src":"25812:14:0"}],"id":1288,"name":"MemberAccess","src":"25812:24:0"}],"id":1289,"name":"BinaryOperation","src":"25803:33:0"},{"attributes":{"functionReturnParameters":1258},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1290,"name":"Literal","src":"25845:1:0"}],"id":1291,"name":"Return","src":"25838:8:0"}],"id":1292,"name":"IfStatement","src":"25799:47:0"},{"attributes":{"assignments":[1294]},"children":[{"attributes":{"constant":false,"name":"min","scope":1345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1293,"name":"ElementaryTypeName","src":"25908:4:0"}],"id":1294,"name":"VariableDeclaration","src":"25908:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1295,"name":"Literal","src":"25919:1:0"}],"id":1296,"name":"VariableDeclarationStatement","src":"25908:12:0"},{"attributes":{"assignments":[1298]},"children":[{"attributes":{"constant":false,"name":"max","scope":1345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1297,"name":"ElementaryTypeName","src":"25930:4:0"}],"id":1298,"name":"VariableDeclaration","src":"25930:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1299,"name":"Identifier","src":"25941:11:0"}],"id":1300,"name":"MemberAccess","src":"25941:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1301,"name":"Literal","src":"25960:1:0"}],"id":1302,"name":"BinaryOperation","src":"25941:20:0"}],"id":1303,"name":"VariableDeclarationStatement","src":"25930:31:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1298,"type":"uint256","value":"max"},"id":1304,"name":"Identifier","src":"25978:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1294,"type":"uint256","value":"min"},"id":1305,"name":"Identifier","src":"25984:3:0"}],"id":1306,"name":"BinaryOperation","src":"25978:9:0"},{"children":[{"attributes":{"assignments":[1308]},"children":[{"attributes":{"constant":false,"name":"mid","scope":1345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1307,"name":"ElementaryTypeName","src":"26003:4:0"}],"id":1308,"name":"VariableDeclaration","src":"26003:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1298,"type":"uint256","value":"max"},"id":1309,"name":"Identifier","src":"26015:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1294,"type":"uint256","value":"min"},"id":1310,"name":"Identifier","src":"26021:3:0"}],"id":1311,"name":"BinaryOperation","src":"26015:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1312,"name":"Literal","src":"26027:1:0"}],"id":1313,"name":"BinaryOperation","src":"26015:13:0"}],"id":1314,"name":"TupleExpression","src":"26014:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1315,"name":"Literal","src":"26031:1:0"}],"id":1316,"name":"BinaryOperation","src":"26014:18:0"}],"id":1317,"name":"VariableDeclarationStatement","src":"26003:29:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":569,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1318,"name":"Identifier","src":"26050:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1308,"type":"uint256","value":"mid"},"id":1319,"name":"Identifier","src":"26062:3:0"}],"id":1320,"name":"IndexAccess","src":"26050:16:0"}],"id":1321,"name":"MemberAccess","src":"26050:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1254,"type":"uint256","value":"_block"},"id":1322,"name":"Identifier","src":"26078:6:0"}],"id":1323,"name":"BinaryOperation","src":"26050:34:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1294,"type":"uint256","value":"min"},"id":1324,"name":"Identifier","src":"26104:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1308,"type":"uint256","value":"mid"},"id":1325,"name":"Identifier","src":"26110:3:0"}],"id":1326,"name":"Assignment","src":"26104:9:0"}],"id":1327,"name":"ExpressionStatement","src":"26104:9:0"}],"id":1328,"name":"Block","src":"26086:42:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1298,"type":"uint256","value":"max"},"id":1329,"name":"Identifier","src":"26152:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1308,"type":"uint256","value":"mid"},"id":1330,"name":"Identifier","src":"26158:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1331,"name":"Literal","src":"26162:1:0"}],"id":1332,"name":"BinaryOperation","src":"26158:5:0"}],"id":1333,"name":"Assignment","src":"26152:11:0"}],"id":1334,"name":"ExpressionStatement","src":"26152:11:0"}],"id":1335,"name":"Block","src":"26134:44:0"}],"id":1336,"name":"IfStatement","src":"26046:132:0"}],"id":1337,"name":"Block","src":"25989:199:0"}],"id":1338,"name":"WhileStatement","src":"25971:217:0"},{"attributes":{"functionReturnParameters":1258},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":571,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1252,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1339,"name":"Identifier","src":"26204:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1294,"type":"uint256","value":"min"},"id":1340,"name":"Identifier","src":"26216:3:0"}],"id":1341,"name":"IndexAccess","src":"26204:16:0"}],"id":1342,"name":"MemberAccess","src":"26204:22:0"}],"id":1343,"name":"Return","src":"26197:29:0"}],"id":1344,"name":"Block","src":"25573:660:0"}],"id":1345,"name":"FunctionDefinition","src":"25468:765:0"},{"attributes":{"constant":false,"documentation":"@dev `updateValueAtNow` used to update the `balances` map and the\n  `totalSupplyHistory`\n @param checkpoints The history of data being updated\n @param _value The new number of tokens","implemented":true,"isConstructor":false,"modifiers":[null],"name":"updateValueAtNow","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"checkpoints","scope":1416,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":572,"type":"struct Pinakion.Checkpoint"},"id":1346,"name":"UserDefinedTypeName","src":"26477:10:0"}],"id":1347,"name":"ArrayTypeName","src":"26477:12:0"}],"id":1348,"name":"VariableDeclaration","src":"26477:32:0"},{"attributes":{"constant":false,"name":"_value","scope":1416,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1349,"name":"ElementaryTypeName","src":"26511:4:0"}],"id":1350,"name":"VariableDeclaration","src":"26511:11:0"}],"id":1351,"name":"ParameterList","src":"26476:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":1352,"name":"ParameterList","src":"26539:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1348,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1353,"name":"Identifier","src":"26554:11:0"}],"id":1354,"name":"MemberAccess","src":"26554:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1355,"name":"Literal","src":"26576:1:0"}],"id":1356,"name":"BinaryOperation","src":"26554:23:0"}],"id":1357,"name":"TupleExpression","src":"26553:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":569,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1348,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1358,"name":"Identifier","src":"26591:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1348,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1359,"name":"Identifier","src":"26603:11:0"}],"id":1360,"name":"MemberAccess","src":"26603:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1361,"name":"Literal","src":"26623:1:0"}],"id":1362,"name":"BinaryOperation","src":"26603:21:0"}],"id":1363,"name":"IndexAccess","src":"26591:34:0"}],"id":1364,"name":"MemberAccess","src":"26591:44:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":1365,"name":"Identifier","src":"26638:5:0"}],"id":1366,"name":"MemberAccess","src":"26638:12:0"}],"id":1367,"name":"BinaryOperation","src":"26591:59:0"}],"id":1368,"name":"TupleExpression","src":"26590:61:0"}],"id":1369,"name":"BinaryOperation","src":"26553:98:0"},{"children":[{"attributes":{"assignments":[1371]},"children":[{"attributes":{"constant":false,"name":"newCheckPoint","scope":1416,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":572,"type":"struct Pinakion.Checkpoint"},"id":1370,"name":"UserDefinedTypeName","src":"26670:10:0"}],"id":1371,"name":"VariableDeclaration","src":"26670:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1348,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1372,"name":"Identifier","src":"26705:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1348,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1373,"name":"Identifier","src":"26718:11:0"}],"id":1374,"name":"MemberAccess","src":"26718:18:0"}],"id":1375,"name":"UnaryOperation","src":"26718:20:0"}],"id":1376,"name":"IndexAccess","src":"26705:35:0"}],"id":1377,"name":"VariableDeclarationStatement","src":"26670:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"fromBlock","referencedDeclaration":569,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1371,"type":"struct Pinakion.Checkpoint storage pointer","value":"newCheckPoint"},"id":1378,"name":"Identifier","src":"26757:13:0"}],"id":1380,"name":"MemberAccess","src":"26757:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":1381,"name":"ElementaryTypeNameExpression","src":"26784:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":1382,"name":"Identifier","src":"26792:5:0"}],"id":1383,"name":"MemberAccess","src":"26792:12:0"}],"id":1384,"name":"FunctionCall","src":"26784:21:0"}],"id":1385,"name":"Assignment","src":"26757:48:0"}],"id":1386,"name":"ExpressionStatement","src":"26757:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"value","referencedDeclaration":571,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1371,"type":"struct Pinakion.Checkpoint storage pointer","value":"newCheckPoint"},"id":1387,"name":"Identifier","src":"26822:13:0"}],"id":1389,"name":"MemberAccess","src":"26822:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":1390,"name":"ElementaryTypeNameExpression","src":"26844:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1350,"type":"uint256","value":"_value"},"id":1391,"name":"Identifier","src":"26852:6:0"}],"id":1392,"name":"FunctionCall","src":"26844:15:0"}],"id":1393,"name":"Assignment","src":"26822:37:0"}],"id":1394,"name":"ExpressionStatement","src":"26822:37:0"}],"id":1395,"name":"Block","src":"26653:220:0"},{"children":[{"attributes":{"assignments":[1397]},"children":[{"attributes":{"constant":false,"name":"oldCheckPoint","scope":1416,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":572,"type":"struct Pinakion.Checkpoint"},"id":1396,"name":"UserDefinedTypeName","src":"26896:10:0"}],"id":1397,"name":"VariableDeclaration","src":"26896:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1348,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1398,"name":"Identifier","src":"26931:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1348,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1399,"name":"Identifier","src":"26943:11:0"}],"id":1400,"name":"MemberAccess","src":"26943:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1401,"name":"Literal","src":"26962:1:0"}],"id":1402,"name":"BinaryOperation","src":"26943:20:0"}],"id":1403,"name":"IndexAccess","src":"26931:33:0"}],"id":1404,"name":"VariableDeclarationStatement","src":"26896:68:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"value","referencedDeclaration":571,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1397,"type":"struct Pinakion.Checkpoint storage pointer","value":"oldCheckPoint"},"id":1405,"name":"Identifier","src":"26981:13:0"}],"id":1407,"name":"MemberAccess","src":"26981:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":1408,"name":"ElementaryTypeNameExpression","src":"27003:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1350,"type":"uint256","value":"_value"},"id":1409,"name":"Identifier","src":"27011:6:0"}],"id":1410,"name":"FunctionCall","src":"27003:15:0"}],"id":1411,"name":"Assignment","src":"26981:37:0"}],"id":1412,"name":"ExpressionStatement","src":"26981:37:0"}],"id":1413,"name":"Block","src":"26879:153:0"}],"id":1414,"name":"IfStatement","src":"26549:483:0"}],"id":1415,"name":"Block","src":"26539:499:0"}],"id":1416,"name":"FunctionDefinition","src":"26451:587:0"},{"attributes":{"constant":true,"documentation":"@dev Internal function to determine if an address is a contract\n @param _addr The address being queried\n @return True if `_addr` is a contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isContract","payable":false,"scope":1557,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_addr","scope":1438,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1417,"name":"ElementaryTypeName","src":"27229:7:0"}],"id":1418,"name":"VariableDeclaration","src":"27229:13:0"}],"id":1419,"name":"ParameterList","src":"27228:15:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1438,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1420,"name":"ElementaryTypeName","src":"27270:4:0"}],"id":1421,"name":"VariableDeclaration","src":"27270:4:0"}],"id":1422,"name":"ParameterList","src":"27269:6:0"},{"children":[{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"size","scope":1438,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1423,"name":"ElementaryTypeName","src":"27286:4:0"}],"id":1424,"name":"VariableDeclaration","src":"27286:9:0"}],"id":1425,"name":"VariableDeclarationStatement","src":"27286:9:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1418,"type":"address","value":"_addr"},"id":1426,"name":"Identifier","src":"27309:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1427,"name":"Literal","src":"27318:1:0"}],"id":1428,"name":"BinaryOperation","src":"27309:10:0"},{"attributes":{"functionReturnParameters":1422},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1429,"name":"Literal","src":"27328:5:0"}],"id":1430,"name":"Return","src":"27321:12:0"}],"id":1431,"name":"IfStatement","src":"27305:28:0"},{"attributes":{"externalReferences":[{"_addr":{"declaration":1418,"isOffset":false,"isSlot":false,"src":"27386:5:0","valueSize":1}},{"size":{"declaration":1424,"isOffset":false,"isSlot":false,"src":"27366:4:0","valueSize":1}}],"operations":"{\n    size := extcodesize(_addr)\n}"},"children":[],"id":1432,"name":"InlineAssembly","src":"27343:74:0"},{"attributes":{"functionReturnParameters":1422},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1424,"type":"uint256","value":"size"},"id":1433,"name":"Identifier","src":"27418:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1434,"name":"Literal","src":"27423:1:0"}],"id":1435,"name":"BinaryOperation","src":"27418:6:0"}],"id":1436,"name":"Return","src":"27411:13:0"}],"id":1437,"name":"Block","src":"27276:155:0"}],"id":1438,"name":"FunctionDefinition","src":"27209:222:0"},{"attributes":{"constant":true,"documentation":"@dev Helper function to return a min betwen the two uints","implemented":true,"isConstructor":false,"modifiers":[null],"name":"min","payable":false,"scope":1557,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":1455,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1439,"name":"ElementaryTypeName","src":"27516:4:0"}],"id":1440,"name":"VariableDeclaration","src":"27516:6:0"},{"attributes":{"constant":false,"name":"b","scope":1455,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1441,"name":"ElementaryTypeName","src":"27524:4:0"}],"id":1442,"name":"VariableDeclaration","src":"27524:6:0"}],"id":1443,"name":"ParameterList","src":"27515:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1455,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1444,"name":"ElementaryTypeName","src":"27555:4:0"}],"id":1445,"name":"VariableDeclaration","src":"27555:4:0"}],"id":1446,"name":"ParameterList","src":"27554:6:0"},{"children":[{"attributes":{"functionReturnParameters":1446},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1440,"type":"uint256","value":"a"},"id":1447,"name":"Identifier","src":"27578:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1442,"type":"uint256","value":"b"},"id":1448,"name":"Identifier","src":"27582:1:0"}],"id":1449,"name":"BinaryOperation","src":"27578:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1440,"type":"uint256","value":"a"},"id":1450,"name":"Identifier","src":"27586:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1442,"type":"uint256","value":"b"},"id":1451,"name":"Identifier","src":"27590:1:0"}],"id":1452,"name":"Conditional","src":"27578:13:0"}],"id":1453,"name":"Return","src":"27571:20:0"}],"id":1454,"name":"Block","src":"27561:37:0"}],"id":1455,"name":"FunctionDefinition","src":"27503:95:0"},{"attributes":{"constant":false,"documentation":"@notice The fallback function: If the contract's controller has not been\n  set to 0, then the `proxyPayment` method is called which relays the\n  ether and creates tokens as described in the token controller contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"","payable":true,"scope":1557,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1456,"name":"ParameterList","src":"27851:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":1457,"name":"ParameterList","src":"27869:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1458,"name":"Identifier","src":"27879:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1438,"type":"function (address) view returns (bool)","value":"isContract"},"id":1459,"name":"Identifier","src":"27887:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":1460,"name":"Identifier","src":"27898:10:0"}],"id":1461,"name":"FunctionCall","src":"27887:22:0"}],"id":1462,"name":"FunctionCall","src":"27879:31:0"}],"id":1463,"name":"ExpressionStatement","src":"27879:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1464,"name":"Identifier","src":"27920:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function (address) payable external returns (bool)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"function (uint256) returns (function (address) payable external returns (bool))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"proxyPayment","referencedDeclaration":498,"type":"function (address) payable external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":521,"type":"type(contract TokenController)","value":"TokenController"},"id":1465,"name":"Identifier","src":"27928:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":1466,"name":"Identifier","src":"27944:10:0"}],"id":1467,"name":"FunctionCall","src":"27928:27:0"}],"id":1468,"name":"MemberAccess","src":"27928:40:0"}],"id":1469,"name":"MemberAccess","src":"27928:46:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1470,"name":"Identifier","src":"27975:3:0"}],"id":1471,"name":"MemberAccess","src":"27975:9:0"}],"id":1472,"name":"FunctionCall","src":"27928:57:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1473,"name":"Identifier","src":"27986:3:0"}],"id":1474,"name":"MemberAccess","src":"27986:10:0"}],"id":1475,"name":"FunctionCall","src":"27928:69:0"}],"id":1476,"name":"FunctionCall","src":"27920:78:0"}],"id":1477,"name":"ExpressionStatement","src":"27920:78:0"}],"id":1478,"name":"Block","src":"27869:136:0"}],"id":1479,"name":"FunctionDefinition","src":"27842:163:0"},{"attributes":{"constant":false,"documentation":"///////\n @notice This method can be used by the controller to extract mistakenly\n  sent tokens to this contract.\n @param _token The address of the token contract that you want to recover\n  set to 0 in case you want to extract ether.","implemented":true,"isConstructor":false,"name":"claimTokens","payable":false,"scope":1557,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_token","scope":1526,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1480,"name":"ElementaryTypeName","src":"28326:7:0"}],"id":1481,"name":"VariableDeclaration","src":"28326:14:0"}],"id":1482,"name":"ParameterList","src":"28325:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":1485,"name":"ParameterList","src":"28364:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":532,"type":"modifier ()","value":"onlyController"},"id":1483,"name":"Identifier","src":"28349:14:0"}],"id":1484,"name":"ModifierInvocation","src":"28349:14:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1481,"type":"address","value":"_token"},"id":1486,"name":"Identifier","src":"28378:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1487,"name":"Literal","src":"28388:3:0"}],"id":1488,"name":"BinaryOperation","src":"28378:13:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":1489,"name":"Identifier","src":"28407:10:0"}],"id":1491,"name":"MemberAccess","src":"28407:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4568,"type":"contract Pinakion","value":"this"},"id":1492,"name":"Identifier","src":"28427:4:0"}],"id":1493,"name":"MemberAccess","src":"28427:12:0"}],"id":1494,"name":"FunctionCall","src":"28407:33:0"}],"id":1495,"name":"ExpressionStatement","src":"28407:33:0"},{"attributes":{"expression":null,"functionReturnParameters":1485},"id":1496,"name":"Return","src":"28454:7:0"}],"id":1497,"name":"Block","src":"28393:78:0"}],"id":1498,"name":"IfStatement","src":"28374:97:0"},{"attributes":{"assignments":[1500]},"children":[{"attributes":{"constant":false,"name":"token","scope":1526,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":1499,"name":"UserDefinedTypeName","src":"28481:8:0"}],"id":1500,"name":"VariableDeclaration","src":"28481:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1557,"type":"type(contract Pinakion)","value":"Pinakion"},"id":1501,"name":"Identifier","src":"28498:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1481,"type":"address","value":"_token"},"id":1502,"name":"Identifier","src":"28507:6:0"}],"id":1503,"name":"FunctionCall","src":"28498:16:0"}],"id":1504,"name":"VariableDeclarationStatement","src":"28481:33:0"},{"attributes":{"assignments":[1506]},"children":[{"attributes":{"constant":false,"name":"balance","scope":1526,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1505,"name":"ElementaryTypeName","src":"28524:4:0"}],"id":1506,"name":"VariableDeclaration","src":"28524:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1557","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOf","referencedDeclaration":849,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1500,"type":"contract Pinakion","value":"token"},"id":1507,"name":"Identifier","src":"28539:5:0"}],"id":1508,"name":"MemberAccess","src":"28539:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4568,"type":"contract Pinakion","value":"this"},"id":1509,"name":"Identifier","src":"28555:4:0"}],"id":1510,"name":"FunctionCall","src":"28539:21:0"}],"id":1511,"name":"VariableDeclarationStatement","src":"28524:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":674,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1500,"type":"contract Pinakion","value":"token"},"id":1512,"name":"Identifier","src":"28570:5:0"}],"id":1514,"name":"MemberAccess","src":"28570:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":1515,"name":"Identifier","src":"28585:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1506,"type":"uint256","value":"balance"},"id":1516,"name":"Identifier","src":"28597:7:0"}],"id":1517,"name":"FunctionCall","src":"28570:35:0"}],"id":1518,"name":"ExpressionStatement","src":"28570:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1534,"type":"function (address,address,uint256)","value":"ClaimedTokens"},"id":1519,"name":"Identifier","src":"28615:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1481,"type":"address","value":"_token"},"id":1520,"name":"Identifier","src":"28629:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":534,"type":"address","value":"controller"},"id":1521,"name":"Identifier","src":"28637:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1506,"type":"uint256","value":"balance"},"id":1522,"name":"Identifier","src":"28649:7:0"}],"id":1523,"name":"FunctionCall","src":"28615:42:0"}],"id":1524,"name":"ExpressionStatement","src":"28615:42:0"}],"id":1525,"name":"Block","src":"28364:300:0"}],"id":1526,"name":"FunctionDefinition","src":"28305:359:0"},{"attributes":{"anonymous":false,"documentation":"/////////////","name":"ClaimedTokens"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_token","scope":1534,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1527,"name":"ElementaryTypeName","src":"28734:7:0"}],"id":1528,"name":"VariableDeclaration","src":"28734:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"_controller","scope":1534,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1529,"name":"ElementaryTypeName","src":"28758:7:0"}],"id":1530,"name":"VariableDeclaration","src":"28758:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1534,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1531,"name":"ElementaryTypeName","src":"28787:4:0"}],"id":1532,"name":"VariableDeclaration","src":"28787:12:0"}],"id":1533,"name":"ParameterList","src":"28733:67:0"}],"id":1534,"name":"EventDefinition","src":"28714:87:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_from","scope":1542,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1535,"name":"ElementaryTypeName","src":"28821:7:0"}],"id":1536,"name":"VariableDeclaration","src":"28821:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"_to","scope":1542,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1537,"name":"ElementaryTypeName","src":"28844:7:0"}],"id":1538,"name":"VariableDeclaration","src":"28844:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1542,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1539,"name":"ElementaryTypeName","src":"28865:7:0"}],"id":1540,"name":"VariableDeclaration","src":"28865:15:0"}],"id":1541,"name":"ParameterList","src":"28820:61:0"}],"id":1542,"name":"EventDefinition","src":"28806:76:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"NewCloneToken"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_cloneToken","scope":1548,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1543,"name":"ElementaryTypeName","src":"28907:7:0"}],"id":1544,"name":"VariableDeclaration","src":"28907:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"_snapshotBlock","scope":1548,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1545,"name":"ElementaryTypeName","src":"28936:4:0"}],"id":1546,"name":"VariableDeclaration","src":"28936:19:0"}],"id":1547,"name":"ParameterList","src":"28906:50:0"}],"id":1548,"name":"EventDefinition","src":"28887:70:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_owner","scope":1556,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1549,"name":"ElementaryTypeName","src":"28986:7:0"}],"id":1550,"name":"VariableDeclaration","src":"28986:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"_spender","scope":1556,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1551,"name":"ElementaryTypeName","src":"29018:7:0"}],"id":1552,"name":"VariableDeclaration","src":"29018:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1556,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1553,"name":"ElementaryTypeName","src":"29052:7:0"}],"id":1554,"name":"VariableDeclaration","src":"29052:15:0"}],"id":1555,"name":"ParameterList","src":"28976:101:0"}],"id":1556,"name":"EventDefinition","src":"28962:116:0"}],"id":1557,"name":"ContractDefinition","src":"9671:19410:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[1557],"contractKind":"contract","documentation":"/////////////\n @dev This contract is used to generate clone contracts from a contract.\n  In solidity this is the way to create a contract from a contract of the\n  same class","fullyImplemented":true,"linearizedBaseContracts":[1598],"name":"MiniMeTokenFactory","scope":4533},"children":[{"attributes":{"constant":false,"documentation":"@notice Update the DApp by creating a new token with new functionalities\n  the msg.sender becomes the controller of this clone token\n @param _parentToken Address of the token being cloned\n @param _snapshotBlock Block of the parent token that will\n  determine the initial distribution of the clone token\n @param _tokenName Name of the new token\n @param _decimalUnits Number of decimals of the new token\n @param _tokenSymbol Token Symbol for the new token\n @param _transfersEnabled If true, tokens will be able to be transferred\n @return The address of the new token contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createCloneToken","payable":false,"scope":1598,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_parentToken","scope":1597,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1558,"name":"ElementaryTypeName","src":"30025:7:0"}],"id":1559,"name":"VariableDeclaration","src":"30025:20:0"},{"attributes":{"constant":false,"name":"_snapshotBlock","scope":1597,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1560,"name":"ElementaryTypeName","src":"30055:4:0"}],"id":1561,"name":"VariableDeclaration","src":"30055:19:0"},{"attributes":{"constant":false,"name":"_tokenName","scope":1597,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1562,"name":"ElementaryTypeName","src":"30084:6:0"}],"id":1563,"name":"VariableDeclaration","src":"30084:17:0"},{"attributes":{"constant":false,"name":"_decimalUnits","scope":1597,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1564,"name":"ElementaryTypeName","src":"30111:5:0"}],"id":1565,"name":"VariableDeclaration","src":"30111:19:0"},{"attributes":{"constant":false,"name":"_tokenSymbol","scope":1597,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1566,"name":"ElementaryTypeName","src":"30140:6:0"}],"id":1567,"name":"VariableDeclaration","src":"30140:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":1597,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1568,"name":"ElementaryTypeName","src":"30169:4:0"}],"id":1569,"name":"VariableDeclaration","src":"30169:22:0"}],"id":1570,"name":"ParameterList","src":"30015:182:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1597,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":1571,"name":"UserDefinedTypeName","src":"30214:8:0"}],"id":1572,"name":"VariableDeclaration","src":"30214:8:0"}],"id":1573,"name":"ParameterList","src":"30213:10:0"},{"children":[{"attributes":{"assignments":[1575]},"children":[{"attributes":{"constant":false,"name":"newToken","scope":1597,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":1574,"name":"UserDefinedTypeName","src":"30234:8:0"}],"id":1575,"name":"VariableDeclaration","src":"30234:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_MiniMeTokenFactory_$1598","typeString":"contract MiniMeTokenFactory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"function (address,address,uint256,string memory,uint8,string memory,bool) returns (contract Pinakion)"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":1576,"name":"UserDefinedTypeName","src":"30258:8:0"}],"id":1577,"name":"NewExpression","src":"30254:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4570,"type":"contract MiniMeTokenFactory","value":"this"},"id":1578,"name":"Identifier","src":"30280:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1559,"type":"address","value":"_parentToken"},"id":1579,"name":"Identifier","src":"30298:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1561,"type":"uint256","value":"_snapshotBlock"},"id":1580,"name":"Identifier","src":"30324:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1563,"type":"string memory","value":"_tokenName"},"id":1581,"name":"Identifier","src":"30352:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1565,"type":"uint8","value":"_decimalUnits"},"id":1582,"name":"Identifier","src":"30376:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1567,"type":"string memory","value":"_tokenSymbol"},"id":1583,"name":"Identifier","src":"30403:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1569,"type":"bool","value":"_transfersEnabled"},"id":1584,"name":"Identifier","src":"30429:17:0"}],"id":1585,"name":"FunctionCall","src":"30254:206:0"}],"id":1586,"name":"VariableDeclarationStatement","src":"30234:226:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"changeController","referencedDeclaration":555,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1575,"type":"contract Pinakion","value":"newToken"},"id":1587,"name":"Identifier","src":"30471:8:0"}],"id":1589,"name":"MemberAccess","src":"30471:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1590,"name":"Identifier","src":"30497:3:0"}],"id":1591,"name":"MemberAccess","src":"30497:10:0"}],"id":1592,"name":"FunctionCall","src":"30471:37:0"}],"id":1593,"name":"ExpressionStatement","src":"30471:37:0"},{"attributes":{"functionReturnParameters":1573},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1575,"type":"contract Pinakion","value":"newToken"},"id":1594,"name":"Identifier","src":"30525:8:0"}],"id":1595,"name":"Return","src":"30518:15:0"}],"id":1596,"name":"Block","src":"30224:316:0"}],"id":1597,"name":"FunctionDefinition","src":"29990:550:0"}],"id":1598,"name":"ContractDefinition","src":"29310:1232:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[1649],"name":"RNG","scope":4533},"children":[{"attributes":{"body":null,"constant":false,"documentation":"@dev Contribute to the reward of a random number.\n @param _block Block the random number is linked to.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"contribute","payable":true,"scope":1649,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1603,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1599,"name":"ElementaryTypeName","src":"30709:4:0"}],"id":1600,"name":"VariableDeclaration","src":"30709:11:0"}],"id":1601,"name":"ParameterList","src":"30708:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1602,"name":"ParameterList","src":"30736:0:0"}],"id":1603,"name":"FunctionDefinition","src":"30689:48:0"},{"attributes":{"constant":false,"documentation":"@dev Request a random number.\n @param _block Block linked to the request.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"requestRN","payable":true,"scope":1649,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1613,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1604,"name":"ElementaryTypeName","src":"30859:4:0"}],"id":1605,"name":"VariableDeclaration","src":"30859:11:0"}],"id":1606,"name":"ParameterList","src":"30858:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1607,"name":"ParameterList","src":"30887:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"function (uint256)","value":"contribute"},"id":1608,"name":"Identifier","src":"30897:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"_block"},"id":1609,"name":"Identifier","src":"30908:6:0"}],"id":1610,"name":"FunctionCall","src":"30897:18:0"}],"id":1611,"name":"ExpressionStatement","src":"30897:18:0"}],"id":1612,"name":"Block","src":"30887:35:0"}],"id":1613,"name":"FunctionDefinition","src":"30840:82:0"},{"attributes":{"body":null,"constant":false,"documentation":"@dev Get the random number.\n @param _block Block the random number is linked to.\n @return RN Random Number. If the number is not ready or has not been required 0 instead.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"getRN","payable":false,"scope":1649,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1620,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1614,"name":"ElementaryTypeName","src":"31144:4:0"}],"id":1615,"name":"VariableDeclaration","src":"31144:11:0"}],"id":1616,"name":"ParameterList","src":"31143:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1620,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1617,"name":"ElementaryTypeName","src":"31173:4:0"}],"id":1618,"name":"VariableDeclaration","src":"31173:7:0"}],"id":1619,"name":"ParameterList","src":"31172:9:0"}],"id":1620,"name":"FunctionDefinition","src":"31129:53:0"},{"attributes":{"constant":false,"documentation":"@dev Get a uncorrelated random number. Act like getRN but give a different number for each sender.\n This is to prevent users from getting correlated numbers.\n @param _block Block the random number is linked to.\n @return RN Random Number. If the number is not ready or has not been required 0 instead.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUncorrelatedRN","payable":false,"scope":1649,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1648,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1621,"name":"ElementaryTypeName","src":"31553:4:0"}],"id":1622,"name":"VariableDeclaration","src":"31553:11:0"}],"id":1623,"name":"ParameterList","src":"31552:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1648,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1624,"name":"ElementaryTypeName","src":"31582:4:0"}],"id":1625,"name":"VariableDeclaration","src":"31582:7:0"}],"id":1626,"name":"ParameterList","src":"31581:9:0"},{"children":[{"attributes":{"assignments":[1628]},"children":[{"attributes":{"constant":false,"name":"baseRN","scope":1648,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1627,"name":"ElementaryTypeName","src":"31601:4:0"}],"id":1628,"name":"VariableDeclaration","src":"31601:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1620,"type":"function (uint256) returns (uint256)","value":"getRN"},"id":1629,"name":"Identifier","src":"31613:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1622,"type":"uint256","value":"_block"},"id":1630,"name":"Identifier","src":"31619:6:0"}],"id":1631,"name":"FunctionCall","src":"31613:13:0"}],"id":1632,"name":"VariableDeclarationStatement","src":"31601:25:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1628,"type":"uint256","value":"baseRN"},"id":1633,"name":"Identifier","src":"31640:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1634,"name":"Literal","src":"31648:1:0"}],"id":1635,"name":"BinaryOperation","src":"31640:9:0"},{"attributes":{"functionReturnParameters":1626},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1636,"name":"Literal","src":"31670:1:0"}],"id":1637,"name":"Return","src":"31663:8:0"},{"attributes":{"functionReturnParameters":1626},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1638,"name":"ElementaryTypeNameExpression","src":"31705:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4541,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":1639,"name":"Identifier","src":"31710:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1640,"name":"Identifier","src":"31720:3:0"}],"id":1641,"name":"MemberAccess","src":"31720:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1628,"type":"uint256","value":"baseRN"},"id":1642,"name":"Identifier","src":"31731:6:0"}],"id":1643,"name":"FunctionCall","src":"31710:28:0"}],"id":1644,"name":"FunctionCall","src":"31705:34:0"}],"id":1645,"name":"Return","src":"31698:41:0"}],"id":1646,"name":"IfStatement","src":"31636:103:0"}],"id":1647,"name":"Block","src":"31591:155:0"}],"id":1648,"name":"FunctionDefinition","src":"31526:220:0"}],"id":1649,"name":"ContractDefinition","src":"30544:1206:0"},{"attributes":{"contractDependencies":[1649],"contractKind":"contract","documentation":"Simple Random Number Generator returning the blockhash.\n Allows saving the random number for use in the future.\n It allows the contract to still access the blockhash even after 256 blocks.\n The first party to call the save function gets the reward.","fullyImplemented":true,"linearizedBaseContracts":[1751,1649],"name":"BlockHashRNG","scope":4533},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1649,"type":"contract RNG"},"id":1650,"name":"UserDefinedTypeName","src":"32043:3:0"}],"id":1651,"name":"InheritanceSpecifier","src":"32043:3:0"},{"attributes":{"constant":false,"name":"randomNumber","scope":1751,"stateVariable":true,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1652,"name":"ElementaryTypeName","src":"32063:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1653,"name":"ElementaryTypeName","src":"32071:4:0"}],"id":1654,"name":"Mapping","src":"32054:22:0"}],"id":1655,"name":"VariableDeclaration","src":"32054:42:0"},{"attributes":{"constant":false,"name":"reward","scope":1751,"stateVariable":true,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1656,"name":"ElementaryTypeName","src":"32184:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1657,"name":"ElementaryTypeName","src":"32192:4:0"}],"id":1658,"name":"Mapping","src":"32175:22:0"}],"id":1659,"name":"VariableDeclaration","src":"32175:36:0"},{"attributes":{"constant":false,"documentation":"@dev Contribute to the reward of a random number.\n @param _block Block the random number is linked to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"contribute","payable":true,"scope":1751,"stateMutability":"payable","superFunction":1603,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1672,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1660,"name":"ElementaryTypeName","src":"32424:4:0"}],"id":1661,"name":"VariableDeclaration","src":"32424:11:0"}],"id":1662,"name":"ParameterList","src":"32423:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1663,"name":"ParameterList","src":"32452:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1659,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1664,"name":"Identifier","src":"32454:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"uint256","value":"_block"},"id":1665,"name":"Identifier","src":"32461:6:0"}],"id":1666,"name":"IndexAccess","src":"32454:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1667,"name":"Identifier","src":"32470:3:0"}],"id":1668,"name":"MemberAccess","src":"32470:9:0"}],"id":1669,"name":"Assignment","src":"32454:25:0"}],"id":1670,"name":"ExpressionStatement","src":"32454:25:0"}],"id":1671,"name":"Block","src":"32452:30:0"}],"id":1672,"name":"FunctionDefinition","src":"32404:78:0"},{"attributes":{"constant":false,"documentation":"@dev Return the random number. If it has not been saved and is still computable compute it.\n @param _block Block the random number is linked to.\n @return RN Random Number. If the number is not ready or has not been requested 0 instead.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getRN","payable":false,"scope":1751,"stateMutability":"nonpayable","superFunction":1620,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1701,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1673,"name":"ElementaryTypeName","src":"32770:4:0"}],"id":1674,"name":"VariableDeclaration","src":"32770:11:0"}],"id":1675,"name":"ParameterList","src":"32769:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1701,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1676,"name":"ElementaryTypeName","src":"32799:4:0"}],"id":1677,"name":"VariableDeclaration","src":"32799:7:0"}],"id":1678,"name":"ParameterList","src":"32798:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1677,"type":"uint256","value":"RN"},"id":1679,"name":"Identifier","src":"32818:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1680,"name":"Identifier","src":"32821:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1674,"type":"uint256","value":"_block"},"id":1681,"name":"Identifier","src":"32834:6:0"}],"id":1682,"name":"IndexAccess","src":"32821:20:0"}],"id":1683,"name":"Assignment","src":"32818:23:0"}],"id":1684,"name":"ExpressionStatement","src":"32818:23:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1677,"type":"uint256","value":"RN"},"id":1685,"name":"Identifier","src":"32855:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1686,"name":"Literal","src":"32859:1:0"}],"id":1687,"name":"BinaryOperation","src":"32855:5:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1750,"type":"function (uint256)","value":"saveRN"},"id":1688,"name":"Identifier","src":"32875:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1674,"type":"uint256","value":"_block"},"id":1689,"name":"Identifier","src":"32882:6:0"}],"id":1690,"name":"FunctionCall","src":"32875:14:0"}],"id":1691,"name":"ExpressionStatement","src":"32875:14:0"},{"attributes":{"functionReturnParameters":1678},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1692,"name":"Identifier","src":"32910:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1674,"type":"uint256","value":"_block"},"id":1693,"name":"Identifier","src":"32923:6:0"}],"id":1694,"name":"IndexAccess","src":"32910:20:0"}],"id":1695,"name":"Return","src":"32903:27:0"}],"id":1696,"name":"Block","src":"32861:80:0"},{"attributes":{"functionReturnParameters":1678},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1677,"type":"uint256","value":"RN"},"id":1697,"name":"Identifier","src":"32974:2:0"}],"id":1698,"name":"Return","src":"32967:9:0"}],"id":1699,"name":"IfStatement","src":"32851:125:0"}],"id":1700,"name":"Block","src":"32808:175:0"}],"id":1701,"name":"FunctionDefinition","src":"32755:228:0"},{"attributes":{"constant":false,"documentation":"@dev Save the random number for this blockhash and give the reward to the caller.\n @param _block Block the random number is linked to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"saveRN","payable":false,"scope":1751,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1750,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1702,"name":"ElementaryTypeName","src":"33163:4:0"}],"id":1703,"name":"VariableDeclaration","src":"33163:11:0"}],"id":1704,"name":"ParameterList","src":"33162:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1705,"name":"ParameterList","src":"33183:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4538,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1706,"name":"Identifier","src":"33197:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1703,"type":"uint256","value":"_block"},"id":1707,"name":"Identifier","src":"33207:6:0"}],"id":1708,"name":"FunctionCall","src":"33197:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1709,"name":"Literal","src":"33218:3:0"}],"id":1710,"name":"BinaryOperation","src":"33197:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1711,"name":"Identifier","src":"33235:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1703,"type":"uint256","value":"_block"},"id":1712,"name":"Identifier","src":"33248:6:0"}],"id":1713,"name":"IndexAccess","src":"33235:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1714,"name":"ElementaryTypeNameExpression","src":"33258:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4538,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1715,"name":"Identifier","src":"33263:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1703,"type":"uint256","value":"_block"},"id":1716,"name":"Identifier","src":"33273:6:0"}],"id":1717,"name":"FunctionCall","src":"33263:17:0"}],"id":1718,"name":"FunctionCall","src":"33258:23:0"}],"id":1719,"name":"Assignment","src":"33235:46:0"}],"id":1720,"name":"ExpressionStatement","src":"33235:46:0"}],"id":1721,"name":"IfStatement","src":"33193:88:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1722,"name":"Identifier","src":"33295:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1703,"type":"uint256","value":"_block"},"id":1723,"name":"Identifier","src":"33308:6:0"}],"id":1724,"name":"IndexAccess","src":"33295:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1725,"name":"Literal","src":"33319:1:0"}],"id":1726,"name":"BinaryOperation","src":"33295:25:0"},{"children":[{"attributes":{"assignments":[1728]},"children":[{"attributes":{"constant":false,"name":"rewardToSend","scope":1750,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1727,"name":"ElementaryTypeName","src":"33361:4:0"}],"id":1728,"name":"VariableDeclaration","src":"33361:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1659,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1729,"name":"Identifier","src":"33381:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1703,"type":"uint256","value":"_block"},"id":1730,"name":"Identifier","src":"33388:6:0"}],"id":1731,"name":"IndexAccess","src":"33381:14:0"}],"id":1732,"name":"VariableDeclarationStatement","src":"33361:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1659,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1733,"name":"Identifier","src":"33409:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1703,"type":"uint256","value":"_block"},"id":1734,"name":"Identifier","src":"33416:6:0"}],"id":1735,"name":"IndexAccess","src":"33409:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1736,"name":"Literal","src":"33426:1:0"}],"id":1737,"name":"Assignment","src":"33409:18:0"}],"id":1738,"name":"ExpressionStatement","src":"33409:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"send","referencedDeclaration":null,"type":"function (uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1739,"name":"Identifier","src":"33441:3:0"}],"id":1742,"name":"MemberAccess","src":"33441:10:0"}],"id":1743,"name":"MemberAccess","src":"33441:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1728,"type":"uint256","value":"rewardToSend"},"id":1744,"name":"Identifier","src":"33457:12:0"}],"id":1745,"name":"FunctionCall","src":"33441:29:0"}],"id":1746,"name":"ExpressionStatement","src":"33441:29:0"}],"id":1747,"name":"Block","src":"33322:269:0"}],"id":1748,"name":"IfStatement","src":"33291:300:0"}],"id":1749,"name":"Block","src":"33183:414:0"}],"id":1750,"name":"FunctionDefinition","src":"33147:450:0"}],"id":1751,"name":"ContractDefinition","src":"32018:1582:0"},{"attributes":{"contractDependencies":[1649,1751],"contractKind":"contract","documentation":"Random Number Generator returning the blockhash with a backup behaviour.\n Allows saving the random number for use in the future. \n It allows the contract to still access the blockhash even after 256 blocks.\n The first party to call the save function gets the reward.\n If no one calls the contract within 256 blocks, the contract fallback in returning the blockhash of the previous block.","fullyImplemented":true,"linearizedBaseContracts":[1828,1751,1649],"name":"BlockHashRNGFallback","scope":4533},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BlockHashRNG","referencedDeclaration":1751,"type":"contract BlockHashRNG"},"id":1752,"name":"UserDefinedTypeName","src":"34044:12:0"}],"id":1753,"name":"InheritanceSpecifier","src":"34044:12:0"},{"attributes":{"constant":false,"documentation":"@dev Save the random number for this blockhash and give the reward to the caller.\n @param _block Block the random number is linked to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"saveRN","payable":false,"scope":1828,"stateMutability":"nonpayable","superFunction":1750,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1827,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1754,"name":"ElementaryTypeName","src":"34242:4:0"}],"id":1755,"name":"VariableDeclaration","src":"34242:11:0"}],"id":1756,"name":"ParameterList","src":"34241:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1757,"name":"ParameterList","src":"34262:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1758,"name":"Identifier","src":"34276:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":1759,"name":"Identifier","src":"34283:5:0"}],"id":1760,"name":"MemberAccess","src":"34283:12:0"}],"id":1761,"name":"BinaryOperation","src":"34276:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1762,"name":"Identifier","src":"34299:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1763,"name":"Identifier","src":"34312:6:0"}],"id":1764,"name":"IndexAccess","src":"34299:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1765,"name":"Literal","src":"34321:1:0"}],"id":1766,"name":"BinaryOperation","src":"34299:23:0"}],"id":1767,"name":"BinaryOperation","src":"34276:46:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4538,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1768,"name":"Identifier","src":"34396:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1769,"name":"Identifier","src":"34406:6:0"}],"id":1770,"name":"FunctionCall","src":"34396:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1771,"name":"Literal","src":"34415:3:0"}],"id":1772,"name":"BinaryOperation","src":"34396:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1773,"name":"Identifier","src":"34452:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1774,"name":"Identifier","src":"34465:6:0"}],"id":1775,"name":"IndexAccess","src":"34452:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1776,"name":"ElementaryTypeNameExpression","src":"34473:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4538,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1777,"name":"Identifier","src":"34478:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1778,"name":"Identifier","src":"34488:6:0"}],"id":1779,"name":"FunctionCall","src":"34478:17:0"}],"id":1780,"name":"FunctionCall","src":"34473:23:0"}],"id":1781,"name":"Assignment","src":"34452:44:0"}],"id":1782,"name":"ExpressionStatement","src":"34452:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1783,"name":"Identifier","src":"34613:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1784,"name":"Identifier","src":"34626:6:0"}],"id":1785,"name":"IndexAccess","src":"34613:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1786,"name":"ElementaryTypeNameExpression","src":"34634:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4538,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1787,"name":"Identifier","src":"34639:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":1788,"name":"Identifier","src":"34649:5:0"}],"id":1789,"name":"MemberAccess","src":"34649:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1790,"name":"Literal","src":"34662:1:0"}],"id":1791,"name":"BinaryOperation","src":"34649:14:0"}],"id":1792,"name":"FunctionCall","src":"34639:25:0"}],"id":1793,"name":"FunctionCall","src":"34634:31:0"}],"id":1794,"name":"Assignment","src":"34613:52:0"}],"id":1795,"name":"ExpressionStatement","src":"34613:52:0"}],"id":1796,"name":"IfStatement","src":"34392:273:0"}],"id":1797,"name":"Block","src":"34324:352:0"}],"id":1798,"name":"IfStatement","src":"34272:404:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1655,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1799,"name":"Identifier","src":"34689:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1800,"name":"Identifier","src":"34702:6:0"}],"id":1801,"name":"IndexAccess","src":"34689:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1802,"name":"Literal","src":"34713:1:0"}],"id":1803,"name":"BinaryOperation","src":"34689:25:0"},{"children":[{"attributes":{"assignments":[1805]},"children":[{"attributes":{"constant":false,"name":"rewardToSend","scope":1827,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1804,"name":"ElementaryTypeName","src":"34762:4:0"}],"id":1805,"name":"VariableDeclaration","src":"34762:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1659,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1806,"name":"Identifier","src":"34780:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1807,"name":"Identifier","src":"34787:6:0"}],"id":1808,"name":"IndexAccess","src":"34780:14:0"}],"id":1809,"name":"VariableDeclarationStatement","src":"34762:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1659,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1810,"name":"Identifier","src":"34808:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1755,"type":"uint256","value":"_block"},"id":1811,"name":"Identifier","src":"34815:6:0"}],"id":1812,"name":"IndexAccess","src":"34808:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1813,"name":"Literal","src":"34823:1:0"}],"id":1814,"name":"Assignment","src":"34808:16:0"}],"id":1815,"name":"ExpressionStatement","src":"34808:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"send","referencedDeclaration":null,"type":"function (uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1816,"name":"Identifier","src":"34838:3:0"}],"id":1819,"name":"MemberAccess","src":"34838:10:0"}],"id":1820,"name":"MemberAccess","src":"34838:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1805,"type":"uint256","value":"rewardToSend"},"id":1821,"name":"Identifier","src":"34854:12:0"}],"id":1822,"name":"FunctionCall","src":"34838:29:0"}],"id":1823,"name":"ExpressionStatement","src":"34838:29:0"}],"id":1824,"name":"Block","src":"34716:276:0"}],"id":1825,"name":"IfStatement","src":"34685:307:0"}],"id":1826,"name":"Block","src":"34262:736:0"}],"id":1827,"name":"FunctionDefinition","src":"34226:772:0"}],"id":1828,"name":"ContractDefinition","src":"34011:994:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Arbitrable\n Arbitrable abstract contract.\n When developing arbitrable contracts, we need to:\n -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\n -Allow dispute creation. For this a function must:\n     -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\n     -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);","fullyImplemented":false,"linearizedBaseContracts":[1925],"name":"Arbitrable","scope":4533},"children":[{"attributes":{"constant":false,"name":"arbitrator","scope":1925,"stateVariable":true,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2042,"type":"contract Arbitrator"},"id":1829,"name":"UserDefinedTypeName","src":"35454:10:0"}],"id":1830,"name":"VariableDeclaration","src":"35454:28:0"},{"attributes":{"constant":false,"name":"arbitratorExtraData","scope":1925,"stateVariable":true,"storageLocation":"default","type":"bytes","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1831,"name":"ElementaryTypeName","src":"35488:5:0"}],"id":1832,"name":"VariableDeclaration","src":"35488:32:0"},{"attributes":{"documentation":null,"name":"onlyArbitrator","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1833,"name":"ParameterList","src":"35617:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1834,"name":"Identifier","src":"35618:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1835,"name":"Identifier","src":"35626:3:0"}],"id":1836,"name":"MemberAccess","src":"35626:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrator_$2042","typeString":"contract Arbitrator"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1837,"name":"ElementaryTypeNameExpression","src":"35638:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1830,"type":"contract Arbitrator","value":"arbitrator"},"id":1838,"name":"Identifier","src":"35646:10:0"}],"id":1839,"name":"FunctionCall","src":"35638:19:0"}],"id":1840,"name":"BinaryOperation","src":"35626:31:0"}],"id":1841,"name":"FunctionCall","src":"35618:40:0"}],"id":1842,"name":"ExpressionStatement","src":"35618:40:0"},{"id":1843,"name":"PlaceholderStatement","src":"35660:1:0"}],"id":1844,"name":"Block","src":"35617:46:0"}],"id":1845,"name":"ModifierDefinition","src":"35593:70:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a ruling is given.\n @param _arbitrator The arbitrator giving the ruling.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling The ruling which was given.","name":"Ruling"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1853,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2042,"type":"contract Arbitrator"},"id":1846,"name":"UserDefinedTypeName","src":"35924:10:0"}],"id":1847,"name":"VariableDeclaration","src":"35924:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1853,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1848,"name":"ElementaryTypeName","src":"35956:4:0"}],"id":1849,"name":"VariableDeclaration","src":"35956:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_ruling","scope":1853,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1850,"name":"ElementaryTypeName","src":"35981:4:0"}],"id":1851,"name":"VariableDeclaration","src":"35981:12:0"}],"id":1852,"name":"ParameterList","src":"35923:71:0"}],"id":1853,"name":"EventDefinition","src":"35911:84:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be emmited when meta-evidence is submitted.\n @param _metaEvidenceID Unique identifier of meta-evidence.\n @param _evidence A link to the meta-evidence JSON.","name":"MetaEvidence"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_metaEvidenceID","scope":1859,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1854,"name":"ElementaryTypeName","src":"36214:4:0"}],"id":1855,"name":"VariableDeclaration","src":"36214:28:0"},{"attributes":{"constant":false,"indexed":false,"name":"_evidence","scope":1859,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1856,"name":"ElementaryTypeName","src":"36244:6:0"}],"id":1857,"name":"VariableDeclaration","src":"36244:16:0"}],"id":1858,"name":"ParameterList","src":"36213:48:0"}],"id":1859,"name":"EventDefinition","src":"36195:67:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be emmited when a dispute is created to link the correct meta-evidence to the disputeID\n @param _arbitrator The arbitrator of the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _metaEvidenceID Unique identifier of meta-evidence.","name":"Dispute"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1867,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2042,"type":"contract Arbitrator"},"id":1860,"name":"UserDefinedTypeName","src":"36592:10:0"}],"id":1861,"name":"VariableDeclaration","src":"36592:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1862,"name":"ElementaryTypeName","src":"36624:4:0"}],"id":1863,"name":"VariableDeclaration","src":"36624:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_metaEvidenceID","scope":1867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1864,"name":"ElementaryTypeName","src":"36649:4:0"}],"id":1865,"name":"VariableDeclaration","src":"36649:20:0"}],"id":1866,"name":"ParameterList","src":"36591:79:0"}],"id":1867,"name":"EventDefinition","src":"36578:93:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due to gas considerations).\n @param _arbitrator The arbitrator of the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n @param _evidence A URI to the evidence JSON file whose name should be its keccak256 hash followed by .json.","name":"Evidence"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1877,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2042,"type":"contract Arbitrator"},"id":1868,"name":"UserDefinedTypeName","src":"37233:10:0"}],"id":1869,"name":"VariableDeclaration","src":"37233:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1877,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1870,"name":"ElementaryTypeName","src":"37265:4:0"}],"id":1871,"name":"VariableDeclaration","src":"37265:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_party","scope":1877,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1872,"name":"ElementaryTypeName","src":"37290:7:0"}],"id":1873,"name":"VariableDeclaration","src":"37290:14:0"},{"attributes":{"constant":false,"indexed":false,"name":"_evidence","scope":1877,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1874,"name":"ElementaryTypeName","src":"37306:6:0"}],"id":1875,"name":"VariableDeclaration","src":"37306:16:0"}],"id":1876,"name":"ParameterList","src":"37232:91:0"}],"id":1877,"name":"EventDefinition","src":"37218:106:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor. Choose the arbitrator.\n @param _arbitrator The arbitrator of the contract.\n @param _arbitratorExtraData Extra data for the arbitrator.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":1925,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_arbitrator","scope":1893,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2042,"type":"contract Arbitrator"},"id":1878,"name":"UserDefinedTypeName","src":"37525:10:0"}],"id":1879,"name":"VariableDeclaration","src":"37525:22:0"},{"attributes":{"constant":false,"name":"_arbitratorExtraData","scope":1893,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1880,"name":"ElementaryTypeName","src":"37549:5:0"}],"id":1881,"name":"VariableDeclaration","src":"37549:26:0"}],"id":1882,"name":"ParameterList","src":"37524:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":1883,"name":"ParameterList","src":"37584:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Arbitrator"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1830,"type":"contract Arbitrator","value":"arbitrator"},"id":1884,"name":"Identifier","src":"37594:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1879,"type":"contract Arbitrator","value":"_arbitrator"},"id":1885,"name":"Identifier","src":"37607:11:0"}],"id":1886,"name":"Assignment","src":"37594:24:0"}],"id":1887,"name":"ExpressionStatement","src":"37594:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1832,"type":"bytes storage ref","value":"arbitratorExtraData"},"id":1888,"name":"Identifier","src":"37628:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1881,"type":"bytes memory","value":"_arbitratorExtraData"},"id":1889,"name":"Identifier","src":"37650:20:0"}],"id":1890,"name":"Assignment","src":"37628:42:0"}],"id":1891,"name":"ExpressionStatement","src":"37628:42:0"}],"id":1892,"name":"Block","src":"37584:93:0"}],"id":1893,"name":"FunctionDefinition","src":"37513:164:0"},{"attributes":{"constant":false,"documentation":"@dev Give a ruling for a dispute. Must be called by the arbitrator.\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".","implemented":true,"isConstructor":false,"name":"rule","payable":false,"scope":1925,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1917,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1894,"name":"ElementaryTypeName","src":"38092:4:0"}],"id":1895,"name":"VariableDeclaration","src":"38092:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":1917,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1896,"name":"ElementaryTypeName","src":"38109:4:0"}],"id":1897,"name":"VariableDeclaration","src":"38109:12:0"}],"id":1898,"name":"ParameterList","src":"38091:31:0"},{"attributes":{"parameters":[null]},"children":[],"id":1901,"name":"ParameterList","src":"38145:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1845,"type":"modifier ()","value":"onlyArbitrator"},"id":1899,"name":"Identifier","src":"38130:14:0"}],"id":1900,"name":"ModifierInvocation","src":"38130:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrator_$2042","typeString":"contract Arbitrator"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1853,"type":"function (contract Arbitrator,uint256,uint256)","value":"Ruling"},"id":1902,"name":"Identifier","src":"38160:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrator","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2042,"type":"type(contract Arbitrator)","value":"Arbitrator"},"id":1903,"name":"Identifier","src":"38167:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1904,"name":"Identifier","src":"38178:3:0"}],"id":1905,"name":"MemberAccess","src":"38178:10:0"}],"id":1906,"name":"FunctionCall","src":"38167:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1895,"type":"uint256","value":"_disputeID"},"id":1907,"name":"Identifier","src":"38190:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1897,"type":"uint256","value":"_ruling"},"id":1908,"name":"Identifier","src":"38201:7:0"}],"id":1909,"name":"FunctionCall","src":"38160:49:0"}],"id":1910,"name":"EmitStatement","src":"38155:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1924,"type":"function (uint256,uint256)","value":"executeRuling"},"id":1911,"name":"Identifier","src":"38220:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1895,"type":"uint256","value":"_disputeID"},"id":1912,"name":"Identifier","src":"38234:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1897,"type":"uint256","value":"_ruling"},"id":1913,"name":"Identifier","src":"38245:7:0"}],"id":1914,"name":"FunctionCall","src":"38220:33:0"}],"id":1915,"name":"ExpressionStatement","src":"38220:33:0"}],"id":1916,"name":"Block","src":"38145:115:0"}],"id":1917,"name":"FunctionDefinition","src":"38078:182:0"},{"attributes":{"body":null,"constant":false,"documentation":"@dev Execute a ruling of a dispute.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".","implemented":false,"isConstructor":false,"modifiers":[null],"name":"executeRuling","payable":false,"scope":1925,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1924,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1918,"name":"ElementaryTypeName","src":"38536:4:0"}],"id":1919,"name":"VariableDeclaration","src":"38536:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":1924,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1920,"name":"ElementaryTypeName","src":"38553:4:0"}],"id":1921,"name":"VariableDeclaration","src":"38553:12:0"}],"id":1922,"name":"ParameterList","src":"38535:31:0"},{"attributes":{"parameters":[null]},"children":[],"id":1923,"name":"ParameterList","src":"38575:0:0"}],"id":1924,"name":"FunctionDefinition","src":"38513:63:0"}],"id":1925,"name":"ContractDefinition","src":"35429:3149:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Arbitrator\n Arbitrator abstract contract.\n When developing arbitrator contracts we need to:\n -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n -Define the functions for cost display (arbitrationCost and appealCost).\n -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).","fullyImplemented":false,"linearizedBaseContracts":[2042],"name":"Arbitrator","scope":4533},"children":[{"attributes":{"canonicalName":"Arbitrator.DisputeStatus","name":"DisputeStatus"},"children":[{"attributes":{"name":"Waiting"},"id":1926,"name":"EnumValue","src":"39098:7:0"},{"attributes":{"name":"Appealable"},"id":1927,"name":"EnumValue","src":"39107:10:0"},{"attributes":{"name":"Solved"},"id":1928,"name":"EnumValue","src":"39119:6:0"}],"id":1929,"name":"EnumDefinition","src":"39078:48:0"},{"attributes":{"documentation":null,"name":"requireArbitrationFee","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":1944,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1930,"name":"ElementaryTypeName","src":"39163:5:0"}],"id":1931,"name":"VariableDeclaration","src":"39163:16:0"}],"id":1932,"name":"ParameterList","src":"39162:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1933,"name":"Identifier","src":"39182:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1934,"name":"Identifier","src":"39190:3:0"}],"id":1935,"name":"MemberAccess","src":"39190:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":1998,"type":"function (bytes memory) view returns (uint256)","value":"arbitrationCost"},"id":1936,"name":"Identifier","src":"39201:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1931,"type":"bytes memory","value":"_extraData"},"id":1937,"name":"Identifier","src":"39217:10:0"}],"id":1938,"name":"FunctionCall","src":"39201:27:0"}],"id":1939,"name":"BinaryOperation","src":"39190:38:0"}],"id":1940,"name":"FunctionCall","src":"39182:47:0"}],"id":1941,"name":"ExpressionStatement","src":"39182:47:0"},{"id":1942,"name":"PlaceholderStatement","src":"39231:1:0"}],"id":1943,"name":"Block","src":"39181:53:0"}],"id":1944,"name":"ModifierDefinition","src":"39132:102:0"},{"attributes":{"documentation":null,"name":"requireAppealFee","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1962,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1945,"name":"ElementaryTypeName","src":"39265:4:0"}],"id":1946,"name":"VariableDeclaration","src":"39265:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1962,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1947,"name":"ElementaryTypeName","src":"39282:5:0"}],"id":1948,"name":"VariableDeclaration","src":"39282:16:0"}],"id":1949,"name":"ParameterList","src":"39264:35:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":1950,"name":"Identifier","src":"39301:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":1951,"name":"Identifier","src":"39309:3:0"}],"id":1952,"name":"MemberAccess","src":"39309:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":2027,"type":"function (uint256,bytes memory) view returns (uint256)","value":"appealCost"},"id":1953,"name":"Identifier","src":"39320:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1946,"type":"uint256","value":"_disputeID"},"id":1954,"name":"Identifier","src":"39331:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1948,"type":"bytes memory","value":"_extraData"},"id":1955,"name":"Identifier","src":"39343:10:0"}],"id":1956,"name":"FunctionCall","src":"39320:34:0"}],"id":1957,"name":"BinaryOperation","src":"39309:45:0"}],"id":1958,"name":"FunctionCall","src":"39301:54:0"}],"id":1959,"name":"ExpressionStatement","src":"39301:54:0"},{"id":1960,"name":"PlaceholderStatement","src":"39357:1:0"}],"id":1961,"name":"Block","src":"39300:60:0"}],"id":1962,"name":"ModifierDefinition","src":"39239:121:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a dispute can be appealed.\n @param _disputeID ID of the dispute.","name":"AppealPossible"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":1966,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1963,"name":"ElementaryTypeName","src":"39498:4:0"}],"id":1964,"name":"VariableDeclaration","src":"39498:15:0"}],"id":1965,"name":"ParameterList","src":"39497:17:0"}],"id":1966,"name":"EventDefinition","src":"39477:38:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a dispute is created.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute.","name":"DisputeCreation"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1972,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1967,"name":"ElementaryTypeName","src":"39716:4:0"}],"id":1968,"name":"VariableDeclaration","src":"39716:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_arbitrable","scope":1972,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1925,"type":"contract Arbitrable"},"id":1969,"name":"UserDefinedTypeName","src":"39741:10:0"}],"id":1970,"name":"VariableDeclaration","src":"39741:22:0"}],"id":1971,"name":"ParameterList","src":"39715:49:0"}],"id":1972,"name":"EventDefinition","src":"39694:71:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when the current ruling is appealed.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute.","name":"AppealDecision"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1978,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1973,"name":"ElementaryTypeName","src":"39975:4:0"}],"id":1974,"name":"VariableDeclaration","src":"39975:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_arbitrable","scope":1978,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1925,"type":"contract Arbitrable"},"id":1975,"name":"UserDefinedTypeName","src":"40000:10:0"}],"id":1976,"name":"VariableDeclaration","src":"40000:22:0"}],"id":1977,"name":"ParameterList","src":"39974:49:0"}],"id":1978,"name":"EventDefinition","src":"39954:70:0"},{"attributes":{"constant":false,"documentation":"@dev Create a dispute. Must be called by the arbitrable contract.\n Must be paid at least arbitrationCost(_extraData).\n @param _choices Amount of choices the arbitrator can make in this dispute.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return disputeID ID of the dispute created.","implemented":true,"isConstructor":false,"name":"createDispute","payable":true,"scope":2042,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_choices","scope":1991,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1979,"name":"ElementaryTypeName","src":"40422:4:0"}],"id":1980,"name":"VariableDeclaration","src":"40422:13:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1991,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1981,"name":"ElementaryTypeName","src":"40437:5:0"}],"id":1982,"name":"VariableDeclaration","src":"40437:16:0"}],"id":1983,"name":"ParameterList","src":"40421:33:0"},{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":1991,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1987,"name":"ElementaryTypeName","src":"40512:4:0"}],"id":1988,"name":"VariableDeclaration","src":"40512:14:0"}],"id":1989,"name":"ParameterList","src":"40511:16:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1944,"type":"modifier (bytes memory)","value":"requireArbitrationFee"},"id":1984,"name":"Identifier","src":"40462:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1982,"type":"bytes memory","value":"_extraData"},"id":1985,"name":"Identifier","src":"40484:10:0"}],"id":1986,"name":"ModifierInvocation","src":"40462:33:0"},{"attributes":{"statements":[null]},"children":[],"id":1990,"name":"Block","src":"40529:2:0"}],"id":1991,"name":"FunctionDefinition","src":"40399:132:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return fee Amount to be paid.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"arbitrationCost","payable":false,"scope":2042,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":1998,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1992,"name":"ElementaryTypeName","src":"40894:5:0"}],"id":1993,"name":"VariableDeclaration","src":"40894:16:0"}],"id":1994,"name":"ParameterList","src":"40893:18:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":1998,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1995,"name":"ElementaryTypeName","src":"40936:4:0"}],"id":1996,"name":"VariableDeclaration","src":"40936:8:0"}],"id":1997,"name":"ParameterList","src":"40935:10:0"}],"id":1998,"name":"FunctionDefinition","src":"40869:77:0"},{"attributes":{"constant":false,"documentation":"@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give extra info on the appeal.","implemented":true,"isConstructor":false,"name":"appeal","payable":true,"scope":2042,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2018,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1999,"name":"ElementaryTypeName","src":"41211:4:0"}],"id":2000,"name":"VariableDeclaration","src":"41211:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":2018,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2001,"name":"ElementaryTypeName","src":"41228:5:0"}],"id":2002,"name":"VariableDeclaration","src":"41228:16:0"}],"id":2003,"name":"ParameterList","src":"41210:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":2008,"name":"ParameterList","src":"41301:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1962,"type":"modifier (uint256,bytes memory)","value":"requireAppealFee"},"id":2004,"name":"Identifier","src":"41253:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2000,"type":"uint256","value":"_disputeID"},"id":2005,"name":"Identifier","src":"41270:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2002,"type":"bytes memory","value":"_extraData"},"id":2006,"name":"Identifier","src":"41281:10:0"}],"id":2007,"name":"ModifierInvocation","src":"41253:39:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Arbitrable_$1925","typeString":"contract Arbitrable"}],"overloadedDeclarations":[null],"referencedDeclaration":1978,"type":"function (uint256,contract Arbitrable)","value":"AppealDecision"},"id":2009,"name":"Identifier","src":"41316:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2000,"type":"uint256","value":"_disputeID"},"id":2010,"name":"Identifier","src":"41331:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1925,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":2011,"name":"Identifier","src":"41343:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2012,"name":"Identifier","src":"41354:3:0"}],"id":2013,"name":"MemberAccess","src":"41354:10:0"}],"id":2014,"name":"FunctionCall","src":"41343:22:0"}],"id":2015,"name":"FunctionCall","src":"41316:50:0"}],"id":2016,"name":"EmitStatement","src":"41311:55:0"}],"id":2017,"name":"Block","src":"41301:72:0"}],"id":2018,"name":"FunctionDefinition","src":"41195:178:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return fee Amount to be paid.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"appealCost","payable":false,"scope":2042,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2027,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2019,"name":"ElementaryTypeName","src":"41785:4:0"}],"id":2020,"name":"VariableDeclaration","src":"41785:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":2027,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2021,"name":"ElementaryTypeName","src":"41802:5:0"}],"id":2022,"name":"VariableDeclaration","src":"41802:16:0"}],"id":2023,"name":"ParameterList","src":"41784:35:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":2027,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2024,"name":"ElementaryTypeName","src":"41844:4:0"}],"id":2025,"name":"VariableDeclaration","src":"41844:8:0"}],"id":2026,"name":"ParameterList","src":"41843:10:0"}],"id":2027,"name":"FunctionDefinition","src":"41765:89:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Return the status of a dispute.\n @param _disputeID ID of the dispute to rule.\n @return status The status of the dispute.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"disputeStatus","payable":false,"scope":2042,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2034,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2028,"name":"ElementaryTypeName","src":"42039:4:0"}],"id":2029,"name":"VariableDeclaration","src":"42039:15:0"}],"id":2030,"name":"ParameterList","src":"42038:17:0"},{"children":[{"attributes":{"constant":false,"name":"status","scope":2034,"stateVariable":false,"storageLocation":"default","type":"enum Arbitrator.DisputeStatus","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeStatus","referencedDeclaration":1929,"type":"enum Arbitrator.DisputeStatus"},"id":2031,"name":"UserDefinedTypeName","src":"42080:13:0"}],"id":2032,"name":"VariableDeclaration","src":"42080:20:0"}],"id":2033,"name":"ParameterList","src":"42079:22:0"}],"id":2034,"name":"FunctionDefinition","src":"42016:86:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n @param _disputeID ID of the dispute.\n @return ruling The ruling which has been given or the one which will be given if there is no appeal.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"currentRuling","payable":false,"scope":2042,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2041,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2035,"name":"ElementaryTypeName","src":"42404:4:0"}],"id":2036,"name":"VariableDeclaration","src":"42404:15:0"}],"id":2037,"name":"ParameterList","src":"42403:17:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":2041,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2038,"name":"ElementaryTypeName","src":"42445:4:0"}],"id":2039,"name":"VariableDeclaration","src":"42445:11:0"}],"id":2040,"name":"ParameterList","src":"42444:13:0"}],"id":2041,"name":"FunctionDefinition","src":"42381:77:0"}],"id":2042,"name":"ContractDefinition","src":"39052:3409:0"},{"attributes":{"contractDependencies":[491,2042],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[4532,491,2042],"name":"Kleros","scope":4533},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2042,"type":"contract Arbitrator"},"id":2043,"name":"UserDefinedTypeName","src":"42484:10:0"}],"id":2044,"name":"InheritanceSpecifier","src":"42484:10:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ApproveAndCallFallBack","referencedDeclaration":491,"type":"contract ApproveAndCallFallBack"},"id":2045,"name":"UserDefinedTypeName","src":"42496:22:0"}],"id":2046,"name":"InheritanceSpecifier","src":"42496:22:0"},{"attributes":{"constant":false,"name":"pinakion","scope":4532,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":2047,"name":"UserDefinedTypeName","src":"42707:8:0"}],"id":2048,"name":"VariableDeclaration","src":"42707:24:0"},{"attributes":{"constant":true,"name":"NON_PAYABLE_AMOUNT","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2049,"name":"ElementaryTypeName","src":"42737:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"/","type":"int_const 5789...(69 digits omitted)...9967"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"int_const 1157...(70 digits omitted)...9934"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1","typeString":"int_const 1157...(70 digits omitted)...9934"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"-","type":"int_const 1157...(70 digits omitted)...9934"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1157...(70 digits omitted)...9936"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2050,"name":"Literal","src":"42780:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"323536","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 256","value":"256"},"id":2051,"name":"Literal","src":"42783:3:0"}],"id":2052,"name":"BinaryOperation","src":"42780:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2053,"name":"Literal","src":"42789:1:0"}],"id":2054,"name":"BinaryOperation","src":"42780:10:0"}],"id":2055,"name":"TupleExpression","src":"42779:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2056,"name":"Literal","src":"42794:1:0"}],"id":2057,"name":"BinaryOperation","src":"42779:16:0"}],"id":2058,"name":"VariableDeclaration","src":"42737:58:0"},{"attributes":{"constant":false,"name":"rng","scope":4532,"stateVariable":true,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1649,"type":"contract RNG"},"id":2059,"name":"UserDefinedTypeName","src":"43053:3:0"}],"id":2060,"name":"VariableDeclaration","src":"43053:14:0"},{"attributes":{"constant":false,"name":"arbitrationFeePerJuror","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2061,"name":"ElementaryTypeName","src":"43121:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"302e3035","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":"ether","token":"number","type":"int_const 50000000000000000","value":"0.05"},"id":2062,"name":"Literal","src":"43158:10:0"}],"id":2063,"name":"VariableDeclaration","src":"43121:47:0"},{"attributes":{"constant":false,"name":"defaultNumberJuror","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint16","visibility":"public"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":2064,"name":"ElementaryTypeName","src":"43219:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":2065,"name":"Literal","src":"43254:1:0"}],"id":2066,"name":"VariableDeclaration","src":"43219:36:0"},{"attributes":{"constant":false,"name":"minActivatedToken","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2067,"name":"ElementaryTypeName","src":"43315:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"int_const 100000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"302e31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"rational_const 1 / 10","value":"0.1"},"id":2068,"name":"Literal","src":"43347:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31653138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1000000000000000000","value":"1e18"},"id":2069,"name":"Literal","src":"43353:4:0"}],"id":2070,"name":"BinaryOperation","src":"43347:10:0"}],"id":2071,"name":"VariableDeclaration","src":"43315:42:0"},{"attributes":{"constant":false,"name":"timePerPeriod","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"public"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2072,"name":"ElementaryTypeName","src":"43418:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":2073,"name":"Literal","src":"43423:1:0"}],"id":2074,"name":"ArrayTypeName","src":"43418:7:0"}],"id":2075,"name":"VariableDeclaration","src":"43418:28:0"},{"attributes":{"constant":false,"name":"alpha","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2076,"name":"ElementaryTypeName","src":"43501:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2000","value":"2000"},"id":2077,"name":"Literal","src":"43521:4:0"}],"id":2078,"name":"VariableDeclaration","src":"43501:24:0"},{"attributes":{"constant":true,"name":"ALPHA_DIVISOR","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2079,"name":"ElementaryTypeName","src":"43561:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"316534","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10000","value":"1e4"},"id":2080,"name":"Literal","src":"43591:3:0"}],"id":2081,"name":"VariableDeclaration","src":"43561:33:0"},{"attributes":{"constant":false,"name":"maxAppeals","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2082,"name":"ElementaryTypeName","src":"43675:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":2083,"name":"Literal","src":"43700:1:0"}],"id":2084,"name":"VariableDeclaration","src":"43675:26:0"},{"attributes":{"constant":false,"name":"governor","scope":4532,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":2085,"name":"ElementaryTypeName","src":"43988:7:0"}],"id":2086,"name":"VariableDeclaration","src":"43988:23:0"},{"attributes":{"constant":false,"name":"session","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2087,"name":"ElementaryTypeName","src":"44112:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2088,"name":"Literal","src":"44134:1:0"}],"id":2089,"name":"VariableDeclaration","src":"44112:23:0"},{"attributes":{"constant":false,"name":"lastPeriodChange","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2090,"name":"ElementaryTypeName","src":"44179:4:0"}],"id":2091,"name":"VariableDeclaration","src":"44179:28:0"},{"attributes":{"constant":false,"name":"segmentSize","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2092,"name":"ElementaryTypeName","src":"44262:4:0"}],"id":2093,"name":"VariableDeclaration","src":"44262:23:0"},{"attributes":{"constant":false,"name":"rnBlock","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2094,"name":"ElementaryTypeName","src":"44340:4:0"}],"id":2095,"name":"VariableDeclaration","src":"44340:19:0"},{"attributes":{"constant":false,"name":"randomNumber","scope":4532,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2096,"name":"ElementaryTypeName","src":"44426:4:0"}],"id":2097,"name":"VariableDeclaration","src":"44426:24:0"},{"attributes":{"canonicalName":"Kleros.Period","name":"Period"},"children":[{"attributes":{"name":"Activation"},"id":2098,"name":"EnumValue","src":"44516:10:0"},{"attributes":{"name":"Draw"},"id":2099,"name":"EnumValue","src":"44603:4:0"},{"attributes":{"name":"Vote"},"id":2100,"name":"EnumValue","src":"44690:4:0"},{"attributes":{"name":"Appeal"},"id":2101,"name":"EnumValue","src":"44748:6:0"},{"attributes":{"name":"Execution"},"id":2102,"name":"EnumValue","src":"44808:9:0"}],"id":2103,"name":"EnumDefinition","src":"44494:415:0"},{"attributes":{"constant":false,"name":"period","scope":4532,"stateVariable":true,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":2103,"type":"enum Kleros.Period"},"id":2104,"name":"UserDefinedTypeName","src":"44915:6:0"}],"id":2105,"name":"VariableDeclaration","src":"44915:20:0"},{"attributes":{"canonicalName":"Kleros.Juror","name":"Juror","scope":4532,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"balance","scope":2116,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2106,"name":"ElementaryTypeName","src":"44965:4:0"}],"id":2107,"name":"VariableDeclaration","src":"44965:12:0"},{"attributes":{"constant":false,"name":"atStake","scope":2116,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2108,"name":"ElementaryTypeName","src":"45051:4:0"}],"id":2109,"name":"VariableDeclaration","src":"45051:12:0"},{"attributes":{"constant":false,"name":"lastSession","scope":2116,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2110,"name":"ElementaryTypeName","src":"45287:4:0"}],"id":2111,"name":"VariableDeclaration","src":"45287:16:0"},{"attributes":{"constant":false,"name":"segmentStart","scope":2116,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2112,"name":"ElementaryTypeName","src":"45357:4:0"}],"id":2113,"name":"VariableDeclaration","src":"45357:17:0"},{"attributes":{"constant":false,"name":"segmentEnd","scope":2116,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2114,"name":"ElementaryTypeName","src":"45429:4:0"}],"id":2115,"name":"VariableDeclaration","src":"45429:15:0"}],"id":2116,"name":"StructDefinition","src":"44942:554:0"},{"attributes":{"constant":false,"name":"jurors","scope":4532,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct Kleros.Juror)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => struct Kleros.Juror)"},"children":[{"attributes":{"name":"address","type":"address"},"id":2117,"name":"ElementaryTypeName","src":"45511:7:0"},{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":2118,"name":"UserDefinedTypeName","src":"45522:5:0"}],"id":2119,"name":"Mapping","src":"45502:26:0"}],"id":2120,"name":"VariableDeclaration","src":"45502:40:0"},{"attributes":{"canonicalName":"Kleros.Vote","name":"Vote","scope":4532,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"account","scope":2125,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2121,"name":"ElementaryTypeName","src":"45571:7:0"}],"id":2122,"name":"VariableDeclaration","src":"45571:15:0"},{"attributes":{"constant":false,"name":"ruling","scope":2125,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2123,"name":"ElementaryTypeName","src":"45630:4:0"}],"id":2124,"name":"VariableDeclaration","src":"45630:11:0"}],"id":2125,"name":"StructDefinition","src":"45549:134:0"},{"attributes":{"canonicalName":"Kleros.VoteCounter","name":"VoteCounter","scope":4532,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":2134,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2126,"name":"ElementaryTypeName","src":"45718:4:0"}],"id":2127,"name":"VariableDeclaration","src":"45718:18:0"},{"attributes":{"constant":false,"name":"winningCount","scope":2134,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2128,"name":"ElementaryTypeName","src":"45832:4:0"}],"id":2129,"name":"VariableDeclaration","src":"45832:17:0"},{"attributes":{"constant":false,"name":"voteCount","scope":2134,"stateVariable":false,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2130,"name":"ElementaryTypeName","src":"45946:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":2131,"name":"ElementaryTypeName","src":"45954:4:0"}],"id":2132,"name":"Mapping","src":"45937:22:0"}],"id":2133,"name":"VariableDeclaration","src":"45937:32:0"}],"id":2134,"name":"StructDefinition","src":"45689:343:0"},{"attributes":{"canonicalName":"Kleros.DisputeState","name":"DisputeState"},"children":[{"attributes":{"name":"Open"},"id":2135,"name":"EnumValue","src":"46066:4:0"},{"attributes":{"name":"Resolving"},"id":2136,"name":"EnumValue","src":"46211:9:0"},{"attributes":{"name":"Executable"},"id":2137,"name":"EnumValue","src":"46333:10:0"},{"attributes":{"name":"Executed"},"id":2138,"name":"EnumValue","src":"46419:8:0"}],"id":2139,"name":"EnumDefinition","src":"46038:476:0"},{"attributes":{"canonicalName":"Kleros.Dispute","name":"Dispute","scope":4532,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"arbitrated","scope":2170,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1925,"type":"contract Arbitrable"},"id":2140,"name":"UserDefinedTypeName","src":"46545:10:0"}],"id":2141,"name":"VariableDeclaration","src":"46545:21:0"},{"attributes":{"constant":false,"name":"session","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2142,"name":"ElementaryTypeName","src":"46612:4:0"}],"id":2143,"name":"VariableDeclaration","src":"46612:12:0"},{"attributes":{"constant":false,"name":"appeals","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2144,"name":"ElementaryTypeName","src":"46692:4:0"}],"id":2145,"name":"VariableDeclaration","src":"46692:12:0"},{"attributes":{"constant":false,"name":"choices","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2146,"name":"ElementaryTypeName","src":"46751:4:0"}],"id":2147,"name":"VariableDeclaration","src":"46751:12:0"},{"attributes":{"constant":false,"name":"initialNumberJurors","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":2148,"name":"ElementaryTypeName","src":"46838:6:0"}],"id":2149,"name":"VariableDeclaration","src":"46838:26:0"},{"attributes":{"constant":false,"name":"arbitrationFeePerJuror","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2150,"name":"ElementaryTypeName","src":"46908:4:0"}],"id":2151,"name":"VariableDeclaration","src":"46908:27:0"},{"attributes":{"constant":false,"name":"state","scope":2170,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.DisputeState","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeState","referencedDeclaration":2139,"type":"enum Kleros.DisputeState"},"id":2152,"name":"UserDefinedTypeName","src":"46990:12:0"}],"id":2153,"name":"VariableDeclaration","src":"46990:18:0"},{"attributes":{"constant":false,"name":"votes","scope":2170,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.Vote[][]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Vote[][]"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Vote[]"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":2125,"type":"struct Kleros.Vote"},"id":2154,"name":"UserDefinedTypeName","src":"47056:4:0"}],"id":2155,"name":"ArrayTypeName","src":"47056:6:0"}],"id":2156,"name":"ArrayTypeName","src":"47056:8:0"}],"id":2157,"name":"VariableDeclaration","src":"47056:14:0"},{"attributes":{"constant":false,"name":"voteCounter","scope":2170,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.VoteCounter[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.VoteCounter[]"},"children":[{"attributes":{"contractScope":null,"name":"VoteCounter","referencedDeclaration":2134,"type":"struct Kleros.VoteCounter"},"id":2158,"name":"UserDefinedTypeName","src":"47141:11:0"}],"id":2159,"name":"ArrayTypeName","src":"47141:13:0"}],"id":2160,"name":"VariableDeclaration","src":"47141:25:0"},{"attributes":{"constant":false,"name":"lastSessionVote","scope":2170,"stateVariable":false,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":2161,"name":"ElementaryTypeName","src":"47242:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":2162,"name":"ElementaryTypeName","src":"47253:4:0"}],"id":2163,"name":"Mapping","src":"47233:25:0"}],"id":2164,"name":"VariableDeclaration","src":"47233:41:0"},{"attributes":{"constant":false,"name":"currentAppealToRepartition","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2165,"name":"ElementaryTypeName","src":"47357:4:0"}],"id":2166,"name":"VariableDeclaration","src":"47357:31:0"},{"attributes":{"constant":false,"name":"appealsRepartitioned","scope":2170,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.AppealsRepartitioned[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.AppealsRepartitioned[]"},"children":[{"attributes":{"contractScope":null,"name":"AppealsRepartitioned","referencedDeclaration":2188,"type":"struct Kleros.AppealsRepartitioned"},"id":2167,"name":"UserDefinedTypeName","src":"47443:20:0"}],"id":2168,"name":"ArrayTypeName","src":"47443:22:0"}],"id":2169,"name":"VariableDeclaration","src":"47443:43:0"}],"id":2170,"name":"StructDefinition","src":"46520:1057:0"},{"attributes":{"canonicalName":"Kleros.RepartitionStage","name":"RepartitionStage"},"children":[{"attributes":{"name":"Incoherent"},"id":2171,"name":"EnumValue","src":"47722:10:0"},{"attributes":{"name":"Coherent"},"id":2172,"name":"EnumValue","src":"47742:8:0"},{"attributes":{"name":"AtStake"},"id":2173,"name":"EnumValue","src":"47760:7:0"},{"attributes":{"name":"Complete"},"id":2174,"name":"EnumValue","src":"47777:8:0"}],"id":2175,"name":"EnumDefinition","src":"47583:208:0"},{"attributes":{"canonicalName":"Kleros.AppealsRepartitioned","name":"AppealsRepartitioned","scope":4532,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":2188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2176,"name":"ElementaryTypeName","src":"47835:4:0"}],"id":2177,"name":"VariableDeclaration","src":"47835:24:0"},{"attributes":{"constant":false,"name":"nbCoherent","scope":2188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2178,"name":"ElementaryTypeName","src":"47922:4:0"}],"id":2179,"name":"VariableDeclaration","src":"47922:15:0"},{"attributes":{"constant":false,"name":"currentIncoherentVote","scope":2188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2180,"name":"ElementaryTypeName","src":"48000:4:0"}],"id":2181,"name":"VariableDeclaration","src":"48000:26:0"},{"attributes":{"constant":false,"name":"currentCoherentVote","scope":2188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2182,"name":"ElementaryTypeName","src":"48077:4:0"}],"id":2183,"name":"VariableDeclaration","src":"48077:24:0"},{"attributes":{"constant":false,"name":"currentAtStakeVote","scope":2188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2184,"name":"ElementaryTypeName","src":"48147:4:0"}],"id":2185,"name":"VariableDeclaration","src":"48147:23:0"},{"attributes":{"constant":false,"name":"stage","scope":2188,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.RepartitionStage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepartitionStage","referencedDeclaration":2175,"type":"enum Kleros.RepartitionStage"},"id":2186,"name":"UserDefinedTypeName","src":"48217:16:0"}],"id":2187,"name":"VariableDeclaration","src":"48217:22:0"}],"id":2188,"name":"StructDefinition","src":"47797:534:0"},{"attributes":{"constant":false,"name":"disputes","scope":4532,"stateVariable":true,"storageLocation":"default","type":"struct Kleros.Dispute[]","value":null,"visibility":"public"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Dispute[]"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":2189,"name":"UserDefinedTypeName","src":"48337:7:0"}],"id":2190,"name":"ArrayTypeName","src":"48337:9:0"}],"id":2191,"name":"VariableDeclaration","src":"48337:25:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when we pass to a new period.\n @param _period The new period.\n @param _session The current session.","name":"NewPeriod"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_period","scope":2197,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":2103,"type":"enum Kleros.Period"},"id":2192,"name":"UserDefinedTypeName","src":"48646:6:0"}],"id":2193,"name":"VariableDeclaration","src":"48646:14:0"},{"attributes":{"constant":false,"indexed":true,"name":"_session","scope":2197,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2194,"name":"ElementaryTypeName","src":"48662:4:0"}],"id":2195,"name":"VariableDeclaration","src":"48662:21:0"}],"id":2196,"name":"ParameterList","src":"48645:39:0"}],"id":2197,"name":"EventDefinition","src":"48630:55:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when a juror wins or loses tokens.\n@param _account The juror affected.\n@param _disputeID The ID of the dispute.\n@param _amount The amount of parts of token which was won. Can be negative for lost amounts.","name":"TokenShift"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_account","scope":2205,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2198,"name":"ElementaryTypeName","src":"48967:7:0"}],"id":2199,"name":"VariableDeclaration","src":"48967:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":2205,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2200,"name":"ElementaryTypeName","src":"48993:4:0"}],"id":2201,"name":"VariableDeclaration","src":"48993:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":2205,"stateVariable":false,"storageLocation":"default","type":"int256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"int","type":"int256"},"id":2202,"name":"ElementaryTypeName","src":"49010:3:0"}],"id":2203,"name":"VariableDeclaration","src":"49010:11:0"}],"id":2204,"name":"ParameterList","src":"48966:56:0"}],"id":2205,"name":"EventDefinition","src":"48950:73:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emited when a juror wins arbitration fees.\n@param _account The account affected.\n@param _disputeID The ID of the dispute.\n@param _amount The amount of weis which was won.","name":"ArbitrationReward"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_account","scope":2213,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2206,"name":"ElementaryTypeName","src":"49270:7:0"}],"id":2207,"name":"VariableDeclaration","src":"49270:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":2213,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2208,"name":"ElementaryTypeName","src":"49296:4:0"}],"id":2209,"name":"VariableDeclaration","src":"49296:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":2213,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2210,"name":"ElementaryTypeName","src":"49313:4:0"}],"id":2211,"name":"VariableDeclaration","src":"49313:12:0"}],"id":2212,"name":"ParameterList","src":"49269:57:0"}],"id":2213,"name":"EventDefinition","src":"49246:81:0"},{"attributes":{"documentation":null,"name":"onlyBy","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_account","scope":2226,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2214,"name":"ElementaryTypeName","src":"49466:7:0"}],"id":2215,"name":"VariableDeclaration","src":"49466:16:0"}],"id":2216,"name":"ParameterList","src":"49465:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2217,"name":"Identifier","src":"49485:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2218,"name":"Identifier","src":"49493:3:0"}],"id":2219,"name":"MemberAccess","src":"49493:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2215,"type":"address","value":"_account"},"id":2220,"name":"Identifier","src":"49507:8:0"}],"id":2221,"name":"BinaryOperation","src":"49493:22:0"}],"id":2222,"name":"FunctionCall","src":"49485:31:0"}],"id":2223,"name":"ExpressionStatement","src":"49485:31:0"},{"id":2224,"name":"PlaceholderStatement","src":"49518:1:0"}],"id":2225,"name":"Block","src":"49484:37:0"}],"id":2226,"name":"ModifierDefinition","src":"49450:71:0"},{"attributes":{"documentation":null,"name":"onlyDuring","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_period","scope":2238,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":2103,"type":"enum Kleros.Period"},"id":2227,"name":"UserDefinedTypeName","src":"49546:6:0"}],"id":2228,"name":"VariableDeclaration","src":"49546:14:0"}],"id":2229,"name":"ParameterList","src":"49545:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2230,"name":"Identifier","src":"49563:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2231,"name":"Identifier","src":"49571:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2228,"type":"enum Kleros.Period","value":"_period"},"id":2232,"name":"Identifier","src":"49581:7:0"}],"id":2233,"name":"BinaryOperation","src":"49571:17:0"}],"id":2234,"name":"FunctionCall","src":"49563:26:0"}],"id":2235,"name":"ExpressionStatement","src":"49563:26:0"},{"id":2236,"name":"PlaceholderStatement","src":"49591:1:0"}],"id":2237,"name":"Block","src":"49562:32:0"}],"id":2238,"name":"ModifierDefinition","src":"49526:68:0"},{"attributes":{"documentation":null,"name":"onlyGovernor","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":2239,"name":"ParameterList","src":"49620:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2240,"name":"Identifier","src":"49624:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2241,"name":"Identifier","src":"49632:3:0"}],"id":2242,"name":"MemberAccess","src":"49632:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":2243,"name":"Identifier","src":"49646:8:0"}],"id":2244,"name":"BinaryOperation","src":"49632:22:0"}],"id":2245,"name":"FunctionCall","src":"49624:31:0"}],"id":2246,"name":"ExpressionStatement","src":"49624:31:0"},{"id":2247,"name":"PlaceholderStatement","src":"49657:1:0"}],"id":2248,"name":"Block","src":"49623:37:0"}],"id":2249,"name":"ModifierDefinition","src":"49599:61:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor.\n @param _pinakion The address of the pinakion contract.\n @param _rng The random number generator which will be used.\n @param _timePerPeriod The minimal time for each period (seconds).\n @param _governor Address of the governor contract.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_pinakion","scope":2283,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1557,"type":"contract Pinakion"},"id":2250,"name":"UserDefinedTypeName","src":"49977:8:0"}],"id":2251,"name":"VariableDeclaration","src":"49977:18:0"},{"attributes":{"constant":false,"name":"_rng","scope":2283,"stateVariable":false,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1649,"type":"contract RNG"},"id":2252,"name":"UserDefinedTypeName","src":"49997:3:0"}],"id":2253,"name":"VariableDeclaration","src":"49997:8:0"},{"attributes":{"constant":false,"name":"_timePerPeriod","scope":2283,"stateVariable":false,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2254,"name":"ElementaryTypeName","src":"50007:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":2255,"name":"Literal","src":"50012:1:0"}],"id":2256,"name":"ArrayTypeName","src":"50007:7:0"}],"id":2257,"name":"VariableDeclaration","src":"50007:22:0"},{"attributes":{"constant":false,"name":"_governor","scope":2283,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2258,"name":"ElementaryTypeName","src":"50031:7:0"}],"id":2259,"name":"VariableDeclaration","src":"50031:17:0"}],"id":2260,"name":"ParameterList","src":"49976:73:0"},{"attributes":{"parameters":[null]},"children":[],"id":2261,"name":"ParameterList","src":"50057:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2048,"type":"contract Pinakion","value":"pinakion"},"id":2262,"name":"Identifier","src":"50067:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2251,"type":"contract Pinakion","value":"_pinakion"},"id":2263,"name":"Identifier","src":"50078:9:0"}],"id":2264,"name":"Assignment","src":"50067:20:0"}],"id":2265,"name":"ExpressionStatement","src":"50067:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RNG"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2060,"type":"contract RNG","value":"rng"},"id":2266,"name":"Identifier","src":"50097:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2253,"type":"contract RNG","value":"_rng"},"id":2267,"name":"Identifier","src":"50103:4:0"}],"id":2268,"name":"Assignment","src":"50097:10:0"}],"id":2269,"name":"ExpressionStatement","src":"50097:10:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2091,"type":"uint256","value":"lastPeriodChange"},"id":2270,"name":"Identifier","src":"50117:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4549,"type":"uint256","value":"now"},"id":2271,"name":"Identifier","src":"50136:3:0"}],"id":2272,"name":"Assignment","src":"50117:22:0"}],"id":2273,"name":"ExpressionStatement","src":"50117:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[5] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2075,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":2274,"name":"Identifier","src":"50149:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2257,"type":"uint256[5] memory","value":"_timePerPeriod"},"id":2275,"name":"Identifier","src":"50165:14:0"}],"id":2276,"name":"Assignment","src":"50149:30:0"}],"id":2277,"name":"ExpressionStatement","src":"50149:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":2278,"name":"Identifier","src":"50189:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2259,"type":"address","value":"_governor"},"id":2279,"name":"Identifier","src":"50200:9:0"}],"id":2280,"name":"Assignment","src":"50189:20:0"}],"id":2281,"name":"ExpressionStatement","src":"50189:20:0"}],"id":2282,"name":"Block","src":"50057:159:0"}],"id":2283,"name":"FunctionDefinition","src":"49965:251:0"},{"attributes":{"constant":false,"documentation":"@dev Callback of approveAndCall - transfer pinakions of a juror in the contract. Should be called by the pinakion contract. TRUSTED.\n @param _from The address making the transfer.\n @param _amount Amount of tokens to transfer to Kleros (in basic units).","implemented":true,"isConstructor":false,"name":"receiveApproval","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":490,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":2314,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2284,"name":"ElementaryTypeName","src":"50687:7:0"}],"id":2285,"name":"VariableDeclaration","src":"50687:13:0"},{"attributes":{"constant":false,"name":"_amount","scope":2314,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2286,"name":"ElementaryTypeName","src":"50702:4:0"}],"id":2287,"name":"VariableDeclaration","src":"50702:12:0"},{"attributes":{"constant":false,"name":"","scope":2314,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2288,"name":"ElementaryTypeName","src":"50716:7:0"}],"id":2289,"name":"VariableDeclaration","src":"50716:7:0"},{"attributes":{"constant":false,"name":"","scope":2314,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2290,"name":"ElementaryTypeName","src":"50725:5:0"}],"id":2291,"name":"VariableDeclaration","src":"50725:5:0"}],"id":2292,"name":"ParameterList","src":"50686:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":2296,"name":"ParameterList","src":"50756:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2226,"type":"modifier (address)","value":"onlyBy"},"id":2293,"name":"Identifier","src":"50739:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2048,"type":"contract Pinakion","value":"pinakion"},"id":2294,"name":"Identifier","src":"50746:8:0"}],"id":2295,"name":"ModifierInvocation","src":"50739:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2297,"name":"Identifier","src":"50766:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_Kleros_$4532","typeString":"contract Kleros"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":724,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2048,"type":"contract Pinakion","value":"pinakion"},"id":2298,"name":"Identifier","src":"50774:8:0"}],"id":2299,"name":"MemberAccess","src":"50774:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2285,"type":"address","value":"_from"},"id":2300,"name":"Identifier","src":"50796:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4582,"type":"contract Kleros","value":"this"},"id":2301,"name":"Identifier","src":"50803:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2287,"type":"uint256","value":"_amount"},"id":2302,"name":"Identifier","src":"50809:7:0"}],"id":2303,"name":"FunctionCall","src":"50774:43:0"}],"id":2304,"name":"FunctionCall","src":"50766:52:0"}],"id":2305,"name":"ExpressionStatement","src":"50766:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2306,"name":"Identifier","src":"50829:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2285,"type":"address","value":"_from"},"id":2307,"name":"Identifier","src":"50836:5:0"}],"id":2308,"name":"IndexAccess","src":"50829:13:0"}],"id":2309,"name":"MemberAccess","src":"50829:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2287,"type":"uint256","value":"_amount"},"id":2310,"name":"Identifier","src":"50854:7:0"}],"id":2311,"name":"Assignment","src":"50829:32:0"}],"id":2312,"name":"ExpressionStatement","src":"50829:32:0"}],"id":2313,"name":"Block","src":"50756:112:0"}],"id":2314,"name":"FunctionDefinition","src":"50662:206:0"},{"attributes":{"constant":false,"documentation":"@dev Withdraw tokens. Note that we can't withdraw the tokens which are still atStake. \n Jurors can't withdraw their tokens if they have deposited some during this session.\n This is to prevent jurors from withdrawing tokens they could loose.\n @param _value The amount to withdraw.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdraw","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":2367,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2315,"name":"ElementaryTypeName","src":"51209:4:0"}],"id":2316,"name":"VariableDeclaration","src":"51209:11:0"}],"id":2317,"name":"ParameterList","src":"51208:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":2318,"name":"ParameterList","src":"51229:0:0"},{"children":[{"attributes":{"assignments":[2320]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2367,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":2319,"name":"UserDefinedTypeName","src":"51239:5:0"}],"id":2320,"name":"VariableDeclaration","src":"51239:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2321,"name":"Identifier","src":"51261:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2322,"name":"Identifier","src":"51268:3:0"}],"id":2323,"name":"MemberAccess","src":"51268:10:0"}],"id":2324,"name":"IndexAccess","src":"51261:18:0"}],"id":2325,"name":"VariableDeclarationStatement","src":"51239:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2326,"name":"Identifier","src":"51289:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"atStake","referencedDeclaration":2109,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2320,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2327,"name":"Identifier","src":"51297:5:0"}],"id":2328,"name":"MemberAccess","src":"51297:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2320,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2329,"name":"Identifier","src":"51314:5:0"}],"id":2330,"name":"MemberAccess","src":"51314:13:0"}],"id":2331,"name":"BinaryOperation","src":"51297:30:0"}],"id":2332,"name":"FunctionCall","src":"51289:39:0"}],"id":2333,"name":"ExpressionStatement","src":"51289:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2334,"name":"Identifier","src":"51412:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2316,"type":"uint256","value":"_value"},"id":2335,"name":"Identifier","src":"51420:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2320,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2336,"name":"Identifier","src":"51430:5:0"}],"id":2337,"name":"MemberAccess","src":"51430:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"atStake","referencedDeclaration":2109,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2320,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2338,"name":"Identifier","src":"51444:5:0"}],"id":2339,"name":"MemberAccess","src":"51444:13:0"}],"id":2340,"name":"BinaryOperation","src":"51430:27:0"}],"id":2341,"name":"BinaryOperation","src":"51420:37:0"}],"id":2342,"name":"FunctionCall","src":"51412:46:0"}],"id":2343,"name":"ExpressionStatement","src":"51412:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2344,"name":"Identifier","src":"51468:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2111,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2320,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2345,"name":"Identifier","src":"51476:5:0"}],"id":2346,"name":"MemberAccess","src":"51476:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2347,"name":"Identifier","src":"51497:7:0"}],"id":2348,"name":"BinaryOperation","src":"51476:28:0"}],"id":2349,"name":"FunctionCall","src":"51468:37:0"}],"id":2350,"name":"ExpressionStatement","src":"51468:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2320,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2351,"name":"Identifier","src":"51516:5:0"}],"id":2353,"name":"MemberAccess","src":"51516:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2316,"type":"uint256","value":"_value"},"id":2354,"name":"Identifier","src":"51533:6:0"}],"id":2355,"name":"Assignment","src":"51516:23:0"}],"id":2356,"name":"ExpressionStatement","src":"51516:23:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2357,"name":"Identifier","src":"51549:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":674,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2048,"type":"contract Pinakion","value":"pinakion"},"id":2358,"name":"Identifier","src":"51557:8:0"}],"id":2359,"name":"MemberAccess","src":"51557:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2360,"name":"Identifier","src":"51575:3:0"}],"id":2361,"name":"MemberAccess","src":"51575:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2316,"type":"uint256","value":"_value"},"id":2362,"name":"Identifier","src":"51586:6:0"}],"id":2363,"name":"FunctionCall","src":"51557:36:0"}],"id":2364,"name":"FunctionCall","src":"51549:45:0"}],"id":2365,"name":"ExpressionStatement","src":"51549:45:0"}],"id":2366,"name":"Block","src":"51229:372:0"}],"id":2367,"name":"FunctionDefinition","src":"51191:410:0"},{"attributes":{"constant":false,"documentation":"@dev To call to go to a new period. TRUSTED.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"passPeriod","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":2368,"name":"ParameterList","src":"51844:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":2369,"name":"ParameterList","src":"51854:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2370,"name":"Identifier","src":"51864:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4549,"type":"uint256","value":"now"},"id":2371,"name":"Identifier","src":"51872:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2091,"type":"uint256","value":"lastPeriodChange"},"id":2372,"name":"Identifier","src":"51876:16:0"}],"id":2373,"name":"BinaryOperation","src":"51872:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2075,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":2374,"name":"Identifier","src":"51896:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":2375,"name":"ElementaryTypeNameExpression","src":"51910:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2376,"name":"Identifier","src":"51916:6:0"}],"id":2377,"name":"FunctionCall","src":"51910:13:0"}],"id":2378,"name":"IndexAccess","src":"51896:28:0"}],"id":2379,"name":"BinaryOperation","src":"51872:52:0"}],"id":2380,"name":"FunctionCall","src":"51864:61:0"}],"id":2381,"name":"ExpressionStatement","src":"51864:61:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2382,"name":"Identifier","src":"51940:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2383,"name":"Identifier","src":"51950:6:0"}],"id":2384,"name":"MemberAccess","src":"51950:17:0"}],"id":2385,"name":"BinaryOperation","src":"51940:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"uint256","value":"rnBlock"},"id":2386,"name":"Identifier","src":"51983:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4537,"type":"block","value":"block"},"id":2387,"name":"Identifier","src":"51993:5:0"}],"id":2388,"name":"MemberAccess","src":"51993:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2389,"name":"Literal","src":"52008:1:0"}],"id":2390,"name":"BinaryOperation","src":"51993:16:0"}],"id":2391,"name":"Assignment","src":"51983:26:0"}],"id":2392,"name":"ExpressionStatement","src":"51983:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"requestRN","referencedDeclaration":1613,"type":"function (uint256) payable external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2060,"type":"contract RNG","value":"rng"},"id":2393,"name":"Identifier","src":"52023:3:0"}],"id":2395,"name":"MemberAccess","src":"52023:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"uint256","value":"rnBlock"},"id":2396,"name":"Identifier","src":"52037:7:0"}],"id":2397,"name":"FunctionCall","src":"52023:22:0"}],"id":2398,"name":"ExpressionStatement","src":"52023:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2399,"name":"Identifier","src":"52059:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2400,"name":"Identifier","src":"52068:6:0"}],"id":2401,"name":"MemberAccess","src":"52068:11:0"}],"id":2402,"name":"Assignment","src":"52059:20:0"}],"id":2403,"name":"ExpressionStatement","src":"52059:20:0"}],"id":2404,"name":"Block","src":"51969:121:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2405,"name":"Identifier","src":"52100:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2406,"name":"Identifier","src":"52110:6:0"}],"id":2407,"name":"MemberAccess","src":"52110:11:0"}],"id":2408,"name":"BinaryOperation","src":"52100:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"uint256","value":"randomNumber"},"id":2409,"name":"Identifier","src":"52137:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getUncorrelatedRN","referencedDeclaration":1648,"type":"function (uint256) external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2060,"type":"contract RNG","value":"rng"},"id":2410,"name":"Identifier","src":"52152:3:0"}],"id":2411,"name":"MemberAccess","src":"52152:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"uint256","value":"rnBlock"},"id":2412,"name":"Identifier","src":"52174:7:0"}],"id":2413,"name":"FunctionCall","src":"52152:30:0"}],"id":2414,"name":"Assignment","src":"52137:45:0"}],"id":2415,"name":"ExpressionStatement","src":"52137:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2416,"name":"Identifier","src":"52196:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"uint256","value":"randomNumber"},"id":2417,"name":"Identifier","src":"52204:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2418,"name":"Literal","src":"52220:1:0"}],"id":2419,"name":"BinaryOperation","src":"52204:17:0"}],"id":2420,"name":"FunctionCall","src":"52196:26:0"}],"id":2421,"name":"ExpressionStatement","src":"52196:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2422,"name":"Identifier","src":"52236:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2423,"name":"Identifier","src":"52245:6:0"}],"id":2424,"name":"MemberAccess","src":"52245:11:0"}],"id":2425,"name":"Assignment","src":"52236:20:0"}],"id":2426,"name":"ExpressionStatement","src":"52236:20:0"}],"id":2427,"name":"Block","src":"52123:144:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2428,"name":"Identifier","src":"52277:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2429,"name":"Identifier","src":"52287:6:0"}],"id":2430,"name":"MemberAccess","src":"52287:11:0"}],"id":2431,"name":"BinaryOperation","src":"52277:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2432,"name":"Identifier","src":"52314:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2433,"name":"Identifier","src":"52323:6:0"}],"id":2434,"name":"MemberAccess","src":"52323:13:0"}],"id":2435,"name":"Assignment","src":"52314:22:0"}],"id":2436,"name":"ExpressionStatement","src":"52314:22:0"}],"id":2437,"name":"Block","src":"52300:47:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2438,"name":"Identifier","src":"52357:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2439,"name":"Identifier","src":"52367:6:0"}],"id":2440,"name":"MemberAccess","src":"52367:13:0"}],"id":2441,"name":"BinaryOperation","src":"52357:23:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2442,"name":"Identifier","src":"52396:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2443,"name":"Identifier","src":"52405:6:0"}],"id":2444,"name":"MemberAccess","src":"52405:16:0"}],"id":2445,"name":"Assignment","src":"52396:25:0"}],"id":2446,"name":"ExpressionStatement","src":"52396:25:0"}],"id":2447,"name":"Block","src":"52382:50:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2448,"name":"Identifier","src":"52442:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2449,"name":"Identifier","src":"52452:6:0"}],"id":2450,"name":"MemberAccess","src":"52452:16:0"}],"id":2451,"name":"BinaryOperation","src":"52442:26:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2452,"name":"Identifier","src":"52484:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2453,"name":"Identifier","src":"52493:6:0"}],"id":2454,"name":"MemberAccess","src":"52493:17:0"}],"id":2455,"name":"Assignment","src":"52484:26:0"}],"id":2456,"name":"ExpressionStatement","src":"52484:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2457,"name":"Identifier","src":"52526:7:0"}],"id":2458,"name":"UnaryOperation","src":"52524:9:0"}],"id":2459,"name":"ExpressionStatement","src":"52524:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"uint256","value":"segmentSize"},"id":2460,"name":"Identifier","src":"52547:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2461,"name":"Literal","src":"52561:1:0"}],"id":2462,"name":"Assignment","src":"52547:15:0"}],"id":2463,"name":"ExpressionStatement","src":"52547:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"uint256","value":"rnBlock"},"id":2464,"name":"Identifier","src":"52576:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2465,"name":"Literal","src":"52586:1:0"}],"id":2466,"name":"Assignment","src":"52576:11:0"}],"id":2467,"name":"ExpressionStatement","src":"52576:11:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"uint256","value":"randomNumber"},"id":2468,"name":"Identifier","src":"52601:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2469,"name":"Literal","src":"52616:1:0"}],"id":2470,"name":"Assignment","src":"52601:16:0"}],"id":2471,"name":"ExpressionStatement","src":"52601:16:0"}],"id":2472,"name":"Block","src":"52470:158:0"}],"id":2473,"name":"IfStatement","src":"52438:190:0"}],"id":2474,"name":"IfStatement","src":"52353:275:0"}],"id":2475,"name":"IfStatement","src":"52273:355:0"}],"id":2476,"name":"IfStatement","src":"52096:532:0"}],"id":2477,"name":"IfStatement","src":"51936:692:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2091,"type":"uint256","value":"lastPeriodChange"},"id":2478,"name":"Identifier","src":"52639:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4549,"type":"uint256","value":"now"},"id":2479,"name":"Identifier","src":"52658:3:0"}],"id":2480,"name":"Assignment","src":"52639:22:0"}],"id":2481,"name":"ExpressionStatement","src":"52639:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":2197,"type":"function (enum Kleros.Period,uint256)","value":"NewPeriod"},"id":2482,"name":"Identifier","src":"52671:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2483,"name":"Identifier","src":"52681:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2484,"name":"Identifier","src":"52689:7:0"}],"id":2485,"name":"FunctionCall","src":"52671:26:0"}],"id":2486,"name":"ExpressionStatement","src":"52671:26:0"}],"id":2487,"name":"Block","src":"51854:850:0"}],"id":2488,"name":"FunctionDefinition","src":"51825:879:0"},{"attributes":{"constant":false,"documentation":"@dev Deposit tokens in order to have chances of being drawn. Note that once tokens are deposited, \n there is no possibility of depositing more.\n @param _value Amount of tokens (in basic units) to deposit.","implemented":true,"isConstructor":false,"name":"activateTokens","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":2547,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2489,"name":"ElementaryTypeName","src":"52970:4:0"}],"id":2490,"name":"VariableDeclaration","src":"52970:11:0"}],"id":2491,"name":"ParameterList","src":"52969:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":2496,"name":"ParameterList","src":"53020:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2238,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2492,"name":"Identifier","src":"52990:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2493,"name":"Identifier","src":"53001:6:0"}],"id":2494,"name":"MemberAccess","src":"53001:17:0"}],"id":2495,"name":"ModifierInvocation","src":"52990:29:0"},{"children":[{"attributes":{"assignments":[2498]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2547,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":2497,"name":"UserDefinedTypeName","src":"53030:5:0"}],"id":2498,"name":"VariableDeclaration","src":"53030:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2499,"name":"Identifier","src":"53052:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2500,"name":"Identifier","src":"53059:3:0"}],"id":2501,"name":"MemberAccess","src":"53059:10:0"}],"id":2502,"name":"IndexAccess","src":"53052:18:0"}],"id":2503,"name":"VariableDeclarationStatement","src":"53030:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2504,"name":"Identifier","src":"53080:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2490,"type":"uint256","value":"_value"},"id":2505,"name":"Identifier","src":"53088:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2506,"name":"Identifier","src":"53098:5:0"}],"id":2507,"name":"MemberAccess","src":"53098:13:0"}],"id":2508,"name":"BinaryOperation","src":"53088:23:0"}],"id":2509,"name":"FunctionCall","src":"53080:32:0"}],"id":2510,"name":"ExpressionStatement","src":"53080:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2511,"name":"Identifier","src":"53122:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2490,"type":"uint256","value":"_value"},"id":2512,"name":"Identifier","src":"53130:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"minActivatedToken"},"id":2513,"name":"Identifier","src":"53140:17:0"}],"id":2514,"name":"BinaryOperation","src":"53130:27:0"}],"id":2515,"name":"FunctionCall","src":"53122:36:0"}],"id":2516,"name":"ExpressionStatement","src":"53122:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2517,"name":"Identifier","src":"53168:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2111,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2518,"name":"Identifier","src":"53176:5:0"}],"id":2519,"name":"MemberAccess","src":"53176:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2520,"name":"Identifier","src":"53197:7:0"}],"id":2521,"name":"BinaryOperation","src":"53176:28:0"}],"id":2522,"name":"FunctionCall","src":"53168:37:0"}],"id":2523,"name":"ExpressionStatement","src":"53168:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"lastSession","referencedDeclaration":2111,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2524,"name":"Identifier","src":"53283:5:0"}],"id":2526,"name":"MemberAccess","src":"53283:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2527,"name":"Identifier","src":"53303:7:0"}],"id":2528,"name":"Assignment","src":"53283:27:0"}],"id":2529,"name":"ExpressionStatement","src":"53283:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"segmentStart","referencedDeclaration":2113,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2530,"name":"Identifier","src":"53320:5:0"}],"id":2532,"name":"MemberAccess","src":"53320:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"uint256","value":"segmentSize"},"id":2533,"name":"Identifier","src":"53341:11:0"}],"id":2534,"name":"Assignment","src":"53320:32:0"}],"id":2535,"name":"ExpressionStatement","src":"53320:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"uint256","value":"segmentSize"},"id":2536,"name":"Identifier","src":"53362:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2490,"type":"uint256","value":"_value"},"id":2537,"name":"Identifier","src":"53377:6:0"}],"id":2538,"name":"Assignment","src":"53362:21:0"}],"id":2539,"name":"ExpressionStatement","src":"53362:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"segmentEnd","referencedDeclaration":2115,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2540,"name":"Identifier","src":"53393:5:0"}],"id":2542,"name":"MemberAccess","src":"53393:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"uint256","value":"segmentSize"},"id":2543,"name":"Identifier","src":"53412:11:0"}],"id":2544,"name":"Assignment","src":"53393:30:0"}],"id":2545,"name":"ExpressionStatement","src":"53393:30:0"}],"id":2546,"name":"Block","src":"53020:411:0"}],"id":2547,"name":"FunctionDefinition","src":"52946:485:0"},{"attributes":{"constant":false,"documentation":"@dev Vote a ruling. Juror must input the draw ID he was drawn.\n Note that the complexity is O(d), where d is amount of times the juror was drawn.\n Since being drawn multiple time is a rare occurrence and that a juror can always vote with less weight than it has, it is not a problem.\n But note that it can lead to arbitration fees being kept by the contract and never distributed.\n @param _disputeID The ID of the dispute the juror was drawn.\n @param _ruling The ruling given.\n @param _draws The list of draws the juror was drawn. Draw numbering starts at 1 and the numbers should be increasing.","implemented":true,"isConstructor":false,"name":"voteRuling","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2731,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2548,"name":"ElementaryTypeName","src":"54111:4:0"}],"id":2549,"name":"VariableDeclaration","src":"54111:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":2731,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2550,"name":"ElementaryTypeName","src":"54128:4:0"}],"id":2551,"name":"VariableDeclaration","src":"54128:12:0"},{"attributes":{"constant":false,"name":"_draws","scope":2731,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2552,"name":"ElementaryTypeName","src":"54142:4:0"}],"id":2553,"name":"ArrayTypeName","src":"54142:6:0"}],"id":2554,"name":"VariableDeclaration","src":"54142:13:0"}],"id":2555,"name":"ParameterList","src":"54110:46:0"},{"attributes":{"parameters":[null]},"children":[],"id":2560,"name":"ParameterList","src":"54188:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2238,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2556,"name":"Identifier","src":"54164:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2557,"name":"Identifier","src":"54175:6:0"}],"id":2558,"name":"MemberAccess","src":"54175:11:0"}],"id":2559,"name":"ModifierInvocation","src":"54164:23:0"},{"children":[{"attributes":{"assignments":[2562]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":2731,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":2561,"name":"UserDefinedTypeName","src":"54198:7:0"}],"id":2562,"name":"VariableDeclaration","src":"54198:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2563,"name":"Identifier","src":"54224:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2549,"type":"uint256","value":"_disputeID"},"id":2564,"name":"Identifier","src":"54233:10:0"}],"id":2565,"name":"IndexAccess","src":"54224:20:0"}],"id":2566,"name":"VariableDeclarationStatement","src":"54198:46:0"},{"attributes":{"assignments":[2568]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2731,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":2567,"name":"UserDefinedTypeName","src":"54254:5:0"}],"id":2568,"name":"VariableDeclaration","src":"54254:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2569,"name":"Identifier","src":"54276:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2570,"name":"Identifier","src":"54283:3:0"}],"id":2571,"name":"MemberAccess","src":"54283:10:0"}],"id":2572,"name":"IndexAccess","src":"54276:18:0"}],"id":2573,"name":"VariableDeclarationStatement","src":"54254:40:0"},{"attributes":{"assignments":[2575]},"children":[{"attributes":{"constant":false,"name":"voteCounter","scope":2731,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.VoteCounter","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"VoteCounter","referencedDeclaration":2134,"type":"struct Kleros.VoteCounter"},"id":2574,"name":"UserDefinedTypeName","src":"54304:11:0"}],"id":2575,"name":"VariableDeclaration","src":"54304:31:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2576,"name":"Identifier","src":"54338:7:0"}],"id":2577,"name":"MemberAccess","src":"54338:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2578,"name":"Identifier","src":"54358:7:0"}],"id":2579,"name":"MemberAccess","src":"54358:15:0"}],"id":2580,"name":"IndexAccess","src":"54338:36:0"}],"id":2581,"name":"VariableDeclarationStatement","src":"54304:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2582,"name":"Identifier","src":"54384:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2164,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2583,"name":"Identifier","src":"54392:7:0"}],"id":2584,"name":"MemberAccess","src":"54392:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2585,"name":"Identifier","src":"54416:3:0"}],"id":2586,"name":"MemberAccess","src":"54416:10:0"}],"id":2587,"name":"IndexAccess","src":"54392:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2588,"name":"Identifier","src":"54431:7:0"}],"id":2589,"name":"BinaryOperation","src":"54392:46:0"}],"id":2590,"name":"FunctionCall","src":"54384:55:0"}],"id":2591,"name":"ExpressionStatement","src":"54384:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2592,"name":"Identifier","src":"54486:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2551,"type":"uint256","value":"_ruling"},"id":2593,"name":"Identifier","src":"54494:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"choices","referencedDeclaration":2147,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2594,"name":"Identifier","src":"54505:7:0"}],"id":2595,"name":"MemberAccess","src":"54505:15:0"}],"id":2596,"name":"BinaryOperation","src":"54494:26:0"}],"id":2597,"name":"FunctionCall","src":"54486:35:0"}],"id":2598,"name":"ExpressionStatement","src":"54486:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2599,"name":"Identifier","src":"54590:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3808,"type":"function (address,uint256,uint256[] memory) view returns (bool)","value":"validDraws"},"id":2600,"name":"Identifier","src":"54598:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2601,"name":"Identifier","src":"54609:3:0"}],"id":2602,"name":"MemberAccess","src":"54609:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2549,"type":"uint256","value":"_disputeID"},"id":2603,"name":"Identifier","src":"54621:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2554,"type":"uint256[] memory","value":"_draws"},"id":2604,"name":"Identifier","src":"54633:6:0"}],"id":2605,"name":"FunctionCall","src":"54598:42:0"}],"id":2606,"name":"FunctionCall","src":"54590:51:0"}],"id":2607,"name":"ExpressionStatement","src":"54590:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2164,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2608,"name":"Identifier","src":"54652:7:0"}],"id":2612,"name":"MemberAccess","src":"54652:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2610,"name":"Identifier","src":"54676:3:0"}],"id":2611,"name":"MemberAccess","src":"54676:10:0"}],"id":2613,"name":"IndexAccess","src":"54652:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2614,"name":"Identifier","src":"54690:7:0"}],"id":2615,"name":"Assignment","src":"54652:45:0"}],"id":2616,"name":"ExpressionStatement","src":"54652:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2133,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2617,"name":"Identifier","src":"54707:11:0"}],"id":2620,"name":"MemberAccess","src":"54707:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2551,"type":"uint256","value":"_ruling"},"id":2619,"name":"Identifier","src":"54729:7:0"}],"id":2621,"name":"IndexAccess","src":"54707:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2554,"type":"uint256[] memory","value":"_draws"},"id":2622,"name":"Identifier","src":"54741:6:0"}],"id":2623,"name":"MemberAccess","src":"54741:13:0"}],"id":2624,"name":"Assignment","src":"54707:47:0"}],"id":2625,"name":"ExpressionStatement","src":"54707:47:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2129,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2626,"name":"Identifier","src":"54768:11:0"}],"id":2627,"name":"MemberAccess","src":"54768:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2133,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2628,"name":"Identifier","src":"54795:11:0"}],"id":2629,"name":"MemberAccess","src":"54795:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2551,"type":"uint256","value":"_ruling"},"id":2630,"name":"Identifier","src":"54817:7:0"}],"id":2631,"name":"IndexAccess","src":"54795:30:0"}],"id":2632,"name":"BinaryOperation","src":"54768:57:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningCount","referencedDeclaration":2129,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2633,"name":"Identifier","src":"54841:11:0"}],"id":2635,"name":"MemberAccess","src":"54841:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2133,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2636,"name":"Identifier","src":"54868:11:0"}],"id":2637,"name":"MemberAccess","src":"54868:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2551,"type":"uint256","value":"_ruling"},"id":2638,"name":"Identifier","src":"54890:7:0"}],"id":2639,"name":"IndexAccess","src":"54868:30:0"}],"id":2640,"name":"Assignment","src":"54841:57:0"}],"id":2641,"name":"ExpressionStatement","src":"54841:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningChoice","referencedDeclaration":2127,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2642,"name":"Identifier","src":"54912:11:0"}],"id":2644,"name":"MemberAccess","src":"54912:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2551,"type":"uint256","value":"_ruling"},"id":2645,"name":"Identifier","src":"54940:7:0"}],"id":2646,"name":"Assignment","src":"54912:35:0"}],"id":2647,"name":"ExpressionStatement","src":"54912:35:0"}],"id":2648,"name":"Block","src":"54827:131:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2129,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2649,"name":"Identifier","src":"54968:11:0"}],"id":2650,"name":"MemberAccess","src":"54968:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2133,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2651,"name":"Identifier","src":"54994:11:0"}],"id":2652,"name":"MemberAccess","src":"54994:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2551,"type":"uint256","value":"_ruling"},"id":2653,"name":"Identifier","src":"55016:7:0"}],"id":2654,"name":"IndexAccess","src":"54994:30:0"}],"id":2655,"name":"BinaryOperation","src":"54968:56:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2554,"type":"uint256[] memory","value":"_draws"},"id":2656,"name":"Identifier","src":"55028:6:0"}],"id":2657,"name":"MemberAccess","src":"55028:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2658,"name":"Literal","src":"55043:1:0"}],"id":2659,"name":"BinaryOperation","src":"55028:16:0"}],"id":2660,"name":"BinaryOperation","src":"54968:76:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningChoice","referencedDeclaration":2127,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2661,"name":"Identifier","src":"55157:11:0"}],"id":2663,"name":"MemberAccess","src":"55157:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2664,"name":"Literal","src":"55185:1:0"}],"id":2665,"name":"Assignment","src":"55157:29:0"}],"id":2666,"name":"ExpressionStatement","src":"55157:29:0"}],"id":2667,"name":"Block","src":"55046:176:0"}],"id":2668,"name":"IfStatement","src":"54964:258:0"}],"id":2669,"name":"IfStatement","src":"54764:458:0"},{"children":[{"attributes":{"assignments":[2671]},"children":[{"attributes":{"constant":false,"name":"i","scope":2731,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2670,"name":"ElementaryTypeName","src":"55236:4:0"}],"id":2671,"name":"VariableDeclaration","src":"55236:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2672,"name":"Literal","src":"55245:1:0"}],"id":2673,"name":"VariableDeclarationStatement","src":"55236:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2671,"type":"uint256","value":"i"},"id":2674,"name":"Identifier","src":"55248:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2554,"type":"uint256[] memory","value":"_draws"},"id":2675,"name":"Identifier","src":"55252:6:0"}],"id":2676,"name":"MemberAccess","src":"55252:13:0"}],"id":2677,"name":"BinaryOperation","src":"55248:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2671,"type":"uint256","value":"i"},"id":2678,"name":"Identifier","src":"55269:1:0"}],"id":2679,"name":"UnaryOperation","src":"55267:3:0"}],"id":2680,"name":"ExpressionStatement","src":"55267:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vote_$2125_memory","typeString":"struct Kleros.Vote memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (struct Kleros.Vote storage ref) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2681,"name":"Identifier","src":"55286:7:0"}],"id":2685,"name":"MemberAccess","src":"55286:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2683,"name":"Identifier","src":"55300:7:0"}],"id":2684,"name":"MemberAccess","src":"55300:15:0"}],"id":2686,"name":"IndexAccess","src":"55286:30:0"}],"id":2687,"name":"MemberAccess","src":"55286:35:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["account","ruling"],"type":"struct Kleros.Vote memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2125,"type":"type(struct Kleros.Vote storage pointer)","value":"Vote"},"id":2688,"name":"Identifier","src":"55322:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2689,"name":"Identifier","src":"55354:3:0"}],"id":2690,"name":"MemberAccess","src":"55354:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2551,"type":"uint256","value":"_ruling"},"id":2691,"name":"Identifier","src":"55390:7:0"}],"id":2692,"name":"FunctionCall","src":"55322:90:0"}],"id":2693,"name":"FunctionCall","src":"55286:127:0"}],"id":2694,"name":"ExpressionStatement","src":"55286:127:0"}],"id":2695,"name":"Block","src":"55272:152:0"}],"id":2696,"name":"ForStatement","src":"55231:193:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":2109,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2568,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2697,"name":"Identifier","src":"55434:5:0"}],"id":2699,"name":"MemberAccess","src":"55434:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2554,"type":"uint256[] memory","value":"_draws"},"id":2700,"name":"Identifier","src":"55451:6:0"}],"id":2701,"name":"MemberAccess","src":"55451:13:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":4120,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":2702,"name":"Identifier","src":"55467:15:0"}],"id":2703,"name":"FunctionCall","src":"55467:17:0"}],"id":2704,"name":"BinaryOperation","src":"55451:33:0"}],"id":2705,"name":"Assignment","src":"55434:50:0"}],"id":2706,"name":"ExpressionStatement","src":"55434:50:0"},{"attributes":{"assignments":[2708]},"children":[{"attributes":{"constant":false,"name":"feeToPay","scope":2731,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2707,"name":"ElementaryTypeName","src":"55494:4:0"}],"id":2708,"name":"VariableDeclaration","src":"55494:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2554,"type":"uint256[] memory","value":"_draws"},"id":2709,"name":"Identifier","src":"55510:6:0"}],"id":2710,"name":"MemberAccess","src":"55510:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2151,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2562,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2711,"name":"Identifier","src":"55526:7:0"}],"id":2712,"name":"MemberAccess","src":"55526:30:0"}],"id":2713,"name":"BinaryOperation","src":"55510:46:0"}],"id":2714,"name":"VariableDeclarationStatement","src":"55494:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2715,"name":"Identifier","src":"55566:3:0"}],"id":2718,"name":"MemberAccess","src":"55566:10:0"}],"id":2719,"name":"MemberAccess","src":"55566:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2708,"type":"uint256","value":"feeToPay"},"id":2720,"name":"Identifier","src":"55586:8:0"}],"id":2721,"name":"FunctionCall","src":"55566:29:0"}],"id":2722,"name":"ExpressionStatement","src":"55566:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":2213,"type":"function (address,uint256,uint256)","value":"ArbitrationReward"},"id":2723,"name":"Identifier","src":"55605:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2724,"name":"Identifier","src":"55623:3:0"}],"id":2725,"name":"MemberAccess","src":"55623:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2549,"type":"uint256","value":"_disputeID"},"id":2726,"name":"Identifier","src":"55635:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2708,"type":"uint256","value":"feeToPay"},"id":2727,"name":"Identifier","src":"55647:8:0"}],"id":2728,"name":"FunctionCall","src":"55605:51:0"}],"id":2729,"name":"ExpressionStatement","src":"55605:51:0"}],"id":2730,"name":"Block","src":"54188:1475:0"}],"id":2731,"name":"FunctionDefinition","src":"54091:1572:0"},{"attributes":{"constant":false,"documentation":"@dev Steal part of the tokens and the arbitration fee of a juror who failed to vote.\n Note that a juror who voted but without all his weight can't be penalized.\n It is possible to not penalize with the maximum weight.\n But note that it can lead to arbitration fees being kept by the contract and never distributed.\n @param _jurorAddress Address of the juror to steal tokens from.\n @param _disputeID The ID of the dispute the juror was drawn.\n @param _draws The list of draws the juror was drawn. Numbering starts at 1 and the numbers should be increasing.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"penalizeInactiveJuror","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_jurorAddress","scope":2878,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2732,"name":"ElementaryTypeName","src":"56314:7:0"}],"id":2733,"name":"VariableDeclaration","src":"56314:21:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":2878,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2734,"name":"ElementaryTypeName","src":"56337:4:0"}],"id":2735,"name":"VariableDeclaration","src":"56337:15:0"},{"attributes":{"constant":false,"name":"_draws","scope":2878,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2736,"name":"ElementaryTypeName","src":"56354:4:0"}],"id":2737,"name":"ArrayTypeName","src":"56354:6:0"}],"id":2738,"name":"VariableDeclaration","src":"56354:13:0"}],"id":2739,"name":"ParameterList","src":"56313:55:0"},{"attributes":{"parameters":[null]},"children":[],"id":2740,"name":"ParameterList","src":"56376:0:0"},{"children":[{"attributes":{"assignments":[2742]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":2878,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":2741,"name":"UserDefinedTypeName","src":"56386:7:0"}],"id":2742,"name":"VariableDeclaration","src":"56386:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2743,"name":"Identifier","src":"56412:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2735,"type":"uint256","value":"_disputeID"},"id":2744,"name":"Identifier","src":"56421:10:0"}],"id":2745,"name":"IndexAccess","src":"56412:20:0"}],"id":2746,"name":"VariableDeclarationStatement","src":"56386:46:0"},{"attributes":{"assignments":[2748]},"children":[{"attributes":{"constant":false,"name":"inactiveJuror","scope":2878,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":2747,"name":"UserDefinedTypeName","src":"56442:5:0"}],"id":2748,"name":"VariableDeclaration","src":"56442:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2749,"name":"Identifier","src":"56472:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2733,"type":"address","value":"_jurorAddress"},"id":2750,"name":"Identifier","src":"56479:13:0"}],"id":2751,"name":"IndexAccess","src":"56472:21:0"}],"id":2752,"name":"VariableDeclarationStatement","src":"56442:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2753,"name":"Identifier","src":"56503:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":2754,"name":"Identifier","src":"56511:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2755,"name":"Identifier","src":"56520:6:0"}],"id":2756,"name":"MemberAccess","src":"56520:11:0"}],"id":2757,"name":"BinaryOperation","src":"56511:20:0"}],"id":2758,"name":"FunctionCall","src":"56503:29:0"}],"id":2759,"name":"ExpressionStatement","src":"56503:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2760,"name":"Identifier","src":"56542:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2164,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2761,"name":"Identifier","src":"56550:7:0"}],"id":2762,"name":"MemberAccess","src":"56550:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2733,"type":"address","value":"_jurorAddress"},"id":2763,"name":"Identifier","src":"56574:13:0"}],"id":2764,"name":"IndexAccess","src":"56550:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2765,"name":"Identifier","src":"56592:7:0"}],"id":2766,"name":"BinaryOperation","src":"56550:49:0"}],"id":2767,"name":"FunctionCall","src":"56542:58:0"}],"id":2768,"name":"ExpressionStatement","src":"56542:58:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2164,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2769,"name":"Identifier","src":"56644:7:0"}],"id":2772,"name":"MemberAccess","src":"56644:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2733,"type":"address","value":"_jurorAddress"},"id":2771,"name":"Identifier","src":"56668:13:0"}],"id":2773,"name":"IndexAccess","src":"56644:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2774,"name":"Identifier","src":"56685:7:0"}],"id":2775,"name":"Assignment","src":"56644:48:0"}],"id":2776,"name":"ExpressionStatement","src":"56644:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2777,"name":"Identifier","src":"56761:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3808,"type":"function (address,uint256,uint256[] memory) view returns (bool)","value":"validDraws"},"id":2778,"name":"Identifier","src":"56769:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2733,"type":"address","value":"_jurorAddress"},"id":2779,"name":"Identifier","src":"56780:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2735,"type":"uint256","value":"_disputeID"},"id":2780,"name":"Identifier","src":"56795:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2738,"type":"uint256[] memory","value":"_draws"},"id":2781,"name":"Identifier","src":"56807:6:0"}],"id":2782,"name":"FunctionCall","src":"56769:45:0"}],"id":2783,"name":"FunctionCall","src":"56761:54:0"}],"id":2784,"name":"ExpressionStatement","src":"56761:54:0"},{"attributes":{"assignments":[2786]},"children":[{"attributes":{"constant":false,"name":"penality","scope":2878,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2785,"name":"ElementaryTypeName","src":"56825:4:0"}],"id":2786,"name":"VariableDeclaration","src":"56825:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2738,"type":"uint256[] memory","value":"_draws"},"id":2787,"name":"Identifier","src":"56841:6:0"}],"id":2788,"name":"MemberAccess","src":"56841:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"minActivatedToken"},"id":2789,"name":"Identifier","src":"56857:17:0"}],"id":2790,"name":"BinaryOperation","src":"56841:33:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2791,"name":"Literal","src":"56877:1:0"}],"id":2792,"name":"BinaryOperation","src":"56841:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2078,"type":"uint256","value":"alpha"},"id":2793,"name":"Identifier","src":"56881:5:0"}],"id":2794,"name":"BinaryOperation","src":"56841:45:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2081,"type":"uint256","value":"ALPHA_DIVISOR"},"id":2795,"name":"Identifier","src":"56889:13:0"}],"id":2796,"name":"BinaryOperation","src":"56841:61:0"}],"id":2797,"name":"VariableDeclarationStatement","src":"56825:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2798,"name":"Identifier","src":"56912:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2799,"name":"Identifier","src":"56924:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2748,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2800,"name":"Identifier","src":"56935:13:0"}],"id":2801,"name":"MemberAccess","src":"56935:21:0"}],"id":2802,"name":"BinaryOperation","src":"56924:32:0"}],"id":2803,"name":"TupleExpression","src":"56923:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2804,"name":"Identifier","src":"56960:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2748,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2805,"name":"Identifier","src":"56971:13:0"}],"id":2806,"name":"MemberAccess","src":"56971:21:0"}],"id":2807,"name":"Conditional","src":"56923:69:0"}],"id":2808,"name":"Assignment","src":"56912:80:0"}],"id":2809,"name":"ExpressionStatement","src":"56912:80:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2748,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2810,"name":"Identifier","src":"57060:13:0"}],"id":2812,"name":"MemberAccess","src":"57060:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2813,"name":"Identifier","src":"57085:8:0"}],"id":2814,"name":"Assignment","src":"57060:33:0"}],"id":2815,"name":"ExpressionStatement","src":"57060:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2816,"name":"Identifier","src":"57103:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2733,"type":"address","value":"_jurorAddress"},"id":2817,"name":"Identifier","src":"57114:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2735,"type":"uint256","value":"_disputeID"},"id":2818,"name":"Identifier","src":"57129:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"int256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2819,"name":"ElementaryTypeNameExpression","src":"57142:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2820,"name":"Identifier","src":"57146:8:0"}],"id":2821,"name":"FunctionCall","src":"57142:13:0"}],"id":2822,"name":"UnaryOperation","src":"57141:14:0"}],"id":2823,"name":"FunctionCall","src":"57103:53:0"}],"id":2824,"name":"ExpressionStatement","src":"57103:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2825,"name":"Identifier","src":"57166:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2826,"name":"Identifier","src":"57173:3:0"}],"id":2827,"name":"MemberAccess","src":"57173:10:0"}],"id":2828,"name":"IndexAccess","src":"57166:18:0"}],"id":2829,"name":"MemberAccess","src":"57166:26:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2830,"name":"Identifier","src":"57196:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2831,"name":"Literal","src":"57207:1:0"}],"id":2832,"name":"BinaryOperation","src":"57196:12:0"}],"id":2833,"name":"Assignment","src":"57166:42:0"}],"id":2834,"name":"ExpressionStatement","src":"57166:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2835,"name":"Identifier","src":"57261:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2836,"name":"Identifier","src":"57272:3:0"}],"id":2837,"name":"MemberAccess","src":"57272:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2735,"type":"uint256","value":"_disputeID"},"id":2838,"name":"Identifier","src":"57284:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2839,"name":"ElementaryTypeNameExpression","src":"57296:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2840,"name":"Identifier","src":"57300:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2841,"name":"Literal","src":"57311:1:0"}],"id":2842,"name":"BinaryOperation","src":"57300:12:0"}],"id":2843,"name":"FunctionCall","src":"57296:17:0"}],"id":2844,"name":"FunctionCall","src":"57261:53:0"}],"id":2845,"name":"ExpressionStatement","src":"57261:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2846,"name":"Identifier","src":"57324:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":2847,"name":"Identifier","src":"57331:8:0"}],"id":2848,"name":"IndexAccess","src":"57324:16:0"}],"id":2849,"name":"MemberAccess","src":"57324:24:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2850,"name":"Identifier","src":"57352:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2851,"name":"Literal","src":"57363:1:0"}],"id":2852,"name":"BinaryOperation","src":"57352:12:0"}],"id":2853,"name":"Assignment","src":"57324:40:0"}],"id":2854,"name":"ExpressionStatement","src":"57324:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2855,"name":"Identifier","src":"57409:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":2856,"name":"Identifier","src":"57420:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2735,"type":"uint256","value":"_disputeID"},"id":2857,"name":"Identifier","src":"57430:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2858,"name":"ElementaryTypeNameExpression","src":"57442:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2786,"type":"uint256","value":"penality"},"id":2859,"name":"Identifier","src":"57446:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2860,"name":"Literal","src":"57457:1:0"}],"id":2861,"name":"BinaryOperation","src":"57446:12:0"}],"id":2862,"name":"FunctionCall","src":"57442:17:0"}],"id":2863,"name":"FunctionCall","src":"57409:51:0"}],"id":2864,"name":"ExpressionStatement","src":"57409:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":2865,"name":"Identifier","src":"57470:3:0"}],"id":2868,"name":"MemberAccess","src":"57470:10:0"}],"id":2869,"name":"MemberAccess","src":"57470:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2738,"type":"uint256[] memory","value":"_draws"},"id":2870,"name":"Identifier","src":"57490:6:0"}],"id":2871,"name":"MemberAccess","src":"57490:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2151,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2872,"name":"Identifier","src":"57504:7:0"}],"id":2873,"name":"MemberAccess","src":"57504:30:0"}],"id":2874,"name":"BinaryOperation","src":"57490:44:0"}],"id":2875,"name":"FunctionCall","src":"57470:65:0"}],"id":2876,"name":"ExpressionStatement","src":"57470:65:0"}],"id":2877,"name":"Block","src":"56376:1210:0"}],"id":2878,"name":"FunctionDefinition","src":"56283:1303:0"},{"attributes":{"constant":false,"documentation":"@dev Execute all the token repartition.\n Note that this function could consume to much gas if there is too much votes. \n It is O(v), where v is the number of votes for this dispute.\n In the next version, there will also be a function to execute it in multiple calls \n (but note that one shot execution, if possible, is less expensive).\n @param _disputeID ID of the dispute.","implemented":true,"isConstructor":false,"name":"oneShotTokenRepartition","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2879,"name":"ElementaryTypeName","src":"58050:4:0"}],"id":2880,"name":"VariableDeclaration","src":"58050:15:0"}],"id":2881,"name":"ParameterList","src":"58049:17:0"},{"attributes":{"parameters":[null]},"children":[],"id":2886,"name":"ParameterList","src":"58103:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2238,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2882,"name":"Identifier","src":"58074:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":2883,"name":"Identifier","src":"58085:6:0"}],"id":2884,"name":"MemberAccess","src":"58085:16:0"}],"id":2885,"name":"ModifierInvocation","src":"58074:28:0"},{"children":[{"attributes":{"assignments":[2888]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3167,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":2887,"name":"UserDefinedTypeName","src":"58113:7:0"}],"id":2888,"name":"VariableDeclaration","src":"58113:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2889,"name":"Identifier","src":"58139:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2880,"type":"uint256","value":"_disputeID"},"id":2890,"name":"Identifier","src":"58148:10:0"}],"id":2891,"name":"IndexAccess","src":"58139:20:0"}],"id":2892,"name":"VariableDeclarationStatement","src":"58113:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2893,"name":"Identifier","src":"58169:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2139","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2894,"name":"Identifier","src":"58177:7:0"}],"id":2895,"name":"MemberAccess","src":"58177:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":2896,"name":"Identifier","src":"58194:12:0"}],"id":2897,"name":"MemberAccess","src":"58194:17:0"}],"id":2898,"name":"BinaryOperation","src":"58177:34:0"}],"id":2899,"name":"FunctionCall","src":"58169:43:0"}],"id":2900,"name":"ExpressionStatement","src":"58169:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":2901,"name":"Identifier","src":"58222:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2902,"name":"Identifier","src":"58230:7:0"}],"id":2903,"name":"MemberAccess","src":"58230:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2904,"name":"Identifier","src":"58246:7:0"}],"id":2905,"name":"MemberAccess","src":"58246:15:0"}],"id":2906,"name":"BinaryOperation","src":"58230:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":2907,"name":"Identifier","src":"58265:7:0"}],"id":2908,"name":"BinaryOperation","src":"58230:42:0"}],"id":2909,"name":"FunctionCall","src":"58222:51:0"}],"id":2910,"name":"ExpressionStatement","src":"58222:51:0"},{"attributes":{"assignments":[2912]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2911,"name":"ElementaryTypeName","src":"58284:4:0"}],"id":2912,"name":"VariableDeclaration","src":"58284:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2127,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2913,"name":"Identifier","src":"58305:7:0"}],"id":2914,"name":"MemberAccess","src":"58305:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2915,"name":"Identifier","src":"58325:7:0"}],"id":2916,"name":"MemberAccess","src":"58325:15:0"}],"id":2917,"name":"IndexAccess","src":"58305:36:0"}],"id":2918,"name":"MemberAccess","src":"58305:50:0"}],"id":2919,"name":"VariableDeclarationStatement","src":"58284:71:0"},{"attributes":{"assignments":[2921]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2920,"name":"ElementaryTypeName","src":"58365:4:0"}],"id":2921,"name":"VariableDeclaration","src":"58365:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":4120,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":2922,"name":"Identifier","src":"58384:15:0"}],"id":2923,"name":"FunctionCall","src":"58384:17:0"}],"id":2924,"name":"VariableDeclarationStatement","src":"58365:36:0"},{"children":[{"attributes":{"assignments":[2926]},"children":[{"attributes":{"constant":false,"name":"i","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2925,"name":"ElementaryTypeName","src":"58416:4:0"}],"id":2926,"name":"VariableDeclaration","src":"58416:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2927,"name":"Literal","src":"58425:1:0"}],"id":2928,"name":"VariableDeclarationStatement","src":"58416:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":2929,"name":"Identifier","src":"58428:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2930,"name":"Identifier","src":"58433:7:0"}],"id":2931,"name":"MemberAccess","src":"58433:15:0"}],"id":2932,"name":"BinaryOperation","src":"58428:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":2933,"name":"Identifier","src":"58452:1:0"}],"id":2934,"name":"UnaryOperation","src":"58450:3:0"}],"id":2935,"name":"ExpressionStatement","src":"58450:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2912,"type":"uint256","value":"winningChoice"},"id":2936,"name":"Identifier","src":"58857:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2937,"name":"Literal","src":"58872:1:0"}],"id":2938,"name":"BinaryOperation","src":"58857:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2133,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2939,"name":"Identifier","src":"58878:7:0"}],"id":2940,"name":"MemberAccess","src":"58878:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2941,"name":"Identifier","src":"58898:7:0"}],"id":2942,"name":"MemberAccess","src":"58898:15:0"}],"id":2943,"name":"IndexAccess","src":"58878:36:0"}],"id":2944,"name":"MemberAccess","src":"58878:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2945,"name":"Literal","src":"58925:1:0"}],"id":2946,"name":"IndexAccess","src":"58878:49:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2129,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2947,"name":"Identifier","src":"58931:7:0"}],"id":2948,"name":"MemberAccess","src":"58931:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2949,"name":"Identifier","src":"58951:7:0"}],"id":2950,"name":"MemberAccess","src":"58951:15:0"}],"id":2951,"name":"IndexAccess","src":"58931:36:0"}],"id":2952,"name":"MemberAccess","src":"58931:49:0"}],"id":2953,"name":"BinaryOperation","src":"58878:102:0"}],"id":2954,"name":"TupleExpression","src":"58877:104:0"}],"id":2955,"name":"BinaryOperation","src":"58857:124:0"},{"children":[{"attributes":{"assignments":[2957]},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2956,"name":"ElementaryTypeName","src":"59001:4:0"}],"id":2957,"name":"VariableDeclaration","src":"59001:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2958,"name":"Literal","src":"59028:1:0"}],"id":2959,"name":"VariableDeclarationStatement","src":"59001:28:0"},{"attributes":{"assignments":[2961]},"children":[{"attributes":{"constant":false,"name":"nbCoherent","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2960,"name":"ElementaryTypeName","src":"59047:4:0"}],"id":2961,"name":"VariableDeclaration","src":"59047:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2962,"name":"Literal","src":"59065:1:0"}],"id":2963,"name":"VariableDeclarationStatement","src":"59047:19:0"},{"children":[{"attributes":{"assignments":[2965]},"children":[{"attributes":{"constant":false,"name":"j","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2964,"name":"ElementaryTypeName","src":"59153:4:0"}],"id":2965,"name":"VariableDeclaration","src":"59153:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2966,"name":"Literal","src":"59162:1:0"}],"id":2967,"name":"VariableDeclarationStatement","src":"59153:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":2968,"name":"Identifier","src":"59165:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2969,"name":"Identifier","src":"59169:7:0"}],"id":2970,"name":"MemberAccess","src":"59169:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":2971,"name":"Identifier","src":"59183:1:0"}],"id":2972,"name":"IndexAccess","src":"59169:16:0"}],"id":2973,"name":"MemberAccess","src":"59169:23:0"}],"id":2974,"name":"BinaryOperation","src":"59165:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":2975,"name":"Identifier","src":"59196:1:0"}],"id":2976,"name":"UnaryOperation","src":"59194:3:0"}],"id":2977,"name":"ExpressionStatement","src":"59194:3:0"},{"children":[{"attributes":{"assignments":[2979]},"children":[{"attributes":{"constant":false,"name":"vote","scope":3167,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Vote","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":2125,"type":"struct Kleros.Vote"},"id":2978,"name":"UserDefinedTypeName","src":"59221:4:0"}],"id":2979,"name":"VariableDeclaration","src":"59221:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2980,"name":"Identifier","src":"59241:7:0"}],"id":2981,"name":"MemberAccess","src":"59241:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":2982,"name":"Identifier","src":"59255:1:0"}],"id":2983,"name":"IndexAccess","src":"59241:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":2984,"name":"Identifier","src":"59258:1:0"}],"id":2985,"name":"IndexAccess","src":"59241:19:0"}],"id":2986,"name":"VariableDeclarationStatement","src":"59221:39:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2124,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2987,"name":"Identifier","src":"59286:4:0"}],"id":2988,"name":"MemberAccess","src":"59286:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2912,"type":"uint256","value":"winningChoice"},"id":2989,"name":"Identifier","src":"59301:13:0"}],"id":2990,"name":"BinaryOperation","src":"59286:28:0"},{"children":[{"attributes":{"assignments":[2992]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3167,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":2991,"name":"UserDefinedTypeName","src":"59342:5:0"}],"id":2992,"name":"VariableDeclaration","src":"59342:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2993,"name":"Identifier","src":"59364:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2994,"name":"Identifier","src":"59371:4:0"}],"id":2995,"name":"MemberAccess","src":"59371:12:0"}],"id":2996,"name":"IndexAccess","src":"59364:20:0"}],"id":2997,"name":"VariableDeclarationStatement","src":"59342:42:0"},{"attributes":{"assignments":[2999]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2998,"name":"ElementaryTypeName","src":"59410:4:0"}],"id":2999,"name":"VariableDeclaration","src":"59410:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2921,"type":"uint256","value":"amountShift"},"id":3000,"name":"Identifier","src":"59425:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3001,"name":"Identifier","src":"59437:5:0"}],"id":3002,"name":"MemberAccess","src":"59437:13:0"}],"id":3003,"name":"BinaryOperation","src":"59425:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2921,"type":"uint256","value":"amountShift"},"id":3004,"name":"Identifier","src":"59453:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3005,"name":"Identifier","src":"59467:5:0"}],"id":3006,"name":"MemberAccess","src":"59467:13:0"}],"id":3007,"name":"Conditional","src":"59425:55:0"}],"id":3008,"name":"VariableDeclarationStatement","src":"59410:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3009,"name":"Identifier","src":"59506:5:0"}],"id":3011,"name":"MemberAccess","src":"59506:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"uint256","value":"penalty"},"id":3012,"name":"Identifier","src":"59523:7:0"}],"id":3013,"name":"Assignment","src":"59506:24:0"}],"id":3014,"name":"ExpressionStatement","src":"59506:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3015,"name":"Identifier","src":"59556:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3016,"name":"Identifier","src":"59567:4:0"}],"id":3017,"name":"MemberAccess","src":"59567:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2880,"type":"uint256","value":"_disputeID"},"id":3018,"name":"Identifier","src":"59581:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3019,"name":"ElementaryTypeNameExpression","src":"59593:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"uint256","value":"penalty"},"id":3020,"name":"Identifier","src":"59598:7:0"}],"id":3021,"name":"UnaryOperation","src":"59597:8:0"}],"id":3022,"name":"FunctionCall","src":"59593:13:0"}],"id":3023,"name":"FunctionCall","src":"59556:51:0"}],"id":3024,"name":"ExpressionStatement","src":"59556:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2957,"type":"uint256","value":"totalToRedistribute"},"id":3025,"name":"Identifier","src":"59633:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"uint256","value":"penalty"},"id":3026,"name":"Identifier","src":"59656:7:0"}],"id":3027,"name":"Assignment","src":"59633:30:0"}],"id":3028,"name":"ExpressionStatement","src":"59633:30:0"}],"id":3029,"name":"Block","src":"59316:370:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2961,"type":"uint256","value":"nbCoherent"},"id":3030,"name":"Identifier","src":"59720:10:0"}],"id":3031,"name":"UnaryOperation","src":"59718:12:0"}],"id":3032,"name":"ExpressionStatement","src":"59718:12:0"}],"id":3033,"name":"Block","src":"59692:61:0"}],"id":3034,"name":"IfStatement","src":"59282:471:0"}],"id":3035,"name":"Block","src":"59199:572:0"}],"id":3036,"name":"ForStatement","src":"59148:623:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2961,"type":"uint256","value":"nbCoherent"},"id":3037,"name":"Identifier","src":"59792:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3038,"name":"Literal","src":"59806:1:0"}],"id":3039,"name":"BinaryOperation","src":"59792:15:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3040,"name":"Identifier","src":"59902:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":3041,"name":"Identifier","src":"59909:8:0"}],"id":3042,"name":"IndexAccess","src":"59902:16:0"}],"id":3043,"name":"MemberAccess","src":"59902:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2957,"type":"uint256","value":"totalToRedistribute"},"id":3044,"name":"Identifier","src":"59930:19:0"}],"id":3045,"name":"Assignment","src":"59902:47:0"}],"id":3046,"name":"ExpressionStatement","src":"59902:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3047,"name":"Identifier","src":"59971:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":3048,"name":"Identifier","src":"59982:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2880,"type":"uint256","value":"_disputeID"},"id":3049,"name":"Identifier","src":"59992:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3050,"name":"ElementaryTypeNameExpression","src":"60004:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2957,"type":"uint256","value":"totalToRedistribute"},"id":3051,"name":"Identifier","src":"60008:19:0"}],"id":3052,"name":"FunctionCall","src":"60004:24:0"}],"id":3053,"name":"FunctionCall","src":"59971:58:0"}],"id":3054,"name":"ExpressionStatement","src":"59971:58:0"}],"id":3055,"name":"Block","src":"59809:239:0"},{"children":[{"attributes":{"assignments":[3057]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":3167,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3056,"name":"ElementaryTypeName","src":"60109:4:0"}],"id":3057,"name":"VariableDeclaration","src":"60109:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2957,"type":"uint256","value":"totalToRedistribute"},"id":3058,"name":"Identifier","src":"60131:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2961,"type":"uint256","value":"nbCoherent"},"id":3059,"name":"Identifier","src":"60153:10:0"}],"id":3060,"name":"BinaryOperation","src":"60131:32:0"}],"id":3061,"name":"VariableDeclarationStatement","src":"60109:54:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3062,"name":"Identifier","src":"60345:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3063,"name":"Literal","src":"60349:1:0"}],"id":3064,"name":"Assignment","src":"60345:5:0"}],"id":3065,"name":"ExpressionStatement","src":"60345:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3066,"name":"Identifier","src":"60352:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3067,"name":"Identifier","src":"60356:7:0"}],"id":3068,"name":"MemberAccess","src":"60356:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":3069,"name":"Identifier","src":"60370:1:0"}],"id":3070,"name":"IndexAccess","src":"60356:16:0"}],"id":3071,"name":"MemberAccess","src":"60356:23:0"}],"id":3072,"name":"BinaryOperation","src":"60352:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3073,"name":"Identifier","src":"60383:1:0"}],"id":3074,"name":"UnaryOperation","src":"60381:3:0"}],"id":3075,"name":"ExpressionStatement","src":"60381:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3076,"name":"Identifier","src":"60412:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3077,"name":"Identifier","src":"60419:7:0"}],"id":3078,"name":"MemberAccess","src":"60419:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":3079,"name":"Identifier","src":"60433:1:0"}],"id":3080,"name":"IndexAccess","src":"60419:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3081,"name":"Identifier","src":"60436:1:0"}],"id":3082,"name":"IndexAccess","src":"60419:19:0"}],"id":3083,"name":"Assignment","src":"60412:26:0"}],"id":3084,"name":"ExpressionStatement","src":"60412:26:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2124,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3085,"name":"Identifier","src":"60468:4:0"}],"id":3086,"name":"MemberAccess","src":"60468:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2912,"type":"uint256","value":"winningChoice"},"id":3087,"name":"Identifier","src":"60483:13:0"}],"id":3088,"name":"BinaryOperation","src":"60468:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3089,"name":"Identifier","src":"60528:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3090,"name":"Identifier","src":"60536:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3091,"name":"Identifier","src":"60543:4:0"}],"id":3092,"name":"MemberAccess","src":"60543:12:0"}],"id":3093,"name":"IndexAccess","src":"60536:20:0"}],"id":3094,"name":"Assignment","src":"60528:28:0"}],"id":3095,"name":"ExpressionStatement","src":"60528:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3096,"name":"Identifier","src":"60586:5:0"}],"id":3098,"name":"MemberAccess","src":"60586:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3057,"type":"uint256","value":"toRedistribute"},"id":3099,"name":"Identifier","src":"60603:14:0"}],"id":3100,"name":"Assignment","src":"60586:31:0"}],"id":3101,"name":"ExpressionStatement","src":"60586:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3102,"name":"Identifier","src":"60647:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3103,"name":"Identifier","src":"60658:4:0"}],"id":3104,"name":"MemberAccess","src":"60658:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2880,"type":"uint256","value":"_disputeID"},"id":3105,"name":"Identifier","src":"60672:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3106,"name":"ElementaryTypeNameExpression","src":"60684:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3057,"type":"uint256","value":"toRedistribute"},"id":3107,"name":"Identifier","src":"60688:14:0"}],"id":3108,"name":"FunctionCall","src":"60684:19:0"}],"id":3109,"name":"FunctionCall","src":"60647:57:0"}],"id":3110,"name":"ExpressionStatement","src":"60647:57:0"}],"id":3111,"name":"Block","src":"60498:233:0"}],"id":3112,"name":"IfStatement","src":"60464:267:0"}],"id":3113,"name":"Block","src":"60386:367:0"}],"id":3114,"name":"ForStatement","src":"60340:413:0"}],"id":3115,"name":"Block","src":"60054:717:0"}],"id":3116,"name":"IfStatement","src":"59788:983:0"}],"id":3117,"name":"Block","src":"58983:1802:0"}],"id":3118,"name":"IfStatement","src":"58853:1932:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3119,"name":"Identifier","src":"60877:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3120,"name":"Literal","src":"60881:1:0"}],"id":3121,"name":"Assignment","src":"60877:5:0"}],"id":3122,"name":"ExpressionStatement","src":"60877:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3123,"name":"Identifier","src":"60884:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3124,"name":"Identifier","src":"60888:7:0"}],"id":3125,"name":"MemberAccess","src":"60888:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":3126,"name":"Identifier","src":"60902:1:0"}],"id":3127,"name":"IndexAccess","src":"60888:16:0"}],"id":3128,"name":"MemberAccess","src":"60888:23:0"}],"id":3129,"name":"BinaryOperation","src":"60884:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3130,"name":"Identifier","src":"60915:1:0"}],"id":3131,"name":"UnaryOperation","src":"60913:3:0"}],"id":3132,"name":"ExpressionStatement","src":"60913:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3133,"name":"Identifier","src":"60936:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3134,"name":"Identifier","src":"60943:7:0"}],"id":3135,"name":"MemberAccess","src":"60943:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2926,"type":"uint256","value":"i"},"id":3136,"name":"Identifier","src":"60957:1:0"}],"id":3137,"name":"IndexAccess","src":"60943:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2965,"type":"uint256","value":"j"},"id":3138,"name":"Identifier","src":"60960:1:0"}],"id":3139,"name":"IndexAccess","src":"60943:19:0"}],"id":3140,"name":"Assignment","src":"60936:26:0"}],"id":3141,"name":"ExpressionStatement","src":"60936:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3142,"name":"Identifier","src":"60980:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3143,"name":"Identifier","src":"60988:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2979,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3144,"name":"Identifier","src":"60995:4:0"}],"id":3145,"name":"MemberAccess","src":"60995:12:0"}],"id":3146,"name":"IndexAccess","src":"60988:20:0"}],"id":3147,"name":"Assignment","src":"60980:28:0"}],"id":3148,"name":"ExpressionStatement","src":"60980:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":2109,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3149,"name":"Identifier","src":"61026:5:0"}],"id":3151,"name":"MemberAccess","src":"61026:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2921,"type":"uint256","value":"amountShift"},"id":3152,"name":"Identifier","src":"61043:11:0"}],"id":3153,"name":"Assignment","src":"61026:28:0"}],"id":3154,"name":"ExpressionStatement","src":"61026:28:0"}],"id":3155,"name":"Block","src":"60918:248:0"}],"id":3156,"name":"ForStatement","src":"60872:294:0"}],"id":3157,"name":"Block","src":"58455:2721:0"}],"id":3158,"name":"ForStatement","src":"58411:2765:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2888,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3159,"name":"Identifier","src":"61185:7:0"}],"id":3161,"name":"MemberAccess","src":"61185:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3162,"name":"Identifier","src":"61201:12:0"}],"id":3163,"name":"MemberAccess","src":"61201:23:0"}],"id":3164,"name":"Assignment","src":"61185:39:0"}],"id":3165,"name":"ExpressionStatement","src":"61185:39:0"}],"id":3166,"name":"Block","src":"58103:3200:0"}],"id":3167,"name":"FunctionDefinition","src":"58017:3286:0"},{"attributes":{"constant":false,"documentation":"@dev Execute token repartition on a dispute for a specific number of votes.\n This should only be called if oneShotTokenRepartition will throw because there are too many votes (will use too much gas).\n Note that There are 3 iterations per vote. e.g. A dispute with 1 appeal (2 sessions) and 3 votes per session will have 18 iterations\n @param _disputeID ID of the dispute.\n @param _maxIterations the maxium number of votes to repartition in this iteration","implemented":true,"isConstructor":false,"name":"multipleShotTokenRepartition","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3168,"name":"ElementaryTypeName","src":"61846:4:0"}],"id":3169,"name":"VariableDeclaration","src":"61846:15:0"},{"attributes":{"constant":false,"name":"_maxIterations","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3170,"name":"ElementaryTypeName","src":"61863:4:0"}],"id":3171,"name":"VariableDeclaration","src":"61863:19:0"}],"id":3172,"name":"ParameterList","src":"61845:38:0"},{"attributes":{"parameters":[null]},"children":[],"id":3177,"name":"ParameterList","src":"61920:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2238,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":3173,"name":"Identifier","src":"61891:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":3174,"name":"Identifier","src":"61902:6:0"}],"id":3175,"name":"MemberAccess","src":"61902:16:0"}],"id":3176,"name":"ModifierInvocation","src":"61891:28:0"},{"children":[{"attributes":{"assignments":[3179]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3661,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":3178,"name":"UserDefinedTypeName","src":"61930:7:0"}],"id":3179,"name":"VariableDeclaration","src":"61930:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3180,"name":"Identifier","src":"61956:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3169,"type":"uint256","value":"_disputeID"},"id":3181,"name":"Identifier","src":"61965:10:0"}],"id":3182,"name":"IndexAccess","src":"61956:20:0"}],"id":3183,"name":"VariableDeclarationStatement","src":"61930:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3184,"name":"Identifier","src":"61986:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2139","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3185,"name":"Identifier","src":"61994:7:0"}],"id":3186,"name":"MemberAccess","src":"61994:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Resolving","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3187,"name":"Identifier","src":"62011:12:0"}],"id":3188,"name":"MemberAccess","src":"62011:22:0"}],"id":3189,"name":"BinaryOperation","src":"61994:39:0"}],"id":3190,"name":"FunctionCall","src":"61986:48:0"}],"id":3191,"name":"ExpressionStatement","src":"61986:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3192,"name":"Identifier","src":"62044:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3193,"name":"Identifier","src":"62052:7:0"}],"id":3194,"name":"MemberAccess","src":"62052:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3195,"name":"Identifier","src":"62068:7:0"}],"id":3196,"name":"MemberAccess","src":"62068:15:0"}],"id":3197,"name":"BinaryOperation","src":"62052:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":3198,"name":"Identifier","src":"62087:7:0"}],"id":3199,"name":"BinaryOperation","src":"62052:42:0"}],"id":3200,"name":"FunctionCall","src":"62044:51:0"}],"id":3201,"name":"ExpressionStatement","src":"62044:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3202,"name":"Identifier","src":"62105:7:0"}],"id":3204,"name":"MemberAccess","src":"62105:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Resolving","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3205,"name":"Identifier","src":"62121:12:0"}],"id":3206,"name":"MemberAccess","src":"62121:22:0"}],"id":3207,"name":"Assignment","src":"62105:38:0"}],"id":3208,"name":"ExpressionStatement","src":"62105:38:0"},{"attributes":{"assignments":[3210]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3209,"name":"ElementaryTypeName","src":"62231:4:0"}],"id":3210,"name":"VariableDeclaration","src":"62231:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2127,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3211,"name":"Identifier","src":"62252:7:0"}],"id":3212,"name":"MemberAccess","src":"62252:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3213,"name":"Identifier","src":"62272:7:0"}],"id":3214,"name":"MemberAccess","src":"62272:15:0"}],"id":3215,"name":"IndexAccess","src":"62252:36:0"}],"id":3216,"name":"MemberAccess","src":"62252:50:0"}],"id":3217,"name":"VariableDeclarationStatement","src":"62231:71:0"},{"attributes":{"assignments":[3219]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3218,"name":"ElementaryTypeName","src":"62312:4:0"}],"id":3219,"name":"VariableDeclaration","src":"62312:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":4120,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":3220,"name":"Identifier","src":"62331:15:0"}],"id":3221,"name":"FunctionCall","src":"62331:17:0"}],"id":3222,"name":"VariableDeclarationStatement","src":"62312:36:0"},{"attributes":{"assignments":[3224]},"children":[{"attributes":{"constant":false,"name":"currentIterations","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3223,"name":"ElementaryTypeName","src":"62358:4:0"}],"id":3224,"name":"VariableDeclaration","src":"62358:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3225,"name":"Literal","src":"62383:1:0"}],"id":3226,"name":"VariableDeclarationStatement","src":"62358:26:0"},{"children":[{"attributes":{"assignments":[3228]},"children":[{"attributes":{"constant":false,"name":"i","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3227,"name":"ElementaryTypeName","src":"62452:4:0"}],"id":3228,"name":"VariableDeclaration","src":"62452:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentAppealToRepartition","referencedDeclaration":2166,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3229,"name":"Identifier","src":"62461:7:0"}],"id":3230,"name":"MemberAccess","src":"62461:34:0"}],"id":3231,"name":"VariableDeclarationStatement","src":"62452:43:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3232,"name":"Identifier","src":"62497:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3233,"name":"Identifier","src":"62502:7:0"}],"id":3234,"name":"MemberAccess","src":"62502:15:0"}],"id":3235,"name":"BinaryOperation","src":"62497:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3236,"name":"Identifier","src":"62521:1:0"}],"id":3237,"name":"UnaryOperation","src":"62519:3:0"}],"id":3238,"name":"ExpressionStatement","src":"62519:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3239,"name":"Identifier","src":"62602:7:0"}],"id":3240,"name":"MemberAccess","src":"62602:28:0"}],"id":3241,"name":"MemberAccess","src":"62602:35:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3242,"name":"Identifier","src":"62640:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3243,"name":"Literal","src":"62642:1:0"}],"id":3244,"name":"BinaryOperation","src":"62640:3:0"}],"id":3245,"name":"BinaryOperation","src":"62602:41:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3246,"name":"Identifier","src":"62663:7:0"}],"id":3249,"name":"MemberAccess","src":"62663:28:0"}],"id":3250,"name":"MemberAccess","src":"62663:35:0"}],"id":3251,"name":"UnaryOperation","src":"62663:37:0"}],"id":3252,"name":"ExpressionStatement","src":"62663:37:0"}],"id":3253,"name":"Block","src":"62645:70:0"}],"id":3254,"name":"IfStatement","src":"62598:117:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3210,"type":"uint256","value":"winningChoice"},"id":3255,"name":"Identifier","src":"62882:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3256,"name":"Literal","src":"62897:1:0"}],"id":3257,"name":"BinaryOperation","src":"62882:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2133,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3258,"name":"Identifier","src":"62903:7:0"}],"id":3259,"name":"MemberAccess","src":"62903:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3260,"name":"Identifier","src":"62923:7:0"}],"id":3261,"name":"MemberAccess","src":"62923:15:0"}],"id":3262,"name":"IndexAccess","src":"62903:36:0"}],"id":3263,"name":"MemberAccess","src":"62903:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3264,"name":"Literal","src":"62950:1:0"}],"id":3265,"name":"IndexAccess","src":"62903:49:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2129,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3266,"name":"Identifier","src":"62956:7:0"}],"id":3267,"name":"MemberAccess","src":"62956:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3268,"name":"Identifier","src":"62976:7:0"}],"id":3269,"name":"MemberAccess","src":"62976:15:0"}],"id":3270,"name":"IndexAccess","src":"62956:36:0"}],"id":3271,"name":"MemberAccess","src":"62956:49:0"}],"id":3272,"name":"BinaryOperation","src":"62903:102:0"}],"id":3273,"name":"TupleExpression","src":"62902:104:0"}],"id":3274,"name":"BinaryOperation","src":"62882:124:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3275,"name":"Identifier","src":"63089:7:0"}],"id":3278,"name":"MemberAccess","src":"63089:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3277,"name":"Identifier","src":"63118:1:0"}],"id":3279,"name":"IndexAccess","src":"63089:31:0"}],"id":3280,"name":"MemberAccess","src":"63089:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3281,"name":"Identifier","src":"63129:16:0"}],"id":3282,"name":"MemberAccess","src":"63129:24:0"}],"id":3283,"name":"Assignment","src":"63089:64:0"}],"id":3284,"name":"ExpressionStatement","src":"63089:64:0"}],"id":3285,"name":"Block","src":"63008:160:0"}],"id":3286,"name":"IfStatement","src":"62878:290:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2175","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3287,"name":"Identifier","src":"63246:7:0"}],"id":3288,"name":"MemberAccess","src":"63246:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3289,"name":"Identifier","src":"63275:1:0"}],"id":3290,"name":"IndexAccess","src":"63246:31:0"}],"id":3291,"name":"MemberAccess","src":"63246:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Incoherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3292,"name":"Identifier","src":"63287:16:0"}],"id":3293,"name":"MemberAccess","src":"63287:27:0"}],"id":3294,"name":"BinaryOperation","src":"63246:68:0"},{"children":[{"children":[{"attributes":{"assignments":[3296]},"children":[{"attributes":{"constant":false,"name":"j","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3295,"name":"ElementaryTypeName","src":"63339:4:0"}],"id":3296,"name":"VariableDeclaration","src":"63339:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentIncoherentVote","referencedDeclaration":2181,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3297,"name":"Identifier","src":"63348:7:0"}],"id":3298,"name":"MemberAccess","src":"63348:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3299,"name":"Identifier","src":"63377:1:0"}],"id":3300,"name":"IndexAccess","src":"63348:31:0"}],"id":3301,"name":"MemberAccess","src":"63348:53:0"}],"id":3302,"name":"VariableDeclarationStatement","src":"63339:62:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3303,"name":"Identifier","src":"63403:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3304,"name":"Identifier","src":"63407:7:0"}],"id":3305,"name":"MemberAccess","src":"63407:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3306,"name":"Identifier","src":"63421:1:0"}],"id":3307,"name":"IndexAccess","src":"63407:16:0"}],"id":3308,"name":"MemberAccess","src":"63407:23:0"}],"id":3309,"name":"BinaryOperation","src":"63403:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3310,"name":"Identifier","src":"63434:1:0"}],"id":3311,"name":"UnaryOperation","src":"63432:3:0"}],"id":3312,"name":"ExpressionStatement","src":"63432:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3224,"type":"uint256","value":"currentIterations"},"id":3313,"name":"Identifier","src":"63463:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3171,"type":"uint256","value":"_maxIterations"},"id":3314,"name":"Identifier","src":"63484:14:0"}],"id":3315,"name":"BinaryOperation","src":"63463:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":3177},"id":3316,"name":"Return","src":"63526:7:0"}],"id":3317,"name":"Block","src":"63500:55:0"}],"id":3318,"name":"IfStatement","src":"63459:96:0"},{"attributes":{"assignments":[3320]},"children":[{"attributes":{"constant":false,"name":"vote","scope":3661,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Vote","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":2125,"type":"struct Kleros.Vote"},"id":3319,"name":"UserDefinedTypeName","src":"63576:4:0"}],"id":3320,"name":"VariableDeclaration","src":"63576:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3321,"name":"Identifier","src":"63596:7:0"}],"id":3322,"name":"MemberAccess","src":"63596:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3323,"name":"Identifier","src":"63610:1:0"}],"id":3324,"name":"IndexAccess","src":"63596:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3325,"name":"Identifier","src":"63613:1:0"}],"id":3326,"name":"IndexAccess","src":"63596:19:0"}],"id":3327,"name":"VariableDeclarationStatement","src":"63576:39:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2124,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3328,"name":"Identifier","src":"63641:4:0"}],"id":3329,"name":"MemberAccess","src":"63641:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3210,"type":"uint256","value":"winningChoice"},"id":3330,"name":"Identifier","src":"63656:13:0"}],"id":3331,"name":"BinaryOperation","src":"63641:28:0"},{"children":[{"attributes":{"assignments":[3333]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3661,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":3332,"name":"UserDefinedTypeName","src":"63697:5:0"}],"id":3333,"name":"VariableDeclaration","src":"63697:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3334,"name":"Identifier","src":"63719:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3335,"name":"Identifier","src":"63726:4:0"}],"id":3336,"name":"MemberAccess","src":"63726:12:0"}],"id":3337,"name":"IndexAccess","src":"63719:20:0"}],"id":3338,"name":"VariableDeclarationStatement","src":"63697:42:0"},{"attributes":{"assignments":[3340]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3339,"name":"ElementaryTypeName","src":"63765:4:0"}],"id":3340,"name":"VariableDeclaration","src":"63765:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3219,"type":"uint256","value":"amountShift"},"id":3341,"name":"Identifier","src":"63780:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3333,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3342,"name":"Identifier","src":"63792:5:0"}],"id":3343,"name":"MemberAccess","src":"63792:13:0"}],"id":3344,"name":"BinaryOperation","src":"63780:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3219,"type":"uint256","value":"amountShift"},"id":3345,"name":"Identifier","src":"63808:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3333,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3346,"name":"Identifier","src":"63822:5:0"}],"id":3347,"name":"MemberAccess","src":"63822:13:0"}],"id":3348,"name":"Conditional","src":"63780:55:0"}],"id":3349,"name":"VariableDeclarationStatement","src":"63765:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3333,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3350,"name":"Identifier","src":"63861:5:0"}],"id":3352,"name":"MemberAccess","src":"63861:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"uint256","value":"penalty"},"id":3353,"name":"Identifier","src":"63878:7:0"}],"id":3354,"name":"Assignment","src":"63861:24:0"}],"id":3355,"name":"ExpressionStatement","src":"63861:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3356,"name":"Identifier","src":"63911:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3357,"name":"Identifier","src":"63922:4:0"}],"id":3358,"name":"MemberAccess","src":"63922:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3169,"type":"uint256","value":"_disputeID"},"id":3359,"name":"Identifier","src":"63936:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3360,"name":"ElementaryTypeNameExpression","src":"63948:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"uint256","value":"penalty"},"id":3361,"name":"Identifier","src":"63953:7:0"}],"id":3362,"name":"UnaryOperation","src":"63952:8:0"}],"id":3363,"name":"FunctionCall","src":"63948:13:0"}],"id":3364,"name":"FunctionCall","src":"63911:51:0"}],"id":3365,"name":"ExpressionStatement","src":"63911:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"totalToRedistribute","referencedDeclaration":2177,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3366,"name":"Identifier","src":"63988:7:0"}],"id":3369,"name":"MemberAccess","src":"63988:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3368,"name":"Identifier","src":"64017:1:0"}],"id":3370,"name":"IndexAccess","src":"63988:31:0"}],"id":3371,"name":"MemberAccess","src":"63988:51:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"uint256","value":"penalty"},"id":3372,"name":"Identifier","src":"64043:7:0"}],"id":3373,"name":"Assignment","src":"63988:62:0"}],"id":3374,"name":"ExpressionStatement","src":"63988:62:0"}],"id":3375,"name":"Block","src":"63671:402:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"nbCoherent","referencedDeclaration":2179,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3376,"name":"Identifier","src":"64107:7:0"}],"id":3377,"name":"MemberAccess","src":"64107:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3378,"name":"Identifier","src":"64136:1:0"}],"id":3379,"name":"IndexAccess","src":"64107:31:0"}],"id":3380,"name":"MemberAccess","src":"64107:42:0"}],"id":3381,"name":"UnaryOperation","src":"64105:44:0"}],"id":3382,"name":"ExpressionStatement","src":"64105:44:0"}],"id":3383,"name":"Block","src":"64079:93:0"}],"id":3384,"name":"IfStatement","src":"63637:535:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentIncoherentVote","referencedDeclaration":2181,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3385,"name":"Identifier","src":"64196:7:0"}],"id":3386,"name":"MemberAccess","src":"64196:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3387,"name":"Identifier","src":"64225:1:0"}],"id":3388,"name":"IndexAccess","src":"64196:31:0"}],"id":3389,"name":"MemberAccess","src":"64196:53:0"}],"id":3390,"name":"UnaryOperation","src":"64194:55:0"}],"id":3391,"name":"ExpressionStatement","src":"64194:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3224,"type":"uint256","value":"currentIterations"},"id":3392,"name":"Identifier","src":"64273:17:0"}],"id":3393,"name":"UnaryOperation","src":"64271:19:0"}],"id":3394,"name":"ExpressionStatement","src":"64271:19:0"}],"id":3395,"name":"Block","src":"63437:872:0"}],"id":3396,"name":"ForStatement","src":"63334:975:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3397,"name":"Identifier","src":"64327:7:0"}],"id":3400,"name":"MemberAccess","src":"64327:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3399,"name":"Identifier","src":"64356:1:0"}],"id":3401,"name":"IndexAccess","src":"64327:31:0"}],"id":3402,"name":"MemberAccess","src":"64327:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Coherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3403,"name":"Identifier","src":"64367:16:0"}],"id":3404,"name":"MemberAccess","src":"64367:25:0"}],"id":3405,"name":"Assignment","src":"64327:65:0"}],"id":3406,"name":"ExpressionStatement","src":"64327:65:0"}],"id":3407,"name":"Block","src":"63316:1091:0"}],"id":3408,"name":"IfStatement","src":"63242:1165:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2175","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3409,"name":"Identifier","src":"64478:7:0"}],"id":3410,"name":"MemberAccess","src":"64478:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3411,"name":"Identifier","src":"64507:1:0"}],"id":3412,"name":"IndexAccess","src":"64478:31:0"}],"id":3413,"name":"MemberAccess","src":"64478:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Coherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3414,"name":"Identifier","src":"64519:16:0"}],"id":3415,"name":"MemberAccess","src":"64519:25:0"}],"id":3416,"name":"BinaryOperation","src":"64478:66:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"nbCoherent","referencedDeclaration":2179,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3417,"name":"Identifier","src":"64568:7:0"}],"id":3418,"name":"MemberAccess","src":"64568:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3419,"name":"Identifier","src":"64597:1:0"}],"id":3420,"name":"IndexAccess","src":"64568:31:0"}],"id":3421,"name":"MemberAccess","src":"64568:42:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3422,"name":"Literal","src":"64614:1:0"}],"id":3423,"name":"BinaryOperation","src":"64568:47:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3424,"name":"Identifier","src":"64710:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":3425,"name":"Identifier","src":"64717:8:0"}],"id":3426,"name":"IndexAccess","src":"64710:16:0"}],"id":3427,"name":"MemberAccess","src":"64710:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":2177,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3428,"name":"Identifier","src":"64738:7:0"}],"id":3429,"name":"MemberAccess","src":"64738:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3430,"name":"Identifier","src":"64767:1:0"}],"id":3431,"name":"IndexAccess","src":"64738:31:0"}],"id":3432,"name":"MemberAccess","src":"64738:51:0"}],"id":3433,"name":"Assignment","src":"64710:79:0"}],"id":3434,"name":"ExpressionStatement","src":"64710:79:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3435,"name":"Identifier","src":"64811:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":3436,"name":"Identifier","src":"64822:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3169,"type":"uint256","value":"_disputeID"},"id":3437,"name":"Identifier","src":"64832:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3438,"name":"ElementaryTypeNameExpression","src":"64844:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":2177,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3439,"name":"Identifier","src":"64848:7:0"}],"id":3440,"name":"MemberAccess","src":"64848:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3441,"name":"Identifier","src":"64877:1:0"}],"id":3442,"name":"IndexAccess","src":"64848:31:0"}],"id":3443,"name":"MemberAccess","src":"64848:51:0"}],"id":3444,"name":"FunctionCall","src":"64844:56:0"}],"id":3445,"name":"FunctionCall","src":"64811:90:0"}],"id":3446,"name":"ExpressionStatement","src":"64811:90:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3447,"name":"Identifier","src":"64923:7:0"}],"id":3450,"name":"MemberAccess","src":"64923:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3449,"name":"Identifier","src":"64952:1:0"}],"id":3451,"name":"IndexAccess","src":"64923:31:0"}],"id":3452,"name":"MemberAccess","src":"64923:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3453,"name":"Identifier","src":"64963:16:0"}],"id":3454,"name":"MemberAccess","src":"64963:24:0"}],"id":3455,"name":"Assignment","src":"64923:64:0"}],"id":3456,"name":"ExpressionStatement","src":"64923:64:0"}],"id":3457,"name":"Block","src":"64617:389:0"},{"children":[{"attributes":{"assignments":[3459]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":3661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3458,"name":"ElementaryTypeName","src":"65067:4:0"}],"id":3459,"name":"VariableDeclaration","src":"65067:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":2177,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3460,"name":"Identifier","src":"65089:7:0"}],"id":3461,"name":"MemberAccess","src":"65089:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3462,"name":"Identifier","src":"65118:1:0"}],"id":3463,"name":"IndexAccess","src":"65089:31:0"}],"id":3464,"name":"MemberAccess","src":"65089:51:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"nbCoherent","referencedDeclaration":2179,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3465,"name":"Identifier","src":"65143:7:0"}],"id":3466,"name":"MemberAccess","src":"65143:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3467,"name":"Identifier","src":"65172:1:0"}],"id":3468,"name":"IndexAccess","src":"65143:31:0"}],"id":3469,"name":"MemberAccess","src":"65143:42:0"}],"id":3470,"name":"BinaryOperation","src":"65089:96:0"}],"id":3471,"name":"VariableDeclarationStatement","src":"65067:118:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3472,"name":"Identifier","src":"65367:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentCoherentVote","referencedDeclaration":2183,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3473,"name":"Identifier","src":"65371:7:0"}],"id":3474,"name":"MemberAccess","src":"65371:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3475,"name":"Identifier","src":"65400:1:0"}],"id":3476,"name":"IndexAccess","src":"65371:31:0"}],"id":3477,"name":"MemberAccess","src":"65371:51:0"}],"id":3478,"name":"Assignment","src":"65367:55:0"}],"id":3479,"name":"ExpressionStatement","src":"65367:55:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3480,"name":"Identifier","src":"65424:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3481,"name":"Identifier","src":"65428:7:0"}],"id":3482,"name":"MemberAccess","src":"65428:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3483,"name":"Identifier","src":"65442:1:0"}],"id":3484,"name":"IndexAccess","src":"65428:16:0"}],"id":3485,"name":"MemberAccess","src":"65428:23:0"}],"id":3486,"name":"BinaryOperation","src":"65424:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3487,"name":"Identifier","src":"65455:1:0"}],"id":3488,"name":"UnaryOperation","src":"65453:3:0"}],"id":3489,"name":"ExpressionStatement","src":"65453:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3224,"type":"uint256","value":"currentIterations"},"id":3490,"name":"Identifier","src":"65488:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3171,"type":"uint256","value":"_maxIterations"},"id":3491,"name":"Identifier","src":"65509:14:0"}],"id":3492,"name":"BinaryOperation","src":"65488:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":3177},"id":3493,"name":"Return","src":"65555:7:0"}],"id":3494,"name":"Block","src":"65525:63:0"}],"id":3495,"name":"IfStatement","src":"65484:104:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3496,"name":"Identifier","src":"65613:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3497,"name":"Identifier","src":"65620:7:0"}],"id":3498,"name":"MemberAccess","src":"65620:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3499,"name":"Identifier","src":"65634:1:0"}],"id":3500,"name":"IndexAccess","src":"65620:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3501,"name":"Identifier","src":"65637:1:0"}],"id":3502,"name":"IndexAccess","src":"65620:19:0"}],"id":3503,"name":"Assignment","src":"65613:26:0"}],"id":3504,"name":"ExpressionStatement","src":"65613:26:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2124,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3505,"name":"Identifier","src":"65669:4:0"}],"id":3506,"name":"MemberAccess","src":"65669:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3210,"type":"uint256","value":"winningChoice"},"id":3507,"name":"Identifier","src":"65684:13:0"}],"id":3508,"name":"BinaryOperation","src":"65669:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3333,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3509,"name":"Identifier","src":"65729:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3510,"name":"Identifier","src":"65737:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3511,"name":"Identifier","src":"65744:4:0"}],"id":3512,"name":"MemberAccess","src":"65744:12:0"}],"id":3513,"name":"IndexAccess","src":"65737:20:0"}],"id":3514,"name":"Assignment","src":"65729:28:0"}],"id":3515,"name":"ExpressionStatement","src":"65729:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2107,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3333,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3516,"name":"Identifier","src":"65787:5:0"}],"id":3518,"name":"MemberAccess","src":"65787:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3459,"type":"uint256","value":"toRedistribute"},"id":3519,"name":"Identifier","src":"65804:14:0"}],"id":3520,"name":"Assignment","src":"65787:31:0"}],"id":3521,"name":"ExpressionStatement","src":"65787:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2205,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3522,"name":"Identifier","src":"65848:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3523,"name":"Identifier","src":"65859:4:0"}],"id":3524,"name":"MemberAccess","src":"65859:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3169,"type":"uint256","value":"_disputeID"},"id":3525,"name":"Identifier","src":"65873:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3526,"name":"ElementaryTypeNameExpression","src":"65885:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3459,"type":"uint256","value":"toRedistribute"},"id":3527,"name":"Identifier","src":"65889:14:0"}],"id":3528,"name":"FunctionCall","src":"65885:19:0"}],"id":3529,"name":"FunctionCall","src":"65848:57:0"}],"id":3530,"name":"ExpressionStatement","src":"65848:57:0"}],"id":3531,"name":"Block","src":"65699:233:0"}],"id":3532,"name":"IfStatement","src":"65665:267:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3224,"type":"uint256","value":"currentIterations"},"id":3533,"name":"Identifier","src":"65960:17:0"}],"id":3534,"name":"UnaryOperation","src":"65958:19:0"}],"id":3535,"name":"ExpressionStatement","src":"65958:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentCoherentVote","referencedDeclaration":2183,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3536,"name":"Identifier","src":"66005:7:0"}],"id":3537,"name":"MemberAccess","src":"66005:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3538,"name":"Identifier","src":"66034:1:0"}],"id":3539,"name":"IndexAccess","src":"66005:31:0"}],"id":3540,"name":"MemberAccess","src":"66005:51:0"}],"id":3541,"name":"UnaryOperation","src":"66003:53:0"}],"id":3542,"name":"ExpressionStatement","src":"66003:53:0"}],"id":3543,"name":"Block","src":"65458:621:0"}],"id":3544,"name":"ForStatement","src":"65362:717:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3545,"name":"Identifier","src":"66101:7:0"}],"id":3548,"name":"MemberAccess","src":"66101:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3547,"name":"Identifier","src":"66130:1:0"}],"id":3549,"name":"IndexAccess","src":"66101:31:0"}],"id":3550,"name":"MemberAccess","src":"66101:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3551,"name":"Identifier","src":"66141:16:0"}],"id":3552,"name":"MemberAccess","src":"66141:24:0"}],"id":3553,"name":"Assignment","src":"66101:64:0"}],"id":3554,"name":"ExpressionStatement","src":"66101:64:0"}],"id":3555,"name":"Block","src":"65012:1172:0"}],"id":3556,"name":"IfStatement","src":"64564:1620:0"}],"id":3557,"name":"Block","src":"64546:1652:0"}],"id":3558,"name":"IfStatement","src":"64474:1724:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2175","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3559,"name":"Identifier","src":"66216:7:0"}],"id":3560,"name":"MemberAccess","src":"66216:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3561,"name":"Identifier","src":"66245:1:0"}],"id":3562,"name":"IndexAccess","src":"66216:31:0"}],"id":3563,"name":"MemberAccess","src":"66216:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3564,"name":"Identifier","src":"66257:16:0"}],"id":3565,"name":"MemberAccess","src":"66257:24:0"}],"id":3566,"name":"BinaryOperation","src":"66216:65:0"},{"children":[{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3567,"name":"Identifier","src":"66384:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentAtStakeVote","referencedDeclaration":2185,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3568,"name":"Identifier","src":"66388:7:0"}],"id":3569,"name":"MemberAccess","src":"66388:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3570,"name":"Identifier","src":"66417:1:0"}],"id":3571,"name":"IndexAccess","src":"66388:31:0"}],"id":3572,"name":"MemberAccess","src":"66388:50:0"}],"id":3573,"name":"Assignment","src":"66384:54:0"}],"id":3574,"name":"ExpressionStatement","src":"66384:54:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3575,"name":"Identifier","src":"66440:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3576,"name":"Identifier","src":"66444:7:0"}],"id":3577,"name":"MemberAccess","src":"66444:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3578,"name":"Identifier","src":"66458:1:0"}],"id":3579,"name":"IndexAccess","src":"66444:16:0"}],"id":3580,"name":"MemberAccess","src":"66444:23:0"}],"id":3581,"name":"BinaryOperation","src":"66440:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3582,"name":"Identifier","src":"66471:1:0"}],"id":3583,"name":"UnaryOperation","src":"66469:3:0"}],"id":3584,"name":"ExpressionStatement","src":"66469:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3224,"type":"uint256","value":"currentIterations"},"id":3585,"name":"Identifier","src":"66500:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3171,"type":"uint256","value":"_maxIterations"},"id":3586,"name":"Identifier","src":"66521:14:0"}],"id":3587,"name":"BinaryOperation","src":"66500:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":3177},"id":3588,"name":"Return","src":"66563:7:0"}],"id":3589,"name":"Block","src":"66537:55:0"}],"id":3590,"name":"IfStatement","src":"66496:96:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3591,"name":"Identifier","src":"66613:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3592,"name":"Identifier","src":"66620:7:0"}],"id":3593,"name":"MemberAccess","src":"66620:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3594,"name":"Identifier","src":"66634:1:0"}],"id":3595,"name":"IndexAccess","src":"66620:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3296,"type":"uint256","value":"j"},"id":3596,"name":"Identifier","src":"66637:1:0"}],"id":3597,"name":"IndexAccess","src":"66620:19:0"}],"id":3598,"name":"Assignment","src":"66613:26:0"}],"id":3599,"name":"ExpressionStatement","src":"66613:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3333,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3600,"name":"Identifier","src":"66661:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3601,"name":"Identifier","src":"66669:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3320,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3602,"name":"Identifier","src":"66676:4:0"}],"id":3603,"name":"MemberAccess","src":"66676:12:0"}],"id":3604,"name":"IndexAccess","src":"66669:20:0"}],"id":3605,"name":"Assignment","src":"66661:28:0"}],"id":3606,"name":"ExpressionStatement","src":"66661:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":2109,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3333,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3607,"name":"Identifier","src":"66711:5:0"}],"id":3609,"name":"MemberAccess","src":"66711:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3219,"type":"uint256","value":"amountShift"},"id":3610,"name":"Identifier","src":"66728:11:0"}],"id":3611,"name":"Assignment","src":"66711:28:0"}],"id":3612,"name":"ExpressionStatement","src":"66711:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3224,"type":"uint256","value":"currentIterations"},"id":3613,"name":"Identifier","src":"66861:17:0"}],"id":3614,"name":"UnaryOperation","src":"66859:19:0"}],"id":3615,"name":"ExpressionStatement","src":"66859:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentAtStakeVote","referencedDeclaration":2185,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3616,"name":"Identifier","src":"66902:7:0"}],"id":3617,"name":"MemberAccess","src":"66902:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3618,"name":"Identifier","src":"66931:1:0"}],"id":3619,"name":"IndexAccess","src":"66902:31:0"}],"id":3620,"name":"MemberAccess","src":"66902:50:0"}],"id":3621,"name":"UnaryOperation","src":"66900:52:0"}],"id":3622,"name":"ExpressionStatement","src":"66900:52:0"}],"id":3623,"name":"Block","src":"66474:497:0"}],"id":3624,"name":"ForStatement","src":"66379:592:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3625,"name":"Identifier","src":"66989:7:0"}],"id":3628,"name":"MemberAccess","src":"66989:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3627,"name":"Identifier","src":"67018:1:0"}],"id":3629,"name":"IndexAccess","src":"66989:31:0"}],"id":3630,"name":"MemberAccess","src":"66989:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Complete","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3631,"name":"Identifier","src":"67029:16:0"}],"id":3632,"name":"MemberAccess","src":"67029:25:0"}],"id":3633,"name":"Assignment","src":"66989:65:0"}],"id":3634,"name":"ExpressionStatement","src":"66989:65:0"}],"id":3635,"name":"Block","src":"66283:786:0"}],"id":3636,"name":"IfStatement","src":"66212:857:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2175","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2187,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2169,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3637,"name":"Identifier","src":"67087:7:0"}],"id":3638,"name":"MemberAccess","src":"67087:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3228,"type":"uint256","value":"i"},"id":3639,"name":"Identifier","src":"67116:1:0"}],"id":3640,"name":"IndexAccess","src":"67087:31:0"}],"id":3641,"name":"MemberAccess","src":"67087:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Complete","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2175,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3642,"name":"Identifier","src":"67128:16:0"}],"id":3643,"name":"MemberAccess","src":"67128:25:0"}],"id":3644,"name":"BinaryOperation","src":"67087:66:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentAppealToRepartition","referencedDeclaration":2166,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3645,"name":"Identifier","src":"67175:7:0"}],"id":3646,"name":"MemberAccess","src":"67175:34:0"}],"id":3647,"name":"UnaryOperation","src":"67173:36:0"}],"id":3648,"name":"ExpressionStatement","src":"67173:36:0"}],"id":3649,"name":"Block","src":"67155:69:0"}],"id":3650,"name":"IfStatement","src":"67083:141:0"}],"id":3651,"name":"Block","src":"62524:4710:0"}],"id":3652,"name":"ForStatement","src":"62447:4787:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3179,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3653,"name":"Identifier","src":"67244:7:0"}],"id":3655,"name":"MemberAccess","src":"67244:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3656,"name":"Identifier","src":"67260:12:0"}],"id":3657,"name":"MemberAccess","src":"67260:23:0"}],"id":3658,"name":"Assignment","src":"67244:39:0"}],"id":3659,"name":"ExpressionStatement","src":"67244:39:0"}],"id":3660,"name":"Block","src":"61920:5370:0"}],"id":3661,"name":"FunctionDefinition","src":"61808:5482:0"},{"attributes":{"constant":true,"documentation":"@dev Return the amount of jurors which are or will be drawn in the dispute.\n The number of jurors is doubled and 1 is added at each appeal. We have proven the formula by recurrence.\n This avoid having a variable number of jurors which would be updated in order to save gas.\n @param _disputeID The ID of the dispute we compute the amount of jurors.\n @return nbJurors The number of jurors which are drawn.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"amountJurors","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3688,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3662,"name":"ElementaryTypeName","src":"67923:4:0"}],"id":3663,"name":"VariableDeclaration","src":"67923:15:0"}],"id":3664,"name":"ParameterList","src":"67922:17:0"},{"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3688,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3665,"name":"ElementaryTypeName","src":"67961:4:0"}],"id":3666,"name":"VariableDeclaration","src":"67961:13:0"}],"id":3667,"name":"ParameterList","src":"67960:15:0"},{"children":[{"attributes":{"assignments":[3669]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3688,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":3668,"name":"UserDefinedTypeName","src":"67986:7:0"}],"id":3669,"name":"VariableDeclaration","src":"67986:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3670,"name":"Identifier","src":"68012:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3663,"type":"uint256","value":"_disputeID"},"id":3671,"name":"Identifier","src":"68021:10:0"}],"id":3672,"name":"IndexAccess","src":"68012:20:0"}],"id":3673,"name":"VariableDeclarationStatement","src":"67986:46:0"},{"attributes":{"functionReturnParameters":3667},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"initialNumberJurors","referencedDeclaration":2149,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3669,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3674,"name":"Identifier","src":"68050:7:0"}],"id":3675,"name":"MemberAccess","src":"68050:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3676,"name":"Literal","src":"68080:1:0"}],"id":3677,"name":"BinaryOperation","src":"68050:31:0"}],"id":3678,"name":"TupleExpression","src":"68049:33:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":3679,"name":"Literal","src":"68085:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3669,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3680,"name":"Identifier","src":"68088:7:0"}],"id":3681,"name":"MemberAccess","src":"68088:15:0"}],"id":3682,"name":"BinaryOperation","src":"68085:18:0"}],"id":3683,"name":"BinaryOperation","src":"68049:54:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3684,"name":"Literal","src":"68106:1:0"}],"id":3685,"name":"BinaryOperation","src":"68049:58:0"}],"id":3686,"name":"Return","src":"68042:65:0"}],"id":3687,"name":"Block","src":"67976:138:0"}],"id":3688,"name":"FunctionDefinition","src":"67901:213:0"},{"attributes":{"constant":true,"documentation":"@dev Must be used to verify that a juror has been draw at least _draws.length times.\n We have to require the user to specify the draws that lead the juror to be drawn.\n Because doing otherwise (looping through all draws) could consume too much gas.\n @param _jurorAddress Address of the juror we want to verify draws.\n @param _disputeID The ID of the dispute the juror was drawn.\n @param _draws The list of draws the juror was drawn. It draw numbering starts at 1 and the numbers should be increasing.\n Note that in most cases this list will just contain 1 number.\n @param valid true if the draws are valid.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"validDraws","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_jurorAddress","scope":3808,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3689,"name":"ElementaryTypeName","src":"68812:7:0"}],"id":3690,"name":"VariableDeclaration","src":"68812:21:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":3808,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3691,"name":"ElementaryTypeName","src":"68835:4:0"}],"id":3692,"name":"VariableDeclaration","src":"68835:15:0"},{"attributes":{"constant":false,"name":"_draws","scope":3808,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3693,"name":"ElementaryTypeName","src":"68852:4:0"}],"id":3694,"name":"ArrayTypeName","src":"68852:6:0"}],"id":3695,"name":"VariableDeclaration","src":"68852:13:0"}],"id":3696,"name":"ParameterList","src":"68811:55:0"},{"children":[{"attributes":{"constant":false,"name":"valid","scope":3808,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3697,"name":"ElementaryTypeName","src":"68888:4:0"}],"id":3698,"name":"VariableDeclaration","src":"68888:10:0"}],"id":3699,"name":"ParameterList","src":"68887:12:0"},{"children":[{"attributes":{"assignments":[3701]},"children":[{"attributes":{"constant":false,"name":"draw","scope":3808,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3700,"name":"ElementaryTypeName","src":"68910:4:0"}],"id":3701,"name":"VariableDeclaration","src":"68910:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3702,"name":"Literal","src":"68922:1:0"}],"id":3703,"name":"VariableDeclarationStatement","src":"68910:13:0"},{"attributes":{"assignments":[3705]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3808,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":3704,"name":"UserDefinedTypeName","src":"68933:5:0"}],"id":3705,"name":"VariableDeclaration","src":"68933:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3706,"name":"Identifier","src":"68955:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3690,"type":"address","value":"_jurorAddress"},"id":3707,"name":"Identifier","src":"68962:13:0"}],"id":3708,"name":"IndexAccess","src":"68955:21:0"}],"id":3709,"name":"VariableDeclarationStatement","src":"68933:43:0"},{"attributes":{"assignments":[3711]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3808,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":3710,"name":"UserDefinedTypeName","src":"68986:7:0"}],"id":3711,"name":"VariableDeclaration","src":"68986:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3712,"name":"Identifier","src":"69012:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3692,"type":"uint256","value":"_disputeID"},"id":3713,"name":"Identifier","src":"69021:10:0"}],"id":3714,"name":"IndexAccess","src":"69012:20:0"}],"id":3715,"name":"VariableDeclarationStatement","src":"68986:46:0"},{"attributes":{"assignments":[3717]},"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3808,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3716,"name":"ElementaryTypeName","src":"69042:4:0"}],"id":3717,"name":"VariableDeclaration","src":"69042:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3688,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":3718,"name":"Identifier","src":"69058:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3692,"type":"uint256","value":"_disputeID"},"id":3719,"name":"Identifier","src":"69071:10:0"}],"id":3720,"name":"FunctionCall","src":"69058:24:0"}],"id":3721,"name":"VariableDeclarationStatement","src":"69042:40:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2111,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3705,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3722,"name":"Identifier","src":"69097:5:0"}],"id":3723,"name":"MemberAccess","src":"69097:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":3724,"name":"Identifier","src":"69118:7:0"}],"id":3725,"name":"BinaryOperation","src":"69097:28:0"},{"attributes":{"functionReturnParameters":3699},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3726,"name":"Literal","src":"69134:5:0"}],"id":3727,"name":"Return","src":"69127:12:0"}],"id":3728,"name":"IfStatement","src":"69093:46:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3711,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3729,"name":"Identifier","src":"69215:7:0"}],"id":3730,"name":"MemberAccess","src":"69215:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3711,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3731,"name":"Identifier","src":"69231:7:0"}],"id":3732,"name":"MemberAccess","src":"69231:15:0"}],"id":3733,"name":"BinaryOperation","src":"69215:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":3734,"name":"Identifier","src":"69250:7:0"}],"id":3735,"name":"BinaryOperation","src":"69215:42:0"},{"attributes":{"functionReturnParameters":3699},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3736,"name":"Literal","src":"69266:5:0"}],"id":3737,"name":"Return","src":"69259:12:0"}],"id":3738,"name":"IfStatement","src":"69211:60:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":3739,"name":"Identifier","src":"69328:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":3740,"name":"Identifier","src":"69338:6:0"}],"id":3741,"name":"MemberAccess","src":"69338:11:0"}],"id":3742,"name":"BinaryOperation","src":"69328:21:0"},{"attributes":{"functionReturnParameters":3699},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3743,"name":"Literal","src":"69358:5:0"}],"id":3744,"name":"Return","src":"69351:12:0"}],"id":3745,"name":"IfStatement","src":"69324:39:0"},{"children":[{"attributes":{"assignments":[3747]},"children":[{"attributes":{"constant":false,"name":"i","scope":3808,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3746,"name":"ElementaryTypeName","src":"69422:4:0"}],"id":3747,"name":"VariableDeclaration","src":"69422:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3748,"name":"Literal","src":"69431:1:0"}],"id":3749,"name":"VariableDeclarationStatement","src":"69422:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3747,"type":"uint256","value":"i"},"id":3750,"name":"Identifier","src":"69434:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3695,"type":"uint256[] memory","value":"_draws"},"id":3751,"name":"Identifier","src":"69438:6:0"}],"id":3752,"name":"MemberAccess","src":"69438:13:0"}],"id":3753,"name":"BinaryOperation","src":"69434:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3747,"type":"uint256","value":"i"},"id":3754,"name":"Identifier","src":"69455:1:0"}],"id":3755,"name":"UnaryOperation","src":"69453:3:0"}],"id":3756,"name":"ExpressionStatement","src":"69453:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3695,"type":"uint256[] memory","value":"_draws"},"id":3757,"name":"Identifier","src":"69476:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3747,"type":"uint256","value":"i"},"id":3758,"name":"Identifier","src":"69483:1:0"}],"id":3759,"name":"IndexAccess","src":"69476:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3701,"type":"uint256","value":"draw"},"id":3760,"name":"Identifier","src":"69489:4:0"}],"id":3761,"name":"BinaryOperation","src":"69476:17:0"},{"attributes":{"functionReturnParameters":3699},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3762,"name":"Literal","src":"69502:5:0"}],"id":3763,"name":"Return","src":"69495:12:0"}],"id":3764,"name":"IfStatement","src":"69472:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3701,"type":"uint256","value":"draw"},"id":3765,"name":"Identifier","src":"69618:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3695,"type":"uint256[] memory","value":"_draws"},"id":3766,"name":"Identifier","src":"69625:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3747,"type":"uint256","value":"i"},"id":3767,"name":"Identifier","src":"69632:1:0"}],"id":3768,"name":"IndexAccess","src":"69625:9:0"}],"id":3769,"name":"Assignment","src":"69618:16:0"}],"id":3770,"name":"ExpressionStatement","src":"69618:16:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3701,"type":"uint256","value":"draw"},"id":3771,"name":"Identifier","src":"69652:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3717,"type":"uint256","value":"nbJurors"},"id":3772,"name":"Identifier","src":"69659:8:0"}],"id":3773,"name":"BinaryOperation","src":"69652:15:0"},{"attributes":{"functionReturnParameters":3699},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3774,"name":"Literal","src":"69676:5:0"}],"id":3775,"name":"Return","src":"69669:12:0"}],"id":3776,"name":"IfStatement","src":"69648:33:0"},{"attributes":{"assignments":[3778]},"children":[{"attributes":{"constant":false,"name":"position","scope":3808,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3777,"name":"ElementaryTypeName","src":"69695:4:0"}],"id":3778,"name":"VariableDeclaration","src":"69695:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":3779,"name":"ElementaryTypeNameExpression","src":"69711:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4541,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":3780,"name":"Identifier","src":"69716:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"uint256","value":"randomNumber"},"id":3781,"name":"Identifier","src":"69726:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3692,"type":"uint256","value":"_disputeID"},"id":3782,"name":"Identifier","src":"69740:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3701,"type":"uint256","value":"draw"},"id":3783,"name":"Identifier","src":"69752:4:0"}],"id":3784,"name":"FunctionCall","src":"69716:41:0"}],"id":3785,"name":"FunctionCall","src":"69711:47:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"uint256","value":"segmentSize"},"id":3786,"name":"Identifier","src":"69761:11:0"}],"id":3787,"name":"BinaryOperation","src":"69711:61:0"}],"id":3788,"name":"VariableDeclarationStatement","src":"69695:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3789,"name":"Identifier","src":"69830:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3778,"type":"uint256","value":"position"},"id":3790,"name":"Identifier","src":"69838:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentStart","referencedDeclaration":2113,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3705,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3791,"name":"Identifier","src":"69850:5:0"}],"id":3792,"name":"MemberAccess","src":"69850:18:0"}],"id":3793,"name":"BinaryOperation","src":"69838:30:0"}],"id":3794,"name":"FunctionCall","src":"69830:39:0"}],"id":3795,"name":"ExpressionStatement","src":"69830:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3796,"name":"Identifier","src":"69883:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3778,"type":"uint256","value":"position"},"id":3797,"name":"Identifier","src":"69891:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentEnd","referencedDeclaration":2115,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3705,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3798,"name":"Identifier","src":"69902:5:0"}],"id":3799,"name":"MemberAccess","src":"69902:16:0"}],"id":3800,"name":"BinaryOperation","src":"69891:27:0"}],"id":3801,"name":"FunctionCall","src":"69883:36:0"}],"id":3802,"name":"ExpressionStatement","src":"69883:36:0"}],"id":3803,"name":"Block","src":"69458:472:0"}],"id":3804,"name":"ForStatement","src":"69417:513:0"},{"attributes":{"functionReturnParameters":3699},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":3805,"name":"Literal","src":"69947:4:0"}],"id":3806,"name":"Return","src":"69940:11:0"}],"id":3807,"name":"Block","src":"68900:1058:0"}],"id":3808,"name":"FunctionDefinition","src":"68792:1166:0"},{"attributes":{"constant":false,"documentation":"@dev Create a dispute. Must be called by the arbitrable contract.\n Must be paid at least arbitrationCost().\n @param _choices Amount of choices the arbitrator can make in this dispute.\n @param _extraData Null for the default number. Otherwise, first 16 bytes will be used to return the number of jurors.\n @return disputeID ID of the dispute created.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createDispute","payable":true,"scope":4532,"stateMutability":"payable","superFunction":1991,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_choices","scope":3915,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3809,"name":"ElementaryTypeName","src":"70537:4:0"}],"id":3810,"name":"VariableDeclaration","src":"70537:13:0"},{"attributes":{"constant":false,"name":"_extraData","scope":3915,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3811,"name":"ElementaryTypeName","src":"70552:5:0"}],"id":3812,"name":"VariableDeclaration","src":"70552:16:0"}],"id":3813,"name":"ParameterList","src":"70536:33:0"},{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":3915,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3814,"name":"ElementaryTypeName","src":"70594:4:0"}],"id":3815,"name":"VariableDeclaration","src":"70594:14:0"}],"id":3816,"name":"ParameterList","src":"70593:16:0"},{"children":[{"attributes":{"assignments":[3818]},"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3915,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":3817,"name":"ElementaryTypeName","src":"70620:6:0"}],"id":3818,"name":"VariableDeclaration","src":"70620:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":4107,"type":"function (bytes memory) view returns (uint16)","value":"extraDataToNbJurors"},"id":3819,"name":"Identifier","src":"70638:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3812,"type":"bytes memory","value":"_extraData"},"id":3820,"name":"Identifier","src":"70658:10:0"}],"id":3821,"name":"FunctionCall","src":"70638:31:0"}],"id":3822,"name":"VariableDeclarationStatement","src":"70620:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3823,"name":"Identifier","src":"70679:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":3824,"name":"Identifier","src":"70687:3:0"}],"id":3825,"name":"MemberAccess","src":"70687:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[4042],"referencedDeclaration":4042,"type":"function (bytes memory) view returns (uint256)","value":"arbitrationCost"},"id":3826,"name":"Identifier","src":"70700:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3812,"type":"bytes memory","value":"_extraData"},"id":3827,"name":"Identifier","src":"70716:10:0"}],"id":3828,"name":"FunctionCall","src":"70700:27:0"}],"id":3829,"name":"BinaryOperation","src":"70687:40:0"}],"id":3830,"name":"FunctionCall","src":"70679:49:0"}],"id":3831,"name":"ExpressionStatement","src":"70679:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3815,"type":"uint256","value":"disputeID"},"id":3832,"name":"Identifier","src":"70739:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3833,"name":"Identifier","src":"70751:8:0"}],"id":3834,"name":"MemberAccess","src":"70751:15:0"}],"id":3835,"name":"UnaryOperation","src":"70751:17:0"}],"id":3836,"name":"Assignment","src":"70739:29:0"}],"id":3837,"name":"ExpressionStatement","src":"70739:29:0"},{"attributes":{"assignments":[3839]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3915,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":3838,"name":"UserDefinedTypeName","src":"70778:7:0"}],"id":3839,"name":"VariableDeclaration","src":"70778:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3840,"name":"Identifier","src":"70804:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3815,"type":"uint256","value":"disputeID"},"id":3841,"name":"Identifier","src":"70813:9:0"}],"id":3842,"name":"IndexAccess","src":"70804:19:0"}],"id":3843,"name":"VariableDeclarationStatement","src":"70778:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"arbitrated","referencedDeclaration":2141,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3844,"name":"Identifier","src":"70833:7:0"}],"id":3846,"name":"MemberAccess","src":"70833:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1925,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":3847,"name":"Identifier","src":"70854:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":3848,"name":"Identifier","src":"70865:3:0"}],"id":3849,"name":"MemberAccess","src":"70865:10:0"}],"id":3850,"name":"FunctionCall","src":"70854:22:0"}],"id":3851,"name":"Assignment","src":"70833:43:0"}],"id":3852,"name":"ExpressionStatement","src":"70833:43:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":3853,"name":"Identifier","src":"70890:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":3854,"name":"Identifier","src":"70899:6:0"}],"id":3855,"name":"MemberAccess","src":"70899:11:0"}],"id":3856,"name":"BinaryOperation","src":"70890:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3857,"name":"Identifier","src":"70989:7:0"}],"id":3859,"name":"MemberAccess","src":"70989:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":3860,"name":"Identifier","src":"71007:7:0"}],"id":3861,"name":"Assignment","src":"70989:25:0"}],"id":3862,"name":"ExpressionStatement","src":"70989:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3863,"name":"Identifier","src":"71084:7:0"}],"id":3865,"name":"MemberAccess","src":"71084:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":3866,"name":"Identifier","src":"71102:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3867,"name":"Literal","src":"71110:1:0"}],"id":3868,"name":"BinaryOperation","src":"71102:9:0"}],"id":3869,"name":"Assignment","src":"71084:27:0"}],"id":3870,"name":"ExpressionStatement","src":"71084:27:0"}],"id":3871,"name":"IfStatement","src":"70886:225:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"choices","referencedDeclaration":2147,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3872,"name":"Identifier","src":"71121:7:0"}],"id":3874,"name":"MemberAccess","src":"71121:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3810,"type":"uint256","value":"_choices"},"id":3875,"name":"Identifier","src":"71139:8:0"}],"id":3876,"name":"Assignment","src":"71121:26:0"}],"id":3877,"name":"ExpressionStatement","src":"71121:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"initialNumberJurors","referencedDeclaration":2149,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3878,"name":"Identifier","src":"71157:7:0"}],"id":3880,"name":"MemberAccess","src":"71157:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3818,"type":"uint16","value":"nbJurors"},"id":3881,"name":"Identifier","src":"71187:8:0"}],"id":3882,"name":"Assignment","src":"71157:38:0"}],"id":3883,"name":"ExpressionStatement","src":"71157:38:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2151,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3884,"name":"Identifier","src":"71205:7:0"}],"id":3886,"name":"MemberAccess","src":"71205:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2063,"type":"uint256","value":"arbitrationFeePerJuror"},"id":3887,"name":"Identifier","src":"71238:22:0"}],"id":3888,"name":"Assignment","src":"71205:55:0"}],"id":3889,"name":"ExpressionStatement","src":"71205:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3890,"name":"Identifier","src":"71353:7:0"}],"id":3893,"name":"MemberAccess","src":"71353:13:0"}],"id":3894,"name":"MemberAccess","src":"71353:20:0"}],"id":3895,"name":"UnaryOperation","src":"71353:22:0"}],"id":3896,"name":"ExpressionStatement","src":"71353:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3839,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3897,"name":"Identifier","src":"71385:7:0"}],"id":3900,"name":"MemberAccess","src":"71385:19:0"}],"id":3901,"name":"MemberAccess","src":"71385:26:0"}],"id":3902,"name":"UnaryOperation","src":"71385:28:0"}],"id":3903,"name":"ExpressionStatement","src":"71385:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Arbitrable_$1925","typeString":"contract Arbitrable"}],"overloadedDeclarations":[null],"referencedDeclaration":1972,"type":"function (uint256,contract Arbitrable)","value":"DisputeCreation"},"id":3904,"name":"Identifier","src":"71424:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3815,"type":"uint256","value":"disputeID"},"id":3905,"name":"Identifier","src":"71440:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1925,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":3906,"name":"Identifier","src":"71451:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":3907,"name":"Identifier","src":"71462:3:0"}],"id":3908,"name":"MemberAccess","src":"71462:10:0"}],"id":3909,"name":"FunctionCall","src":"71451:22:0"}],"id":3910,"name":"FunctionCall","src":"71424:50:0"}],"id":3911,"name":"ExpressionStatement","src":"71424:50:0"},{"attributes":{"functionReturnParameters":3816},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3815,"type":"uint256","value":"disputeID"},"id":3912,"name":"Identifier","src":"71491:9:0"}],"id":3913,"name":"Return","src":"71484:16:0"}],"id":3914,"name":"Block","src":"70610:897:0"}],"id":3915,"name":"FunctionDefinition","src":"70514:993:0"},{"attributes":{"constant":false,"documentation":"@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Standard but not used by this contract.","implemented":true,"isConstructor":false,"name":"appeal","payable":true,"scope":4532,"stateMutability":"payable","superFunction":2018,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3987,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3916,"name":"ElementaryTypeName","src":"71766:4:0"}],"id":3917,"name":"VariableDeclaration","src":"71766:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":3987,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3918,"name":"ElementaryTypeName","src":"71783:5:0"}],"id":3919,"name":"VariableDeclaration","src":"71783:16:0"}],"id":3920,"name":"ParameterList","src":"71765:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":3925,"name":"ParameterList","src":"71842:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2238,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":3921,"name":"Identifier","src":"71816:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":3922,"name":"Identifier","src":"71827:6:0"}],"id":3923,"name":"MemberAccess","src":"71827:13:0"}],"id":3924,"name":"ModifierInvocation","src":"71816:25:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"appeal","referencedDeclaration":2018,"type":"function (uint256,bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4583,"type":"contract super Kleros","value":"super"},"id":3926,"name":"Identifier","src":"71852:5:0"}],"id":3928,"name":"MemberAccess","src":"71852:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3917,"type":"uint256","value":"_disputeID"},"id":3929,"name":"Identifier","src":"71865:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3919,"type":"bytes memory","value":"_extraData"},"id":3930,"name":"Identifier","src":"71876:10:0"}],"id":3931,"name":"FunctionCall","src":"71852:35:0"}],"id":3932,"name":"ExpressionStatement","src":"71852:35:0"},{"attributes":{"assignments":[3934]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3987,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":3933,"name":"UserDefinedTypeName","src":"71897:7:0"}],"id":3934,"name":"VariableDeclaration","src":"71897:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3935,"name":"Identifier","src":"71923:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3917,"type":"uint256","value":"_disputeID"},"id":3936,"name":"Identifier","src":"71932:10:0"}],"id":3937,"name":"IndexAccess","src":"71923:20:0"}],"id":3938,"name":"VariableDeclarationStatement","src":"71897:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3939,"name":"Identifier","src":"71953:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":3940,"name":"Identifier","src":"71961:3:0"}],"id":3941,"name":"MemberAccess","src":"71961:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[4077],"referencedDeclaration":4077,"type":"function (uint256,bytes memory) view returns (uint256)","value":"appealCost"},"id":3942,"name":"Identifier","src":"71974:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3917,"type":"uint256","value":"_disputeID"},"id":3943,"name":"Identifier","src":"71985:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3919,"type":"bytes memory","value":"_extraData"},"id":3944,"name":"Identifier","src":"71997:10:0"}],"id":3945,"name":"FunctionCall","src":"71974:34:0"}],"id":3946,"name":"BinaryOperation","src":"71961:47:0"}],"id":3947,"name":"FunctionCall","src":"71953:56:0"}],"id":3948,"name":"ExpressionStatement","src":"71953:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3949,"name":"Identifier","src":"72019:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3934,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3950,"name":"Identifier","src":"72027:7:0"}],"id":3951,"name":"MemberAccess","src":"72027:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3934,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3952,"name":"Identifier","src":"72043:7:0"}],"id":3953,"name":"MemberAccess","src":"72043:15:0"}],"id":3954,"name":"BinaryOperation","src":"72027:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":3955,"name":"Identifier","src":"72062:7:0"}],"id":3956,"name":"BinaryOperation","src":"72027:42:0"}],"id":3957,"name":"FunctionCall","src":"72019:51:0"}],"id":3958,"name":"ExpressionStatement","src":"72019:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3959,"name":"Identifier","src":"72115:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrated","referencedDeclaration":2141,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3934,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3960,"name":"Identifier","src":"72123:7:0"}],"id":3961,"name":"MemberAccess","src":"72123:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4547,"type":"msg","value":"msg"},"id":3962,"name":"Identifier","src":"72145:3:0"}],"id":3963,"name":"MemberAccess","src":"72145:10:0"}],"id":3964,"name":"BinaryOperation","src":"72123:32:0"}],"id":3965,"name":"FunctionCall","src":"72115:41:0"}],"id":3966,"name":"ExpressionStatement","src":"72115:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3934,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3967,"name":"Identifier","src":"72175:7:0"}],"id":3969,"name":"MemberAccess","src":"72175:15:0"}],"id":3970,"name":"UnaryOperation","src":"72175:17:0"}],"id":3971,"name":"ExpressionStatement","src":"72175:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3934,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3972,"name":"Identifier","src":"72202:7:0"}],"id":3975,"name":"MemberAccess","src":"72202:13:0"}],"id":3976,"name":"MemberAccess","src":"72202:20:0"}],"id":3977,"name":"UnaryOperation","src":"72202:22:0"}],"id":3978,"name":"ExpressionStatement","src":"72202:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3934,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3979,"name":"Identifier","src":"72234:7:0"}],"id":3982,"name":"MemberAccess","src":"72234:19:0"}],"id":3983,"name":"MemberAccess","src":"72234:26:0"}],"id":3984,"name":"UnaryOperation","src":"72234:28:0"}],"id":3985,"name":"ExpressionStatement","src":"72234:28:0"}],"id":3986,"name":"Block","src":"71842:427:0"}],"id":3987,"name":"FunctionDefinition","src":"71750:519:0"},{"attributes":{"constant":false,"documentation":"@dev Execute the ruling of a dispute which is in the state executable. UNTRUSTED.\n @param disputeID ID of the dispute to execute the ruling.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"executeRuling","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":4028,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3988,"name":"ElementaryTypeName","src":"72462:4:0"}],"id":3989,"name":"VariableDeclaration","src":"72462:14:0"}],"id":3990,"name":"ParameterList","src":"72461:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":3991,"name":"ParameterList","src":"72485:0:0"},{"children":[{"attributes":{"assignments":[3993]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4028,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":3992,"name":"UserDefinedTypeName","src":"72495:7:0"}],"id":3993,"name":"VariableDeclaration","src":"72495:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3994,"name":"Identifier","src":"72521:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3989,"type":"uint256","value":"disputeID"},"id":3995,"name":"Identifier","src":"72530:9:0"}],"id":3996,"name":"IndexAccess","src":"72521:19:0"}],"id":3997,"name":"VariableDeclarationStatement","src":"72495:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4550,4551],"referencedDeclaration":4550,"type":"function (bool) pure","value":"require"},"id":3998,"name":"Identifier","src":"72550:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2139","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3993,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3999,"name":"Identifier","src":"72558:7:0"}],"id":4000,"name":"MemberAccess","src":"72558:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":4001,"name":"Identifier","src":"72575:12:0"}],"id":4002,"name":"MemberAccess","src":"72575:23:0"}],"id":4003,"name":"BinaryOperation","src":"72558:40:0"}],"id":4004,"name":"FunctionCall","src":"72550:49:0"}],"id":4005,"name":"ExpressionStatement","src":"72550:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3993,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4006,"name":"Identifier","src":"72610:7:0"}],"id":4008,"name":"MemberAccess","src":"72610:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executed","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":4009,"name":"Identifier","src":"72626:12:0"}],"id":4010,"name":"MemberAccess","src":"72626:21:0"}],"id":4011,"name":"Assignment","src":"72610:37:0"}],"id":4012,"name":"ExpressionStatement","src":"72610:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"rule","referencedDeclaration":1917,"type":"function (uint256,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrated","referencedDeclaration":2141,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3993,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4013,"name":"Identifier","src":"72657:7:0"}],"id":4016,"name":"MemberAccess","src":"72657:18:0"}],"id":4017,"name":"MemberAccess","src":"72657:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3989,"type":"uint256","value":"disputeID"},"id":4018,"name":"Identifier","src":"72681:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2127,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3993,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4019,"name":"Identifier","src":"72692:7:0"}],"id":4020,"name":"MemberAccess","src":"72692:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3993,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4021,"name":"Identifier","src":"72712:7:0"}],"id":4022,"name":"MemberAccess","src":"72712:15:0"}],"id":4023,"name":"IndexAccess","src":"72692:36:0"}],"id":4024,"name":"MemberAccess","src":"72692:50:0"}],"id":4025,"name":"FunctionCall","src":"72657:86:0"}],"id":4026,"name":"ExpressionStatement","src":"72657:86:0"}],"id":4027,"name":"Block","src":"72485:265:0"}],"id":4028,"name":"FunctionDefinition","src":"72439:311:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the cost of arbitration. It is recommended not to increase it often, \n as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n @return fee Amount to be paid.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"arbitrationCost","payable":false,"scope":4532,"stateMutability":"view","superFunction":1998,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":4042,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":4029,"name":"ElementaryTypeName","src":"73307:5:0"}],"id":4030,"name":"VariableDeclaration","src":"73307:16:0"}],"id":4031,"name":"ParameterList","src":"73306:18:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":4042,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4032,"name":"ElementaryTypeName","src":"73346:4:0"}],"id":4033,"name":"VariableDeclaration","src":"73346:8:0"}],"id":4034,"name":"ParameterList","src":"73345:10:0"},{"children":[{"attributes":{"functionReturnParameters":4034},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":4107,"type":"function (bytes memory) view returns (uint16)","value":"extraDataToNbJurors"},"id":4035,"name":"Identifier","src":"73373:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4030,"type":"bytes memory","value":"_extraData"},"id":4036,"name":"Identifier","src":"73393:10:0"}],"id":4037,"name":"FunctionCall","src":"73373:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2063,"type":"uint256","value":"arbitrationFeePerJuror"},"id":4038,"name":"Identifier","src":"73407:22:0"}],"id":4039,"name":"BinaryOperation","src":"73373:56:0"}],"id":4040,"name":"Return","src":"73366:63:0"}],"id":4041,"name":"Block","src":"73356:80:0"}],"id":4042,"name":"FunctionDefinition","src":"73282:154:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the cost of appeal. It is recommended not to increase it often, \n as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Is not used there.\n @return fee Amount to be paid.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"appealCost","payable":false,"scope":4532,"stateMutability":"view","superFunction":2027,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4077,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4043,"name":"ElementaryTypeName","src":"73811:4:0"}],"id":4044,"name":"VariableDeclaration","src":"73811:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":4077,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":4045,"name":"ElementaryTypeName","src":"73828:5:0"}],"id":4046,"name":"VariableDeclaration","src":"73828:16:0"}],"id":4047,"name":"ParameterList","src":"73810:35:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":4077,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4048,"name":"ElementaryTypeName","src":"73867:4:0"}],"id":4049,"name":"VariableDeclaration","src":"73867:8:0"}],"id":4050,"name":"ParameterList","src":"73866:10:0"},{"children":[{"attributes":{"assignments":[4052]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4077,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":4051,"name":"UserDefinedTypeName","src":"73887:7:0"}],"id":4052,"name":"VariableDeclaration","src":"73887:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4053,"name":"Identifier","src":"73913:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4044,"type":"uint256","value":"_disputeID"},"id":4054,"name":"Identifier","src":"73922:10:0"}],"id":4055,"name":"IndexAccess","src":"73913:20:0"}],"id":4056,"name":"VariableDeclarationStatement","src":"73887:46:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4052,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4057,"name":"Identifier","src":"73947:7:0"}],"id":4058,"name":"MemberAccess","src":"73947:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"uint256","value":"maxAppeals"},"id":4059,"name":"Identifier","src":"73966:10:0"}],"id":4060,"name":"BinaryOperation","src":"73947:29:0"},{"attributes":{"functionReturnParameters":4050},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2058,"type":"uint256","value":"NON_PAYABLE_AMOUNT"},"id":4061,"name":"Identifier","src":"73985:18:0"}],"id":4062,"name":"Return","src":"73978:25:0"}],"id":4063,"name":"IfStatement","src":"73944:59:0"},{"attributes":{"functionReturnParameters":4050},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":4064,"name":"Literal","src":"74022:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3688,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":4065,"name":"Identifier","src":"74024:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4044,"type":"uint256","value":"_disputeID"},"id":4066,"name":"Identifier","src":"74037:10:0"}],"id":4067,"name":"FunctionCall","src":"74024:24:0"}],"id":4068,"name":"BinaryOperation","src":"74022:26:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":4069,"name":"Literal","src":"74051:1:0"}],"id":4070,"name":"BinaryOperation","src":"74022:30:0"}],"id":4071,"name":"TupleExpression","src":"74021:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2151,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4052,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4072,"name":"Identifier","src":"74056:7:0"}],"id":4073,"name":"MemberAccess","src":"74056:30:0"}],"id":4074,"name":"BinaryOperation","src":"74021:65:0"}],"id":4075,"name":"Return","src":"74014:72:0"}],"id":4076,"name":"Block","src":"73877:216:0"}],"id":4077,"name":"FunctionDefinition","src":"73791:302:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the amount of jurors to be drawn.\n @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n Note that it does not check that the number of jurors is odd, but users are advised to choose a odd number of jurors.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"extraDataToNbJurors","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":4107,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":4078,"name":"ElementaryTypeName","src":"74437:5:0"}],"id":4079,"name":"VariableDeclaration","src":"74437:16:0"}],"id":4080,"name":"ParameterList","src":"74436:18:0"},{"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":4107,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":4081,"name":"ElementaryTypeName","src":"74478:6:0"}],"id":4082,"name":"VariableDeclaration","src":"74478:15:0"}],"id":4083,"name":"ParameterList","src":"74477:17:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4079,"type":"bytes memory","value":"_extraData"},"id":4084,"name":"Identifier","src":"74509:10:0"}],"id":4085,"name":"MemberAccess","src":"74509:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":4086,"name":"Literal","src":"74529:1:0"}],"id":4087,"name":"BinaryOperation","src":"74509:21:0"},{"attributes":{"functionReturnParameters":4083},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2066,"type":"uint16","value":"defaultNumberJuror"},"id":4088,"name":"Identifier","src":"74551:18:0"}],"id":4089,"name":"Return","src":"74544:25:0"},{"attributes":{"functionReturnParameters":4083},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<<","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint16)","value":"uint16"},"id":4090,"name":"ElementaryTypeNameExpression","src":"74604:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4079,"type":"bytes memory","value":"_extraData"},"id":4091,"name":"Identifier","src":"74611:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":4092,"name":"Literal","src":"74622:1:0"}],"id":4093,"name":"IndexAccess","src":"74611:13:0"}],"id":4094,"name":"FunctionCall","src":"74604:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":4095,"name":"Literal","src":"74629:1:0"}],"id":4096,"name":"BinaryOperation","src":"74604:26:0"}],"id":4097,"name":"TupleExpression","src":"74603:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint16)","value":"uint16"},"id":4098,"name":"ElementaryTypeNameExpression","src":"74634:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4079,"type":"bytes memory","value":"_extraData"},"id":4099,"name":"Identifier","src":"74641:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":4100,"name":"Literal","src":"74652:1:0"}],"id":4101,"name":"IndexAccess","src":"74641:13:0"}],"id":4102,"name":"FunctionCall","src":"74634:21:0"}],"id":4103,"name":"BinaryOperation","src":"74603:52:0"}],"id":4104,"name":"Return","src":"74596:59:0"}],"id":4105,"name":"IfStatement","src":"74505:150:0"}],"id":4106,"name":"Block","src":"74495:167:0"}],"id":4107,"name":"FunctionDefinition","src":"74408:254:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the minimum activated pinakions in alpha.\n Note there may be multiple draws for a single user on a single dispute.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getStakePerDraw","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":4108,"name":"ParameterList","src":"74843:2:0"},{"children":[{"attributes":{"constant":false,"name":"minActivatedTokenInAlpha","scope":4120,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4109,"name":"ElementaryTypeName","src":"74867:4:0"}],"id":4110,"name":"VariableDeclaration","src":"74867:29:0"}],"id":4111,"name":"ParameterList","src":"74866:31:0"},{"children":[{"attributes":{"functionReturnParameters":4111},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2078,"type":"uint256","value":"alpha"},"id":4112,"name":"Identifier","src":"74916:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"minActivatedToken"},"id":4113,"name":"Identifier","src":"74924:17:0"}],"id":4114,"name":"BinaryOperation","src":"74916:25:0"}],"id":4115,"name":"TupleExpression","src":"74915:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2081,"type":"uint256","value":"ALPHA_DIVISOR"},"id":4116,"name":"Identifier","src":"74945:13:0"}],"id":4117,"name":"BinaryOperation","src":"74915:43:0"}],"id":4118,"name":"Return","src":"74908:50:0"}],"id":4119,"name":"Block","src":"74898:67:0"}],"id":4120,"name":"FunctionDefinition","src":"74819:146:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for account in Vote.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @param _voteID The ID of the vote for this appeal (or initial session).\n @return account The address of the voter.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteAccount","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4142,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4121,"name":"ElementaryTypeName","src":"75407:4:0"}],"id":4122,"name":"VariableDeclaration","src":"75407:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4142,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4123,"name":"ElementaryTypeName","src":"75424:4:0"}],"id":4124,"name":"VariableDeclaration","src":"75424:13:0"},{"attributes":{"constant":false,"name":"_voteID","scope":4142,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4125,"name":"ElementaryTypeName","src":"75439:4:0"}],"id":4126,"name":"VariableDeclaration","src":"75439:12:0"}],"id":4127,"name":"ParameterList","src":"75406:46:0"},{"children":[{"attributes":{"constant":false,"name":"account","scope":4142,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4128,"name":"ElementaryTypeName","src":"75474:7:0"}],"id":4129,"name":"VariableDeclaration","src":"75474:15:0"}],"id":4130,"name":"ParameterList","src":"75473:17:0"},{"children":[{"attributes":{"functionReturnParameters":4130},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2122,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4131,"name":"Identifier","src":"75508:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4122,"type":"uint256","value":"_disputeID"},"id":4132,"name":"Identifier","src":"75517:10:0"}],"id":4133,"name":"IndexAccess","src":"75508:20:0"}],"id":4134,"name":"MemberAccess","src":"75508:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4124,"type":"uint256","value":"_appeals"},"id":4135,"name":"Identifier","src":"75535:8:0"}],"id":4136,"name":"IndexAccess","src":"75508:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4126,"type":"uint256","value":"_voteID"},"id":4137,"name":"Identifier","src":"75545:7:0"}],"id":4138,"name":"IndexAccess","src":"75508:45:0"}],"id":4139,"name":"MemberAccess","src":"75508:53:0"}],"id":4140,"name":"Return","src":"75501:60:0"}],"id":4141,"name":"Block","src":"75491:77:0"}],"id":4142,"name":"FunctionDefinition","src":"75383:185:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for ruling in Vote.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @param _voteID The ID of the vote for this appeal (or initial session).\n @return ruling The ruling given by the voter.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteRuling","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4164,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4143,"name":"ElementaryTypeName","src":"75893:4:0"}],"id":4144,"name":"VariableDeclaration","src":"75893:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4164,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4145,"name":"ElementaryTypeName","src":"75910:4:0"}],"id":4146,"name":"VariableDeclaration","src":"75910:13:0"},{"attributes":{"constant":false,"name":"_voteID","scope":4164,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4147,"name":"ElementaryTypeName","src":"75925:4:0"}],"id":4148,"name":"VariableDeclaration","src":"75925:12:0"}],"id":4149,"name":"ParameterList","src":"75892:46:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":4164,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4150,"name":"ElementaryTypeName","src":"75960:4:0"}],"id":4151,"name":"VariableDeclaration","src":"75960:11:0"}],"id":4152,"name":"ParameterList","src":"75959:13:0"},{"children":[{"attributes":{"functionReturnParameters":4152},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2124,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2157,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4153,"name":"Identifier","src":"75990:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4144,"type":"uint256","value":"_disputeID"},"id":4154,"name":"Identifier","src":"75999:10:0"}],"id":4155,"name":"IndexAccess","src":"75990:20:0"}],"id":4156,"name":"MemberAccess","src":"75990:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4146,"type":"uint256","value":"_appeals"},"id":4157,"name":"Identifier","src":"76017:8:0"}],"id":4158,"name":"IndexAccess","src":"75990:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4148,"type":"uint256","value":"_voteID"},"id":4159,"name":"Identifier","src":"76027:7:0"}],"id":4160,"name":"IndexAccess","src":"75990:45:0"}],"id":4161,"name":"MemberAccess","src":"75990:52:0"}],"id":4162,"name":"Return","src":"75983:59:0"}],"id":4163,"name":"Block","src":"75973:76:0"}],"id":4164,"name":"FunctionDefinition","src":"75870:179:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for winningChoice in VoteCounter.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @return winningChoice The currently winning choice (or 0 if it's tied). Note that 0 can also be return if the majority refuses to arbitrate.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getWinningChoice","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4182,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4165,"name":"ElementaryTypeName","src":"76406:4:0"}],"id":4166,"name":"VariableDeclaration","src":"76406:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4182,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4167,"name":"ElementaryTypeName","src":"76423:4:0"}],"id":4168,"name":"VariableDeclaration","src":"76423:13:0"}],"id":4169,"name":"ParameterList","src":"76405:32:0"},{"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":4182,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4170,"name":"ElementaryTypeName","src":"76459:4:0"}],"id":4171,"name":"VariableDeclaration","src":"76459:18:0"}],"id":4172,"name":"ParameterList","src":"76458:20:0"},{"children":[{"attributes":{"functionReturnParameters":4172},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2127,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4173,"name":"Identifier","src":"76496:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4166,"type":"uint256","value":"_disputeID"},"id":4174,"name":"Identifier","src":"76505:10:0"}],"id":4175,"name":"IndexAccess","src":"76496:20:0"}],"id":4176,"name":"MemberAccess","src":"76496:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4168,"type":"uint256","value":"_appeals"},"id":4177,"name":"Identifier","src":"76529:8:0"}],"id":4178,"name":"IndexAccess","src":"76496:42:0"}],"id":4179,"name":"MemberAccess","src":"76496:56:0"}],"id":4180,"name":"Return","src":"76489:63:0"}],"id":4181,"name":"Block","src":"76479:80:0"}],"id":4182,"name":"FunctionDefinition","src":"76380:179:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for winningCount in VoteCounter.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @return winningCount The amount of votes the winning choice (or those who are tied) has.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getWinningCount","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4200,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4183,"name":"ElementaryTypeName","src":"76862:4:0"}],"id":4184,"name":"VariableDeclaration","src":"76862:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4200,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4185,"name":"ElementaryTypeName","src":"76879:4:0"}],"id":4186,"name":"VariableDeclaration","src":"76879:13:0"}],"id":4187,"name":"ParameterList","src":"76861:32:0"},{"children":[{"attributes":{"constant":false,"name":"winningCount","scope":4200,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4188,"name":"ElementaryTypeName","src":"76915:4:0"}],"id":4189,"name":"VariableDeclaration","src":"76915:17:0"}],"id":4190,"name":"ParameterList","src":"76914:19:0"},{"children":[{"attributes":{"functionReturnParameters":4190},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2129,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4191,"name":"Identifier","src":"76951:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4184,"type":"uint256","value":"_disputeID"},"id":4192,"name":"Identifier","src":"76960:10:0"}],"id":4193,"name":"IndexAccess","src":"76951:20:0"}],"id":4194,"name":"MemberAccess","src":"76951:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4186,"type":"uint256","value":"_appeals"},"id":4195,"name":"Identifier","src":"76984:8:0"}],"id":4196,"name":"IndexAccess","src":"76951:42:0"}],"id":4197,"name":"MemberAccess","src":"76951:55:0"}],"id":4198,"name":"Return","src":"76944:62:0"}],"id":4199,"name":"Block","src":"76934:79:0"}],"id":4200,"name":"FunctionDefinition","src":"76837:176:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for voteCount in VoteCounter.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @param _choice The choice.\n @return voteCount The amount of votes the winning choice (or those who are tied) has.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteCount","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4222,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4201,"name":"ElementaryTypeName","src":"77342:4:0"}],"id":4202,"name":"VariableDeclaration","src":"77342:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4222,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4203,"name":"ElementaryTypeName","src":"77359:4:0"}],"id":4204,"name":"VariableDeclaration","src":"77359:13:0"},{"attributes":{"constant":false,"name":"_choice","scope":4222,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4205,"name":"ElementaryTypeName","src":"77374:4:0"}],"id":4206,"name":"VariableDeclaration","src":"77374:12:0"}],"id":4207,"name":"ParameterList","src":"77341:46:0"},{"children":[{"attributes":{"constant":false,"name":"voteCount","scope":4222,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4208,"name":"ElementaryTypeName","src":"77409:4:0"}],"id":4209,"name":"VariableDeclaration","src":"77409:14:0"}],"id":4210,"name":"ParameterList","src":"77408:16:0"},{"children":[{"attributes":{"functionReturnParameters":4210},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2133,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4211,"name":"Identifier","src":"77442:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4202,"type":"uint256","value":"_disputeID"},"id":4212,"name":"Identifier","src":"77451:10:0"}],"id":4213,"name":"IndexAccess","src":"77442:20:0"}],"id":4214,"name":"MemberAccess","src":"77442:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4204,"type":"uint256","value":"_appeals"},"id":4215,"name":"Identifier","src":"77475:8:0"}],"id":4216,"name":"IndexAccess","src":"77442:42:0"}],"id":4217,"name":"MemberAccess","src":"77442:52:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4206,"type":"uint256","value":"_choice"},"id":4218,"name":"Identifier","src":"77495:7:0"}],"id":4219,"name":"IndexAccess","src":"77442:61:0"}],"id":4220,"name":"Return","src":"77435:68:0"}],"id":4221,"name":"Block","src":"77425:85:0"}],"id":4222,"name":"FunctionDefinition","src":"77320:190:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for lastSessionVote in Dispute.\n @param _disputeID ID of the dispute.\n @param _juror The juror we want to get the last session he voted.\n @return lastSessionVote The last session the juror voted.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getLastSessionVote","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4239,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4223,"name":"ElementaryTypeName","src":"77789:4:0"}],"id":4224,"name":"VariableDeclaration","src":"77789:15:0"},{"attributes":{"constant":false,"name":"_juror","scope":4239,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4225,"name":"ElementaryTypeName","src":"77806:7:0"}],"id":4226,"name":"VariableDeclaration","src":"77806:14:0"}],"id":4227,"name":"ParameterList","src":"77788:33:0"},{"children":[{"attributes":{"constant":false,"name":"lastSessionVote","scope":4239,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4228,"name":"ElementaryTypeName","src":"77843:4:0"}],"id":4229,"name":"VariableDeclaration","src":"77843:20:0"}],"id":4230,"name":"ParameterList","src":"77842:22:0"},{"children":[{"attributes":{"functionReturnParameters":4230},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2164,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4231,"name":"Identifier","src":"77882:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4224,"type":"uint256","value":"_disputeID"},"id":4232,"name":"Identifier","src":"77891:10:0"}],"id":4233,"name":"IndexAccess","src":"77882:20:0"}],"id":4234,"name":"MemberAccess","src":"77882:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4226,"type":"address","value":"_juror"},"id":4235,"name":"Identifier","src":"77919:6:0"}],"id":4236,"name":"IndexAccess","src":"77882:44:0"}],"id":4237,"name":"Return","src":"77875:51:0"}],"id":4238,"name":"Block","src":"77865:68:0"}],"id":4239,"name":"FunctionDefinition","src":"77761:172:0"},{"attributes":{"constant":true,"documentation":"@dev Is the juror drawn in the draw of the dispute.\n @param _disputeID ID of the dispute.\n @param _juror The juror.\n @param _draw The draw. Note that it starts at 1.\n @return drawn True if the juror is drawn, false otherwise.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isDrawn","payable":false,"scope":4532,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4324,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4240,"name":"ElementaryTypeName","src":"78226:4:0"}],"id":4241,"name":"VariableDeclaration","src":"78226:15:0"},{"attributes":{"constant":false,"name":"_juror","scope":4324,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4242,"name":"ElementaryTypeName","src":"78243:7:0"}],"id":4243,"name":"VariableDeclaration","src":"78243:14:0"},{"attributes":{"constant":false,"name":"_draw","scope":4324,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4244,"name":"ElementaryTypeName","src":"78259:4:0"}],"id":4245,"name":"VariableDeclaration","src":"78259:10:0"}],"id":4246,"name":"ParameterList","src":"78225:45:0"},{"children":[{"attributes":{"constant":false,"name":"drawn","scope":4324,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":4247,"name":"ElementaryTypeName","src":"78292:4:0"}],"id":4248,"name":"VariableDeclaration","src":"78292:10:0"}],"id":4249,"name":"ParameterList","src":"78291:12:0"},{"children":[{"attributes":{"assignments":[4251]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4324,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":4250,"name":"UserDefinedTypeName","src":"78314:7:0"}],"id":4251,"name":"VariableDeclaration","src":"78314:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4252,"name":"Identifier","src":"78340:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4241,"type":"uint256","value":"_disputeID"},"id":4253,"name":"Identifier","src":"78349:10:0"}],"id":4254,"name":"IndexAccess","src":"78340:20:0"}],"id":4255,"name":"VariableDeclarationStatement","src":"78314:46:0"},{"attributes":{"assignments":[4257]},"children":[{"attributes":{"constant":false,"name":"juror","scope":4324,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2116,"type":"struct Kleros.Juror"},"id":4256,"name":"UserDefinedTypeName","src":"78370:5:0"}],"id":4257,"name":"VariableDeclaration","src":"78370:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2120,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":4258,"name":"Identifier","src":"78392:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4243,"type":"address","value":"_juror"},"id":4259,"name":"Identifier","src":"78399:6:0"}],"id":4260,"name":"IndexAccess","src":"78392:14:0"}],"id":4261,"name":"VariableDeclarationStatement","src":"78370:36:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2111,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4257,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":4262,"name":"Identifier","src":"78420:5:0"}],"id":4263,"name":"MemberAccess","src":"78420:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":4264,"name":"Identifier","src":"78441:7:0"}],"id":4265,"name":"BinaryOperation","src":"78420:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4251,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4266,"name":"Identifier","src":"78461:7:0"}],"id":4267,"name":"MemberAccess","src":"78461:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4251,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4268,"name":"Identifier","src":"78477:7:0"}],"id":4269,"name":"MemberAccess","src":"78477:15:0"}],"id":4270,"name":"BinaryOperation","src":"78461:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":4271,"name":"Identifier","src":"78496:7:0"}],"id":4272,"name":"BinaryOperation","src":"78461:42:0"}],"id":4273,"name":"TupleExpression","src":"78460:44:0"}],"id":4274,"name":"BinaryOperation","src":"78420:84:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":4275,"name":"Identifier","src":"78516:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":4276,"name":"Identifier","src":"78524:6:0"}],"id":4277,"name":"MemberAccess","src":"78524:11:0"}],"id":4278,"name":"BinaryOperation","src":"78516:19:0"}],"id":4279,"name":"BinaryOperation","src":"78420:115:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4245,"type":"uint256","value":"_draw"},"id":4280,"name":"Identifier","src":"78547:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3688,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":4281,"name":"Identifier","src":"78553:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4241,"type":"uint256","value":"_disputeID"},"id":4282,"name":"Identifier","src":"78566:10:0"}],"id":4283,"name":"FunctionCall","src":"78553:24:0"}],"id":4284,"name":"BinaryOperation","src":"78547:30:0"}],"id":4285,"name":"BinaryOperation","src":"78420:157:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4245,"type":"uint256","value":"_draw"},"id":4286,"name":"Identifier","src":"78589:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":4287,"name":"Literal","src":"78596:1:0"}],"id":4288,"name":"BinaryOperation","src":"78589:8:0"}],"id":4289,"name":"BinaryOperation","src":"78420:177:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"uint256","value":"segmentSize"},"id":4290,"name":"Identifier","src":"78609:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":4291,"name":"Literal","src":"78622:1:0"}],"id":4292,"name":"BinaryOperation","src":"78609:14:0"}],"id":4293,"name":"BinaryOperation","src":"78420:203:0"},{"children":[{"attributes":{"functionReturnParameters":4249},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":4294,"name":"Literal","src":"78655:5:0"}],"id":4295,"name":"Return","src":"78648:12:0"}],"id":4296,"name":"Block","src":"78634:37:0"},{"children":[{"attributes":{"assignments":[4298]},"children":[{"attributes":{"constant":false,"name":"position","scope":4324,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4297,"name":"ElementaryTypeName","src":"78691:4:0"}],"id":4298,"name":"VariableDeclaration","src":"78691:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":4299,"name":"ElementaryTypeNameExpression","src":"78707:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4541,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":4300,"name":"Identifier","src":"78712:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"uint256","value":"randomNumber"},"id":4301,"name":"Identifier","src":"78722:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4241,"type":"uint256","value":"_disputeID"},"id":4302,"name":"Identifier","src":"78735:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4245,"type":"uint256","value":"_draw"},"id":4303,"name":"Identifier","src":"78746:5:0"}],"id":4304,"name":"FunctionCall","src":"78712:40:0"}],"id":4305,"name":"FunctionCall","src":"78707:46:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"uint256","value":"segmentSize"},"id":4306,"name":"Identifier","src":"78756:11:0"}],"id":4307,"name":"BinaryOperation","src":"78707:60:0"}],"id":4308,"name":"VariableDeclarationStatement","src":"78691:76:0"},{"attributes":{"functionReturnParameters":4249},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4298,"type":"uint256","value":"position"},"id":4309,"name":"Identifier","src":"78789:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentStart","referencedDeclaration":2113,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4257,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":4310,"name":"Identifier","src":"78801:5:0"}],"id":4311,"name":"MemberAccess","src":"78801:18:0"}],"id":4312,"name":"BinaryOperation","src":"78789:30:0"}],"id":4313,"name":"TupleExpression","src":"78788:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4298,"type":"uint256","value":"position"},"id":4314,"name":"Identifier","src":"78825:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentEnd","referencedDeclaration":2115,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4257,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":4315,"name":"Identifier","src":"78836:5:0"}],"id":4316,"name":"MemberAccess","src":"78836:16:0"}],"id":4317,"name":"BinaryOperation","src":"78825:27:0"}],"id":4318,"name":"TupleExpression","src":"78824:29:0"}],"id":4319,"name":"BinaryOperation","src":"78788:65:0"}],"id":4320,"name":"Return","src":"78781:72:0"}],"id":4321,"name":"Block","src":"78677:187:0"}],"id":4322,"name":"IfStatement","src":"78416:448:0"}],"id":4323,"name":"Block","src":"78304:567:0"}],"id":4324,"name":"FunctionDefinition","src":"78209:662:0"},{"attributes":{"constant":true,"documentation":"@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n @param _disputeID ID of the dispute.\n @return ruling The current ruling which will be given if there is no appeal. If it is not available, return 0.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"currentRuling","payable":false,"scope":4532,"stateMutability":"view","superFunction":2041,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4325,"name":"ElementaryTypeName","src":"79183:4:0"}],"id":4326,"name":"VariableDeclaration","src":"79183:15:0"}],"id":4327,"name":"ParameterList","src":"79182:17:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":4345,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4328,"name":"ElementaryTypeName","src":"79221:4:0"}],"id":4329,"name":"VariableDeclaration","src":"79221:11:0"}],"id":4330,"name":"ParameterList","src":"79220:13:0"},{"children":[{"attributes":{"assignments":[4332]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4345,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":4331,"name":"UserDefinedTypeName","src":"79244:7:0"}],"id":4332,"name":"VariableDeclaration","src":"79244:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4333,"name":"Identifier","src":"79270:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4326,"type":"uint256","value":"_disputeID"},"id":4334,"name":"Identifier","src":"79279:10:0"}],"id":4335,"name":"IndexAccess","src":"79270:20:0"}],"id":4336,"name":"VariableDeclarationStatement","src":"79244:46:0"},{"attributes":{"functionReturnParameters":4330},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2127,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2160,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4332,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4337,"name":"Identifier","src":"79307:7:0"}],"id":4338,"name":"MemberAccess","src":"79307:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4332,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4339,"name":"Identifier","src":"79327:7:0"}],"id":4340,"name":"MemberAccess","src":"79327:15:0"}],"id":4341,"name":"IndexAccess","src":"79307:36:0"}],"id":4342,"name":"MemberAccess","src":"79307:50:0"}],"id":4343,"name":"Return","src":"79300:57:0"}],"id":4344,"name":"Block","src":"79234:130:0"}],"id":4345,"name":"FunctionDefinition","src":"79160:204:0"},{"attributes":{"constant":true,"documentation":"@dev Return the status of a dispute.\n @param _disputeID ID of the dispute to rule.\n @return status The status of the dispute.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"disputeStatus","payable":false,"scope":4532,"stateMutability":"view","superFunction":2034,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4411,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4346,"name":"ElementaryTypeName","src":"79549:4:0"}],"id":4347,"name":"VariableDeclaration","src":"79549:15:0"}],"id":4348,"name":"ParameterList","src":"79548:17:0"},{"children":[{"attributes":{"constant":false,"name":"status","scope":4411,"stateVariable":false,"storageLocation":"default","type":"enum Arbitrator.DisputeStatus","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeStatus","referencedDeclaration":1929,"type":"enum Arbitrator.DisputeStatus"},"id":4349,"name":"UserDefinedTypeName","src":"79587:13:0"}],"id":4350,"name":"VariableDeclaration","src":"79587:20:0"}],"id":4351,"name":"ParameterList","src":"79586:22:0"},{"children":[{"attributes":{"assignments":[4353]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4411,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2170,"type":"struct Kleros.Dispute"},"id":4352,"name":"UserDefinedTypeName","src":"79619:7:0"}],"id":4353,"name":"VariableDeclaration","src":"79619:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2191,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4354,"name":"Identifier","src":"79645:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4347,"type":"uint256","value":"_disputeID"},"id":4355,"name":"Identifier","src":"79654:10:0"}],"id":4356,"name":"IndexAccess","src":"79645:20:0"}],"id":4357,"name":"VariableDeclarationStatement","src":"79619:46:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4353,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4358,"name":"Identifier","src":"79679:7:0"}],"id":4359,"name":"MemberAccess","src":"79679:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4353,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4360,"name":"Identifier","src":"79695:7:0"}],"id":4361,"name":"MemberAccess","src":"79695:15:0"}],"id":4362,"name":"BinaryOperation","src":"79679:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":4363,"name":"Identifier","src":"79713:7:0"}],"id":4364,"name":"BinaryOperation","src":"79679:41:0"},{"attributes":{"functionReturnParameters":4351},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1929,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4365,"name":"Identifier","src":"79769:13:0"}],"id":4366,"name":"MemberAccess","src":"79769:20:0"}],"id":4367,"name":"Return","src":"79762:27:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2143,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4353,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4368,"name":"Identifier","src":"79807:7:0"}],"id":4369,"name":"MemberAccess","src":"79807:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2145,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4353,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4370,"name":"Identifier","src":"79823:7:0"}],"id":4371,"name":"MemberAccess","src":"79823:15:0"}],"id":4372,"name":"BinaryOperation","src":"79807:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2089,"type":"uint256","value":"session"},"id":4373,"name":"Identifier","src":"79842:7:0"}],"id":4374,"name":"BinaryOperation","src":"79807:42:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2139","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2153,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4353,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4375,"name":"Identifier","src":"79900:7:0"}],"id":4376,"name":"MemberAccess","src":"79900:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2139,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":4377,"name":"Identifier","src":"79917:12:0"}],"id":4378,"name":"MemberAccess","src":"79917:17:0"}],"id":4379,"name":"BinaryOperation","src":"79900:34:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":4380,"name":"Identifier","src":"79958:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":4381,"name":"Identifier","src":"79967:6:0"}],"id":4382,"name":"MemberAccess","src":"79967:13:0"}],"id":4383,"name":"BinaryOperation","src":"79958:22:0"},{"attributes":{"functionReturnParameters":4351},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Waiting","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1929,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4384,"name":"Identifier","src":"80009:13:0"}],"id":4385,"name":"MemberAccess","src":"80009:21:0"}],"id":4386,"name":"Return","src":"80002:28:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2103","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"enum Kleros.Period","value":"period"},"id":4387,"name":"Identifier","src":"80057:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2103,"type":"type(enum Kleros.Period)","value":"Period"},"id":4388,"name":"Identifier","src":"80067:6:0"}],"id":4389,"name":"MemberAccess","src":"80067:13:0"}],"id":4390,"name":"BinaryOperation","src":"80057:23:0"},{"attributes":{"functionReturnParameters":4351},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appealable","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1929,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4391,"name":"Identifier","src":"80109:13:0"}],"id":4392,"name":"MemberAccess","src":"80109:24:0"}],"id":4393,"name":"Return","src":"80102:31:0"},{"attributes":{"functionReturnParameters":4351},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1929,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4394,"name":"Identifier","src":"80163:13:0"}],"id":4395,"name":"MemberAccess","src":"80163:20:0"}],"id":4396,"name":"Return","src":"80156:27:0"}],"id":4397,"name":"IfStatement","src":"80053:130:0"}],"id":4398,"name":"IfStatement","src":"79954:229:0"}],"id":4399,"name":"Block","src":"79936:262:0"},{"attributes":{"functionReturnParameters":4351},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1929,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4400,"name":"Identifier","src":"80211:13:0"}],"id":4401,"name":"MemberAccess","src":"80211:20:0"}],"id":4402,"name":"Return","src":"80204:27:0"}],"id":4403,"name":"IfStatement","src":"79896:335:0"}],"id":4404,"name":"Block","src":"79851:391:0"},{"attributes":{"functionReturnParameters":4351},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Waiting","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1929,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4405,"name":"Identifier","src":"80255:13:0"}],"id":4406,"name":"MemberAccess","src":"80255:21:0"}],"id":4407,"name":"Return","src":"80248:28:0"}],"id":4408,"name":"IfStatement","src":"79804:472:0"}],"id":4409,"name":"IfStatement","src":"79675:601:0"}],"id":4410,"name":"Block","src":"79609:705:0"}],"id":4411,"name":"FunctionDefinition","src":"79526:788:0"},{"attributes":{"constant":false,"documentation":"@dev General call function where the contract execute an arbitrary call with data and ETH following governor orders.\n @param _data Transaction data.\n @param _value Transaction value.\n @param _target Transaction target.","implemented":true,"isConstructor":false,"name":"executeOrder","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_data","scope":4433,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":4412,"name":"ElementaryTypeName","src":"80716:7:0"}],"id":4413,"name":"VariableDeclaration","src":"80716:13:0"},{"attributes":{"constant":false,"name":"_value","scope":4433,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4414,"name":"ElementaryTypeName","src":"80731:4:0"}],"id":4415,"name":"VariableDeclaration","src":"80731:11:0"},{"attributes":{"constant":false,"name":"_target","scope":4433,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4416,"name":"ElementaryTypeName","src":"80744:7:0"}],"id":4417,"name":"VariableDeclaration","src":"80744:15:0"}],"id":4418,"name":"ParameterList","src":"80715:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":4421,"name":"ParameterList","src":"80781:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4419,"name":"Identifier","src":"80768:12:0"}],"id":4420,"name":"ModifierInvocation","src":"80768:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function () payable returns (bool)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"function (uint256) returns (function () payable returns (bool))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"call","referencedDeclaration":null,"type":"function () payable returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4417,"type":"address","value":"_target"},"id":4422,"name":"Identifier","src":"80791:7:0"}],"id":4425,"name":"MemberAccess","src":"80791:12:0"}],"id":4426,"name":"MemberAccess","src":"80791:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4415,"type":"uint256","value":"_value"},"id":4427,"name":"Identifier","src":"80810:6:0"}],"id":4428,"name":"FunctionCall","src":"80791:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4413,"type":"bytes32","value":"_data"},"id":4429,"name":"Identifier","src":"80818:5:0"}],"id":4430,"name":"FunctionCall","src":"80791:33:0"}],"id":4431,"name":"ExpressionStatement","src":"80791:33:0"}],"id":4432,"name":"Block","src":"80781:50:0"}],"id":4433,"name":"FunctionDefinition","src":"80694:137:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for rng.\n @param _rng An instance of RNG.","implemented":true,"isConstructor":false,"name":"setRng","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_rng","scope":4445,"stateVariable":false,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1649,"type":"contract RNG"},"id":4434,"name":"UserDefinedTypeName","src":"80930:3:0"}],"id":4435,"name":"VariableDeclaration","src":"80930:8:0"}],"id":4436,"name":"ParameterList","src":"80929:10:0"},{"attributes":{"parameters":[null]},"children":[],"id":4439,"name":"ParameterList","src":"80960:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4437,"name":"Identifier","src":"80947:12:0"}],"id":4438,"name":"ModifierInvocation","src":"80947:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RNG"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2060,"type":"contract RNG","value":"rng"},"id":4440,"name":"Identifier","src":"80970:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4435,"type":"contract RNG","value":"_rng"},"id":4441,"name":"Identifier","src":"80976:4:0"}],"id":4442,"name":"Assignment","src":"80970:10:0"}],"id":4443,"name":"ExpressionStatement","src":"80970:10:0"}],"id":4444,"name":"Block","src":"80960:27:0"}],"id":4445,"name":"FunctionDefinition","src":"80914:73:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for arbitrationFeePerJuror.\n @param _arbitrationFeePerJuror The fee which will be paid to each juror.","implemented":true,"isConstructor":false,"name":"setArbitrationFeePerJuror","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_arbitrationFeePerJuror","scope":4457,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4446,"name":"ElementaryTypeName","src":"81165:4:0"}],"id":4447,"name":"VariableDeclaration","src":"81165:28:0"}],"id":4448,"name":"ParameterList","src":"81164:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":4451,"name":"ParameterList","src":"81215:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4449,"name":"Identifier","src":"81202:12:0"}],"id":4450,"name":"ModifierInvocation","src":"81202:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2063,"type":"uint256","value":"arbitrationFeePerJuror"},"id":4452,"name":"Identifier","src":"81225:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4447,"type":"uint256","value":"_arbitrationFeePerJuror"},"id":4453,"name":"Identifier","src":"81250:23:0"}],"id":4454,"name":"Assignment","src":"81225:48:0"}],"id":4455,"name":"ExpressionStatement","src":"81225:48:0"}],"id":4456,"name":"Block","src":"81215:65:0"}],"id":4457,"name":"FunctionDefinition","src":"81130:150:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for defaultNumberJuror.\n @param _defaultNumberJuror Number of drawn jurors unless specified otherwise.","implemented":true,"isConstructor":false,"name":"setDefaultNumberJuror","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_defaultNumberJuror","scope":4469,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":4458,"name":"ElementaryTypeName","src":"81455:6:0"}],"id":4459,"name":"VariableDeclaration","src":"81455:26:0"}],"id":4460,"name":"ParameterList","src":"81454:28:0"},{"attributes":{"parameters":[null]},"children":[],"id":4463,"name":"ParameterList","src":"81503:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4461,"name":"Identifier","src":"81490:12:0"}],"id":4462,"name":"ModifierInvocation","src":"81490:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2066,"type":"uint16","value":"defaultNumberJuror"},"id":4464,"name":"Identifier","src":"81513:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4459,"type":"uint16","value":"_defaultNumberJuror"},"id":4465,"name":"Identifier","src":"81534:19:0"}],"id":4466,"name":"Assignment","src":"81513:40:0"}],"id":4467,"name":"ExpressionStatement","src":"81513:40:0"}],"id":4468,"name":"Block","src":"81503:57:0"}],"id":4469,"name":"FunctionDefinition","src":"81424:136:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for minActivatedToken.\n @param _minActivatedToken Minimum of tokens to be activated (in basic units).","implemented":true,"isConstructor":false,"name":"setMinActivatedToken","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_minActivatedToken","scope":4481,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4470,"name":"ElementaryTypeName","src":"81733:4:0"}],"id":4471,"name":"VariableDeclaration","src":"81733:23:0"}],"id":4472,"name":"ParameterList","src":"81732:25:0"},{"attributes":{"parameters":[null]},"children":[],"id":4475,"name":"ParameterList","src":"81778:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4473,"name":"Identifier","src":"81765:12:0"}],"id":4474,"name":"ModifierInvocation","src":"81765:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"minActivatedToken"},"id":4476,"name":"Identifier","src":"81788:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4471,"type":"uint256","value":"_minActivatedToken"},"id":4477,"name":"Identifier","src":"81808:18:0"}],"id":4478,"name":"Assignment","src":"81788:38:0"}],"id":4479,"name":"ExpressionStatement","src":"81788:38:0"}],"id":4480,"name":"Block","src":"81778:55:0"}],"id":4481,"name":"FunctionDefinition","src":"81703:130:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for timePerPeriod.\n @param _timePerPeriod The minimum time each period lasts (seconds).","implemented":true,"isConstructor":false,"name":"setTimePerPeriod","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_timePerPeriod","scope":4495,"stateVariable":false,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4482,"name":"ElementaryTypeName","src":"81988:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":4483,"name":"Literal","src":"81993:1:0"}],"id":4484,"name":"ArrayTypeName","src":"81988:7:0"}],"id":4485,"name":"VariableDeclaration","src":"81988:22:0"}],"id":4486,"name":"ParameterList","src":"81987:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":4489,"name":"ParameterList","src":"82032:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4487,"name":"Identifier","src":"82019:12:0"}],"id":4488,"name":"ModifierInvocation","src":"82019:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[5] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2075,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":4490,"name":"Identifier","src":"82042:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4485,"type":"uint256[5] memory","value":"_timePerPeriod"},"id":4491,"name":"Identifier","src":"82058:14:0"}],"id":4492,"name":"Assignment","src":"82042:30:0"}],"id":4493,"name":"ExpressionStatement","src":"82042:30:0"}],"id":4494,"name":"Block","src":"82032:47:0"}],"id":4495,"name":"FunctionDefinition","src":"81962:117:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for alpha.\n @param _alpha Alpha in ‱.","implemented":true,"isConstructor":false,"name":"setAlpha","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_alpha","scope":4507,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4496,"name":"ElementaryTypeName","src":"82178:4:0"}],"id":4497,"name":"VariableDeclaration","src":"82178:11:0"}],"id":4498,"name":"ParameterList","src":"82177:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":4501,"name":"ParameterList","src":"82211:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4499,"name":"Identifier","src":"82198:12:0"}],"id":4500,"name":"ModifierInvocation","src":"82198:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2078,"type":"uint256","value":"alpha"},"id":4502,"name":"Identifier","src":"82221:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4497,"type":"uint256","value":"_alpha"},"id":4503,"name":"Identifier","src":"82229:6:0"}],"id":4504,"name":"Assignment","src":"82221:14:0"}],"id":4505,"name":"ExpressionStatement","src":"82221:14:0"}],"id":4506,"name":"Block","src":"82211:31:0"}],"id":4507,"name":"FunctionDefinition","src":"82160:82:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for maxAppeals.\n @param _maxAppeals Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.","implemented":true,"isConstructor":false,"name":"setMaxAppeals","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_maxAppeals","scope":4519,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4508,"name":"ElementaryTypeName","src":"82439:4:0"}],"id":4509,"name":"VariableDeclaration","src":"82439:16:0"}],"id":4510,"name":"ParameterList","src":"82438:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":4513,"name":"ParameterList","src":"82477:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4511,"name":"Identifier","src":"82464:12:0"}],"id":4512,"name":"ModifierInvocation","src":"82464:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"uint256","value":"maxAppeals"},"id":4514,"name":"Identifier","src":"82487:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4509,"type":"uint256","value":"_maxAppeals"},"id":4515,"name":"Identifier","src":"82500:11:0"}],"id":4516,"name":"Assignment","src":"82487:24:0"}],"id":4517,"name":"ExpressionStatement","src":"82487:24:0"}],"id":4518,"name":"Block","src":"82477:41:0"}],"id":4519,"name":"FunctionDefinition","src":"82416:102:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for governor.\n @param _governor Address of the governor contract.","implemented":true,"isConstructor":false,"name":"setGovernor","payable":false,"scope":4532,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_governor","scope":4531,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4520,"name":"ElementaryTypeName","src":"82646:7:0"}],"id":4521,"name":"VariableDeclaration","src":"82646:17:0"}],"id":4522,"name":"ParameterList","src":"82645:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":4525,"name":"ParameterList","src":"82685:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2249,"type":"modifier ()","value":"onlyGovernor"},"id":4523,"name":"Identifier","src":"82672:12:0"}],"id":4524,"name":"ModifierInvocation","src":"82672:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2086,"type":"address","value":"governor"},"id":4526,"name":"Identifier","src":"82695:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4521,"type":"address","value":"_governor"},"id":4527,"name":"Identifier","src":"82706:9:0"}],"id":4528,"name":"Assignment","src":"82695:20:0"}],"id":4529,"name":"ExpressionStatement","src":"82695:20:0"}],"id":4530,"name":"Block","src":"82685:37:0"}],"id":4531,"name":"FunctionDefinition","src":"82625:97:0"}],"id":4532,"name":"ContractDefinition","src":"42465:40259:0"}],"id":4533,"name":"SourceUnit","src":"0:82724:0"}}