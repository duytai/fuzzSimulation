{"name":"PEpsilon","address":"0xfd2ec9e1208bdbefbcc0bbe493922ec29b97d183","source":"/** @title PEpsilon\r\n *  @author Daniel Babbev\r\n *\r\n *  This contract implements a p + epsilon attack against the Kleros court.\r\n *  The attack is described by VitaliK Buterin here: https://blog.ethereum.org/2015/01/28/p-epsilon-attack/\r\n */\r\ncontract PEpsilon {\r\n  Pinakion public pinakion;\r\n  Kleros public court;\r\n\r\n  uint public balance;\r\n  uint public disputeID;\r\n  uint public desiredOutcome;\r\n  uint public epsilon;\r\n  bool public settled;\r\n  uint public maxAppeals; // The maximum number of appeals this cotracts promises to pay\r\n  mapping (address => uint) public withdraw; // We'll use a withdraw pattern here to avoid multiple sends when a juror has voted multiple times.\r\n\r\n  address public attacker;\r\n  uint public remainingWithdraw; // Here we keep the total amount bribed jurors have available for withdraw.\r\n\r\n  modifier onlyBy(address _account) {require(msg.sender == _account); _;}\r\n\r\n  event AmountShift(uint val, uint epsilon ,address juror);\r\n  event Log(uint val, address addr, string message);\r\n\r\n  /** @dev Constructor.\r\n   *  @param _pinakion The PNK contract.\r\n   *  @param _kleros   The Kleros court.\r\n   *  @param _disputeID The dispute we are targeting.\r\n   *  @param _desiredOutcome The desired ruling of the dispute.\r\n   *  @param _epsilon  Jurors will be paid epsilon more for voting for the desiredOutcome.\r\n   *  @param _maxAppeals The maximum number of appeals this contract promises to pay out\r\n   */\r\n  constructor(Pinakion _pinakion, Kleros _kleros, uint _disputeID, uint _desiredOutcome, uint _epsilon, uint _maxAppeals) public {\r\n    pinakion = _pinakion;\r\n    court = _kleros;\r\n    disputeID = _disputeID;\r\n    desiredOutcome = _desiredOutcome;\r\n    epsilon = _epsilon;\r\n    attacker = msg.sender;\r\n    maxAppeals = _maxAppeals;\r\n  }\r\n\r\n  /** @dev Callback of approveAndCall - transfer pinakions in the contract. Should be called by the pinakion contract. TRUSTED.\r\n   *  The attacker has to deposit sufficiently large amount of PNK to cover the payouts to the jurors.\r\n   *  @param _from The address making the transfer.\r\n   *  @param _amount Amount of tokens to transfer to this contract (in basic units).\r\n   */\r\n  function receiveApproval(address _from, uint _amount, address, bytes) public onlyBy(pinakion) {\r\n    require(pinakion.transferFrom(_from, this, _amount));\r\n\r\n    balance += _amount;\r\n  }\r\n\r\n  /** @dev Jurors can withdraw their PNK from here\r\n   */\r\n  function withdrawJuror() {\r\n    withdrawSelect(msg.sender);\r\n  }\r\n\r\n  /** @dev Withdraw the funds of a given juror\r\n   *  @param _juror The address of the juror\r\n   */\r\n  function withdrawSelect(address _juror) {\r\n    uint amount = withdraw[_juror];\r\n    withdraw[_juror] = 0;\r\n\r\n    balance = sub(balance, amount); // Could underflow\r\n    remainingWithdraw = sub(remainingWithdraw, amount);\r\n\r\n    // The juror receives d + p + e (deposit + p + epsilon)\r\n    require(pinakion.transfer(_juror, amount));\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b <= _a);\r\n    return _a - _b;\r\n  }\r\n\r\n  /** @dev The attacker can withdraw their PNK from here after the bribe has been settled.\r\n   */\r\n  function withdrawAttacker(){\r\n    require(settled);\r\n\r\n    if (balance > remainingWithdraw) {\r\n      // The remaning balance of PNK after settlement is transfered to the attacker.\r\n      uint amount = balance - remainingWithdraw;\r\n      balance = remainingWithdraw;\r\n\r\n      require(pinakion.transfer(attacker, amount));\r\n    }\r\n  }\r\n\r\n  /** @dev Settles the p + e bribe with the jurors.\r\n   * If the dispute is ruled differently from desiredOutcome:\r\n   *    The jurors who voted for desiredOutcome receive p + d + e in rewards from this contract.\r\n   * If the dispute is ruled as in desiredOutcome:\r\n   *    The jurors don't receive anything from this contract.\r\n   */\r\n  function settle() public {\r\n    require(court.disputeStatus(disputeID) ==  Arbitrator.DisputeStatus.Solved); // The case must be solved.\r\n    require(!settled); // This function can be executed only once.\r\n\r\n    settled = true; // settle the bribe\r\n\r\n    // From the dispute we get the # of appeals and the available choices\r\n    var (, , appeals, choices, , , ,) = court.disputes(disputeID);\r\n\r\n    if (court.currentRuling(disputeID) != desiredOutcome){\r\n      // Calculate the redistribution amounts.\r\n      uint amountShift = court.getStakePerDraw();\r\n      uint winningChoice = court.getWinningChoice(disputeID, appeals);\r\n\r\n      // Rewards are calculated as per the one shot token reparation.\r\n      for (uint i=0; i <= (appeals > maxAppeals ? maxAppeals : appeals); i++){ // Loop each appeal and each vote.\r\n\r\n        // Note that we don't check if the result was a tie becuse we are getting a funny compiler error: \"stack is too deep\" if we check.\r\n        // TODO: Account for ties\r\n        if (winningChoice != 0){\r\n          // votesLen is the length of the votes per each appeal. There is no getter function for that, so we have to calculate it here.\r\n          // We must end up with the exact same value as if we would have called dispute.votes[i].length\r\n          uint votesLen = 0;\r\n          for (uint c = 0; c <= choices; c++) { // Iterate for each choice of the dispute.\r\n            votesLen += court.getVoteCount(disputeID, i, c);\r\n          }\r\n\r\n          emit Log(amountShift, 0x0 ,\"stakePerDraw\");\r\n          emit Log(votesLen, 0x0, \"votesLen\");\r\n\r\n          uint totalToRedistribute = 0;\r\n          uint nbCoherent = 0;\r\n\r\n          // Now we will use votesLen as a substitute for dispute.votes[i].length\r\n          for (uint j=0; j < votesLen; j++){\r\n            uint voteRuling = court.getVoteRuling(disputeID, i, j);\r\n            address voteAccount = court.getVoteAccount(disputeID, i, j);\r\n\r\n            emit Log(voteRuling, voteAccount, \"voted\");\r\n\r\n            if (voteRuling != winningChoice){\r\n              totalToRedistribute += amountShift;\r\n\r\n              if (voteRuling == desiredOutcome){ // If the juror voted as we desired.\r\n                // Transfer this juror back the penalty.\r\n                withdraw[voteAccount] += amountShift + epsilon;\r\n                remainingWithdraw += amountShift + epsilon;\r\n                emit AmountShift(amountShift, epsilon, voteAccount);\r\n              }\r\n            } else {\r\n              nbCoherent++;\r\n            }\r\n          }\r\n          // toRedistribute is the amount each juror received when he voted coherently.\r\n          uint toRedistribute = (totalToRedistribute - amountShift) / (nbCoherent + 1);\r\n\r\n          // We use votesLen again as a substitute for dispute.votes[i].length\r\n          for (j = 0; j < votesLen; j++){\r\n            voteRuling = court.getVoteRuling(disputeID, i, j);\r\n            voteAccount = court.getVoteAccount(disputeID, i, j);\r\n\r\n            if (voteRuling == desiredOutcome){\r\n              // Add the coherent juror reward to the total payout.\r\n              withdraw[voteAccount] += toRedistribute;\r\n              remainingWithdraw += toRedistribute;\r\n              emit AmountShift(toRedistribute, 0, voteAccount);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n *  @title Kleros\r\n *  @author Clément Lesaege - <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"c2a1aea7afa7acb682aea7b1a3a7a5a7eca1adaf\">[email protected]</a>>\r\n *  This code implements a simple version of Kleros.\r\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\r\n */\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\r\n}\r\n\r\n/// @dev The token controller contract must implement these functions\r\ncontract TokenController {\r\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\r\n    /// @param _owner The address that sent the ether to create tokens\r\n    /// @return True if the ether is accepted, false if it throws\r\n    function proxyPayment(address _owner) public payable returns(bool);\r\n\r\n    /// @notice Notifies the controller about a token transfer allowing the\r\n    ///  controller to react if desired\r\n    /// @param _from The origin of the transfer\r\n    /// @param _to The destination of the transfer\r\n    /// @param _amount The amount of the transfer\r\n    /// @return False if the controller does not authorize the transfer\r\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\r\n\r\n    /// @notice Notifies the controller about an approval allowing the\r\n    ///  controller to react if desired\r\n    /// @param _owner The address that calls `approve()`\r\n    /// @param _spender The spender in the `approve()` call\r\n    /// @param _amount The amount in the `approve()` call\r\n    /// @return False if the controller does not authorize the approval\r\n    function onApprove(address _owner, address _spender, uint _amount) public\r\n        returns(bool);\r\n}\r\n\r\ncontract Controlled {\r\n    /// @notice The address of the controller is the only address that can call\r\n    ///  a function with this modifier\r\n    modifier onlyController { require(msg.sender == controller); _; }\r\n\r\n    address public controller;\r\n\r\n    function Controlled() public { controller = msg.sender;}\r\n\r\n    /// @notice Changes the controller of the contract\r\n    /// @param _newController The new controller of the contract\r\n    function changeController(address _newController) public onlyController {\r\n        controller = _newController;\r\n    }\r\n}\r\n\r\n/// @dev The actual token contract, the default controller is the msg.sender\r\n///  that deploys the contract, so usually this token will be deployed by a\r\n///  token controller contract, which Giveth will call a \"Campaign\"\r\ncontract Pinakion is Controlled {\r\n\r\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\r\n    uint8 public decimals;             //Number of decimals of the smallest unit\r\n    string public symbol;              //An identifier: e.g. REP\r\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\r\n\r\n\r\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\r\n    ///  given value, the block number attached is the one that last changed the\r\n    ///  value\r\n    struct  Checkpoint {\r\n\r\n        // `fromBlock` is the block number that the value was generated from\r\n        uint128 fromBlock;\r\n\r\n        // `value` is the amount of tokens at a specific block number\r\n        uint128 value;\r\n    }\r\n\r\n    // `parentToken` is the Token address that was cloned to produce this token;\r\n    //  it will be 0x0 for a token that was not cloned\r\n    Pinakion public parentToken;\r\n\r\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\r\n    //  used to determine the initial distribution of the Clone Token\r\n    uint public parentSnapShotBlock;\r\n\r\n    // `creationBlock` is the block number that the Clone Token was created\r\n    uint public creationBlock;\r\n\r\n    // `balances` is the map that tracks the balance of each address, in this\r\n    //  contract when the balance changes the block number that the change\r\n    //  occurred is also included in the map\r\n    mapping (address => Checkpoint[]) balances;\r\n\r\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    // Tracks the history of the `totalSupply` of the token\r\n    Checkpoint[] totalSupplyHistory;\r\n\r\n    // Flag that determines if the token is transferable or not.\r\n    bool public transfersEnabled;\r\n\r\n    // The factory used to create new clone tokens\r\n    MiniMeTokenFactory public tokenFactory;\r\n\r\n////////////////\r\n// Constructor\r\n////////////////\r\n\r\n    /// @notice Constructor to create a Pinakion\r\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\r\n    ///  will create the Clone token contracts, the token factory needs to be\r\n    ///  deployed first\r\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\r\n    ///  new token\r\n    /// @param _parentSnapShotBlock Block of the parent token that will\r\n    ///  determine the initial distribution of the clone token, set to 0 if it\r\n    ///  is a new token\r\n    /// @param _tokenName Name of the new token\r\n    /// @param _decimalUnits Number of decimals of the new token\r\n    /// @param _tokenSymbol Token Symbol for the new token\r\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\r\n    function Pinakion(\r\n        address _tokenFactory,\r\n        address _parentToken,\r\n        uint _parentSnapShotBlock,\r\n        string _tokenName,\r\n        uint8 _decimalUnits,\r\n        string _tokenSymbol,\r\n        bool _transfersEnabled\r\n    ) public {\r\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\r\n        name = _tokenName;                                 // Set the name\r\n        decimals = _decimalUnits;                          // Set the decimals\r\n        symbol = _tokenSymbol;                             // Set the symbol\r\n        parentToken = Pinakion(_parentToken);\r\n        parentSnapShotBlock = _parentSnapShotBlock;\r\n        transfersEnabled = _transfersEnabled;\r\n        creationBlock = block.number;\r\n    }\r\n\r\n\r\n///////////////////\r\n// ERC20 Methods\r\n///////////////////\r\n\r\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\r\n    /// @param _to The address of the recipient\r\n    /// @param _amount The amount of tokens to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        require(transfersEnabled);\r\n        doTransfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\r\n    ///  is approved by `_from`\r\n    /// @param _from The address holding the tokens being transferred\r\n    /// @param _to The address of the recipient\r\n    /// @param _amount The amount of tokens to be transferred\r\n    /// @return True if the transfer was successful\r\n    function transferFrom(address _from, address _to, uint256 _amount\r\n    ) public returns (bool success) {\r\n\r\n        // The controller of this contract can move tokens around at will,\r\n        //  this is important to recognize! Confirm that you trust the\r\n        //  controller of this contract, which in most situations should be\r\n        //  another open source smart contract or 0x0\r\n        if (msg.sender != controller) {\r\n            require(transfersEnabled);\r\n\r\n            // The standard ERC 20 transferFrom functionality\r\n            require(allowed[_from][msg.sender] >= _amount);\r\n            allowed[_from][msg.sender] -= _amount;\r\n        }\r\n        doTransfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /// @dev This is the actual transfer function in the token contract, it can\r\n    ///  only be called by other functions in this contract.\r\n    /// @param _from The address holding the tokens being transferred\r\n    /// @param _to The address of the recipient\r\n    /// @param _amount The amount of tokens to be transferred\r\n    /// @return True if the transfer was successful\r\n    function doTransfer(address _from, address _to, uint _amount\r\n    ) internal {\r\n\r\n           if (_amount == 0) {\r\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\r\n               return;\r\n           }\r\n\r\n           require(parentSnapShotBlock < block.number);\r\n\r\n           // Do not allow transfer to 0x0 or the token contract itself\r\n           require((_to != 0) && (_to != address(this)));\r\n\r\n           // If the amount being transfered is more than the balance of the\r\n           //  account the transfer throws\r\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\r\n\r\n           require(previousBalanceFrom >= _amount);\r\n\r\n           // Alerts the token controller of the transfer\r\n           if (isContract(controller)) {\r\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\r\n           }\r\n\r\n           // First update the balance array with the new value for the address\r\n           //  sending the tokens\r\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\r\n\r\n           // Then update the balance array with the new value for the address\r\n           //  receiving the tokens\r\n           var previousBalanceTo = balanceOfAt(_to, block.number);\r\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\r\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\r\n\r\n           // An event to make the transfer easy to find on the blockchain\r\n           Transfer(_from, _to, _amount);\r\n\r\n    }\r\n\r\n    /// @param _owner The address that's balance is being requested\r\n    /// @return The balance of `_owner` at the current block\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balanceOfAt(_owner, block.number);\r\n    }\r\n\r\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\r\n    ///  its behalf. This is the standard version to allow backward compatibility.\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _amount The amount of tokens to be approved for transfer\r\n    /// @return True if the approval was successful\r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n        require(transfersEnabled);\r\n\r\n        // Alerts the token controller of the approve function call\r\n        if (isContract(controller)) {\r\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\r\n        }\r\n\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    /// @dev This function makes it easy to read the `allowed[]` map\r\n    /// @param _owner The address of the account that owns the token\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\r\n    ///  to spend\r\n    function allowance(address _owner, address _spender\r\n    ) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\r\n    ///  its behalf, and then a function is triggered in the contract that is\r\n    ///  being approved, `_spender`. This allows users to use their tokens to\r\n    ///  interact with contracts in one function call instead of two\r\n    /// @param _spender The address of the contract able to transfer the tokens\r\n    /// @param _amount The amount of tokens to be approved for transfer\r\n    /// @return True if the function call was successful\r\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\r\n    ) public returns (bool success) {\r\n        require(approve(_spender, _amount));\r\n\r\n        ApproveAndCallFallBack(_spender).receiveApproval(\r\n            msg.sender,\r\n            _amount,\r\n            this,\r\n            _extraData\r\n        );\r\n\r\n        return true;\r\n    }\r\n\r\n    /// @dev This function makes it easy to get the total number of tokens\r\n    /// @return The total number of tokens\r\n    function totalSupply() public constant returns (uint) {\r\n        return totalSupplyAt(block.number);\r\n    }\r\n\r\n\r\n////////////////\r\n// Query balance and totalSupply in History\r\n////////////////\r\n\r\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\r\n    /// @param _owner The address from which the balance will be retrieved\r\n    /// @param _blockNumber The block number when the balance is queried\r\n    /// @return The balance at `_blockNumber`\r\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\r\n        returns (uint) {\r\n\r\n        // These next few lines are used when the balance of the token is\r\n        //  requested before a check point was ever created for this token, it\r\n        //  requires that the `parentToken.balanceOfAt` be queried at the\r\n        //  genesis block for that token as this contains initial balance of\r\n        //  this token\r\n        if ((balances[_owner].length == 0)\r\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\r\n            if (address(parentToken) != 0) {\r\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\r\n            } else {\r\n                // Has no parent\r\n                return 0;\r\n            }\r\n\r\n        // This will return the expected balance during normal situations\r\n        } else {\r\n            return getValueAt(balances[_owner], _blockNumber);\r\n        }\r\n    }\r\n\r\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\r\n    /// @param _blockNumber The block number when the totalSupply is queried\r\n    /// @return The total amount of tokens at `_blockNumber`\r\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\r\n\r\n        // These next few lines are used when the totalSupply of the token is\r\n        //  requested before a check point was ever created for this token, it\r\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\r\n        //  genesis block for this token as that contains totalSupply of this\r\n        //  token at this block number.\r\n        if ((totalSupplyHistory.length == 0)\r\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\r\n            if (address(parentToken) != 0) {\r\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\r\n            } else {\r\n                return 0;\r\n            }\r\n\r\n        // This will return the expected totalSupply during normal situations\r\n        } else {\r\n            return getValueAt(totalSupplyHistory, _blockNumber);\r\n        }\r\n    }\r\n\r\n////////////////\r\n// Clone Token Method\r\n////////////////\r\n\r\n    /// @notice Creates a new clone token with the initial distribution being\r\n    ///  this token at `_snapshotBlock`\r\n    /// @param _cloneTokenName Name of the clone token\r\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\r\n    /// @param _cloneTokenSymbol Symbol of the clone token\r\n    /// @param _snapshotBlock Block when the distribution of the parent token is\r\n    ///  copied to set the initial distribution of the new clone token;\r\n    ///  if the block is zero than the actual block, the current block is used\r\n    /// @param _transfersEnabled True if transfers are allowed in the clone\r\n    /// @return The address of the new MiniMeToken Contract\r\n    function createCloneToken(\r\n        string _cloneTokenName,\r\n        uint8 _cloneDecimalUnits,\r\n        string _cloneTokenSymbol,\r\n        uint _snapshotBlock,\r\n        bool _transfersEnabled\r\n        ) public returns(address) {\r\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\r\n        Pinakion cloneToken = tokenFactory.createCloneToken(\r\n            this,\r\n            _snapshotBlock,\r\n            _cloneTokenName,\r\n            _cloneDecimalUnits,\r\n            _cloneTokenSymbol,\r\n            _transfersEnabled\r\n            );\r\n\r\n        cloneToken.changeController(msg.sender);\r\n\r\n        // An event to make the token easy to find on the blockchain\r\n        NewCloneToken(address(cloneToken), _snapshotBlock);\r\n        return address(cloneToken);\r\n    }\r\n\r\n////////////////\r\n// Generate and destroy tokens\r\n////////////////\r\n\r\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\r\n    /// @param _owner The address that will be assigned the new tokens\r\n    /// @param _amount The quantity of tokens generated\r\n    /// @return True if the tokens are generated correctly\r\n    function generateTokens(address _owner, uint _amount\r\n    ) public onlyController returns (bool) {\r\n        uint curTotalSupply = totalSupply();\r\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\r\n        uint previousBalanceTo = balanceOf(_owner);\r\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\r\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\r\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\r\n        Transfer(0, _owner, _amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    /// @notice Burns `_amount` tokens from `_owner`\r\n    /// @param _owner The address that will lose the tokens\r\n    /// @param _amount The quantity of tokens to burn\r\n    /// @return True if the tokens are burned correctly\r\n    function destroyTokens(address _owner, uint _amount\r\n    ) onlyController public returns (bool) {\r\n        uint curTotalSupply = totalSupply();\r\n        require(curTotalSupply >= _amount);\r\n        uint previousBalanceFrom = balanceOf(_owner);\r\n        require(previousBalanceFrom >= _amount);\r\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\r\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\r\n        Transfer(_owner, 0, _amount);\r\n        return true;\r\n    }\r\n\r\n////////////////\r\n// Enable tokens transfers\r\n////////////////\r\n\r\n\r\n    /// @notice Enables token holders to transfer their tokens freely if true\r\n    /// @param _transfersEnabled True if transfers are allowed in the clone\r\n    function enableTransfers(bool _transfersEnabled) public onlyController {\r\n        transfersEnabled = _transfersEnabled;\r\n    }\r\n\r\n////////////////\r\n// Internal helper functions to query and set a value in a snapshot array\r\n////////////////\r\n\r\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\r\n    /// @param checkpoints The history of values being queried\r\n    /// @param _block The block number to retrieve the value at\r\n    /// @return The number of tokens being queried\r\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\r\n    ) constant internal returns (uint) {\r\n        if (checkpoints.length == 0) return 0;\r\n\r\n        // Shortcut for the actual value\r\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\r\n            return checkpoints[checkpoints.length-1].value;\r\n        if (_block < checkpoints[0].fromBlock) return 0;\r\n\r\n        // Binary search of the value in the array\r\n        uint min = 0;\r\n        uint max = checkpoints.length-1;\r\n        while (max > min) {\r\n            uint mid = (max + min + 1)/ 2;\r\n            if (checkpoints[mid].fromBlock<=_block) {\r\n                min = mid;\r\n            } else {\r\n                max = mid-1;\r\n            }\r\n        }\r\n        return checkpoints[min].value;\r\n    }\r\n\r\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\r\n    ///  `totalSupplyHistory`\r\n    /// @param checkpoints The history of data being updated\r\n    /// @param _value The new number of tokens\r\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\r\n    ) internal  {\r\n        if ((checkpoints.length == 0)\r\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\r\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\r\n               newCheckPoint.fromBlock =  uint128(block.number);\r\n               newCheckPoint.value = uint128(_value);\r\n           } else {\r\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\r\n               oldCheckPoint.value = uint128(_value);\r\n           }\r\n    }\r\n\r\n    /// @dev Internal function to determine if an address is a contract\r\n    /// @param _addr The address being queried\r\n    /// @return True if `_addr` is a contract\r\n    function isContract(address _addr) constant internal returns(bool) {\r\n        uint size;\r\n        if (_addr == 0) return false;\r\n        assembly {\r\n            size := extcodesize(_addr)\r\n        }\r\n        return size>0;\r\n    }\r\n\r\n    /// @dev Helper function to return a min betwen the two uints\r\n    function min(uint a, uint b) pure internal returns (uint) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /// @notice The fallback function: If the contract's controller has not been\r\n    ///  set to 0, then the `proxyPayment` method is called which relays the\r\n    ///  ether and creates tokens as described in the token controller contract\r\n    function () public payable {\r\n        require(isContract(controller));\r\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\r\n    }\r\n\r\n//////////\r\n// Safety Methods\r\n//////////\r\n\r\n    /// @notice This method can be used by the controller to extract mistakenly\r\n    ///  sent tokens to this contract.\r\n    /// @param _token The address of the token contract that you want to recover\r\n    ///  set to 0 in case you want to extract ether.\r\n    function claimTokens(address _token) public onlyController {\r\n        if (_token == 0x0) {\r\n            controller.transfer(this.balance);\r\n            return;\r\n        }\r\n\r\n        Pinakion token = Pinakion(_token);\r\n        uint balance = token.balanceOf(this);\r\n        token.transfer(controller, balance);\r\n        ClaimedTokens(_token, controller, balance);\r\n    }\r\n\r\n////////////////\r\n// Events\r\n////////////////\r\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _amount\r\n        );\r\n\r\n}\r\n\r\n\r\n////////////////\r\n// MiniMeTokenFactory\r\n////////////////\r\n\r\n/// @dev This contract is used to generate clone contracts from a contract.\r\n///  In solidity this is the way to create a contract from a contract of the\r\n///  same class\r\ncontract MiniMeTokenFactory {\r\n\r\n    /// @notice Update the DApp by creating a new token with new functionalities\r\n    ///  the msg.sender becomes the controller of this clone token\r\n    /// @param _parentToken Address of the token being cloned\r\n    /// @param _snapshotBlock Block of the parent token that will\r\n    ///  determine the initial distribution of the clone token\r\n    /// @param _tokenName Name of the new token\r\n    /// @param _decimalUnits Number of decimals of the new token\r\n    /// @param _tokenSymbol Token Symbol for the new token\r\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\r\n    /// @return The address of the new token contract\r\n    function createCloneToken(\r\n        address _parentToken,\r\n        uint _snapshotBlock,\r\n        string _tokenName,\r\n        uint8 _decimalUnits,\r\n        string _tokenSymbol,\r\n        bool _transfersEnabled\r\n    ) public returns (Pinakion) {\r\n        Pinakion newToken = new Pinakion(\r\n            this,\r\n            _parentToken,\r\n            _snapshotBlock,\r\n            _tokenName,\r\n            _decimalUnits,\r\n            _tokenSymbol,\r\n            _transfersEnabled\r\n            );\r\n\r\n        newToken.changeController(msg.sender);\r\n        return newToken;\r\n    }\r\n}\r\n\r\ncontract RNG{\r\n\r\n    /** @dev Contribute to the reward of a random number.\r\n     *  @param _block Block the random number is linked to.\r\n     */\r\n    function contribute(uint _block) public payable;\r\n\r\n    /** @dev Request a random number.\r\n     *  @param _block Block linked to the request.\r\n     */\r\n    function requestRN(uint _block) public payable {\r\n        contribute(_block);\r\n    }\r\n\r\n    /** @dev Get the random number.\r\n     *  @param _block Block the random number is linked to.\r\n     *  @return RN Random Number. If the number is not ready or has not been required 0 instead.\r\n     */\r\n    function getRN(uint _block) public returns (uint RN);\r\n\r\n    /** @dev Get a uncorrelated random number. Act like getRN but give a different number for each sender.\r\n     *  This is to prevent users from getting correlated numbers.\r\n     *  @param _block Block the random number is linked to.\r\n     *  @return RN Random Number. If the number is not ready or has not been required 0 instead.\r\n     */\r\n    function getUncorrelatedRN(uint _block) public returns (uint RN) {\r\n        uint baseRN=getRN(_block);\r\n        if (baseRN==0)\r\n            return 0;\r\n        else\r\n            return uint(keccak256(msg.sender,baseRN));\r\n    }\r\n\r\n }\r\n\r\n/** Simple Random Number Generator returning the blockhash.\r\n *  Allows saving the random number for use in the future.\r\n *  It allows the contract to still access the blockhash even after 256 blocks.\r\n *  The first party to call the save function gets the reward.\r\n */\r\ncontract BlockHashRNG is RNG {\r\n\r\n    mapping (uint => uint) public randomNumber; // randomNumber[block] is the random number for this block, 0 otherwise.\r\n    mapping (uint => uint) public reward; // reward[block] is the amount to be paid to the party w.\r\n\r\n\r\n\r\n    /** @dev Contribute to the reward of a random number.\r\n     *  @param _block Block the random number is linked to.\r\n     */\r\n    function contribute(uint _block) public payable { reward[_block]+=msg.value; }\r\n\r\n\r\n    /** @dev Return the random number. If it has not been saved and is still computable compute it.\r\n     *  @param _block Block the random number is linked to.\r\n     *  @return RN Random Number. If the number is not ready or has not been requested 0 instead.\r\n     */\r\n    function getRN(uint _block) public returns (uint RN) {\r\n        RN=randomNumber[_block];\r\n        if (RN==0){\r\n            saveRN(_block);\r\n            return randomNumber[_block];\r\n        }\r\n        else\r\n            return RN;\r\n    }\r\n\r\n    /** @dev Save the random number for this blockhash and give the reward to the caller.\r\n     *  @param _block Block the random number is linked to.\r\n     */\r\n    function saveRN(uint _block) public {\r\n        if (blockhash(_block) != 0x0)\r\n            randomNumber[_block] = uint(blockhash(_block));\r\n        if (randomNumber[_block] != 0) { // If the number is set.\r\n            uint rewardToSend = reward[_block];\r\n            reward[_block] = 0;\r\n            msg.sender.send(rewardToSend); // Note that the use of send is on purpose as we don't want to block in case msg.sender has a fallback issue.\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n/** Random Number Generator returning the blockhash with a backup behaviour.\r\n *  Allows saving the random number for use in the future. \r\n *  It allows the contract to still access the blockhash even after 256 blocks.\r\n *  The first party to call the save function gets the reward.\r\n *  If no one calls the contract within 256 blocks, the contract fallback in returning the blockhash of the previous block.\r\n */\r\ncontract BlockHashRNGFallback is BlockHashRNG {\r\n    \r\n    /** @dev Save the random number for this blockhash and give the reward to the caller.\r\n     *  @param _block Block the random number is linked to.\r\n     */\r\n    function saveRN(uint _block) public {\r\n        if (_block<block.number && randomNumber[_block]==0) {// If the random number is not already set and can be.\r\n            if (blockhash(_block)!=0x0) // Normal case.\r\n                randomNumber[_block]=uint(blockhash(_block));\r\n            else // The contract was not called in time. Fallback to returning previous blockhash.\r\n                randomNumber[_block]=uint(blockhash(block.number-1));\r\n        }\r\n        if (randomNumber[_block] != 0) { // If the random number is set.\r\n            uint rewardToSend=reward[_block];\r\n            reward[_block]=0;\r\n            msg.sender.send(rewardToSend); // Note that the use of send is on purpose as we don't want to block in case the msg.sender has a fallback issue.\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n/** @title Arbitrable\r\n *  Arbitrable abstract contract.\r\n *  When developing arbitrable contracts, we need to:\r\n *  -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\r\n *  -Allow dispute creation. For this a function must:\r\n *      -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\r\n *      -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);\r\n */\r\ncontract Arbitrable{\r\n    Arbitrator public arbitrator;\r\n    bytes public arbitratorExtraData; // Extra data to require particular dispute and appeal behaviour.\r\n\r\n    modifier onlyArbitrator {require(msg.sender==address(arbitrator)); _;}\r\n\r\n    /** @dev To be raised when a ruling is given.\r\n     *  @param _arbitrator The arbitrator giving the ruling.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling The ruling which was given.\r\n     */\r\n    event Ruling(Arbitrator indexed _arbitrator, uint indexed _disputeID, uint _ruling);\r\n\r\n    /** @dev To be emmited when meta-evidence is submitted.\r\n     *  @param _metaEvidenceID Unique identifier of meta-evidence.\r\n     *  @param _evidence A link to the meta-evidence JSON.\r\n     */\r\n    event MetaEvidence(uint indexed _metaEvidenceID, string _evidence);\r\n\r\n    /** @dev To be emmited when a dispute is created to link the correct meta-evidence to the disputeID\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _metaEvidenceID Unique identifier of meta-evidence.\r\n     */\r\n    event Dispute(Arbitrator indexed _arbitrator, uint indexed _disputeID, uint _metaEvidenceID);\r\n\r\n    /** @dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due to gas considerations).\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\r\n     *  @param _evidence A URI to the evidence JSON file whose name should be its keccak256 hash followed by .json.\r\n     */\r\n    event Evidence(Arbitrator indexed _arbitrator, uint indexed _disputeID, address _party, string _evidence);\r\n\r\n    /** @dev Constructor. Choose the arbitrator.\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\r\n     */\r\n    constructor(Arbitrator _arbitrator, bytes _arbitratorExtraData) public {\r\n        arbitrator = _arbitrator;\r\n        arbitratorExtraData = _arbitratorExtraData;\r\n    }\r\n\r\n    /** @dev Give a ruling for a dispute. Must be called by the arbitrator.\r\n     *  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r\n     */\r\n    function rule(uint _disputeID, uint _ruling) public onlyArbitrator {\r\n        emit Ruling(Arbitrator(msg.sender),_disputeID,_ruling);\r\n\r\n        executeRuling(_disputeID,_ruling);\r\n    }\r\n\r\n\r\n    /** @dev Execute a ruling of a dispute.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r\n     */\r\n    function executeRuling(uint _disputeID, uint _ruling) internal;\r\n}\r\n\r\n/** @title Arbitrator\r\n *  Arbitrator abstract contract.\r\n *  When developing arbitrator contracts we need to:\r\n *  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\r\n *  -Define the functions for cost display (arbitrationCost and appealCost).\r\n *  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).\r\n */\r\ncontract Arbitrator{\r\n\r\n    enum DisputeStatus {Waiting, Appealable, Solved}\r\n\r\n    modifier requireArbitrationFee(bytes _extraData) {require(msg.value>=arbitrationCost(_extraData)); _;}\r\n    modifier requireAppealFee(uint _disputeID, bytes _extraData) {require(msg.value>=appealCost(_disputeID, _extraData)); _;}\r\n\r\n    /** @dev To be raised when a dispute can be appealed.\r\n     *  @param _disputeID ID of the dispute.\r\n     */\r\n    event AppealPossible(uint _disputeID);\r\n\r\n    /** @dev To be raised when a dispute is created.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _arbitrable The contract which created the dispute.\r\n     */\r\n    event DisputeCreation(uint indexed _disputeID, Arbitrable _arbitrable);\r\n\r\n    /** @dev To be raised when the current ruling is appealed.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _arbitrable The contract which created the dispute.\r\n     */\r\n    event AppealDecision(uint indexed _disputeID, Arbitrable _arbitrable);\r\n\r\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\r\n     *  Must be paid at least arbitrationCost(_extraData).\r\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return disputeID ID of the dispute created.\r\n     */\r\n    function createDispute(uint _choices, bytes _extraData) public requireArbitrationFee(_extraData) payable returns(uint disputeID)  {}\r\n\r\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function arbitrationCost(bytes _extraData) public constant returns(uint fee);\r\n\r\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Can be used to give extra info on the appeal.\r\n     */\r\n    function appeal(uint _disputeID, bytes _extraData) public requireAppealFee(_disputeID,_extraData) payable {\r\n        emit AppealDecision(_disputeID, Arbitrable(msg.sender));\r\n    }\r\n\r\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function appealCost(uint _disputeID, bytes _extraData) public constant returns(uint fee);\r\n\r\n    /** @dev Return the status of a dispute.\r\n     *  @param _disputeID ID of the dispute to rule.\r\n     *  @return status The status of the dispute.\r\n     */\r\n    function disputeStatus(uint _disputeID) public constant returns(DisputeStatus status);\r\n\r\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @return ruling The ruling which has been given or the one which will be given if there is no appeal.\r\n     */\r\n    function currentRuling(uint _disputeID) public constant returns(uint ruling);\r\n\r\n}\r\n\r\n\r\n\r\ncontract Kleros is Arbitrator, ApproveAndCallFallBack {\r\n\r\n    // **************************** //\r\n    // *    Contract variables    * //\r\n    // **************************** //\r\n\r\n    // Variables which should not change after initialization.\r\n    Pinakion public pinakion;\r\n    uint public constant NON_PAYABLE_AMOUNT = (2**256 - 2) / 2; // An astronomic amount, practically can't be paid.\r\n\r\n    // Variables which will subject to the governance mechanism.\r\n    // Note they will only be able to be changed during the activation period (because a session assumes they don't change after it).\r\n    RNG public rng; // Random Number Generator used to draw jurors.\r\n    uint public arbitrationFeePerJuror = 0.05 ether; // The fee which will be paid to each juror.\r\n    uint16 public defaultNumberJuror = 3; // Number of drawn jurors unless specified otherwise.\r\n    uint public minActivatedToken = 0.1 * 1e18; // Minimum of tokens to be activated (in basic units).\r\n    uint[5] public timePerPeriod; // The minimum time each period lasts (seconds).\r\n    uint public alpha = 2000; // alpha in ‱ (1 / 10 000).\r\n    uint constant ALPHA_DIVISOR = 1e4; // Amount we need to divided alpha in ‱ to get the float value of alpha.\r\n    uint public maxAppeals = 5; // Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.\r\n    // Initially, the governor will be an address controlled by the Kleros team. At a later stage,\r\n    // the governor will be switched to a governance contract with liquid voting.\r\n    address public governor; // Address of the governor contract.\r\n\r\n    // Variables changing during day to day interaction.\r\n    uint public session = 1;      // Current session of the court.\r\n    uint public lastPeriodChange; // The last time we changed of period (seconds).\r\n    uint public segmentSize;      // Size of the segment of activated tokens.\r\n    uint public rnBlock;          // The block linked with the RN which is requested.\r\n    uint public randomNumber;     // Random number of the session.\r\n\r\n    enum Period {\r\n        Activation, // When juror can deposit their tokens and parties give evidences.\r\n        Draw,       // When jurors are drawn at random, note that this period is fast.\r\n        Vote,       // Where jurors can vote on disputes.\r\n        Appeal,     // When parties can appeal the rulings.\r\n        Execution   // When where token redistribution occurs and Kleros call the arbitrated contracts.\r\n    }\r\n\r\n    Period public period;\r\n\r\n    struct Juror {\r\n        uint balance;      // The amount of tokens the contract holds for this juror.\r\n        uint atStake;      // Total number of tokens the jurors can loose in disputes they are drawn in. Those tokens are locked. Note that we can have atStake > balance but it should be statistically unlikely and does not pose issues.\r\n        uint lastSession;  // Last session the tokens were activated.\r\n        uint segmentStart; // Start of the segment of activated tokens.\r\n        uint segmentEnd;   // End of the segment of activated tokens.\r\n    }\r\n\r\n    mapping (address => Juror) public jurors;\r\n\r\n    struct Vote {\r\n        address account; // The juror who casted the vote.\r\n        uint ruling;     // The ruling which was given.\r\n    }\r\n\r\n    struct VoteCounter {\r\n        uint winningChoice; // The choice which currently has the highest amount of votes. Is 0 in case of a tie.\r\n        uint winningCount;  // The number of votes for winningChoice. Or for the choices which are tied.\r\n        mapping (uint => uint) voteCount; // voteCount[choice] is the number of votes for choice.\r\n    }\r\n\r\n    enum DisputeState {\r\n        Open,       // The dispute is opened but the outcome is not available yet (this include when jurors voted but appeal is still possible).\r\n        Resolving,  // The token repartition has started. Note that if it's done in just one call, this state is skipped.\r\n        Executable, // The arbitrated contract can be called to enforce the decision.\r\n        Executed    // Everything has been done and the dispute can't be interacted with anymore.\r\n    }\r\n\r\n    struct Dispute {\r\n        Arbitrable arbitrated;       // Contract to be arbitrated.\r\n        uint session;                // First session the dispute was schedule.\r\n        uint appeals;                // Number of appeals.\r\n        uint choices;                // The number of choices available to the jurors.\r\n        uint16 initialNumberJurors;  // The initial number of jurors.\r\n        uint arbitrationFeePerJuror; // The fee which will be paid to each juror.\r\n        DisputeState state;          // The state of the dispute.\r\n        Vote[][] votes;              // The votes in the form vote[appeals][voteID].\r\n        VoteCounter[] voteCounter;   // The vote counters in the form voteCounter[appeals].\r\n        mapping (address => uint) lastSessionVote; // Last session a juror has voted on this dispute. Is 0 if he never did.\r\n        uint currentAppealToRepartition; // The current appeal we are repartitioning.\r\n        AppealsRepartitioned[] appealsRepartitioned; // Track a partially repartitioned appeal in the form AppealsRepartitioned[appeal].\r\n    }\r\n\r\n    enum RepartitionStage { // State of the token repartition if oneShotTokenRepartition would throw because there are too many votes.\r\n        Incoherent,\r\n        Coherent,\r\n        AtStake,\r\n        Complete\r\n    }\r\n\r\n    struct AppealsRepartitioned {\r\n        uint totalToRedistribute;   // Total amount of tokens we have to redistribute.\r\n        uint nbCoherent;            // Number of coherent jurors for session.\r\n        uint currentIncoherentVote; // Current vote for the incoherent loop.\r\n        uint currentCoherentVote;   // Current vote we need to count.\r\n        uint currentAtStakeVote;    // Current vote we need to count.\r\n        RepartitionStage stage;     // Use with multipleShotTokenRepartition if oneShotTokenRepartition would throw.\r\n    }\r\n\r\n    Dispute[] public disputes;\r\n\r\n    // **************************** //\r\n    // *          Events          * //\r\n    // **************************** //\r\n\r\n    /** @dev Emitted when we pass to a new period.\r\n     *  @param _period The new period.\r\n     *  @param _session The current session.\r\n     */\r\n    event NewPeriod(Period _period, uint indexed _session);\r\n\r\n    /** @dev Emitted when a juror wins or loses tokens.\r\n      * @param _account The juror affected.\r\n      * @param _disputeID The ID of the dispute.\r\n      * @param _amount The amount of parts of token which was won. Can be negative for lost amounts.\r\n      */\r\n    event TokenShift(address indexed _account, uint _disputeID, int _amount);\r\n\r\n    /** @dev Emited when a juror wins arbitration fees.\r\n      * @param _account The account affected.\r\n      * @param _disputeID The ID of the dispute.\r\n      * @param _amount The amount of weis which was won.\r\n      */\r\n    event ArbitrationReward(address indexed _account, uint _disputeID, uint _amount);\r\n\r\n    // **************************** //\r\n    // *         Modifiers        * //\r\n    // **************************** //\r\n    modifier onlyBy(address _account) {require(msg.sender == _account); _;}\r\n    modifier onlyDuring(Period _period) {require(period == _period); _;}\r\n    modifier onlyGovernor() {require(msg.sender == governor); _;}\r\n\r\n\r\n    /** @dev Constructor.\r\n     *  @param _pinakion The address of the pinakion contract.\r\n     *  @param _rng The random number generator which will be used.\r\n     *  @param _timePerPeriod The minimal time for each period (seconds).\r\n     *  @param _governor Address of the governor contract.\r\n     */\r\n    constructor(Pinakion _pinakion, RNG _rng, uint[5] _timePerPeriod, address _governor) public {\r\n        pinakion = _pinakion;\r\n        rng = _rng;\r\n        lastPeriodChange = now;\r\n        timePerPeriod = _timePerPeriod;\r\n        governor = _governor;\r\n    }\r\n\r\n    // **************************** //\r\n    // *  Functions interacting   * //\r\n    // *  with Pinakion contract  * //\r\n    // **************************** //\r\n\r\n    /** @dev Callback of approveAndCall - transfer pinakions of a juror in the contract. Should be called by the pinakion contract. TRUSTED.\r\n     *  @param _from The address making the transfer.\r\n     *  @param _amount Amount of tokens to transfer to Kleros (in basic units).\r\n     */\r\n    function receiveApproval(address _from, uint _amount, address, bytes) public onlyBy(pinakion) {\r\n        require(pinakion.transferFrom(_from, this, _amount));\r\n\r\n        jurors[_from].balance += _amount;\r\n    }\r\n\r\n    /** @dev Withdraw tokens. Note that we can't withdraw the tokens which are still atStake. \r\n     *  Jurors can't withdraw their tokens if they have deposited some during this session.\r\n     *  This is to prevent jurors from withdrawing tokens they could loose.\r\n     *  @param _value The amount to withdraw.\r\n     */\r\n    function withdraw(uint _value) public {\r\n        Juror storage juror = jurors[msg.sender];\r\n        require(juror.atStake <= juror.balance); // Make sure that there is no more at stake than owned to avoid overflow.\r\n        require(_value <= juror.balance-juror.atStake);\r\n        require(juror.lastSession != session);\r\n\r\n        juror.balance -= _value;\r\n        require(pinakion.transfer(msg.sender,_value));\r\n    }\r\n\r\n    // **************************** //\r\n    // *      Court functions     * //\r\n    // *    Modifying the state   * //\r\n    // **************************** //\r\n\r\n    /** @dev To call to go to a new period. TRUSTED.\r\n     */\r\n    function passPeriod() public {\r\n        require(now-lastPeriodChange >= timePerPeriod[uint8(period)]);\r\n\r\n        if (period == Period.Activation) {\r\n            rnBlock = block.number + 1;\r\n            rng.requestRN(rnBlock);\r\n            period = Period.Draw;\r\n        } else if (period == Period.Draw) {\r\n            randomNumber = rng.getUncorrelatedRN(rnBlock);\r\n            require(randomNumber != 0);\r\n            period = Period.Vote;\r\n        } else if (period == Period.Vote) {\r\n            period = Period.Appeal;\r\n        } else if (period == Period.Appeal) {\r\n            period = Period.Execution;\r\n        } else if (period == Period.Execution) {\r\n            period = Period.Activation;\r\n            ++session;\r\n            segmentSize = 0;\r\n            rnBlock = 0;\r\n            randomNumber = 0;\r\n        }\r\n\r\n\r\n        lastPeriodChange = now;\r\n        NewPeriod(period, session);\r\n    }\r\n\r\n\r\n    /** @dev Deposit tokens in order to have chances of being drawn. Note that once tokens are deposited, \r\n     *  there is no possibility of depositing more.\r\n     *  @param _value Amount of tokens (in basic units) to deposit.\r\n     */\r\n    function activateTokens(uint _value) public onlyDuring(Period.Activation) {\r\n        Juror storage juror = jurors[msg.sender];\r\n        require(_value <= juror.balance);\r\n        require(_value >= minActivatedToken);\r\n        require(juror.lastSession != session); // Verify that tokens were not already activated for this session.\r\n\r\n        juror.lastSession = session;\r\n        juror.segmentStart = segmentSize;\r\n        segmentSize += _value;\r\n        juror.segmentEnd = segmentSize;\r\n\r\n    }\r\n\r\n    /** @dev Vote a ruling. Juror must input the draw ID he was drawn.\r\n     *  Note that the complexity is O(d), where d is amount of times the juror was drawn.\r\n     *  Since being drawn multiple time is a rare occurrence and that a juror can always vote with less weight than it has, it is not a problem.\r\n     *  But note that it can lead to arbitration fees being kept by the contract and never distributed.\r\n     *  @param _disputeID The ID of the dispute the juror was drawn.\r\n     *  @param _ruling The ruling given.\r\n     *  @param _draws The list of draws the juror was drawn. Draw numbering starts at 1 and the numbers should be increasing.\r\n     */\r\n    function voteRuling(uint _disputeID, uint _ruling, uint[] _draws) public onlyDuring(Period.Vote) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        Juror storage juror = jurors[msg.sender];\r\n        VoteCounter storage voteCounter = dispute.voteCounter[dispute.appeals];\r\n        require(dispute.lastSessionVote[msg.sender] != session); // Make sure juror hasn't voted yet.\r\n        require(_ruling <= dispute.choices);\r\n        // Note that it throws if the draws are incorrect.\r\n        require(validDraws(msg.sender, _disputeID, _draws));\r\n\r\n        dispute.lastSessionVote[msg.sender] = session;\r\n        voteCounter.voteCount[_ruling] += _draws.length;\r\n        if (voteCounter.winningCount < voteCounter.voteCount[_ruling]) {\r\n            voteCounter.winningCount = voteCounter.voteCount[_ruling];\r\n            voteCounter.winningChoice = _ruling;\r\n        } else if (voteCounter.winningCount==voteCounter.voteCount[_ruling] && _draws.length!=0) { // Verify draw length to be non-zero to avoid the possibility of setting tie by casting 0 votes.\r\n            voteCounter.winningChoice = 0; // It's currently a tie.\r\n        }\r\n        for (uint i = 0; i < _draws.length; ++i) {\r\n            dispute.votes[dispute.appeals].push(Vote({\r\n                account: msg.sender,\r\n                ruling: _ruling\r\n            }));\r\n        }\r\n\r\n        juror.atStake += _draws.length * getStakePerDraw();\r\n        uint feeToPay = _draws.length * dispute.arbitrationFeePerJuror;\r\n        msg.sender.transfer(feeToPay);\r\n        ArbitrationReward(msg.sender, _disputeID, feeToPay);\r\n    }\r\n\r\n    /** @dev Steal part of the tokens and the arbitration fee of a juror who failed to vote.\r\n     *  Note that a juror who voted but without all his weight can't be penalized.\r\n     *  It is possible to not penalize with the maximum weight.\r\n     *  But note that it can lead to arbitration fees being kept by the contract and never distributed.\r\n     *  @param _jurorAddress Address of the juror to steal tokens from.\r\n     *  @param _disputeID The ID of the dispute the juror was drawn.\r\n     *  @param _draws The list of draws the juror was drawn. Numbering starts at 1 and the numbers should be increasing.\r\n     */\r\n    function penalizeInactiveJuror(address _jurorAddress, uint _disputeID, uint[] _draws) public {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        Juror storage inactiveJuror = jurors[_jurorAddress];\r\n        require(period > Period.Vote);\r\n        require(dispute.lastSessionVote[_jurorAddress] != session); // Verify the juror hasn't voted.\r\n        dispute.lastSessionVote[_jurorAddress] = session; // Update last session to avoid penalizing multiple times.\r\n        require(validDraws(_jurorAddress, _disputeID, _draws));\r\n        uint penality = _draws.length * minActivatedToken * 2 * alpha / ALPHA_DIVISOR;\r\n        penality = (penality < inactiveJuror.balance) ? penality : inactiveJuror.balance; // Make sure the penality is not higher than the balance.\r\n        inactiveJuror.balance -= penality;\r\n        TokenShift(_jurorAddress, _disputeID, -int(penality));\r\n        jurors[msg.sender].balance += penality / 2; // Give half of the penalty to the caller.\r\n        TokenShift(msg.sender, _disputeID, int(penality / 2));\r\n        jurors[governor].balance += penality / 2; // The other half to the governor.\r\n        TokenShift(governor, _disputeID, int(penality / 2));\r\n        msg.sender.transfer(_draws.length*dispute.arbitrationFeePerJuror); // Give the arbitration fees to the caller.\r\n    }\r\n\r\n    /** @dev Execute all the token repartition.\r\n     *  Note that this function could consume to much gas if there is too much votes. \r\n     *  It is O(v), where v is the number of votes for this dispute.\r\n     *  In the next version, there will also be a function to execute it in multiple calls \r\n     *  (but note that one shot execution, if possible, is less expensive).\r\n     *  @param _disputeID ID of the dispute.\r\n     */\r\n    function oneShotTokenRepartition(uint _disputeID) public onlyDuring(Period.Execution) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(dispute.state == DisputeState.Open);\r\n        require(dispute.session+dispute.appeals <= session);\r\n\r\n        uint winningChoice = dispute.voteCounter[dispute.appeals].winningChoice;\r\n        uint amountShift = getStakePerDraw();\r\n        for (uint i = 0; i <= dispute.appeals; ++i) {\r\n            // If the result is not a tie, some parties are incoherent. Note that 0 (refuse to arbitrate) winning is not a tie.\r\n            // Result is a tie if the winningChoice is 0 (refuse to arbitrate) and the choice 0 is not the most voted choice.\r\n            // Note that in case of a \"tie\" among some choices including 0, parties who did not vote 0 are considered incoherent.\r\n            if (winningChoice!=0 || (dispute.voteCounter[dispute.appeals].voteCount[0] == dispute.voteCounter[dispute.appeals].winningCount)) {\r\n                uint totalToRedistribute = 0;\r\n                uint nbCoherent = 0;\r\n                // First loop to penalize the incoherent votes.\r\n                for (uint j = 0; j < dispute.votes[i].length; ++j) {\r\n                    Vote storage vote = dispute.votes[i][j];\r\n                    if (vote.ruling != winningChoice) {\r\n                        Juror storage juror = jurors[vote.account];\r\n                        uint penalty = amountShift<juror.balance ? amountShift : juror.balance;\r\n                        juror.balance -= penalty;\r\n                        TokenShift(vote.account, _disputeID, int(-penalty));\r\n                        totalToRedistribute += penalty;\r\n                    } else {\r\n                        ++nbCoherent;\r\n                    }\r\n                }\r\n                if (nbCoherent == 0) { // No one was coherent at this stage. Give the tokens to the governor.\r\n                    jurors[governor].balance += totalToRedistribute;\r\n                    TokenShift(governor, _disputeID, int(totalToRedistribute));\r\n                } else { // otherwise, redistribute them.\r\n                    uint toRedistribute = totalToRedistribute / nbCoherent; // Note that few fractions of tokens can be lost but due to the high amount of decimals we don't care.\r\n                    // Second loop to redistribute.\r\n                    for (j = 0; j < dispute.votes[i].length; ++j) {\r\n                        vote = dispute.votes[i][j];\r\n                        if (vote.ruling == winningChoice) {\r\n                            juror = jurors[vote.account];\r\n                            juror.balance += toRedistribute;\r\n                            TokenShift(vote.account, _disputeID, int(toRedistribute));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Third loop to lower the atStake in order to unlock tokens.\r\n            for (j = 0; j < dispute.votes[i].length; ++j) {\r\n                vote = dispute.votes[i][j];\r\n                juror = jurors[vote.account];\r\n                juror.atStake -= amountShift; // Note that it can't underflow due to amountShift not changing between vote and redistribution.\r\n            }\r\n        }\r\n        dispute.state = DisputeState.Executable; // Since it was solved in one shot, go directly to the executable step.\r\n    }\r\n\r\n    /** @dev Execute token repartition on a dispute for a specific number of votes.\r\n     *  This should only be called if oneShotTokenRepartition will throw because there are too many votes (will use too much gas).\r\n     *  Note that There are 3 iterations per vote. e.g. A dispute with 1 appeal (2 sessions) and 3 votes per session will have 18 iterations\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _maxIterations the maxium number of votes to repartition in this iteration\r\n     */\r\n    function multipleShotTokenRepartition(uint _disputeID, uint _maxIterations) public onlyDuring(Period.Execution) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(dispute.state <= DisputeState.Resolving);\r\n        require(dispute.session+dispute.appeals <= session);\r\n        dispute.state = DisputeState.Resolving; // Mark as resolving so oneShotTokenRepartition cannot be called on dispute.\r\n\r\n        uint winningChoice = dispute.voteCounter[dispute.appeals].winningChoice;\r\n        uint amountShift = getStakePerDraw();\r\n        uint currentIterations = 0; // Total votes we have repartitioned this iteration.\r\n        for (uint i = dispute.currentAppealToRepartition; i <= dispute.appeals; ++i) {\r\n            // Allocate space for new AppealsRepartitioned.\r\n            if (dispute.appealsRepartitioned.length < i+1) {\r\n                dispute.appealsRepartitioned.length++;\r\n            }\r\n\r\n            // If the result is a tie, no parties are incoherent and no need to move tokens. Note that 0 (refuse to arbitrate) winning is not a tie.\r\n            if (winningChoice==0 && (dispute.voteCounter[dispute.appeals].voteCount[0] != dispute.voteCounter[dispute.appeals].winningCount)) {\r\n                // If ruling is a tie we can skip to at stake.\r\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\r\n            }\r\n\r\n            // First loop to penalize the incoherent votes.\r\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Incoherent) {\r\n                for (uint j = dispute.appealsRepartitioned[i].currentIncoherentVote; j < dispute.votes[i].length; ++j) {\r\n                    if (currentIterations >= _maxIterations) {\r\n                        return;\r\n                    }\r\n                    Vote storage vote = dispute.votes[i][j];\r\n                    if (vote.ruling != winningChoice) {\r\n                        Juror storage juror = jurors[vote.account];\r\n                        uint penalty = amountShift<juror.balance ? amountShift : juror.balance;\r\n                        juror.balance -= penalty;\r\n                        TokenShift(vote.account, _disputeID, int(-penalty));\r\n                        dispute.appealsRepartitioned[i].totalToRedistribute += penalty;\r\n                    } else {\r\n                        ++dispute.appealsRepartitioned[i].nbCoherent;\r\n                    }\r\n\r\n                    ++dispute.appealsRepartitioned[i].currentIncoherentVote;\r\n                    ++currentIterations;\r\n                }\r\n\r\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.Coherent;\r\n            }\r\n\r\n            // Second loop to reward coherent voters\r\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Coherent) {\r\n                if (dispute.appealsRepartitioned[i].nbCoherent == 0) { // No one was coherent at this stage. Give the tokens to the governor.\r\n                    jurors[governor].balance += dispute.appealsRepartitioned[i].totalToRedistribute;\r\n                    TokenShift(governor, _disputeID, int(dispute.appealsRepartitioned[i].totalToRedistribute));\r\n                    dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\r\n                } else { // Otherwise, redistribute them.\r\n                    uint toRedistribute = dispute.appealsRepartitioned[i].totalToRedistribute / dispute.appealsRepartitioned[i].nbCoherent; // Note that few fractions of tokens can be lost but due to the high amount of decimals we don't care.\r\n                    // Second loop to redistribute.\r\n                    for (j = dispute.appealsRepartitioned[i].currentCoherentVote; j < dispute.votes[i].length; ++j) {\r\n                        if (currentIterations >= _maxIterations) {\r\n                            return;\r\n                        }\r\n                        vote = dispute.votes[i][j];\r\n                        if (vote.ruling == winningChoice) {\r\n                            juror = jurors[vote.account];\r\n                            juror.balance += toRedistribute;\r\n                            TokenShift(vote.account, _disputeID, int(toRedistribute));\r\n                        }\r\n\r\n                        ++currentIterations;\r\n                        ++dispute.appealsRepartitioned[i].currentCoherentVote;\r\n                    }\r\n\r\n                    dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\r\n                }\r\n            }\r\n\r\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.AtStake) {\r\n                // Third loop to lower the atStake in order to unlock tokens.\r\n                for (j = dispute.appealsRepartitioned[i].currentAtStakeVote; j < dispute.votes[i].length; ++j) {\r\n                    if (currentIterations >= _maxIterations) {\r\n                        return;\r\n                    }\r\n                    vote = dispute.votes[i][j];\r\n                    juror = jurors[vote.account];\r\n                    juror.atStake -= amountShift; // Note that it can't underflow due to amountShift not changing between vote and redistribution.\r\n\r\n                    ++currentIterations;\r\n                    ++dispute.appealsRepartitioned[i].currentAtStakeVote;\r\n                }\r\n\r\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.Complete;\r\n            }\r\n\r\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Complete) {\r\n                ++dispute.currentAppealToRepartition;\r\n            }\r\n        }\r\n\r\n        dispute.state = DisputeState.Executable;\r\n    }\r\n\r\n    // **************************** //\r\n    // *      Court functions     * //\r\n    // *     Constant and Pure    * //\r\n    // **************************** //\r\n\r\n    /** @dev Return the amount of jurors which are or will be drawn in the dispute.\r\n     *  The number of jurors is doubled and 1 is added at each appeal. We have proven the formula by recurrence.\r\n     *  This avoid having a variable number of jurors which would be updated in order to save gas.\r\n     *  @param _disputeID The ID of the dispute we compute the amount of jurors.\r\n     *  @return nbJurors The number of jurors which are drawn.\r\n     */\r\n    function amountJurors(uint _disputeID) public view returns (uint nbJurors) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        return (dispute.initialNumberJurors + 1) * 2**dispute.appeals - 1;\r\n    }\r\n\r\n    /** @dev Must be used to verify that a juror has been draw at least _draws.length times.\r\n     *  We have to require the user to specify the draws that lead the juror to be drawn.\r\n     *  Because doing otherwise (looping through all draws) could consume too much gas.\r\n     *  @param _jurorAddress Address of the juror we want to verify draws.\r\n     *  @param _disputeID The ID of the dispute the juror was drawn.\r\n     *  @param _draws The list of draws the juror was drawn. It draw numbering starts at 1 and the numbers should be increasing.\r\n     *  Note that in most cases this list will just contain 1 number.\r\n     *  @param valid true if the draws are valid.\r\n     */\r\n    function validDraws(address _jurorAddress, uint _disputeID, uint[] _draws) public view returns (bool valid) {\r\n        uint draw = 0;\r\n        Juror storage juror = jurors[_jurorAddress];\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        uint nbJurors = amountJurors(_disputeID);\r\n\r\n        if (juror.lastSession != session) return false; // Make sure that the tokens were deposited for this session.\r\n        if (dispute.session+dispute.appeals != session) return false; // Make sure there is currently a dispute.\r\n        if (period <= Period.Draw) return false; // Make sure that jurors are already drawn.\r\n        for (uint i = 0; i < _draws.length; ++i) {\r\n            if (_draws[i] <= draw) return false; // Make sure that draws are always increasing to avoid someone inputing the same multiple times.\r\n            draw = _draws[i];\r\n            if (draw > nbJurors) return false;\r\n            uint position = uint(keccak256(randomNumber, _disputeID, draw)) % segmentSize; // Random position on the segment for draw.\r\n            require(position >= juror.segmentStart);\r\n            require(position < juror.segmentEnd);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // **************************** //\r\n    // *   Arbitrator functions   * //\r\n    // *   Modifying the state    * //\r\n    // **************************** //\r\n\r\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\r\n     *  Must be paid at least arbitrationCost().\r\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\r\n     *  @param _extraData Null for the default number. Otherwise, first 16 bytes will be used to return the number of jurors.\r\n     *  @return disputeID ID of the dispute created.\r\n     */\r\n    function createDispute(uint _choices, bytes _extraData) public payable returns (uint disputeID) {\r\n        uint16 nbJurors = extraDataToNbJurors(_extraData);\r\n        require(msg.value >= arbitrationCost(_extraData));\r\n\r\n        disputeID = disputes.length++;\r\n        Dispute storage dispute = disputes[disputeID];\r\n        dispute.arbitrated = Arbitrable(msg.sender);\r\n        if (period < Period.Draw) // If drawing did not start schedule it for the current session.\r\n            dispute.session = session;\r\n        else // Otherwise schedule it for the next one.\r\n            dispute.session = session+1;\r\n        dispute.choices = _choices;\r\n        dispute.initialNumberJurors = nbJurors;\r\n        dispute.arbitrationFeePerJuror = arbitrationFeePerJuror; // We store it as the general fee can be changed through the governance mechanism.\r\n        dispute.votes.length++;\r\n        dispute.voteCounter.length++;\r\n\r\n        DisputeCreation(disputeID, Arbitrable(msg.sender));\r\n        return disputeID;\r\n    }\r\n\r\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Standard but not used by this contract.\r\n     */\r\n    function appeal(uint _disputeID, bytes _extraData) public payable onlyDuring(Period.Appeal) {\r\n        super.appeal(_disputeID,_extraData);\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        require(msg.value >= appealCost(_disputeID, _extraData));\r\n        require(dispute.session+dispute.appeals == session); // Dispute of the current session.\r\n        require(dispute.arbitrated == msg.sender);\r\n        \r\n        dispute.appeals++;\r\n        dispute.votes.length++;\r\n        dispute.voteCounter.length++;\r\n    }\r\n\r\n    /** @dev Execute the ruling of a dispute which is in the state executable. UNTRUSTED.\r\n     *  @param disputeID ID of the dispute to execute the ruling.\r\n     */\r\n    function executeRuling(uint disputeID) public {\r\n        Dispute storage dispute = disputes[disputeID];\r\n        require(dispute.state == DisputeState.Executable);\r\n\r\n        dispute.state = DisputeState.Executed;\r\n        dispute.arbitrated.rule(disputeID, dispute.voteCounter[dispute.appeals].winningChoice);\r\n    }\r\n\r\n    // **************************** //\r\n    // *   Arbitrator functions   * //\r\n    // *    Constant and pure     * //\r\n    // **************************** //\r\n\r\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, \r\n     *  as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function arbitrationCost(bytes _extraData) public view returns (uint fee) {\r\n        return extraDataToNbJurors(_extraData) * arbitrationFeePerJuror;\r\n    }\r\n\r\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, \r\n     *  as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Is not used there.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function appealCost(uint _disputeID, bytes _extraData) public view returns (uint fee) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n\r\n        if(dispute.appeals >= maxAppeals) return NON_PAYABLE_AMOUNT;\r\n\r\n        return (2*amountJurors(_disputeID) + 1) * dispute.arbitrationFeePerJuror;\r\n    }\r\n\r\n    /** @dev Compute the amount of jurors to be drawn.\r\n     *  @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\r\n     *  Note that it does not check that the number of jurors is odd, but users are advised to choose a odd number of jurors.\r\n     */\r\n    function extraDataToNbJurors(bytes _extraData) internal view returns (uint16 nbJurors) {\r\n        if (_extraData.length < 2)\r\n            return defaultNumberJuror;\r\n        else\r\n            return (uint16(_extraData[0]) << 8) + uint16(_extraData[1]);\r\n    }\r\n\r\n    /** @dev Compute the minimum activated pinakions in alpha.\r\n     *  Note there may be multiple draws for a single user on a single dispute.\r\n     */\r\n    function getStakePerDraw() public view returns (uint minActivatedTokenInAlpha) {\r\n        return (alpha * minActivatedToken) / ALPHA_DIVISOR;\r\n    }\r\n\r\n\r\n    // **************************** //\r\n    // *     Constant getters     * //\r\n    // **************************** //\r\n\r\n    /** @dev Getter for account in Vote.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _appeals Which appeal (or 0 for the initial session).\r\n     *  @param _voteID The ID of the vote for this appeal (or initial session).\r\n     *  @return account The address of the voter.\r\n     */\r\n    function getVoteAccount(uint _disputeID, uint _appeals, uint _voteID) public view returns (address account) {\r\n        return disputes[_disputeID].votes[_appeals][_voteID].account;\r\n    }\r\n\r\n    /** @dev Getter for ruling in Vote.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _appeals Which appeal (or 0 for the initial session).\r\n     *  @param _voteID The ID of the vote for this appeal (or initial session).\r\n     *  @return ruling The ruling given by the voter.\r\n     */\r\n    function getVoteRuling(uint _disputeID, uint _appeals, uint _voteID) public view returns (uint ruling) {\r\n        return disputes[_disputeID].votes[_appeals][_voteID].ruling;\r\n    }\r\n\r\n    /** @dev Getter for winningChoice in VoteCounter.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _appeals Which appeal (or 0 for the initial session).\r\n     *  @return winningChoice The currently winning choice (or 0 if it's tied). Note that 0 can also be return if the majority refuses to arbitrate.\r\n     */\r\n    function getWinningChoice(uint _disputeID, uint _appeals) public view returns (uint winningChoice) {\r\n        return disputes[_disputeID].voteCounter[_appeals].winningChoice;\r\n    }\r\n\r\n    /** @dev Getter for winningCount in VoteCounter.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _appeals Which appeal (or 0 for the initial session).\r\n     *  @return winningCount The amount of votes the winning choice (or those who are tied) has.\r\n     */\r\n    function getWinningCount(uint _disputeID, uint _appeals) public view returns (uint winningCount) {\r\n        return disputes[_disputeID].voteCounter[_appeals].winningCount;\r\n    }\r\n\r\n    /** @dev Getter for voteCount in VoteCounter.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _appeals Which appeal (or 0 for the initial session).\r\n     *  @param _choice The choice.\r\n     *  @return voteCount The amount of votes the winning choice (or those who are tied) has.\r\n     */\r\n    function getVoteCount(uint _disputeID, uint _appeals, uint _choice) public view returns (uint voteCount) {\r\n        return disputes[_disputeID].voteCounter[_appeals].voteCount[_choice];\r\n    }\r\n\r\n    /** @dev Getter for lastSessionVote in Dispute.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _juror The juror we want to get the last session he voted.\r\n     *  @return lastSessionVote The last session the juror voted.\r\n     */\r\n    function getLastSessionVote(uint _disputeID, address _juror) public view returns (uint lastSessionVote) {\r\n        return disputes[_disputeID].lastSessionVote[_juror];\r\n    }\r\n\r\n    /** @dev Is the juror drawn in the draw of the dispute.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _juror The juror.\r\n     *  @param _draw The draw. Note that it starts at 1.\r\n     *  @return drawn True if the juror is drawn, false otherwise.\r\n     */\r\n    function isDrawn(uint _disputeID, address _juror, uint _draw) public view returns (bool drawn) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        Juror storage juror = jurors[_juror];\r\n        if (juror.lastSession != session\r\n        || (dispute.session+dispute.appeals != session)\r\n        || period<=Period.Draw\r\n        || _draw>amountJurors(_disputeID)\r\n        || _draw==0\r\n        || segmentSize==0\r\n        ) {\r\n            return false;\r\n        } else {\r\n            uint position = uint(keccak256(randomNumber,_disputeID,_draw)) % segmentSize;\r\n            return (position >= juror.segmentStart) && (position < juror.segmentEnd);\r\n        }\r\n\r\n    }\r\n\r\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @return ruling The current ruling which will be given if there is no appeal. If it is not available, return 0.\r\n     */\r\n    function currentRuling(uint _disputeID) public view returns (uint ruling) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        return dispute.voteCounter[dispute.appeals].winningChoice;\r\n    }\r\n\r\n    /** @dev Return the status of a dispute.\r\n     *  @param _disputeID ID of the dispute to rule.\r\n     *  @return status The status of the dispute.\r\n     */\r\n    function disputeStatus(uint _disputeID) public view returns (DisputeStatus status) {\r\n        Dispute storage dispute = disputes[_disputeID];\r\n        if (dispute.session+dispute.appeals < session) // Dispute of past session.\r\n            return DisputeStatus.Solved;\r\n        else if(dispute.session+dispute.appeals == session) { // Dispute of current session.\r\n            if (dispute.state == DisputeState.Open) {\r\n                if (period < Period.Appeal)\r\n                    return DisputeStatus.Waiting;\r\n                else if (period == Period.Appeal)\r\n                    return DisputeStatus.Appealable;\r\n                else return DisputeStatus.Solved;\r\n            } else return DisputeStatus.Solved;\r\n        } else return DisputeStatus.Waiting; // Dispute for future session.\r\n    }\r\n\r\n    // **************************** //\r\n    // *     Governor Functions   * //\r\n    // **************************** //\r\n\r\n    /** @dev General call function where the contract execute an arbitrary call with data and ETH following governor orders.\r\n     *  @param _data Transaction data.\r\n     *  @param _value Transaction value.\r\n     *  @param _target Transaction target.\r\n     */\r\n    function executeOrder(bytes32 _data, uint _value, address _target) public onlyGovernor {\r\n        _target.call.value(_value)(_data);\r\n    }\r\n\r\n    /** @dev Setter for rng.\r\n     *  @param _rng An instance of RNG.\r\n     */\r\n    function setRng(RNG _rng) public onlyGovernor {\r\n        rng = _rng;\r\n    }\r\n\r\n    /** @dev Setter for arbitrationFeePerJuror.\r\n     *  @param _arbitrationFeePerJuror The fee which will be paid to each juror.\r\n     */\r\n    function setArbitrationFeePerJuror(uint _arbitrationFeePerJuror) public onlyGovernor {\r\n        arbitrationFeePerJuror = _arbitrationFeePerJuror;\r\n    }\r\n\r\n    /** @dev Setter for defaultNumberJuror.\r\n     *  @param _defaultNumberJuror Number of drawn jurors unless specified otherwise.\r\n     */\r\n    function setDefaultNumberJuror(uint16 _defaultNumberJuror) public onlyGovernor {\r\n        defaultNumberJuror = _defaultNumberJuror;\r\n    }\r\n\r\n    /** @dev Setter for minActivatedToken.\r\n     *  @param _minActivatedToken Minimum of tokens to be activated (in basic units).\r\n     */\r\n    function setMinActivatedToken(uint _minActivatedToken) public onlyGovernor {\r\n        minActivatedToken = _minActivatedToken;\r\n    }\r\n\r\n    /** @dev Setter for timePerPeriod.\r\n     *  @param _timePerPeriod The minimum time each period lasts (seconds).\r\n     */\r\n    function setTimePerPeriod(uint[5] _timePerPeriod) public onlyGovernor {\r\n        timePerPeriod = _timePerPeriod;\r\n    }\r\n\r\n    /** @dev Setter for alpha.\r\n     *  @param _alpha Alpha in ‱.\r\n     */\r\n    function setAlpha(uint _alpha) public onlyGovernor {\r\n        alpha = _alpha;\r\n    }\r\n\r\n    /** @dev Setter for maxAppeals.\r\n     *  @param _maxAppeals Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.\r\n     */\r\n    function setMaxAppeals(uint _maxAppeals) public onlyGovernor {\r\n        maxAppeals = _maxAppeals;\r\n    }\r\n\r\n    /** @dev Setter for governor.\r\n     *  @param _governor Address of the governor contract.\r\n     */\r\n    function setGovernor(address _governor) public onlyGovernor {\r\n        governor = _governor;\r\n    }\r\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[],\"name\":\"court\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_juror\",\"type\":\"address\"}],\"name\":\"withdrawSelect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"attacker\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"epsilon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawJuror\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAppeals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAttacker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"desiredOutcome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pinakion\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_pinakion\",\"type\":\"address\"},{\"name\":\"_kleros\",\"type\":\"address\"},{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_desiredOutcome\",\"type\":\"uint256\"},{\"name\":\"_epsilon\",\"type\":\"uint256\"},{\"name\":\"_maxAppeals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"epsilon\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"juror\",\"type\":\"address\"}],\"name\":\"AmountShift\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"}]","bin":"608060405234801561001057600080fd5b5060405160c080611977833981018060405281019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600381905550826004819055508160058190555033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060078190555050505050505061181f806101586000396000f3006080604052600436106100e5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062971a30146100ea57806311da60b41461014157806337a318951461015857806348eb76ee1461019b57806351cff8d9146101f25780638f4ffcb1146102495780638f775839146102fc578063a7ba9fb11461032b578063b0a1e2b414610356578063b63005ec14610381578063b69ef8a814610398578063da93f938146103c3578063ddd6d79a146103ee578063e664755b14610419578063e7255ef914610430578063fbf405b01461045b575b600080fd5b3480156100f657600080fd5b506100ff6104b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566104d8565b005b34801561016457600080fd5b50610199600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061125e565b005b3480156101a757600080fd5b506101b0611419565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101fe57600080fd5b50610233600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061143f565b6040518082815260200191505060405180910390f35b34801561025557600080fd5b506102fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611457565b005b34801561030857600080fd5b50610311611608565b604051808215151515815260200191505060405180910390f35b34801561033757600080fd5b5061034061161b565b6040518082815260200191505060405180910390f35b34801561036257600080fd5b5061036b611621565b6040518082815260200191505060405180910390f35b34801561038d57600080fd5b50610396611627565b005b3480156103a457600080fd5b506103ad611632565b6040518082815260200191505060405180910390f35b3480156103cf57600080fd5b506103d8611638565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b5061040361163e565b6040518082815260200191505060405180910390f35b34801561042557600080fd5b5061042e611644565b005b34801561043c57600080fd5b506104456117af565b6040518082815260200191505060405180910390f35b34801561046757600080fd5b506104706117b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008060008060008060008060006002808111156104f857fe5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310f169e86003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d60208110156105b557600080fd5b810190808051906020019092919050505060028111156105d157fe5b1415156105dd57600080fd5b600660009054906101000a900460ff161515156105f957600080fd5b6001600660006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663564a565d6003546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505061010060405180830381600087803b1580156106a857600080fd5b505af11580156106bc573d6000803e3d6000fd5b505050506040513d6101008110156106d357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050509e509e505050600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c3db16d6003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b810190808051906020019092919050505014151561124f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e59a29a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505050506040513d60208110156108bc57600080fd5b81019080805190602001909291905050509a50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8860f416003548f6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050602060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050506040513d602081101561099457600080fd5b81019080805190602001909291905050509950600098505b6007548d116109bb578c6109bf565b6007545b8911151561124e5760008a1415156112415760009750600096505b8b87111515610ad257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c9732486003548b8a6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b505050506040513d6020811015610ab057600080fd5b81019080805190602001909291905050508801975086806001019750506109da565b7f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98b6000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252600c8152602001807f7374616b65506572447261770000000000000000000000000000000000000000815250602001935050505060405180910390a17f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c9886000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260088152602001807f766f7465734c656e000000000000000000000000000000000000000000000000815250602001935050505060405180910390a16000955060009450600093505b87841015610f7757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610ca857600080fd5b505af1158015610cbc573d6000803e3d6000fd5b505050506040513d6020811015610cd257600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d6020811015610db257600080fd5b810190808051906020019092919050505091507f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260058152602001807f766f746564000000000000000000000000000000000000000000000000000000815250602001935050505060405180910390a18983141515610f61578a86019550600454831415610f5c576005548b01600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506005548b01600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee338b60055484604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b610f6a565b84806001019550505b8380600101945050610bfd565b600185018b8703811515610f8757fe5b049050600093505b8784101561124057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561103a57600080fd5b505af115801561104e573d6000803e3d6000fd5b505050506040513d602081101561106457600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561111a57600080fd5b505af115801561112e573d6000803e3d6000fd5b505050506040513d602081101561114457600080fd5b810190808051906020019092919050505091506004548314156112335780600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee3381600084604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b8380600101945050610f8f565b5b88806001019950506109ac565b5b50505050505050505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112f3600254826117da565b600281905550611305600a54826117da565b600a819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b505050506040513d60208110156113f957600080fd5b8101908080519060200190929190505050151561141557600080fd5b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114b357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b505050506040513d60208110156115d557600080fd5b810190808051906020019092919050505015156115f157600080fd5b836002600082825401925050819055505050505050565b600660009054906101000a900460ff1681565b60055481565b60035481565b6116303361125e565b565b60025481565b60075481565b600a5481565b6000600660009054906101000a900460ff16151561166157600080fd5b600a5460025411156117ac57600a54600254039050600a546002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561176557600080fd5b505af1158015611779573d6000803e3d6000fd5b505050506040513d602081101561178f57600080fd5b810190808051906020019092919050505015156117ab57600080fd5b5b50565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111515156117e857fe5b8183039050929150505600a165627a7a72305820449ecd3763aa3635fccaa2d890b30bed4e8031ed9bea7cc91128cb74294485590029","bin-runtime":"6080604052600436106100e5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062971a30146100ea57806311da60b41461014157806337a318951461015857806348eb76ee1461019b57806351cff8d9146101f25780638f4ffcb1146102495780638f775839146102fc578063a7ba9fb11461032b578063b0a1e2b414610356578063b63005ec14610381578063b69ef8a814610398578063da93f938146103c3578063ddd6d79a146103ee578063e664755b14610419578063e7255ef914610430578063fbf405b01461045b575b600080fd5b3480156100f657600080fd5b506100ff6104b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014d57600080fd5b506101566104d8565b005b34801561016457600080fd5b50610199600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061125e565b005b3480156101a757600080fd5b506101b0611419565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101fe57600080fd5b50610233600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061143f565b6040518082815260200191505060405180910390f35b34801561025557600080fd5b506102fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611457565b005b34801561030857600080fd5b50610311611608565b604051808215151515815260200191505060405180910390f35b34801561033757600080fd5b5061034061161b565b6040518082815260200191505060405180910390f35b34801561036257600080fd5b5061036b611621565b6040518082815260200191505060405180910390f35b34801561038d57600080fd5b50610396611627565b005b3480156103a457600080fd5b506103ad611632565b6040518082815260200191505060405180910390f35b3480156103cf57600080fd5b506103d8611638565b6040518082815260200191505060405180910390f35b3480156103fa57600080fd5b5061040361163e565b6040518082815260200191505060405180910390f35b34801561042557600080fd5b5061042e611644565b005b34801561043c57600080fd5b506104456117af565b6040518082815260200191505060405180910390f35b34801561046757600080fd5b506104706117b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008060008060008060008060006002808111156104f857fe5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310f169e86003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050506040513d60208110156105b557600080fd5b810190808051906020019092919050505060028111156105d157fe5b1415156105dd57600080fd5b600660009054906101000a900460ff161515156105f957600080fd5b6001600660006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663564a565d6003546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505061010060405180830381600087803b1580156106a857600080fd5b505af11580156106bc573d6000803e3d6000fd5b505050506040513d6101008110156106d357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050509e509e505050600454600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c3db16d6003546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b810190808051906020019092919050505014151561124f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e59a29a66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505050506040513d60208110156108bc57600080fd5b81019080805190602001909291905050509a50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8860f416003548f6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050602060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050506040513d602081101561099457600080fd5b81019080805190602001909291905050509950600098505b6007548d116109bb578c6109bf565b6007545b8911151561124e5760008a1415156112415760009750600096505b8b87111515610ad257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c9732486003548b8a6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b505050506040513d6020811015610ab057600080fd5b81019080805190602001909291905050508801975086806001019750506109da565b7f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98b6000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252600c8152602001807f7374616b65506572447261770000000000000000000000000000000000000000815250602001935050505060405180910390a17f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c9886000604051808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260088152602001807f766f7465734c656e000000000000000000000000000000000000000000000000815250602001935050505060405180910390a16000955060009450600093505b87841015610f7757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610ca857600080fd5b505af1158015610cbc573d6000803e3d6000fd5b505050506040513d6020811015610cd257600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d6020811015610db257600080fd5b810190808051906020019092919050505091507f75bcec5ba6a2febb176c494c16fef3f009bf87d476335ab48b702384710481c98383604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825260058152602001807f766f746564000000000000000000000000000000000000000000000000000000815250602001935050505060405180910390a18983141515610f61578a86019550600454831415610f5c576005548b01600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506005548b01600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee338b60055484604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b610f6a565b84806001019550505b8380600101945050610bfd565b600185018b8703811515610f8757fe5b049050600093505b8784101561124057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3c7618e6003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561103a57600080fd5b505af115801561104e573d6000803e3d6000fd5b505050506040513d602081101561106457600080fd5b81019080805190602001909291905050509250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663824956266003548b876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018281526020019350505050602060405180830381600087803b15801561111a57600080fd5b505af115801561112e573d6000803e3d6000fd5b505050506040513d602081101561114457600080fd5b810190808051906020019092919050505091506004548314156112335780600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600a600082825401925050819055507f76aae5075be924d4e26e6da73b1faf5df5feba81398b733bbb67846e0ae6ee3381600084604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a15b8380600101945050610f8f565b5b88806001019950506109ac565b5b50505050505050505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112f3600254826117da565b600281905550611305600a54826117da565b600a819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b505050506040513d60208110156113f957600080fd5b8101908080519060200190929190505050151561141557600080fd5b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114b357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b505050506040513d60208110156115d557600080fd5b810190808051906020019092919050505015156115f157600080fd5b836002600082825401925050819055505050505050565b600660009054906101000a900460ff1681565b60055481565b60035481565b6116303361125e565b565b60025481565b60075481565b600a5481565b6000600660009054906101000a900460ff16151561166157600080fd5b600a5460025411156117ac57600a54600254039050600a546002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561176557600080fd5b505af1158015611779573d6000803e3d6000fd5b505050506040513d602081101561178f57600080fd5b810190808051906020019092919050505015156117ab57600080fd5b5b50565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111515156117e857fe5b8183039050929150505600a165627a7a72305820449ecd3763aa3635fccaa2d890b30bed4e8031ed9bea7cc91128cb74294485590029","srcmap":"243:6995:0:-;;;1440:334;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:334:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:9;1574:8;;:20;;;;;;;;;;;;;;;;;;1609:7;1601:5;;:15;;;;;;;;;;;;;;;;;;1635:10;1623:9;:22;;;;1669:15;1652:14;:32;;;;1701:8;1691:7;:18;;;;1727:10;1716:8;;:21;;;;;;;;;;;;;;;;;;1757:11;1744:10;:24;;;;1440:334;;;;;;243:6995;;;;;;","srcmap-runtime":"243:6995:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;3933:3302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3933:3302:0;;;;;;2581:337;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2581:337:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;540:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;540:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2159:186:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;402;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:19:0;;;;;;;;;;;;;;;;;;;;;;;345:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;345:21:0;;;;;;;;;;;;;;;;;;;;;;;2410:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2410:64:0;;;;;;321:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:19:0;;;;;;;;;;;;;;;;;;;;;;;450:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;450:22:0;;;;;;;;;;;;;;;;;;;;;;;716:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;716:29:0;;;;;;;;;;;;;;;;;;;;;;;3259:332;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3259:332:0;;;;;;371:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:26:0;;;;;;;;;;;;;;;;;;;;;;;266:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;295:19;;;;;;;;;;;;;:::o;3933:3302::-;4272:7;4281;4443:16;4494:18;4644:6;5213:13;5248:6;5517:24;5558:15;5680:6;5723:15;5792:19;6551;4008:31;3973:66;;;;;;;;:5;;;;;;;;;;;:19;;;3993:9;;3973:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3973:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3973:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3973:30:0;;;;;;;;;;;;;;;;:66;;;;;;;;;3965:75;;;;;;;;4084:7;;;;;;;;;;;4083:8;4075:17;;;;;;;;4155:4;4145:7;;:14;;;;;;;;;;;;;;;;;;4299:5;;;;;;;;;;;:14;;;4314:9;;4299:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4299:25:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4299:25:0;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4299:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4263:61;;;;;;;;;;4371:14;;4337:5;;;;;;;;;;;:19;;;4357:9;;4337:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4337:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4337:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4337:30:0;;;;;;;;;;;;;;;;:48;;4333:2897;;;4462:5;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4462:23:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4462:23:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4462:23:0;;;;;;;;;;;;;;;;4443:42;;4515:5;;;;;;;;;;;:22;;;4538:9;;4549:7;4515:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4515:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4515:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4515:42:0;;;;;;;;;;;;;;;;4494:63;;4651:1;4644:8;;4639:2584;4670:10;;4660:7;:20;:43;;4696:7;4660:43;;;4683:10;;4660:43;4654:1;:50;;4639:2584;;;4954:1;4937:13;:18;;4933:2281;;;5229:1;5213:17;;5257:1;5248:10;;5243:155;5265:7;5260:1;:12;;5243:155;;;5349:5;;;;;;;;;;;:18;;;5368:9;;5379:1;5382;5349:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5349:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5349:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5349:35:0;;;;;;;;;;;;;;;;5337:47;;;;5274:3;;;;;;;5243:155;;;5417:37;5421:11;5434:3;5417:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5472:30;5476:8;5486:3;5472:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5544:1;5517:28;;5576:1;5558:19;;5687:1;5680:8;;5675:775;5694:8;5690:1;:12;5675:775;;;5741:5;;;;;;;;;;;:19;;;5761:9;;5772:1;5775;5741:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5741:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5741:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5741:36:0;;;;;;;;;;;;;;;;5723:54;;5814:5;;;;;;;;;;;:20;;;5835:9;;5846:1;5849;5814:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5814:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5814:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5814:37:0;;;;;;;;;;;;;;;;5792:59;;5873:37;5877:10;5889:11;5873:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5945:13;5931:10;:27;;5927:510;;;5999:11;5976:34;;;;6047:14;;6033:10;:28;6029:342;;;6215:7;;6201:11;:21;6176:8;:21;6185:11;6176:21;;;;;;;;;;;;;;;;:46;;;;;;;;;;;6276:7;;6262:11;:21;6241:17;;:42;;;;;;;;;;;6307:46;6319:11;6332:7;;6341:11;6307:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6029:342;5927:510;;;6409:12;;;;;;;5927:510;5704:3;;;;;;;5675:775;;;6625:1;6612:10;:14;6596:11;6574:19;:33;6573:54;;;;;;;;6551:76;;6731:1;6727:5;;6722:481;6738:8;6734:1;:12;6722:481;;;6780:5;;;;;;;;;;;:19;;;6800:9;;6811:1;6814;6780:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6780:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6780:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6780:36:0;;;;;;;;;;;;;;;;6767:49;;6845:5;;;;;;;;;;;:20;;;6866:9;;6877:1;6880;6845:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6845:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6845:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6845:37:0;;;;;;;;;;;;;;;;6831:51;;6917:14;;6903:10;:28;6899:291;;;7043:14;7018:8;:21;7027:11;7018:21;;;;;;;;;;;;;;;;:39;;;;;;;;;;;7095:14;7074:17;;:35;;;;;;;;;;;7131:43;7143:14;7159:1;7162:11;7131:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6899:291;6748:3;;;;;;;6722:481;;;4933:2281;4706:3;;;;;;;4639:2584;;;4333:2897;3933:3302;;;;;;;;;;;;;:::o;2581:337::-;2628:11;2642:8;:16;2651:6;2642:16;;;;;;;;;;;;;;;;2628:30;;2684:1;2665:8;:16;2674:6;2665:16;;;;;;;;;;;;;;;:20;;;;2704;2708:7;;2717:6;2704:3;:20::i;:::-;2694:7;:30;;;;2770;2774:17;;2793:6;2770:3;:30::i;:::-;2750:17;:50;;;;2878:8;;;;;;;;;;;:17;;;2896:6;2904;2878:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2878:33:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2878:33:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2878:33:0;;;;;;;;;;;;;;;;2870:42;;;;;;;;2581:337;;:::o;688:23::-;;;;;;;;;;;;;:::o;540:41::-;;;;;;;;;;;;;;;;;:::o;2159:186::-;2243:8;;;;;;;;;;;885;871:22;;:10;:22;;;863:31;;;;;;;;2268:8;;;;;;;;;;;:21;;;2290:5;2297:4;2303:7;2268:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2268:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2268:43:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2268:43:0;;;;;;;;;;;;;;;;2260:52;;;;;;;;2332:7;2321;;:18;;;;;;;;;;;2159:186;;;;;:::o;426:19::-;;;;;;;;;;;;;:::o;402:::-;;;;:::o;345:21::-;;;;:::o;2410:64::-;2442:26;2457:10;2442:14;:26::i;:::-;2410:64::o;321:19::-;;;;:::o;450:22::-;;;;:::o;716:29::-;;;;:::o;3259:332::-;3446:11;3301:7;;;;;;;;;;;3293:16;;;;;;;;3332:17;;3322:7;;:27;3318:268;;;3470:17;;3460:7;;:27;3446:41;;3506:17;;3496:7;:27;;;;3542:8;;;;;;;;;;;:17;;;3560:8;;;;;;;;;;;3570:6;3542:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3542:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3542:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3542:35:0;;;;;;;;;;;;;;;;3534:44;;;;;;;;3318:268;3259:332;:::o;371:26::-;;;;:::o;266:24::-;;;;;;;;;;;;;:::o;3035:119::-;3095:7;3124:2;3118;:8;;3111:16;;;;;;3146:2;3141;:7;3134:14;;3035:119;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0xfd2ec9e1208bdbefbcc0bbe493922ec29b97d183_PEpsilon.sol","exportedSymbols":{"ApproveAndCallFallBack":[498],"Arbitrable":[1932],"Arbitrator":[2049],"BlockHashRNG":[1758],"BlockHashRNGFallback":[1835],"Controlled":[563],"Kleros":[4539],"MiniMeTokenFactory":[1605],"PEpsilon":[485],"Pinakion":[1564],"RNG":[1656],"TokenController":[528]}},"children":[{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title PEpsilon\r\n @author Daniel Babbev\r\n\n *  This contract implements a p + epsilon attack against the Kleros court.\r\n The attack is described by VitaliK Buterin here: https://blog.ethereum.org/2015/01/28/p-epsilon-attack/\r","fullyImplemented":true,"linearizedBaseContracts":[485],"name":"PEpsilon","scope":4540},"children":[{"attributes":{"constant":false,"name":"pinakion","scope":485,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":1,"name":"UserDefinedTypeName","src":"266:8:0"}],"id":2,"name":"VariableDeclaration","src":"266:24:0"},{"attributes":{"constant":false,"name":"court","scope":485,"stateVariable":true,"storageLocation":"default","type":"contract Kleros","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Kleros","referencedDeclaration":4539,"type":"contract Kleros"},"id":3,"name":"UserDefinedTypeName","src":"295:6:0"}],"id":4,"name":"VariableDeclaration","src":"295:19:0"},{"attributes":{"constant":false,"name":"balance","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":5,"name":"ElementaryTypeName","src":"321:4:0"}],"id":6,"name":"VariableDeclaration","src":"321:19:0"},{"attributes":{"constant":false,"name":"disputeID","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"345:4:0"}],"id":8,"name":"VariableDeclaration","src":"345:21:0"},{"attributes":{"constant":false,"name":"desiredOutcome","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":9,"name":"ElementaryTypeName","src":"371:4:0"}],"id":10,"name":"VariableDeclaration","src":"371:26:0"},{"attributes":{"constant":false,"name":"epsilon","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":11,"name":"ElementaryTypeName","src":"402:4:0"}],"id":12,"name":"VariableDeclaration","src":"402:19:0"},{"attributes":{"constant":false,"name":"settled","scope":485,"stateVariable":true,"storageLocation":"default","type":"bool","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":13,"name":"ElementaryTypeName","src":"426:4:0"}],"id":14,"name":"VariableDeclaration","src":"426:19:0"},{"attributes":{"constant":false,"name":"maxAppeals","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":15,"name":"ElementaryTypeName","src":"450:4:0"}],"id":16,"name":"VariableDeclaration","src":"450:22:0"},{"attributes":{"constant":false,"name":"withdraw","scope":485,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":17,"name":"ElementaryTypeName","src":"549:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":18,"name":"ElementaryTypeName","src":"560:4:0"}],"id":19,"name":"Mapping","src":"540:25:0"}],"id":20,"name":"VariableDeclaration","src":"540:41:0"},{"attributes":{"constant":false,"name":"attacker","scope":485,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":21,"name":"ElementaryTypeName","src":"688:7:0"}],"id":22,"name":"VariableDeclaration","src":"688:23:0"},{"attributes":{"constant":false,"name":"remainingWithdraw","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":23,"name":"ElementaryTypeName","src":"716:4:0"}],"id":24,"name":"VariableDeclaration","src":"716:29:0"},{"attributes":{"documentation":null,"name":"onlyBy","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_account","scope":37,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":25,"name":"ElementaryTypeName","src":"844:7:0"}],"id":26,"name":"VariableDeclaration","src":"844:16:0"}],"id":27,"name":"ParameterList","src":"843:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":28,"name":"Identifier","src":"863:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":29,"name":"Identifier","src":"871:3:0"}],"id":30,"name":"MemberAccess","src":"871:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":26,"type":"address","value":"_account"},"id":31,"name":"Identifier","src":"885:8:0"}],"id":32,"name":"BinaryOperation","src":"871:22:0"}],"id":33,"name":"FunctionCall","src":"863:31:0"}],"id":34,"name":"ExpressionStatement","src":"863:31:0"},{"id":35,"name":"PlaceholderStatement","src":"896:1:0"}],"id":36,"name":"Block","src":"862:37:0"}],"id":37,"name":"ModifierDefinition","src":"828:71:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"AmountShift"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"val","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":38,"name":"ElementaryTypeName","src":"923:4:0"}],"id":39,"name":"VariableDeclaration","src":"923:8:0"},{"attributes":{"constant":false,"indexed":false,"name":"epsilon","scope":45,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":40,"name":"ElementaryTypeName","src":"933:4:0"}],"id":41,"name":"VariableDeclaration","src":"933:12:0"},{"attributes":{"constant":false,"indexed":false,"name":"juror","scope":45,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":42,"name":"ElementaryTypeName","src":"947:7:0"}],"id":43,"name":"VariableDeclaration","src":"947:13:0"}],"id":44,"name":"ParameterList","src":"922:39:0"}],"id":45,"name":"EventDefinition","src":"905:57:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Log"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"val","scope":53,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":46,"name":"ElementaryTypeName","src":"976:4:0"}],"id":47,"name":"VariableDeclaration","src":"976:8:0"},{"attributes":{"constant":false,"indexed":false,"name":"addr","scope":53,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":48,"name":"ElementaryTypeName","src":"986:7:0"}],"id":49,"name":"VariableDeclaration","src":"986:12:0"},{"attributes":{"constant":false,"indexed":false,"name":"message","scope":53,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":50,"name":"ElementaryTypeName","src":"1000:6:0"}],"id":51,"name":"VariableDeclaration","src":"1000:14:0"}],"id":52,"name":"ParameterList","src":"975:40:0"}],"id":53,"name":"EventDefinition","src":"966:50:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor.\r\n @param _pinakion The PNK contract.\r\n @param _kleros   The Kleros court.\r\n @param _disputeID The dispute we are targeting.\r\n @param _desiredOutcome The desired ruling of the dispute.\r\n @param _epsilon  Jurors will be paid epsilon more for voting for the desiredOutcome.\r\n @param _maxAppeals The maximum number of appeals this contract promises to pay out\r","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_pinakion","scope":98,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":54,"name":"UserDefinedTypeName","src":"1452:8:0"}],"id":55,"name":"VariableDeclaration","src":"1452:18:0"},{"attributes":{"constant":false,"name":"_kleros","scope":98,"stateVariable":false,"storageLocation":"default","type":"contract Kleros","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Kleros","referencedDeclaration":4539,"type":"contract Kleros"},"id":56,"name":"UserDefinedTypeName","src":"1472:6:0"}],"id":57,"name":"VariableDeclaration","src":"1472:14:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":98,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":58,"name":"ElementaryTypeName","src":"1488:4:0"}],"id":59,"name":"VariableDeclaration","src":"1488:15:0"},{"attributes":{"constant":false,"name":"_desiredOutcome","scope":98,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":60,"name":"ElementaryTypeName","src":"1505:4:0"}],"id":61,"name":"VariableDeclaration","src":"1505:20:0"},{"attributes":{"constant":false,"name":"_epsilon","scope":98,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":62,"name":"ElementaryTypeName","src":"1527:4:0"}],"id":63,"name":"VariableDeclaration","src":"1527:13:0"},{"attributes":{"constant":false,"name":"_maxAppeals","scope":98,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":64,"name":"ElementaryTypeName","src":"1542:4:0"}],"id":65,"name":"VariableDeclaration","src":"1542:16:0"}],"id":66,"name":"ParameterList","src":"1451:108:0"},{"attributes":{"parameters":[null]},"children":[],"id":67,"name":"ParameterList","src":"1567:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2,"type":"contract Pinakion","value":"pinakion"},"id":68,"name":"Identifier","src":"1574:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":55,"type":"contract Pinakion","value":"_pinakion"},"id":69,"name":"Identifier","src":"1585:9:0"}],"id":70,"name":"Assignment","src":"1574:20:0"}],"id":71,"name":"ExpressionStatement","src":"1574:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Kleros"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":72,"name":"Identifier","src":"1601:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":57,"type":"contract Kleros","value":"_kleros"},"id":73,"name":"Identifier","src":"1609:7:0"}],"id":74,"name":"Assignment","src":"1601:15:0"}],"id":75,"name":"ExpressionStatement","src":"1601:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":76,"name":"Identifier","src":"1623:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":59,"type":"uint256","value":"_disputeID"},"id":77,"name":"Identifier","src":"1635:10:0"}],"id":78,"name":"Assignment","src":"1623:22:0"}],"id":79,"name":"ExpressionStatement","src":"1623:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":10,"type":"uint256","value":"desiredOutcome"},"id":80,"name":"Identifier","src":"1652:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":61,"type":"uint256","value":"_desiredOutcome"},"id":81,"name":"Identifier","src":"1669:15:0"}],"id":82,"name":"Assignment","src":"1652:32:0"}],"id":83,"name":"ExpressionStatement","src":"1652:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":12,"type":"uint256","value":"epsilon"},"id":84,"name":"Identifier","src":"1691:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"uint256","value":"_epsilon"},"id":85,"name":"Identifier","src":"1701:8:0"}],"id":86,"name":"Assignment","src":"1691:18:0"}],"id":87,"name":"ExpressionStatement","src":"1691:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"address","value":"attacker"},"id":88,"name":"Identifier","src":"1716:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":89,"name":"Identifier","src":"1727:3:0"}],"id":90,"name":"MemberAccess","src":"1727:10:0"}],"id":91,"name":"Assignment","src":"1716:21:0"}],"id":92,"name":"ExpressionStatement","src":"1716:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":16,"type":"uint256","value":"maxAppeals"},"id":93,"name":"Identifier","src":"1744:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":65,"type":"uint256","value":"_maxAppeals"},"id":94,"name":"Identifier","src":"1757:11:0"}],"id":95,"name":"Assignment","src":"1744:24:0"}],"id":96,"name":"ExpressionStatement","src":"1744:24:0"}],"id":97,"name":"Block","src":"1567:207:0"}],"id":98,"name":"FunctionDefinition","src":"1440:334:0"},{"attributes":{"constant":false,"documentation":"@dev Callback of approveAndCall - transfer pinakions in the contract. Should be called by the pinakion contract. TRUSTED.\r\n The attacker has to deposit sufficiently large amount of PNK to cover the payouts to the jurors.\r\n @param _from The address making the transfer.\r\n @param _amount Amount of tokens to transfer to this contract (in basic units).\r","implemented":true,"isConstructor":false,"name":"receiveApproval","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":126,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":99,"name":"ElementaryTypeName","src":"2184:7:0"}],"id":100,"name":"VariableDeclaration","src":"2184:13:0"},{"attributes":{"constant":false,"name":"_amount","scope":126,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":101,"name":"ElementaryTypeName","src":"2199:4:0"}],"id":102,"name":"VariableDeclaration","src":"2199:12:0"},{"attributes":{"constant":false,"name":"","scope":126,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":103,"name":"ElementaryTypeName","src":"2213:7:0"}],"id":104,"name":"VariableDeclaration","src":"2213:7:0"},{"attributes":{"constant":false,"name":"","scope":126,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":105,"name":"ElementaryTypeName","src":"2222:5:0"}],"id":106,"name":"VariableDeclaration","src":"2222:5:0"}],"id":107,"name":"ParameterList","src":"2183:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":111,"name":"ParameterList","src":"2253:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":37,"type":"modifier (address)","value":"onlyBy"},"id":108,"name":"Identifier","src":"2236:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2,"type":"contract Pinakion","value":"pinakion"},"id":109,"name":"Identifier","src":"2243:8:0"}],"id":110,"name":"ModifierInvocation","src":"2236:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":112,"name":"Identifier","src":"2260:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_PEpsilon_$485","typeString":"contract PEpsilon"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":731,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2,"type":"contract Pinakion","value":"pinakion"},"id":113,"name":"Identifier","src":"2268:8:0"}],"id":114,"name":"MemberAccess","src":"2268:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"address","value":"_from"},"id":115,"name":"Identifier","src":"2290:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4567,"type":"contract PEpsilon","value":"this"},"id":116,"name":"Identifier","src":"2297:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":102,"type":"uint256","value":"_amount"},"id":117,"name":"Identifier","src":"2303:7:0"}],"id":118,"name":"FunctionCall","src":"2268:43:0"}],"id":119,"name":"FunctionCall","src":"2260:52:0"}],"id":120,"name":"ExpressionStatement","src":"2260:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"balance"},"id":121,"name":"Identifier","src":"2321:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":102,"type":"uint256","value":"_amount"},"id":122,"name":"Identifier","src":"2332:7:0"}],"id":123,"name":"Assignment","src":"2321:18:0"}],"id":124,"name":"ExpressionStatement","src":"2321:18:0"}],"id":125,"name":"Block","src":"2253:92:0"}],"id":126,"name":"FunctionDefinition","src":"2159:186:0"},{"attributes":{"constant":false,"documentation":"@dev Jurors can withdraw their PNK from here\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdrawJuror","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":127,"name":"ParameterList","src":"2432:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":128,"name":"ParameterList","src":"2435:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"function (address)","value":"withdrawSelect"},"id":129,"name":"Identifier","src":"2442:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":130,"name":"Identifier","src":"2457:3:0"}],"id":131,"name":"MemberAccess","src":"2457:10:0"}],"id":132,"name":"FunctionCall","src":"2442:26:0"}],"id":133,"name":"ExpressionStatement","src":"2442:26:0"}],"id":134,"name":"Block","src":"2435:39:0"}],"id":135,"name":"FunctionDefinition","src":"2410:64:0"},{"attributes":{"constant":false,"documentation":"@dev Withdraw the funds of a given juror\r\n @param _juror The address of the juror\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdrawSelect","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_juror","scope":175,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":136,"name":"ElementaryTypeName","src":"2605:7:0"}],"id":137,"name":"VariableDeclaration","src":"2605:14:0"}],"id":138,"name":"ParameterList","src":"2604:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":139,"name":"ParameterList","src":"2621:0:0"},{"children":[{"attributes":{"assignments":[141]},"children":[{"attributes":{"constant":false,"name":"amount","scope":175,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":140,"name":"ElementaryTypeName","src":"2628:4:0"}],"id":141,"name":"VariableDeclaration","src":"2628:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":20,"type":"mapping(address => uint256)","value":"withdraw"},"id":142,"name":"Identifier","src":"2642:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":137,"type":"address","value":"_juror"},"id":143,"name":"Identifier","src":"2651:6:0"}],"id":144,"name":"IndexAccess","src":"2642:16:0"}],"id":145,"name":"VariableDeclarationStatement","src":"2628:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":20,"type":"mapping(address => uint256)","value":"withdraw"},"id":146,"name":"Identifier","src":"2665:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":137,"type":"address","value":"_juror"},"id":147,"name":"Identifier","src":"2674:6:0"}],"id":148,"name":"IndexAccess","src":"2665:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":149,"name":"Literal","src":"2684:1:0"}],"id":150,"name":"Assignment","src":"2665:20:0"}],"id":151,"name":"ExpressionStatement","src":"2665:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"balance"},"id":152,"name":"Identifier","src":"2694:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":195,"type":"function (uint256,uint256) pure returns (uint256)","value":"sub"},"id":153,"name":"Identifier","src":"2704:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"balance"},"id":154,"name":"Identifier","src":"2708:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":141,"type":"uint256","value":"amount"},"id":155,"name":"Identifier","src":"2717:6:0"}],"id":156,"name":"FunctionCall","src":"2704:20:0"}],"id":157,"name":"Assignment","src":"2694:30:0"}],"id":158,"name":"ExpressionStatement","src":"2694:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"uint256","value":"remainingWithdraw"},"id":159,"name":"Identifier","src":"2750:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":195,"type":"function (uint256,uint256) pure returns (uint256)","value":"sub"},"id":160,"name":"Identifier","src":"2770:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"uint256","value":"remainingWithdraw"},"id":161,"name":"Identifier","src":"2774:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":141,"type":"uint256","value":"amount"},"id":162,"name":"Identifier","src":"2793:6:0"}],"id":163,"name":"FunctionCall","src":"2770:30:0"}],"id":164,"name":"Assignment","src":"2750:50:0"}],"id":165,"name":"ExpressionStatement","src":"2750:50:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":166,"name":"Identifier","src":"2870:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":681,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2,"type":"contract Pinakion","value":"pinakion"},"id":167,"name":"Identifier","src":"2878:8:0"}],"id":168,"name":"MemberAccess","src":"2878:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":137,"type":"address","value":"_juror"},"id":169,"name":"Identifier","src":"2896:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":141,"type":"uint256","value":"amount"},"id":170,"name":"Identifier","src":"2904:6:0"}],"id":171,"name":"FunctionCall","src":"2878:33:0"}],"id":172,"name":"FunctionCall","src":"2870:42:0"}],"id":173,"name":"ExpressionStatement","src":"2870:42:0"}],"id":174,"name":"Block","src":"2621:297:0"}],"id":175,"name":"FunctionDefinition","src":"2581:337:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":485,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_a","scope":195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":176,"name":"ElementaryTypeName","src":"3048:7:0"}],"id":177,"name":"VariableDeclaration","src":"3048:10:0"},{"attributes":{"constant":false,"name":"_b","scope":195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":178,"name":"ElementaryTypeName","src":"3060:7:0"}],"id":179,"name":"VariableDeclaration","src":"3060:10:0"}],"id":180,"name":"ParameterList","src":"3047:24:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":181,"name":"ElementaryTypeName","src":"3095:7:0"}],"id":182,"name":"VariableDeclaration","src":"3095:7:0"}],"id":183,"name":"ParameterList","src":"3094:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":4543,"type":"function (bool) pure","value":"assert"},"id":184,"name":"Identifier","src":"3111:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"uint256","value":"_b"},"id":185,"name":"Identifier","src":"3118:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"uint256","value":"_a"},"id":186,"name":"Identifier","src":"3124:2:0"}],"id":187,"name":"BinaryOperation","src":"3118:8:0"}],"id":188,"name":"FunctionCall","src":"3111:16:0"}],"id":189,"name":"ExpressionStatement","src":"3111:16:0"},{"attributes":{"functionReturnParameters":183},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"uint256","value":"_a"},"id":190,"name":"Identifier","src":"3141:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"uint256","value":"_b"},"id":191,"name":"Identifier","src":"3146:2:0"}],"id":192,"name":"BinaryOperation","src":"3141:7:0"}],"id":193,"name":"Return","src":"3134:14:0"}],"id":194,"name":"Block","src":"3104:50:0"}],"id":195,"name":"FunctionDefinition","src":"3035:119:0"},{"attributes":{"constant":false,"documentation":"@dev The attacker can withdraw their PNK from here after the bribe has been settled.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdrawAttacker","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":196,"name":"ParameterList","src":"3284:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":197,"name":"ParameterList","src":"3286:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":198,"name":"Identifier","src":"3293:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bool","value":"settled"},"id":199,"name":"Identifier","src":"3301:7:0"}],"id":200,"name":"FunctionCall","src":"3293:16:0"}],"id":201,"name":"ExpressionStatement","src":"3293:16:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"balance"},"id":202,"name":"Identifier","src":"3322:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"uint256","value":"remainingWithdraw"},"id":203,"name":"Identifier","src":"3332:17:0"}],"id":204,"name":"BinaryOperation","src":"3322:27:0"},{"children":[{"attributes":{"assignments":[206]},"children":[{"attributes":{"constant":false,"name":"amount","scope":226,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":205,"name":"ElementaryTypeName","src":"3446:4:0"}],"id":206,"name":"VariableDeclaration","src":"3446:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"balance"},"id":207,"name":"Identifier","src":"3460:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"uint256","value":"remainingWithdraw"},"id":208,"name":"Identifier","src":"3470:17:0"}],"id":209,"name":"BinaryOperation","src":"3460:27:0"}],"id":210,"name":"VariableDeclarationStatement","src":"3446:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"balance"},"id":211,"name":"Identifier","src":"3496:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"uint256","value":"remainingWithdraw"},"id":212,"name":"Identifier","src":"3506:17:0"}],"id":213,"name":"Assignment","src":"3496:27:0"}],"id":214,"name":"ExpressionStatement","src":"3496:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":215,"name":"Identifier","src":"3534:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":681,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2,"type":"contract Pinakion","value":"pinakion"},"id":216,"name":"Identifier","src":"3542:8:0"}],"id":217,"name":"MemberAccess","src":"3542:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"address","value":"attacker"},"id":218,"name":"Identifier","src":"3560:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":206,"type":"uint256","value":"amount"},"id":219,"name":"Identifier","src":"3570:6:0"}],"id":220,"name":"FunctionCall","src":"3542:35:0"}],"id":221,"name":"FunctionCall","src":"3534:44:0"}],"id":222,"name":"ExpressionStatement","src":"3534:44:0"}],"id":223,"name":"Block","src":"3351:235:0"}],"id":224,"name":"IfStatement","src":"3318:268:0"}],"id":225,"name":"Block","src":"3286:305:0"}],"id":226,"name":"FunctionDefinition","src":"3259:332:0"},{"attributes":{"constant":false,"documentation":"@dev Settles the p + e bribe with the jurors.\r\nIf the dispute is ruled differently from desiredOutcome:\r\n   The jurors who voted for desiredOutcome receive p + d + e in rewards from this contract.\r\nIf the dispute is ruled as in desiredOutcome:\r\n   The jurors don't receive anything from this contract.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"settle","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":227,"name":"ParameterList","src":"3948:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":228,"name":"ParameterList","src":"3958:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":229,"name":"Identifier","src":"3965:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeStatus_$1936","typeString":"enum Arbitrator.DisputeStatus"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"enum Arbitrator.DisputeStatus","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"disputeStatus","referencedDeclaration":4418,"type":"function (uint256) view external returns (enum Arbitrator.DisputeStatus)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":230,"name":"Identifier","src":"3973:5:0"}],"id":231,"name":"MemberAccess","src":"3973:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":232,"name":"Identifier","src":"3993:9:0"}],"id":233,"name":"FunctionCall","src":"3973:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"DisputeStatus","referencedDeclaration":1936,"type":"type(enum Arbitrator.DisputeStatus)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2049,"type":"type(contract Arbitrator)","value":"Arbitrator"},"id":234,"name":"Identifier","src":"4008:10:0"}],"id":235,"name":"MemberAccess","src":"4008:24:0"}],"id":236,"name":"MemberAccess","src":"4008:31:0"}],"id":237,"name":"BinaryOperation","src":"3973:66:0"}],"id":238,"name":"FunctionCall","src":"3965:75:0"}],"id":239,"name":"ExpressionStatement","src":"3965:75:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":240,"name":"Identifier","src":"4075:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bool","value":"settled"},"id":241,"name":"Identifier","src":"4084:7:0"}],"id":242,"name":"UnaryOperation","src":"4083:8:0"}],"id":243,"name":"FunctionCall","src":"4075:17:0"}],"id":244,"name":"ExpressionStatement","src":"4075:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bool","value":"settled"},"id":245,"name":"Identifier","src":"4145:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":246,"name":"Literal","src":"4155:4:0"}],"id":247,"name":"Assignment","src":"4145:14:0"}],"id":248,"name":"ExpressionStatement","src":"4145:14:0"},{"attributes":{"assignments":[null,null,249,250,null,null,null,null]},"children":[{"attributes":{"constant":false,"name":"appeals","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":249,"name":"VariableDeclaration","src":"4272:7:0"},{"attributes":{"constant":false,"name":"choices","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":250,"name":"VariableDeclaration","src":"4281:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(contract Arbitrable,uint256,uint256,uint256,uint16,uint256,enum Kleros.DisputeState,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"disputes","referencedDeclaration":2198,"type":"function (uint256) view external returns (contract Arbitrable,uint256,uint256,uint256,uint16,uint256,enum Kleros.DisputeState,uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":251,"name":"Identifier","src":"4299:5:0"}],"id":252,"name":"MemberAccess","src":"4299:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":253,"name":"Identifier","src":"4314:9:0"}],"id":254,"name":"FunctionCall","src":"4299:25:0"}],"id":255,"name":"VariableDeclarationStatement","src":"4263:61:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"currentRuling","referencedDeclaration":4352,"type":"function (uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":256,"name":"Identifier","src":"4337:5:0"}],"id":257,"name":"MemberAccess","src":"4337:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":258,"name":"Identifier","src":"4357:9:0"}],"id":259,"name":"FunctionCall","src":"4337:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":10,"type":"uint256","value":"desiredOutcome"},"id":260,"name":"Identifier","src":"4371:14:0"}],"id":261,"name":"BinaryOperation","src":"4337:48:0"},{"children":[{"attributes":{"assignments":[263]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":262,"name":"ElementaryTypeName","src":"4443:4:0"}],"id":263,"name":"VariableDeclaration","src":"4443:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getStakePerDraw","referencedDeclaration":4127,"type":"function () view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":264,"name":"Identifier","src":"4462:5:0"}],"id":265,"name":"MemberAccess","src":"4462:21:0"}],"id":266,"name":"FunctionCall","src":"4462:23:0"}],"id":267,"name":"VariableDeclarationStatement","src":"4443:42:0"},{"attributes":{"assignments":[269]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":268,"name":"ElementaryTypeName","src":"4494:4:0"}],"id":269,"name":"VariableDeclaration","src":"4494:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getWinningChoice","referencedDeclaration":4189,"type":"function (uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":270,"name":"Identifier","src":"4515:5:0"}],"id":271,"name":"MemberAccess","src":"4515:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":272,"name":"Identifier","src":"4538:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":249,"type":"uint256","value":"appeals"},"id":273,"name":"Identifier","src":"4549:7:0"}],"id":274,"name":"FunctionCall","src":"4515:42:0"}],"id":275,"name":"VariableDeclarationStatement","src":"4494:63:0"},{"children":[{"attributes":{"assignments":[277]},"children":[{"attributes":{"constant":false,"name":"i","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":276,"name":"ElementaryTypeName","src":"4644:4:0"}],"id":277,"name":"VariableDeclaration","src":"4644:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":278,"name":"Literal","src":"4651:1:0"}],"id":279,"name":"VariableDeclarationStatement","src":"4644:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"uint256","value":"i"},"id":280,"name":"Identifier","src":"4654:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":249,"type":"uint256","value":"appeals"},"id":281,"name":"Identifier","src":"4660:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":16,"type":"uint256","value":"maxAppeals"},"id":282,"name":"Identifier","src":"4670:10:0"}],"id":283,"name":"BinaryOperation","src":"4660:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":16,"type":"uint256","value":"maxAppeals"},"id":284,"name":"Identifier","src":"4683:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":249,"type":"uint256","value":"appeals"},"id":285,"name":"Identifier","src":"4696:7:0"}],"id":286,"name":"Conditional","src":"4660:43:0"}],"id":287,"name":"TupleExpression","src":"4659:45:0"}],"id":288,"name":"BinaryOperation","src":"4654:50:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"uint256","value":"i"},"id":289,"name":"Identifier","src":"4706:1:0"}],"id":290,"name":"UnaryOperation","src":"4706:3:0"}],"id":291,"name":"ExpressionStatement","src":"4706:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":269,"type":"uint256","value":"winningChoice"},"id":292,"name":"Identifier","src":"4937:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":293,"name":"Literal","src":"4954:1:0"}],"id":294,"name":"BinaryOperation","src":"4937:18:0"},{"children":[{"attributes":{"assignments":[296]},"children":[{"attributes":{"constant":false,"name":"votesLen","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":295,"name":"ElementaryTypeName","src":"5213:4:0"}],"id":296,"name":"VariableDeclaration","src":"5213:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":297,"name":"Literal","src":"5229:1:0"}],"id":298,"name":"VariableDeclarationStatement","src":"5213:17:0"},{"children":[{"attributes":{"assignments":[300]},"children":[{"attributes":{"constant":false,"name":"c","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":299,"name":"ElementaryTypeName","src":"5248:4:0"}],"id":300,"name":"VariableDeclaration","src":"5248:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":301,"name":"Literal","src":"5257:1:0"}],"id":302,"name":"VariableDeclarationStatement","src":"5248:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"uint256","value":"c"},"id":303,"name":"Identifier","src":"5260:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"uint256","value":"choices"},"id":304,"name":"Identifier","src":"5265:7:0"}],"id":305,"name":"BinaryOperation","src":"5260:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"uint256","value":"c"},"id":306,"name":"Identifier","src":"5274:1:0"}],"id":307,"name":"UnaryOperation","src":"5274:3:0"}],"id":308,"name":"ExpressionStatement","src":"5274:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"votesLen"},"id":309,"name":"Identifier","src":"5337:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteCount","referencedDeclaration":4229,"type":"function (uint256,uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":310,"name":"Identifier","src":"5349:5:0"}],"id":311,"name":"MemberAccess","src":"5349:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":312,"name":"Identifier","src":"5368:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"uint256","value":"i"},"id":313,"name":"Identifier","src":"5379:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":300,"type":"uint256","value":"c"},"id":314,"name":"Identifier","src":"5382:1:0"}],"id":315,"name":"FunctionCall","src":"5349:35:0"}],"id":316,"name":"Assignment","src":"5337:47:0"}],"id":317,"name":"ExpressionStatement","src":"5337:47:0"}],"id":318,"name":"Block","src":"5279:119:0"}],"id":319,"name":"ForStatement","src":"5243:155:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_ab1943efbb744847144c6533956c229ccf6f232d1db2d467ea1c3e92d78a939d","typeString":"literal_string \"stakePerDraw\""}],"overloadedDeclarations":[null],"referencedDeclaration":53,"type":"function (uint256,address,string memory)","value":"Log"},"id":320,"name":"Identifier","src":"5417:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"amountShift"},"id":321,"name":"Identifier","src":"5421:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":322,"name":"Literal","src":"5434:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"7374616b6550657244726177","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"stakePerDraw\"","value":"stakePerDraw"},"id":323,"name":"Literal","src":"5439:14:0"}],"id":324,"name":"FunctionCall","src":"5417:37:0"}],"id":325,"name":"EmitStatement","src":"5412:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_f8149ef8ca56c6a5f5a85623345f6d5775c50a1c648e938ddd62cbc9fd968bb7","typeString":"literal_string \"votesLen\""}],"overloadedDeclarations":[null],"referencedDeclaration":53,"type":"function (uint256,address,string memory)","value":"Log"},"id":326,"name":"Identifier","src":"5472:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"votesLen"},"id":327,"name":"Identifier","src":"5476:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":328,"name":"Literal","src":"5486:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"766f7465734c656e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"votesLen\"","value":"votesLen"},"id":329,"name":"Literal","src":"5491:10:0"}],"id":330,"name":"FunctionCall","src":"5472:30:0"}],"id":331,"name":"EmitStatement","src":"5467:35:0"},{"attributes":{"assignments":[333]},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":332,"name":"ElementaryTypeName","src":"5517:4:0"}],"id":333,"name":"VariableDeclaration","src":"5517:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":334,"name":"Literal","src":"5544:1:0"}],"id":335,"name":"VariableDeclarationStatement","src":"5517:28:0"},{"attributes":{"assignments":[337]},"children":[{"attributes":{"constant":false,"name":"nbCoherent","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":336,"name":"ElementaryTypeName","src":"5558:4:0"}],"id":337,"name":"VariableDeclaration","src":"5558:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":338,"name":"Literal","src":"5576:1:0"}],"id":339,"name":"VariableDeclarationStatement","src":"5558:19:0"},{"children":[{"attributes":{"assignments":[341]},"children":[{"attributes":{"constant":false,"name":"j","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":340,"name":"ElementaryTypeName","src":"5680:4:0"}],"id":341,"name":"VariableDeclaration","src":"5680:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":342,"name":"Literal","src":"5687:1:0"}],"id":343,"name":"VariableDeclarationStatement","src":"5680:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":344,"name":"Identifier","src":"5690:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"votesLen"},"id":345,"name":"Identifier","src":"5694:8:0"}],"id":346,"name":"BinaryOperation","src":"5690:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":347,"name":"Identifier","src":"5704:1:0"}],"id":348,"name":"UnaryOperation","src":"5704:3:0"}],"id":349,"name":"ExpressionStatement","src":"5704:3:0"},{"children":[{"attributes":{"assignments":[351]},"children":[{"attributes":{"constant":false,"name":"voteRuling","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":350,"name":"ElementaryTypeName","src":"5723:4:0"}],"id":351,"name":"VariableDeclaration","src":"5723:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteRuling","referencedDeclaration":4171,"type":"function (uint256,uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":352,"name":"Identifier","src":"5741:5:0"}],"id":353,"name":"MemberAccess","src":"5741:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":354,"name":"Identifier","src":"5761:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"uint256","value":"i"},"id":355,"name":"Identifier","src":"5772:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":356,"name":"Identifier","src":"5775:1:0"}],"id":357,"name":"FunctionCall","src":"5741:36:0"}],"id":358,"name":"VariableDeclarationStatement","src":"5723:54:0"},{"attributes":{"assignments":[360]},"children":[{"attributes":{"constant":false,"name":"voteAccount","scope":484,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":359,"name":"ElementaryTypeName","src":"5792:7:0"}],"id":360,"name":"VariableDeclaration","src":"5792:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteAccount","referencedDeclaration":4149,"type":"function (uint256,uint256,uint256) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":361,"name":"Identifier","src":"5814:5:0"}],"id":362,"name":"MemberAccess","src":"5814:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":363,"name":"Identifier","src":"5835:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"uint256","value":"i"},"id":364,"name":"Identifier","src":"5846:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":365,"name":"Identifier","src":"5849:1:0"}],"id":366,"name":"FunctionCall","src":"5814:37:0"}],"id":367,"name":"VariableDeclarationStatement","src":"5792:59:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_91a99e229c0c327658e89d7662627165602af3cfa1201b7ca2f124b813866300","typeString":"literal_string \"voted\""}],"overloadedDeclarations":[null],"referencedDeclaration":53,"type":"function (uint256,address,string memory)","value":"Log"},"id":368,"name":"Identifier","src":"5873:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"voteRuling"},"id":369,"name":"Identifier","src":"5877:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"address","value":"voteAccount"},"id":370,"name":"Identifier","src":"5889:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"766f746564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"voted\"","value":"voted"},"id":371,"name":"Literal","src":"5902:7:0"}],"id":372,"name":"FunctionCall","src":"5873:37:0"}],"id":373,"name":"EmitStatement","src":"5868:42:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"voteRuling"},"id":374,"name":"Identifier","src":"5931:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":269,"type":"uint256","value":"winningChoice"},"id":375,"name":"Identifier","src":"5945:13:0"}],"id":376,"name":"BinaryOperation","src":"5931:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":333,"type":"uint256","value":"totalToRedistribute"},"id":377,"name":"Identifier","src":"5976:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"amountShift"},"id":378,"name":"Identifier","src":"5999:11:0"}],"id":379,"name":"Assignment","src":"5976:34:0"}],"id":380,"name":"ExpressionStatement","src":"5976:34:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"voteRuling"},"id":381,"name":"Identifier","src":"6033:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":10,"type":"uint256","value":"desiredOutcome"},"id":382,"name":"Identifier","src":"6047:14:0"}],"id":383,"name":"BinaryOperation","src":"6033:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":20,"type":"mapping(address => uint256)","value":"withdraw"},"id":384,"name":"Identifier","src":"6176:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"address","value":"voteAccount"},"id":385,"name":"Identifier","src":"6185:11:0"}],"id":386,"name":"IndexAccess","src":"6176:21:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"amountShift"},"id":387,"name":"Identifier","src":"6201:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":12,"type":"uint256","value":"epsilon"},"id":388,"name":"Identifier","src":"6215:7:0"}],"id":389,"name":"BinaryOperation","src":"6201:21:0"}],"id":390,"name":"Assignment","src":"6176:46:0"}],"id":391,"name":"ExpressionStatement","src":"6176:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"uint256","value":"remainingWithdraw"},"id":392,"name":"Identifier","src":"6241:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"amountShift"},"id":393,"name":"Identifier","src":"6262:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":12,"type":"uint256","value":"epsilon"},"id":394,"name":"Identifier","src":"6276:7:0"}],"id":395,"name":"BinaryOperation","src":"6262:21:0"}],"id":396,"name":"Assignment","src":"6241:42:0"}],"id":397,"name":"ExpressionStatement","src":"6241:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":45,"type":"function (uint256,uint256,address)","value":"AmountShift"},"id":398,"name":"Identifier","src":"6307:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"amountShift"},"id":399,"name":"Identifier","src":"6319:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":12,"type":"uint256","value":"epsilon"},"id":400,"name":"Identifier","src":"6332:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"address","value":"voteAccount"},"id":401,"name":"Identifier","src":"6341:11:0"}],"id":402,"name":"FunctionCall","src":"6307:46:0"}],"id":403,"name":"EmitStatement","src":"6302:51:0"}],"id":404,"name":"Block","src":"6062:309:0"}],"id":405,"name":"IfStatement","src":"6029:342:0"}],"id":406,"name":"Block","src":"5959:427:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":337,"type":"uint256","value":"nbCoherent"},"id":407,"name":"Identifier","src":"6409:10:0"}],"id":408,"name":"UnaryOperation","src":"6409:12:0"}],"id":409,"name":"ExpressionStatement","src":"6409:12:0"}],"id":410,"name":"Block","src":"6392:45:0"}],"id":411,"name":"IfStatement","src":"5927:510:0"}],"id":412,"name":"Block","src":"5708:742:0"}],"id":413,"name":"ForStatement","src":"5675:775:0"},{"attributes":{"assignments":[415]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":414,"name":"ElementaryTypeName","src":"6551:4:0"}],"id":415,"name":"VariableDeclaration","src":"6551:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":333,"type":"uint256","value":"totalToRedistribute"},"id":416,"name":"Identifier","src":"6574:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":263,"type":"uint256","value":"amountShift"},"id":417,"name":"Identifier","src":"6596:11:0"}],"id":418,"name":"BinaryOperation","src":"6574:33:0"}],"id":419,"name":"TupleExpression","src":"6573:35:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":337,"type":"uint256","value":"nbCoherent"},"id":420,"name":"Identifier","src":"6612:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":421,"name":"Literal","src":"6625:1:0"}],"id":422,"name":"BinaryOperation","src":"6612:14:0"}],"id":423,"name":"TupleExpression","src":"6611:16:0"}],"id":424,"name":"BinaryOperation","src":"6573:54:0"}],"id":425,"name":"VariableDeclarationStatement","src":"6551:76:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":426,"name":"Identifier","src":"6727:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":427,"name":"Literal","src":"6731:1:0"}],"id":428,"name":"Assignment","src":"6727:5:0"}],"id":429,"name":"ExpressionStatement","src":"6727:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":430,"name":"Identifier","src":"6734:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":296,"type":"uint256","value":"votesLen"},"id":431,"name":"Identifier","src":"6738:8:0"}],"id":432,"name":"BinaryOperation","src":"6734:12:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":433,"name":"Identifier","src":"6748:1:0"}],"id":434,"name":"UnaryOperation","src":"6748:3:0"}],"id":435,"name":"ExpressionStatement","src":"6748:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"voteRuling"},"id":436,"name":"Identifier","src":"6767:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteRuling","referencedDeclaration":4171,"type":"function (uint256,uint256,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":437,"name":"Identifier","src":"6780:5:0"}],"id":438,"name":"MemberAccess","src":"6780:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":439,"name":"Identifier","src":"6800:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"uint256","value":"i"},"id":440,"name":"Identifier","src":"6811:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":441,"name":"Identifier","src":"6814:1:0"}],"id":442,"name":"FunctionCall","src":"6780:36:0"}],"id":443,"name":"Assignment","src":"6767:49:0"}],"id":444,"name":"ExpressionStatement","src":"6767:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"address","value":"voteAccount"},"id":445,"name":"Identifier","src":"6831:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getVoteAccount","referencedDeclaration":4149,"type":"function (uint256,uint256,uint256) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"contract Kleros","value":"court"},"id":446,"name":"Identifier","src":"6845:5:0"}],"id":447,"name":"MemberAccess","src":"6845:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"disputeID"},"id":448,"name":"Identifier","src":"6866:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"uint256","value":"i"},"id":449,"name":"Identifier","src":"6877:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":341,"type":"uint256","value":"j"},"id":450,"name":"Identifier","src":"6880:1:0"}],"id":451,"name":"FunctionCall","src":"6845:37:0"}],"id":452,"name":"Assignment","src":"6831:51:0"}],"id":453,"name":"ExpressionStatement","src":"6831:51:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"voteRuling"},"id":454,"name":"Identifier","src":"6903:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":10,"type":"uint256","value":"desiredOutcome"},"id":455,"name":"Identifier","src":"6917:14:0"}],"id":456,"name":"BinaryOperation","src":"6903:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":20,"type":"mapping(address => uint256)","value":"withdraw"},"id":457,"name":"Identifier","src":"7018:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"address","value":"voteAccount"},"id":458,"name":"Identifier","src":"7027:11:0"}],"id":459,"name":"IndexAccess","src":"7018:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":415,"type":"uint256","value":"toRedistribute"},"id":460,"name":"Identifier","src":"7043:14:0"}],"id":461,"name":"Assignment","src":"7018:39:0"}],"id":462,"name":"ExpressionStatement","src":"7018:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"uint256","value":"remainingWithdraw"},"id":463,"name":"Identifier","src":"7074:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":415,"type":"uint256","value":"toRedistribute"},"id":464,"name":"Identifier","src":"7095:14:0"}],"id":465,"name":"Assignment","src":"7074:35:0"}],"id":466,"name":"ExpressionStatement","src":"7074:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":45,"type":"function (uint256,uint256,address)","value":"AmountShift"},"id":467,"name":"Identifier","src":"7131:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":415,"type":"uint256","value":"toRedistribute"},"id":468,"name":"Identifier","src":"7143:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":469,"name":"Literal","src":"7159:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"address","value":"voteAccount"},"id":470,"name":"Identifier","src":"7162:11:0"}],"id":471,"name":"FunctionCall","src":"7131:43:0"}],"id":472,"name":"EmitStatement","src":"7126:48:0"}],"id":473,"name":"Block","src":"6932:258:0"}],"id":474,"name":"IfStatement","src":"6899:291:0"}],"id":475,"name":"Block","src":"6752:451:0"}],"id":476,"name":"ForStatement","src":"6722:481:0"}],"id":477,"name":"Block","src":"4956:2258:0"}],"id":478,"name":"IfStatement","src":"4933:2281:0"}],"id":479,"name":"Block","src":"4710:2513:0"}],"id":480,"name":"ForStatement","src":"4639:2584:0"}],"id":481,"name":"Block","src":"4386:2844:0"}],"id":482,"name":"IfStatement","src":"4333:2897:0"}],"id":483,"name":"Block","src":"3958:3277:0"}],"id":484,"name":"FunctionDefinition","src":"3933:3302:0"}],"id":485,"name":"ContractDefinition","src":"243:6995:0"},{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":486,"name":"PragmaDirective","src":"7574:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[498],"name":"ApproveAndCallFallBack","scope":4540},"children":[{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"receiveApproval","payable":false,"scope":498,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":497,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":487,"name":"ElementaryTypeName","src":"7668:7:0"}],"id":488,"name":"VariableDeclaration","src":"7668:12:0"},{"attributes":{"constant":false,"name":"_amount","scope":497,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":489,"name":"ElementaryTypeName","src":"7682:7:0"}],"id":490,"name":"VariableDeclaration","src":"7682:15:0"},{"attributes":{"constant":false,"name":"_token","scope":497,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":491,"name":"ElementaryTypeName","src":"7699:7:0"}],"id":492,"name":"VariableDeclaration","src":"7699:14:0"},{"attributes":{"constant":false,"name":"_data","scope":497,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":493,"name":"ElementaryTypeName","src":"7715:5:0"}],"id":494,"name":"VariableDeclaration","src":"7715:11:0"}],"id":495,"name":"ParameterList","src":"7667:60:0"},{"attributes":{"parameters":[null]},"children":[],"id":496,"name":"ParameterList","src":"7734:0:0"}],"id":497,"name":"FunctionDefinition","src":"7643:92:0"}],"id":498,"name":"ContractDefinition","src":"7604:134:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@dev The token controller contract must implement these functions\r","fullyImplemented":false,"linearizedBaseContracts":[528],"name":"TokenController","scope":4540},"children":[{"attributes":{"body":null,"constant":false,"documentation":"@notice Called when `_owner` sends ether to the MiniMe Token contract\r\n @param _owner The address that sent the ether to create tokens\r\n @return True if the ether is accepted, false if it throws\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"proxyPayment","payable":true,"scope":528,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":505,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":499,"name":"ElementaryTypeName","src":"8085:7:0"}],"id":500,"name":"VariableDeclaration","src":"8085:14:0"}],"id":501,"name":"ParameterList","src":"8084:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":505,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":502,"name":"ElementaryTypeName","src":"8124:4:0"}],"id":503,"name":"VariableDeclaration","src":"8124:4:0"}],"id":504,"name":"ParameterList","src":"8123:6:0"}],"id":505,"name":"FunctionDefinition","src":"8063:67:0"},{"attributes":{"body":null,"constant":false,"documentation":"@notice Notifies the controller about a token transfer allowing the\r\n  controller to react if desired\r\n @param _from The origin of the transfer\r\n @param _to The destination of the transfer\r\n @param _amount The amount of the transfer\r\n @return False if the controller does not authorize the transfer\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"onTransfer","payable":false,"scope":528,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":516,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":506,"name":"ElementaryTypeName","src":"8501:7:0"}],"id":507,"name":"VariableDeclaration","src":"8501:13:0"},{"attributes":{"constant":false,"name":"_to","scope":516,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":508,"name":"ElementaryTypeName","src":"8516:7:0"}],"id":509,"name":"VariableDeclaration","src":"8516:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":516,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":510,"name":"ElementaryTypeName","src":"8529:4:0"}],"id":511,"name":"VariableDeclaration","src":"8529:12:0"}],"id":512,"name":"ParameterList","src":"8500:42:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":516,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":513,"name":"ElementaryTypeName","src":"8558:4:0"}],"id":514,"name":"VariableDeclaration","src":"8558:4:0"}],"id":515,"name":"ParameterList","src":"8557:6:0"}],"id":516,"name":"FunctionDefinition","src":"8481:83:0"},{"attributes":{"body":null,"constant":false,"documentation":"@notice Notifies the controller about an approval allowing the\r\n  controller to react if desired\r\n @param _owner The address that calls `approve()`\r\n @param _spender The spender in the `approve()` call\r\n @param _amount The amount in the `approve()` call\r\n @return False if the controller does not authorize the approval\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"onApprove","payable":false,"scope":528,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":527,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":517,"name":"ElementaryTypeName","src":"8955:7:0"}],"id":518,"name":"VariableDeclaration","src":"8955:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":527,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":519,"name":"ElementaryTypeName","src":"8971:7:0"}],"id":520,"name":"VariableDeclaration","src":"8971:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":527,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":521,"name":"ElementaryTypeName","src":"8989:4:0"}],"id":522,"name":"VariableDeclaration","src":"8989:12:0"}],"id":523,"name":"ParameterList","src":"8954:48:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":527,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":524,"name":"ElementaryTypeName","src":"9027:4:0"}],"id":525,"name":"VariableDeclaration","src":"9027:4:0"}],"id":526,"name":"ParameterList","src":"9026:6:0"}],"id":527,"name":"FunctionDefinition","src":"8936:97:0"}],"id":528,"name":"ContractDefinition","src":"7813:1223:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[563],"name":"Controlled","scope":4540},"children":[{"attributes":{"documentation":"@notice The address of the controller is the only address that can call\r\n  a function with this modifier\r","name":"onlyController","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":529,"name":"ParameterList","src":"9212:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":530,"name":"Identifier","src":"9214:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":531,"name":"Identifier","src":"9222:3:0"}],"id":532,"name":"MemberAccess","src":"9222:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":533,"name":"Identifier","src":"9236:10:0"}],"id":534,"name":"BinaryOperation","src":"9222:24:0"}],"id":535,"name":"FunctionCall","src":"9214:33:0"}],"id":536,"name":"ExpressionStatement","src":"9214:33:0"},{"id":537,"name":"PlaceholderStatement","src":"9249:1:0"}],"id":538,"name":"Block","src":"9212:41:0"}],"id":539,"name":"ModifierDefinition","src":"9188:65:0"},{"attributes":{"constant":false,"name":"controller","scope":563,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":540,"name":"ElementaryTypeName","src":"9261:7:0"}],"id":541,"name":"VariableDeclaration","src":"9261:25:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"Controlled","payable":false,"scope":563,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":542,"name":"ParameterList","src":"9314:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":543,"name":"ParameterList","src":"9324:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":544,"name":"Identifier","src":"9326:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":545,"name":"Identifier","src":"9339:3:0"}],"id":546,"name":"MemberAccess","src":"9339:10:0"}],"id":547,"name":"Assignment","src":"9326:23:0"}],"id":548,"name":"ExpressionStatement","src":"9326:23:0"}],"id":549,"name":"Block","src":"9324:27:0"}],"id":550,"name":"FunctionDefinition","src":"9295:56:0"},{"attributes":{"constant":false,"documentation":"@notice Changes the controller of the contract\r\n @param _newController The new controller of the contract\r","implemented":true,"isConstructor":false,"name":"changeController","payable":false,"scope":563,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newController","scope":562,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":551,"name":"ElementaryTypeName","src":"9507:7:0"}],"id":552,"name":"VariableDeclaration","src":"9507:22:0"}],"id":553,"name":"ParameterList","src":"9506:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":556,"name":"ParameterList","src":"9553:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":539,"type":"modifier ()","value":"onlyController"},"id":554,"name":"Identifier","src":"9538:14:0"}],"id":555,"name":"ModifierInvocation","src":"9538:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":557,"name":"Identifier","src":"9564:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":552,"type":"address","value":"_newController"},"id":558,"name":"Identifier","src":"9577:14:0"}],"id":559,"name":"Assignment","src":"9564:27:0"}],"id":560,"name":"ExpressionStatement","src":"9564:27:0"}],"id":561,"name":"Block","src":"9553:46:0"}],"id":562,"name":"FunctionDefinition","src":"9481:118:0"}],"id":563,"name":"ContractDefinition","src":"9040:562:0"},{"attributes":{"contractDependencies":[563],"contractKind":"contract","documentation":"@dev The actual token contract, the default controller is the msg.sender\r\n  that deploys the contract, so usually this token will be deployed by a\r\n  token controller contract, which Giveth will call a \"Campaign\"\r","fullyImplemented":true,"linearizedBaseContracts":[1564,563],"name":"Pinakion","scope":4540},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Controlled","referencedDeclaration":563,"type":"contract Controlled"},"id":564,"name":"UserDefinedTypeName","src":"9851:10:0"}],"id":565,"name":"InheritanceSpecifier","src":"9851:10:0"},{"attributes":{"constant":false,"name":"name","scope":1564,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":566,"name":"ElementaryTypeName","src":"9871:6:0"}],"id":567,"name":"VariableDeclaration","src":"9871:18:0"},{"attributes":{"constant":false,"name":"decimals","scope":1564,"stateVariable":true,"storageLocation":"default","type":"uint8","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":568,"name":"ElementaryTypeName","src":"9952:5:0"}],"id":569,"name":"VariableDeclaration","src":"9952:21:0"},{"attributes":{"constant":false,"name":"symbol","scope":1564,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":570,"name":"ElementaryTypeName","src":"10034:6:0"}],"id":571,"name":"VariableDeclaration","src":"10034:20:0"},{"attributes":{"constant":false,"name":"version","scope":1564,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":572,"name":"ElementaryTypeName","src":"10100:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"4d4d545f302e32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"MMT_0.2\"","value":"MMT_0.2"},"id":573,"name":"Literal","src":"10124:9:0"}],"id":574,"name":"VariableDeclaration","src":"10100:33:0"},{"attributes":{"canonicalName":"Pinakion.Checkpoint","name":"Checkpoint","scope":1564,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"fromBlock","scope":579,"stateVariable":false,"storageLocation":"default","type":"uint128","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint128","type":"uint128"},"id":575,"name":"ElementaryTypeName","src":"10463:7:0"}],"id":576,"name":"VariableDeclaration","src":"10463:17:0"},{"attributes":{"constant":false,"name":"value","scope":579,"stateVariable":false,"storageLocation":"default","type":"uint128","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint128","type":"uint128"},"id":577,"name":"ElementaryTypeName","src":"10564:7:0"}],"id":578,"name":"VariableDeclaration","src":"10564:13:0"}],"id":579,"name":"StructDefinition","src":"10353:232:0"},{"attributes":{"constant":false,"name":"parentToken","scope":1564,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":580,"name":"UserDefinedTypeName","src":"10731:8:0"}],"id":581,"name":"VariableDeclaration","src":"10731:27:0"},{"attributes":{"constant":false,"name":"parentSnapShotBlock","scope":1564,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":582,"name":"ElementaryTypeName","src":"10919:4:0"}],"id":583,"name":"VariableDeclaration","src":"10919:31:0"},{"attributes":{"constant":false,"name":"creationBlock","scope":1564,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":584,"name":"ElementaryTypeName","src":"11036:4:0"}],"id":585,"name":"VariableDeclaration","src":"11036:25:0"},{"attributes":{"constant":false,"name":"balances","scope":1564,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct Pinakion.Checkpoint[])","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => struct Pinakion.Checkpoint[])"},"children":[{"attributes":{"name":"address","type":"address"},"id":586,"name":"ElementaryTypeName","src":"11280:7:0"},{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":579,"type":"struct Pinakion.Checkpoint"},"id":587,"name":"UserDefinedTypeName","src":"11291:10:0"}],"id":588,"name":"ArrayTypeName","src":"11291:12:0"}],"id":589,"name":"Mapping","src":"11271:33:0"}],"id":590,"name":"VariableDeclaration","src":"11271:42:0"},{"attributes":{"constant":false,"name":"allowed","scope":1564,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":591,"name":"ElementaryTypeName","src":"11405:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":592,"name":"ElementaryTypeName","src":"11425:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":593,"name":"ElementaryTypeName","src":"11436:7:0"}],"id":594,"name":"Mapping","src":"11416:28:0"}],"id":595,"name":"Mapping","src":"11396:49:0"}],"id":596,"name":"VariableDeclaration","src":"11396:57:0"},{"attributes":{"constant":false,"name":"totalSupplyHistory","scope":1564,"stateVariable":true,"storageLocation":"default","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":579,"type":"struct Pinakion.Checkpoint"},"id":597,"name":"UserDefinedTypeName","src":"11523:10:0"}],"id":598,"name":"ArrayTypeName","src":"11523:12:0"}],"id":599,"name":"VariableDeclaration","src":"11523:31:0"},{"attributes":{"constant":false,"name":"transfersEnabled","scope":1564,"stateVariable":true,"storageLocation":"default","type":"bool","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":600,"name":"ElementaryTypeName","src":"11629:4:0"}],"id":601,"name":"VariableDeclaration","src":"11629:28:0"},{"attributes":{"constant":false,"name":"tokenFactory","scope":1564,"stateVariable":true,"storageLocation":"default","type":"contract MiniMeTokenFactory","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"MiniMeTokenFactory","referencedDeclaration":1605,"type":"contract MiniMeTokenFactory"},"id":602,"name":"UserDefinedTypeName","src":"11718:18:0"}],"id":603,"name":"VariableDeclaration","src":"11718:38:0"},{"attributes":{"constant":false,"documentation":"/////////////\r\n @notice Constructor to create a Pinakion\r\n @param _tokenFactory The address of the MiniMeTokenFactory contract that\r\n  will create the Clone token contracts, the token factory needs to be\r\n  deployed first\r\n @param _parentToken Address of the parent token, set to 0x0 if it is a\r\n  new token\r\n @param _parentSnapShotBlock Block of the parent token that will\r\n  determine the initial distribution of the clone token, set to 0 if it\r\n  is a new token\r\n @param _tokenName Name of the new token\r\n @param _decimalUnits Number of decimals of the new token\r\n @param _tokenSymbol Token Symbol for the new token\r\n @param _transfersEnabled If true, tokens will be able to be transferred\r","implemented":true,"isConstructor":true,"modifiers":[null],"name":"Pinakion","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_tokenFactory","scope":658,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":604,"name":"ElementaryTypeName","src":"12617:7:0"}],"id":605,"name":"VariableDeclaration","src":"12617:21:0"},{"attributes":{"constant":false,"name":"_parentToken","scope":658,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":606,"name":"ElementaryTypeName","src":"12649:7:0"}],"id":607,"name":"VariableDeclaration","src":"12649:20:0"},{"attributes":{"constant":false,"name":"_parentSnapShotBlock","scope":658,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":608,"name":"ElementaryTypeName","src":"12680:4:0"}],"id":609,"name":"VariableDeclaration","src":"12680:25:0"},{"attributes":{"constant":false,"name":"_tokenName","scope":658,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":610,"name":"ElementaryTypeName","src":"12716:6:0"}],"id":611,"name":"VariableDeclaration","src":"12716:17:0"},{"attributes":{"constant":false,"name":"_decimalUnits","scope":658,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":612,"name":"ElementaryTypeName","src":"12744:5:0"}],"id":613,"name":"VariableDeclaration","src":"12744:19:0"},{"attributes":{"constant":false,"name":"_tokenSymbol","scope":658,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":614,"name":"ElementaryTypeName","src":"12774:6:0"}],"id":615,"name":"VariableDeclaration","src":"12774:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":658,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":616,"name":"ElementaryTypeName","src":"12804:4:0"}],"id":617,"name":"VariableDeclaration","src":"12804:22:0"}],"id":618,"name":"ParameterList","src":"12606:227:0"},{"attributes":{"parameters":[null]},"children":[],"id":619,"name":"ParameterList","src":"12841:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract MiniMeTokenFactory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":603,"type":"contract MiniMeTokenFactory","value":"tokenFactory"},"id":620,"name":"Identifier","src":"12852:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract MiniMeTokenFactory","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"type(contract MiniMeTokenFactory)","value":"MiniMeTokenFactory"},"id":621,"name":"Identifier","src":"12867:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":605,"type":"address","value":"_tokenFactory"},"id":622,"name":"Identifier","src":"12886:13:0"}],"id":623,"name":"FunctionCall","src":"12867:33:0"}],"id":624,"name":"Assignment","src":"12852:48:0"}],"id":625,"name":"ExpressionStatement","src":"12852:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":567,"type":"string storage ref","value":"name"},"id":626,"name":"Identifier","src":"12911:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":611,"type":"string memory","value":"_tokenName"},"id":627,"name":"Identifier","src":"12918:10:0"}],"id":628,"name":"Assignment","src":"12911:17:0"}],"id":629,"name":"ExpressionStatement","src":"12911:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":569,"type":"uint8","value":"decimals"},"id":630,"name":"Identifier","src":"12987:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":613,"type":"uint8","value":"_decimalUnits"},"id":631,"name":"Identifier","src":"12998:13:0"}],"id":632,"name":"Assignment","src":"12987:24:0"}],"id":633,"name":"ExpressionStatement","src":"12987:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":571,"type":"string storage ref","value":"symbol"},"id":634,"name":"Identifier","src":"13067:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":615,"type":"string memory","value":"_tokenSymbol"},"id":635,"name":"Identifier","src":"13076:12:0"}],"id":636,"name":"Assignment","src":"13067:21:0"}],"id":637,"name":"ExpressionStatement","src":"13067:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":581,"type":"contract Pinakion","value":"parentToken"},"id":638,"name":"Identifier","src":"13145:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1564,"type":"type(contract Pinakion)","value":"Pinakion"},"id":639,"name":"Identifier","src":"13159:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":607,"type":"address","value":"_parentToken"},"id":640,"name":"Identifier","src":"13168:12:0"}],"id":641,"name":"FunctionCall","src":"13159:22:0"}],"id":642,"name":"Assignment","src":"13145:36:0"}],"id":643,"name":"ExpressionStatement","src":"13145:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"uint256","value":"parentSnapShotBlock"},"id":644,"name":"Identifier","src":"13192:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":609,"type":"uint256","value":"_parentSnapShotBlock"},"id":645,"name":"Identifier","src":"13214:20:0"}],"id":646,"name":"Assignment","src":"13192:42:0"}],"id":647,"name":"ExpressionStatement","src":"13192:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":601,"type":"bool","value":"transfersEnabled"},"id":648,"name":"Identifier","src":"13245:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":617,"type":"bool","value":"_transfersEnabled"},"id":649,"name":"Identifier","src":"13264:17:0"}],"id":650,"name":"Assignment","src":"13245:36:0"}],"id":651,"name":"ExpressionStatement","src":"13245:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":585,"type":"uint256","value":"creationBlock"},"id":652,"name":"Identifier","src":"13292:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":653,"name":"Identifier","src":"13308:5:0"}],"id":654,"name":"MemberAccess","src":"13308:12:0"}],"id":655,"name":"Assignment","src":"13292:28:0"}],"id":656,"name":"ExpressionStatement","src":"13292:28:0"}],"id":657,"name":"Block","src":"12841:487:0"}],"id":658,"name":"FunctionDefinition","src":"12589:739:0"},{"attributes":{"constant":false,"documentation":"////////////////\r\n @notice Send `_amount` tokens to `_to` from `msg.sender`\r\n @param _to The address of the recipient\r\n @param _amount The amount of tokens to be transferred\r\n @return Whether the transfer was successful or not\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":681,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":659,"name":"ElementaryTypeName","src":"13656:7:0"}],"id":660,"name":"VariableDeclaration","src":"13656:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":681,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":661,"name":"ElementaryTypeName","src":"13669:7:0"}],"id":662,"name":"VariableDeclaration","src":"13669:15:0"}],"id":663,"name":"ParameterList","src":"13655:30:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":681,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":664,"name":"ElementaryTypeName","src":"13702:4:0"}],"id":665,"name":"VariableDeclaration","src":"13702:12:0"}],"id":666,"name":"ParameterList","src":"13701:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":667,"name":"Identifier","src":"13727:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":601,"type":"bool","value":"transfersEnabled"},"id":668,"name":"Identifier","src":"13735:16:0"}],"id":669,"name":"FunctionCall","src":"13727:25:0"}],"id":670,"name":"ExpressionStatement","src":"13727:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":842,"type":"function (address,address,uint256)","value":"doTransfer"},"id":671,"name":"Identifier","src":"13763:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":672,"name":"Identifier","src":"13774:3:0"}],"id":673,"name":"MemberAccess","src":"13774:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":660,"type":"address","value":"_to"},"id":674,"name":"Identifier","src":"13786:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":662,"type":"uint256","value":"_amount"},"id":675,"name":"Identifier","src":"13791:7:0"}],"id":676,"name":"FunctionCall","src":"13763:36:0"}],"id":677,"name":"ExpressionStatement","src":"13763:36:0"},{"attributes":{"functionReturnParameters":666},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":678,"name":"Literal","src":"13817:4:0"}],"id":679,"name":"Return","src":"13810:11:0"}],"id":680,"name":"Block","src":"13716:113:0"}],"id":681,"name":"FunctionDefinition","src":"13638:191:0"},{"attributes":{"constant":false,"documentation":"@notice Send `_amount` tokens to `_to` from `_from` on the condition it\r\n  is approved by `_from`\r\n @param _from The address holding the tokens being transferred\r\n @param _to The address of the recipient\r\n @param _amount The amount of tokens to be transferred\r\n @return True if the transfer was successful\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":731,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":682,"name":"ElementaryTypeName","src":"14209:7:0"}],"id":683,"name":"VariableDeclaration","src":"14209:13:0"},{"attributes":{"constant":false,"name":"_to","scope":731,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":684,"name":"ElementaryTypeName","src":"14224:7:0"}],"id":685,"name":"VariableDeclaration","src":"14224:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":731,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":686,"name":"ElementaryTypeName","src":"14237:7:0"}],"id":687,"name":"VariableDeclaration","src":"14237:15:0"}],"id":688,"name":"ParameterList","src":"14208:51:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":731,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":689,"name":"ElementaryTypeName","src":"14276:4:0"}],"id":690,"name":"VariableDeclaration","src":"14276:12:0"}],"id":691,"name":"ParameterList","src":"14275:14:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":692,"name":"Identifier","src":"14587:3:0"}],"id":693,"name":"MemberAccess","src":"14587:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":694,"name":"Identifier","src":"14601:10:0"}],"id":695,"name":"BinaryOperation","src":"14587:24:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":696,"name":"Identifier","src":"14628:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":601,"type":"bool","value":"transfersEnabled"},"id":697,"name":"Identifier","src":"14636:16:0"}],"id":698,"name":"FunctionCall","src":"14628:25:0"}],"id":699,"name":"ExpressionStatement","src":"14628:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":700,"name":"Identifier","src":"14733:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":596,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":701,"name":"Identifier","src":"14741:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":683,"type":"address","value":"_from"},"id":702,"name":"Identifier","src":"14749:5:0"}],"id":703,"name":"IndexAccess","src":"14741:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":704,"name":"Identifier","src":"14756:3:0"}],"id":705,"name":"MemberAccess","src":"14756:10:0"}],"id":706,"name":"IndexAccess","src":"14741:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":687,"type":"uint256","value":"_amount"},"id":707,"name":"Identifier","src":"14771:7:0"}],"id":708,"name":"BinaryOperation","src":"14741:37:0"}],"id":709,"name":"FunctionCall","src":"14733:46:0"}],"id":710,"name":"ExpressionStatement","src":"14733:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":596,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":711,"name":"Identifier","src":"14794:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":683,"type":"address","value":"_from"},"id":712,"name":"Identifier","src":"14802:5:0"}],"id":715,"name":"IndexAccess","src":"14794:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":713,"name":"Identifier","src":"14809:3:0"}],"id":714,"name":"MemberAccess","src":"14809:10:0"}],"id":716,"name":"IndexAccess","src":"14794:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":687,"type":"uint256","value":"_amount"},"id":717,"name":"Identifier","src":"14824:7:0"}],"id":718,"name":"Assignment","src":"14794:37:0"}],"id":719,"name":"ExpressionStatement","src":"14794:37:0"}],"id":720,"name":"Block","src":"14613:230:0"}],"id":721,"name":"IfStatement","src":"14583:260:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":842,"type":"function (address,address,uint256)","value":"doTransfer"},"id":722,"name":"Identifier","src":"14853:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":683,"type":"address","value":"_from"},"id":723,"name":"Identifier","src":"14864:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":685,"type":"address","value":"_to"},"id":724,"name":"Identifier","src":"14871:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":687,"type":"uint256","value":"_amount"},"id":725,"name":"Identifier","src":"14876:7:0"}],"id":726,"name":"FunctionCall","src":"14853:31:0"}],"id":727,"name":"ExpressionStatement","src":"14853:31:0"},{"attributes":{"functionReturnParameters":691},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":728,"name":"Literal","src":"14902:4:0"}],"id":729,"name":"Return","src":"14895:11:0"}],"id":730,"name":"Block","src":"14290:624:0"}],"id":731,"name":"FunctionDefinition","src":"14187:727:0"},{"attributes":{"constant":false,"documentation":"@dev This is the actual transfer function in the token contract, it can\r\n  only be called by other functions in this contract.\r\n @param _from The address holding the tokens being transferred\r\n @param _to The address of the recipient\r\n @param _amount The amount of tokens to be transferred\r\n @return True if the transfer was successful\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"doTransfer","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":842,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":732,"name":"ElementaryTypeName","src":"15321:7:0"}],"id":733,"name":"VariableDeclaration","src":"15321:13:0"},{"attributes":{"constant":false,"name":"_to","scope":842,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":734,"name":"ElementaryTypeName","src":"15336:7:0"}],"id":735,"name":"VariableDeclaration","src":"15336:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":842,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":736,"name":"ElementaryTypeName","src":"15349:4:0"}],"id":737,"name":"VariableDeclaration","src":"15349:12:0"}],"id":738,"name":"ParameterList","src":"15320:48:0"},{"attributes":{"parameters":[null]},"children":[],"id":739,"name":"ParameterList","src":"15378:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":740,"name":"Identifier","src":"15398:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":741,"name":"Literal","src":"15409:1:0"}],"id":742,"name":"BinaryOperation","src":"15398:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1549,"type":"function (address,address,uint256)","value":"Transfer"},"id":743,"name":"Identifier","src":"15430:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":733,"type":"address","value":"_from"},"id":744,"name":"Identifier","src":"15439:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"address","value":"_to"},"id":745,"name":"Identifier","src":"15446:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":746,"name":"Identifier","src":"15451:7:0"}],"id":747,"name":"FunctionCall","src":"15430:29:0"}],"id":748,"name":"ExpressionStatement","src":"15430:29:0"},{"attributes":{"expression":null,"functionReturnParameters":739},"id":749,"name":"Return","src":"15534:7:0"}],"id":750,"name":"Block","src":"15412:143:0"}],"id":751,"name":"IfStatement","src":"15394:161:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":752,"name":"Identifier","src":"15570:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"uint256","value":"parentSnapShotBlock"},"id":753,"name":"Identifier","src":"15578:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":754,"name":"Identifier","src":"15600:5:0"}],"id":755,"name":"MemberAccess","src":"15600:12:0"}],"id":756,"name":"BinaryOperation","src":"15578:34:0"}],"id":757,"name":"FunctionCall","src":"15570:43:0"}],"id":758,"name":"ExpressionStatement","src":"15570:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":759,"name":"Identifier","src":"15702:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"address","value":"_to"},"id":760,"name":"Identifier","src":"15711:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":761,"name":"Literal","src":"15718:1:0"}],"id":762,"name":"BinaryOperation","src":"15711:8:0"}],"id":763,"name":"TupleExpression","src":"15710:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"address","value":"_to"},"id":764,"name":"Identifier","src":"15725:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":765,"name":"ElementaryTypeNameExpression","src":"15732:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4575,"type":"contract Pinakion","value":"this"},"id":766,"name":"Identifier","src":"15740:4:0"}],"id":767,"name":"FunctionCall","src":"15732:13:0"}],"id":768,"name":"BinaryOperation","src":"15725:20:0"}],"id":769,"name":"TupleExpression","src":"15724:22:0"}],"id":770,"name":"BinaryOperation","src":"15710:36:0"}],"id":771,"name":"FunctionCall","src":"15702:45:0"}],"id":772,"name":"ExpressionStatement","src":"15702:45:0"},{"attributes":{"assignments":[773]},"children":[{"attributes":{"constant":false,"name":"previousBalanceFrom","scope":842,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":773,"name":"VariableDeclaration","src":"15885:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1020,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":774,"name":"Identifier","src":"15911:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":733,"type":"address","value":"_from"},"id":775,"name":"Identifier","src":"15923:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":776,"name":"Identifier","src":"15930:5:0"}],"id":777,"name":"MemberAccess","src":"15930:12:0"}],"id":778,"name":"FunctionCall","src":"15911:32:0"}],"id":779,"name":"VariableDeclarationStatement","src":"15885:58:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":780,"name":"Identifier","src":"15959:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":773,"type":"uint256","value":"previousBalanceFrom"},"id":781,"name":"Identifier","src":"15967:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":782,"name":"Identifier","src":"15990:7:0"}],"id":783,"name":"BinaryOperation","src":"15967:30:0"}],"id":784,"name":"FunctionCall","src":"15959:39:0"}],"id":785,"name":"ExpressionStatement","src":"15959:39:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1445,"type":"function (address) view returns (bool)","value":"isContract"},"id":786,"name":"Identifier","src":"16077:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":787,"name":"Identifier","src":"16088:10:0"}],"id":788,"name":"FunctionCall","src":"16077:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":789,"name":"Identifier","src":"16119:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"onTransfer","referencedDeclaration":516,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":528,"type":"type(contract TokenController)","value":"TokenController"},"id":790,"name":"Identifier","src":"16127:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":791,"name":"Identifier","src":"16143:10:0"}],"id":792,"name":"FunctionCall","src":"16127:27:0"}],"id":793,"name":"MemberAccess","src":"16127:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":733,"type":"address","value":"_from"},"id":794,"name":"Identifier","src":"16166:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"address","value":"_to"},"id":795,"name":"Identifier","src":"16173:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":796,"name":"Identifier","src":"16178:7:0"}],"id":797,"name":"FunctionCall","src":"16127:59:0"}],"id":798,"name":"FunctionCall","src":"16119:68:0"}],"id":799,"name":"ExpressionStatement","src":"16119:68:0"}],"id":800,"name":"Block","src":"16101:101:0"}],"id":801,"name":"IfStatement","src":"16073:129:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1423,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":802,"name":"Identifier","src":"16333:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":803,"name":"Identifier","src":"16350:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":733,"type":"address","value":"_from"},"id":804,"name":"Identifier","src":"16359:5:0"}],"id":805,"name":"IndexAccess","src":"16350:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":773,"type":"uint256","value":"previousBalanceFrom"},"id":806,"name":"Identifier","src":"16367:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":807,"name":"Identifier","src":"16389:7:0"}],"id":808,"name":"BinaryOperation","src":"16367:29:0"}],"id":809,"name":"FunctionCall","src":"16333:64:0"}],"id":810,"name":"ExpressionStatement","src":"16333:64:0"},{"attributes":{"assignments":[811]},"children":[{"attributes":{"constant":false,"name":"previousBalanceTo","scope":842,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":811,"name":"VariableDeclaration","src":"16530:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1020,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":812,"name":"Identifier","src":"16554:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"address","value":"_to"},"id":813,"name":"Identifier","src":"16566:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":814,"name":"Identifier","src":"16571:5:0"}],"id":815,"name":"MemberAccess","src":"16571:12:0"}],"id":816,"name":"FunctionCall","src":"16554:30:0"}],"id":817,"name":"VariableDeclarationStatement","src":"16530:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":818,"name":"Identifier","src":"16598:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":811,"type":"uint256","value":"previousBalanceTo"},"id":819,"name":"Identifier","src":"16606:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":820,"name":"Identifier","src":"16626:7:0"}],"id":821,"name":"BinaryOperation","src":"16606:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":811,"type":"uint256","value":"previousBalanceTo"},"id":822,"name":"Identifier","src":"16637:17:0"}],"id":823,"name":"BinaryOperation","src":"16606:48:0"}],"id":824,"name":"FunctionCall","src":"16598:57:0"}],"id":825,"name":"ExpressionStatement","src":"16598:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1423,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":826,"name":"Identifier","src":"16691:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":827,"name":"Identifier","src":"16708:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"address","value":"_to"},"id":828,"name":"Identifier","src":"16717:3:0"}],"id":829,"name":"IndexAccess","src":"16708:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":811,"type":"uint256","value":"previousBalanceTo"},"id":830,"name":"Identifier","src":"16723:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":831,"name":"Identifier","src":"16743:7:0"}],"id":832,"name":"BinaryOperation","src":"16723:27:0"}],"id":833,"name":"FunctionCall","src":"16691:60:0"}],"id":834,"name":"ExpressionStatement","src":"16691:60:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1549,"type":"function (address,address,uint256)","value":"Transfer"},"id":835,"name":"Identifier","src":"16843:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":733,"type":"address","value":"_from"},"id":836,"name":"Identifier","src":"16852:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"address","value":"_to"},"id":837,"name":"Identifier","src":"16859:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"uint256","value":"_amount"},"id":838,"name":"Identifier","src":"16864:7:0"}],"id":839,"name":"FunctionCall","src":"16843:29:0"}],"id":840,"name":"ExpressionStatement","src":"16843:29:0"}],"id":841,"name":"Block","src":"15378:1504:0"}],"id":842,"name":"FunctionDefinition","src":"15301:1581:0"},{"attributes":{"constant":true,"documentation":"@param _owner The address that's balance is being requested\r\n @return The balance of `_owner` at the current block\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":856,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":843,"name":"ElementaryTypeName","src":"17040:7:0"}],"id":844,"name":"VariableDeclaration","src":"17040:14:0"}],"id":845,"name":"ParameterList","src":"17039:16:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":856,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":846,"name":"ElementaryTypeName","src":"17081:7:0"}],"id":847,"name":"VariableDeclaration","src":"17081:15:0"}],"id":848,"name":"ParameterList","src":"17080:17:0"},{"children":[{"attributes":{"functionReturnParameters":848},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1020,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":849,"name":"Identifier","src":"17116:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":844,"type":"address","value":"_owner"},"id":850,"name":"Identifier","src":"17128:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":851,"name":"Identifier","src":"17136:5:0"}],"id":852,"name":"MemberAccess","src":"17136:12:0"}],"id":853,"name":"FunctionCall","src":"17116:33:0"}],"id":854,"name":"Return","src":"17109:40:0"}],"id":855,"name":"Block","src":"17098:59:0"}],"id":856,"name":"FunctionDefinition","src":"17021:136:0"},{"attributes":{"constant":false,"documentation":"@notice `msg.sender` approves `_spender` to spend `_amount` tokens on\r\n  its behalf. This is the standard version to allow backward compatibility.\r\n @param _spender The address of the account able to transfer the tokens\r\n @param _amount The amount of tokens to be approved for transfer\r\n @return True if the approval was successful\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":905,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":857,"name":"ElementaryTypeName","src":"17551:7:0"}],"id":858,"name":"VariableDeclaration","src":"17551:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":905,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":859,"name":"ElementaryTypeName","src":"17569:7:0"}],"id":860,"name":"VariableDeclaration","src":"17569:15:0"}],"id":861,"name":"ParameterList","src":"17550:35:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":905,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":862,"name":"ElementaryTypeName","src":"17602:4:0"}],"id":863,"name":"VariableDeclaration","src":"17602:12:0"}],"id":864,"name":"ParameterList","src":"17601:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":865,"name":"Identifier","src":"17627:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":601,"type":"bool","value":"transfersEnabled"},"id":866,"name":"Identifier","src":"17635:16:0"}],"id":867,"name":"FunctionCall","src":"17627:25:0"}],"id":868,"name":"ExpressionStatement","src":"17627:25:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1445,"type":"function (address) view returns (bool)","value":"isContract"},"id":869,"name":"Identifier","src":"17738:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":870,"name":"Identifier","src":"17749:10:0"}],"id":871,"name":"FunctionCall","src":"17738:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":872,"name":"Identifier","src":"17777:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"onApprove","referencedDeclaration":527,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":528,"type":"type(contract TokenController)","value":"TokenController"},"id":873,"name":"Identifier","src":"17785:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":874,"name":"Identifier","src":"17801:10:0"}],"id":875,"name":"FunctionCall","src":"17785:27:0"}],"id":876,"name":"MemberAccess","src":"17785:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":877,"name":"Identifier","src":"17823:3:0"}],"id":878,"name":"MemberAccess","src":"17823:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":858,"type":"address","value":"_spender"},"id":879,"name":"Identifier","src":"17835:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":860,"type":"uint256","value":"_amount"},"id":880,"name":"Identifier","src":"17845:7:0"}],"id":881,"name":"FunctionCall","src":"17785:68:0"}],"id":882,"name":"FunctionCall","src":"17777:77:0"}],"id":883,"name":"ExpressionStatement","src":"17777:77:0"}],"id":884,"name":"Block","src":"17762:104:0"}],"id":885,"name":"IfStatement","src":"17734:132:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":596,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":886,"name":"Identifier","src":"17878:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":887,"name":"Identifier","src":"17886:3:0"}],"id":888,"name":"MemberAccess","src":"17886:10:0"}],"id":890,"name":"IndexAccess","src":"17878:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":858,"type":"address","value":"_spender"},"id":889,"name":"Identifier","src":"17898:8:0"}],"id":891,"name":"IndexAccess","src":"17878:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":860,"type":"uint256","value":"_amount"},"id":892,"name":"Identifier","src":"17910:7:0"}],"id":893,"name":"Assignment","src":"17878:39:0"}],"id":894,"name":"ExpressionStatement","src":"17878:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1563,"type":"function (address,address,uint256)","value":"Approval"},"id":895,"name":"Identifier","src":"17928:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":896,"name":"Identifier","src":"17937:3:0"}],"id":897,"name":"MemberAccess","src":"17937:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":858,"type":"address","value":"_spender"},"id":898,"name":"Identifier","src":"17949:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":860,"type":"uint256","value":"_amount"},"id":899,"name":"Identifier","src":"17959:7:0"}],"id":900,"name":"FunctionCall","src":"17928:39:0"}],"id":901,"name":"ExpressionStatement","src":"17928:39:0"},{"attributes":{"functionReturnParameters":864},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":902,"name":"Literal","src":"17985:4:0"}],"id":903,"name":"Return","src":"17978:11:0"}],"id":904,"name":"Block","src":"17616:381:0"}],"id":905,"name":"FunctionDefinition","src":"17534:463:0"},{"attributes":{"constant":true,"documentation":"@dev This function makes it easy to read the `allowed[]` map\r\n @param _owner The address of the account that owns the token\r\n @param _spender The address of the account able to transfer the tokens\r\n @return Amount of remaining tokens of _owner that _spender is allowed\r\n  to spend\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":921,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":906,"name":"ElementaryTypeName","src":"18342:7:0"}],"id":907,"name":"VariableDeclaration","src":"18342:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":921,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":908,"name":"ElementaryTypeName","src":"18358:7:0"}],"id":909,"name":"VariableDeclaration","src":"18358:16:0"}],"id":910,"name":"ParameterList","src":"18341:40:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":921,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":911,"name":"ElementaryTypeName","src":"18407:7:0"}],"id":912,"name":"VariableDeclaration","src":"18407:17:0"}],"id":913,"name":"ParameterList","src":"18406:19:0"},{"children":[{"attributes":{"functionReturnParameters":913},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":596,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":914,"name":"Identifier","src":"18444:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":907,"type":"address","value":"_owner"},"id":915,"name":"Identifier","src":"18452:6:0"}],"id":916,"name":"IndexAccess","src":"18444:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":909,"type":"address","value":"_spender"},"id":917,"name":"Identifier","src":"18460:8:0"}],"id":918,"name":"IndexAccess","src":"18444:25:0"}],"id":919,"name":"Return","src":"18437:32:0"}],"id":920,"name":"Block","src":"18426:51:0"}],"id":921,"name":"FunctionDefinition","src":"18323:154:0"},{"attributes":{"constant":false,"documentation":"@notice `msg.sender` approves `_spender` to send `_amount` tokens on\r\n  its behalf, and then a function is triggered in the contract that is\r\n  being approved, `_spender`. This allows users to use their tokens to\r\n  interact with contracts in one function call instead of two\r\n @param _spender The address of the contract able to transfer the tokens\r\n @param _amount The amount of tokens to be approved for transfer\r\n @return True if the function call was successful\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approveAndCall","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":953,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":922,"name":"ElementaryTypeName","src":"19027:7:0"}],"id":923,"name":"VariableDeclaration","src":"19027:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":953,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":924,"name":"ElementaryTypeName","src":"19045:7:0"}],"id":925,"name":"VariableDeclaration","src":"19045:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":953,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":926,"name":"ElementaryTypeName","src":"19062:5:0"}],"id":927,"name":"VariableDeclaration","src":"19062:16:0"}],"id":928,"name":"ParameterList","src":"19026:59:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":953,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":929,"name":"ElementaryTypeName","src":"19102:4:0"}],"id":930,"name":"VariableDeclaration","src":"19102:12:0"}],"id":931,"name":"ParameterList","src":"19101:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":932,"name":"Identifier","src":"19127:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":905,"type":"function (address,uint256) returns (bool)","value":"approve"},"id":933,"name":"Identifier","src":"19135:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":923,"type":"address","value":"_spender"},"id":934,"name":"Identifier","src":"19143:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":925,"type":"uint256","value":"_amount"},"id":935,"name":"Identifier","src":"19153:7:0"}],"id":936,"name":"FunctionCall","src":"19135:26:0"}],"id":937,"name":"FunctionCall","src":"19127:35:0"}],"id":938,"name":"ExpressionStatement","src":"19127:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"receiveApproval","referencedDeclaration":497,"type":"function (address,uint256,address,bytes memory) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract ApproveAndCallFallBack","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":498,"type":"type(contract ApproveAndCallFallBack)","value":"ApproveAndCallFallBack"},"id":939,"name":"Identifier","src":"19175:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":923,"type":"address","value":"_spender"},"id":940,"name":"Identifier","src":"19198:8:0"}],"id":941,"name":"FunctionCall","src":"19175:32:0"}],"id":942,"name":"MemberAccess","src":"19175:48:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":943,"name":"Identifier","src":"19238:3:0"}],"id":944,"name":"MemberAccess","src":"19238:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":925,"type":"uint256","value":"_amount"},"id":945,"name":"Identifier","src":"19263:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4575,"type":"contract Pinakion","value":"this"},"id":946,"name":"Identifier","src":"19285:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":927,"type":"bytes memory","value":"_extraData"},"id":947,"name":"Identifier","src":"19304:10:0"}],"id":948,"name":"FunctionCall","src":"19175:150:0"}],"id":949,"name":"ExpressionStatement","src":"19175:150:0"},{"attributes":{"functionReturnParameters":931},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":950,"name":"Literal","src":"19345:4:0"}],"id":951,"name":"Return","src":"19338:11:0"}],"id":952,"name":"Block","src":"19116:241:0"}],"id":953,"name":"FunctionDefinition","src":"19003:354:0"},{"attributes":{"constant":true,"documentation":"@dev This function makes it easy to get the total number of tokens\r\n @return The total number of tokens\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":954,"name":"ParameterList","src":"19505:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":964,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":955,"name":"ElementaryTypeName","src":"19533:4:0"}],"id":956,"name":"VariableDeclaration","src":"19533:4:0"}],"id":957,"name":"ParameterList","src":"19532:6:0"},{"children":[{"attributes":{"functionReturnParameters":957},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1067,"type":"function (uint256) view returns (uint256)","value":"totalSupplyAt"},"id":958,"name":"Identifier","src":"19557:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":959,"name":"Identifier","src":"19571:5:0"}],"id":960,"name":"MemberAccess","src":"19571:12:0"}],"id":961,"name":"FunctionCall","src":"19557:27:0"}],"id":962,"name":"Return","src":"19550:34:0"}],"id":963,"name":"Block","src":"19539:53:0"}],"id":964,"name":"FunctionDefinition","src":"19485:107:0"},{"attributes":{"constant":true,"documentation":"/////////////\r\n @dev Queries the balance of `_owner` at a specific `_blockNumber`\r\n @param _owner The address from which the balance will be retrieved\r\n @param _blockNumber The block number when the balance is queried\r\n @return The balance at `_blockNumber`\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOfAt","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":1020,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":965,"name":"ElementaryTypeName","src":"19978:7:0"}],"id":966,"name":"VariableDeclaration","src":"19978:14:0"},{"attributes":{"constant":false,"name":"_blockNumber","scope":1020,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":967,"name":"ElementaryTypeName","src":"19994:4:0"}],"id":968,"name":"VariableDeclaration","src":"19994:17:0"}],"id":969,"name":"ParameterList","src":"19977:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1020,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":970,"name":"ElementaryTypeName","src":"20047:4:0"}],"id":971,"name":"VariableDeclaration","src":"20047:4:0"}],"id":972,"name":"ParameterList","src":"20046:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":973,"name":"Identifier","src":"20403:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":966,"type":"address","value":"_owner"},"id":974,"name":"Identifier","src":"20412:6:0"}],"id":975,"name":"IndexAccess","src":"20403:16:0"}],"id":976,"name":"MemberAccess","src":"20403:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":977,"name":"Literal","src":"20430:1:0"}],"id":978,"name":"BinaryOperation","src":"20403:28:0"}],"id":979,"name":"TupleExpression","src":"20402:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":576,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":980,"name":"Identifier","src":"20450:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":966,"type":"address","value":"_owner"},"id":981,"name":"Identifier","src":"20459:6:0"}],"id":982,"name":"IndexAccess","src":"20450:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":983,"name":"Literal","src":"20467:1:0"}],"id":984,"name":"IndexAccess","src":"20450:19:0"}],"id":985,"name":"MemberAccess","src":"20450:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"uint256","value":"_blockNumber"},"id":986,"name":"Identifier","src":"20482:12:0"}],"id":987,"name":"BinaryOperation","src":"20450:44:0"}],"id":988,"name":"TupleExpression","src":"20449:46:0"}],"id":989,"name":"BinaryOperation","src":"20402:93:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":990,"name":"ElementaryTypeNameExpression","src":"20516:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":581,"type":"contract Pinakion","value":"parentToken"},"id":991,"name":"Identifier","src":"20524:11:0"}],"id":992,"name":"FunctionCall","src":"20516:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":993,"name":"Literal","src":"20540:1:0"}],"id":994,"name":"BinaryOperation","src":"20516:25:0"},{"children":[{"attributes":{"functionReturnParameters":972},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOfAt","referencedDeclaration":1020,"type":"function (address,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":581,"type":"contract Pinakion","value":"parentToken"},"id":995,"name":"Identifier","src":"20569:11:0"}],"id":996,"name":"MemberAccess","src":"20569:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":966,"type":"address","value":"_owner"},"id":997,"name":"Identifier","src":"20593:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1462,"type":"function (uint256,uint256) pure returns (uint256)","value":"min"},"id":998,"name":"Identifier","src":"20601:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"uint256","value":"_blockNumber"},"id":999,"name":"Identifier","src":"20605:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"uint256","value":"parentSnapShotBlock"},"id":1000,"name":"Identifier","src":"20619:19:0"}],"id":1001,"name":"FunctionCall","src":"20601:38:0"}],"id":1002,"name":"FunctionCall","src":"20569:71:0"}],"id":1003,"name":"Return","src":"20562:78:0"}],"id":1004,"name":"Block","src":"20543:113:0"},{"children":[{"attributes":{"functionReturnParameters":972},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1005,"name":"Literal","src":"20722:1:0"}],"id":1006,"name":"Return","src":"20715:8:0"}],"id":1007,"name":"Block","src":"20662:77:0"}],"id":1008,"name":"IfStatement","src":"20512:227:0"}],"id":1009,"name":"Block","src":"20497:330:0"},{"children":[{"attributes":{"functionReturnParameters":972},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1352,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)","value":"getValueAt"},"id":1010,"name":"Identifier","src":"20855:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":1011,"name":"Identifier","src":"20866:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":966,"type":"address","value":"_owner"},"id":1012,"name":"Identifier","src":"20875:6:0"}],"id":1013,"name":"IndexAccess","src":"20866:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":968,"type":"uint256","value":"_blockNumber"},"id":1014,"name":"Identifier","src":"20884:12:0"}],"id":1015,"name":"FunctionCall","src":"20855:42:0"}],"id":1016,"name":"Return","src":"20848:49:0"}],"id":1017,"name":"Block","src":"20833:76:0"}],"id":1018,"name":"IfStatement","src":"20398:511:0"}],"id":1019,"name":"Block","src":"20053:863:0"}],"id":1020,"name":"FunctionDefinition","src":"19957:959:0"},{"attributes":{"constant":true,"documentation":"@notice Total amount of tokens at a specific `_blockNumber`.\r\n @param _blockNumber The block number when the totalSupply is queried\r\n @return The total amount of tokens at `_blockNumber`\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupplyAt","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_blockNumber","scope":1067,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1021,"name":"ElementaryTypeName","src":"21157:4:0"}],"id":1022,"name":"VariableDeclaration","src":"21157:17:0"}],"id":1023,"name":"ParameterList","src":"21156:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1067,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1024,"name":"ElementaryTypeName","src":"21200:4:0"}],"id":1025,"name":"VariableDeclaration","src":"21200:4:0"}],"id":1026,"name":"ParameterList","src":"21199:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":599,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1027,"name":"Identifier","src":"21580:18:0"}],"id":1028,"name":"MemberAccess","src":"21580:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1029,"name":"Literal","src":"21609:1:0"}],"id":1030,"name":"BinaryOperation","src":"21580:30:0"}],"id":1031,"name":"TupleExpression","src":"21579:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":576,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":599,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1032,"name":"Identifier","src":"21629:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1033,"name":"Literal","src":"21648:1:0"}],"id":1034,"name":"IndexAccess","src":"21629:21:0"}],"id":1035,"name":"MemberAccess","src":"21629:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1022,"type":"uint256","value":"_blockNumber"},"id":1036,"name":"Identifier","src":"21663:12:0"}],"id":1037,"name":"BinaryOperation","src":"21629:46:0"}],"id":1038,"name":"TupleExpression","src":"21628:48:0"}],"id":1039,"name":"BinaryOperation","src":"21579:97:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1040,"name":"ElementaryTypeNameExpression","src":"21697:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":581,"type":"contract Pinakion","value":"parentToken"},"id":1041,"name":"Identifier","src":"21705:11:0"}],"id":1042,"name":"FunctionCall","src":"21697:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1043,"name":"Literal","src":"21721:1:0"}],"id":1044,"name":"BinaryOperation","src":"21697:25:0"},{"children":[{"attributes":{"functionReturnParameters":1026},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"totalSupplyAt","referencedDeclaration":1067,"type":"function (uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":581,"type":"contract Pinakion","value":"parentToken"},"id":1045,"name":"Identifier","src":"21750:11:0"}],"id":1046,"name":"MemberAccess","src":"21750:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1462,"type":"function (uint256,uint256) pure returns (uint256)","value":"min"},"id":1047,"name":"Identifier","src":"21776:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1022,"type":"uint256","value":"_blockNumber"},"id":1048,"name":"Identifier","src":"21780:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":583,"type":"uint256","value":"parentSnapShotBlock"},"id":1049,"name":"Identifier","src":"21794:19:0"}],"id":1050,"name":"FunctionCall","src":"21776:38:0"}],"id":1051,"name":"FunctionCall","src":"21750:65:0"}],"id":1052,"name":"Return","src":"21743:72:0"}],"id":1053,"name":"Block","src":"21724:107:0"},{"children":[{"attributes":{"functionReturnParameters":1026},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1054,"name":"Literal","src":"21863:1:0"}],"id":1055,"name":"Return","src":"21856:8:0"}],"id":1056,"name":"Block","src":"21837:43:0"}],"id":1057,"name":"IfStatement","src":"21693:187:0"}],"id":1058,"name":"Block","src":"21678:294:0"},{"children":[{"attributes":{"functionReturnParameters":1026},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1352,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)","value":"getValueAt"},"id":1059,"name":"Identifier","src":"22000:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":599,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1060,"name":"Identifier","src":"22011:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1022,"type":"uint256","value":"_blockNumber"},"id":1061,"name":"Identifier","src":"22031:12:0"}],"id":1062,"name":"FunctionCall","src":"22000:44:0"}],"id":1063,"name":"Return","src":"21993:51:0"}],"id":1064,"name":"Block","src":"21978:78:0"}],"id":1065,"name":"IfStatement","src":"21575:481:0"}],"id":1066,"name":"Block","src":"21206:857:0"}],"id":1067,"name":"FunctionDefinition","src":"21134:929:0"},{"attributes":{"constant":false,"documentation":"/////////////\r\n @notice Creates a new clone token with the initial distribution being\r\n  this token at `_snapshotBlock`\r\n @param _cloneTokenName Name of the clone token\r\n @param _cloneDecimalUnits Number of decimals of the smallest unit\r\n @param _cloneTokenSymbol Symbol of the clone token\r\n @param _snapshotBlock Block when the distribution of the parent token is\r\n  copied to set the initial distribution of the new clone token;\r\n  if the block is zero than the actual block, the current block is used\r\n @param _transfersEnabled True if transfers are allowed in the clone\r\n @return The address of the new MiniMeToken Contract\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createCloneToken","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_cloneTokenName","scope":1122,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1068,"name":"ElementaryTypeName","src":"22852:6:0"}],"id":1069,"name":"VariableDeclaration","src":"22852:22:0"},{"attributes":{"constant":false,"name":"_cloneDecimalUnits","scope":1122,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1070,"name":"ElementaryTypeName","src":"22885:5:0"}],"id":1071,"name":"VariableDeclaration","src":"22885:24:0"},{"attributes":{"constant":false,"name":"_cloneTokenSymbol","scope":1122,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1072,"name":"ElementaryTypeName","src":"22920:6:0"}],"id":1073,"name":"VariableDeclaration","src":"22920:24:0"},{"attributes":{"constant":false,"name":"_snapshotBlock","scope":1122,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1074,"name":"ElementaryTypeName","src":"22955:4:0"}],"id":1075,"name":"VariableDeclaration","src":"22955:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":1122,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1076,"name":"ElementaryTypeName","src":"22985:4:0"}],"id":1077,"name":"VariableDeclaration","src":"22985:22:0"}],"id":1078,"name":"ParameterList","src":"22841:177:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1122,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1079,"name":"ElementaryTypeName","src":"23034:7:0"}],"id":1080,"name":"VariableDeclaration","src":"23034:7:0"}],"id":1081,"name":"ParameterList","src":"23033:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1075,"type":"uint256","value":"_snapshotBlock"},"id":1082,"name":"Identifier","src":"23058:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1083,"name":"Literal","src":"23076:1:0"}],"id":1084,"name":"BinaryOperation","src":"23058:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1075,"type":"uint256","value":"_snapshotBlock"},"id":1085,"name":"Identifier","src":"23079:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":1086,"name":"Identifier","src":"23096:5:0"}],"id":1087,"name":"MemberAccess","src":"23096:12:0"}],"id":1088,"name":"Assignment","src":"23079:29:0"}],"id":1089,"name":"ExpressionStatement","src":"23079:29:0"}],"id":1090,"name":"IfStatement","src":"23054:54:0"},{"attributes":{"assignments":[1092]},"children":[{"attributes":{"constant":false,"name":"cloneToken","scope":1122,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":1091,"name":"UserDefinedTypeName","src":"23119:8:0"}],"id":1092,"name":"VariableDeclaration","src":"23119:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"createCloneToken","referencedDeclaration":1604,"type":"function (address,uint256,string memory,uint8,string memory,bool) external returns (contract Pinakion)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":603,"type":"contract MiniMeTokenFactory","value":"tokenFactory"},"id":1093,"name":"Identifier","src":"23141:12:0"}],"id":1094,"name":"MemberAccess","src":"23141:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4575,"type":"contract Pinakion","value":"this"},"id":1095,"name":"Identifier","src":"23185:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1075,"type":"uint256","value":"_snapshotBlock"},"id":1096,"name":"Identifier","src":"23204:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1069,"type":"string memory","value":"_cloneTokenName"},"id":1097,"name":"Identifier","src":"23233:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1071,"type":"uint8","value":"_cloneDecimalUnits"},"id":1098,"name":"Identifier","src":"23263:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1073,"type":"string memory","value":"_cloneTokenSymbol"},"id":1099,"name":"Identifier","src":"23296:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1077,"type":"bool","value":"_transfersEnabled"},"id":1100,"name":"Identifier","src":"23328:17:0"}],"id":1101,"name":"FunctionCall","src":"23141:219:0"}],"id":1102,"name":"VariableDeclarationStatement","src":"23119:241:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"changeController","referencedDeclaration":562,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1092,"type":"contract Pinakion","value":"cloneToken"},"id":1103,"name":"Identifier","src":"23373:10:0"}],"id":1105,"name":"MemberAccess","src":"23373:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1106,"name":"Identifier","src":"23401:3:0"}],"id":1107,"name":"MemberAccess","src":"23401:10:0"}],"id":1108,"name":"FunctionCall","src":"23373:39:0"}],"id":1109,"name":"ExpressionStatement","src":"23373:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1555,"type":"function (address,uint256)","value":"NewCloneToken"},"id":1110,"name":"Identifier","src":"23495:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1111,"name":"ElementaryTypeNameExpression","src":"23509:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1092,"type":"contract Pinakion","value":"cloneToken"},"id":1112,"name":"Identifier","src":"23517:10:0"}],"id":1113,"name":"FunctionCall","src":"23509:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1075,"type":"uint256","value":"_snapshotBlock"},"id":1114,"name":"Identifier","src":"23530:14:0"}],"id":1115,"name":"FunctionCall","src":"23495:50:0"}],"id":1116,"name":"ExpressionStatement","src":"23495:50:0"},{"attributes":{"functionReturnParameters":1081},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1117,"name":"ElementaryTypeNameExpression","src":"23563:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1092,"type":"contract Pinakion","value":"cloneToken"},"id":1118,"name":"Identifier","src":"23571:10:0"}],"id":1119,"name":"FunctionCall","src":"23563:19:0"}],"id":1120,"name":"Return","src":"23556:26:0"}],"id":1121,"name":"Block","src":"23043:547:0"}],"id":1122,"name":"FunctionDefinition","src":"22816:774:0"},{"attributes":{"constant":false,"documentation":"/////////////\r\n @notice Generates `_amount` tokens that are assigned to `_owner`\r\n @param _owner The address that will be assigned the new tokens\r\n @param _amount The quantity of tokens generated\r\n @return True if the tokens are generated correctly\r","implemented":true,"isConstructor":false,"name":"generateTokens","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":1185,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1123,"name":"ElementaryTypeName","src":"23955:7:0"}],"id":1124,"name":"VariableDeclaration","src":"23955:14:0"},{"attributes":{"constant":false,"name":"_amount","scope":1185,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1125,"name":"ElementaryTypeName","src":"23971:4:0"}],"id":1126,"name":"VariableDeclaration","src":"23971:12:0"}],"id":1127,"name":"ParameterList","src":"23954:36:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1185,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1130,"name":"ElementaryTypeName","src":"24022:4:0"}],"id":1131,"name":"VariableDeclaration","src":"24022:4:0"}],"id":1132,"name":"ParameterList","src":"24021:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":539,"type":"modifier ()","value":"onlyController"},"id":1128,"name":"Identifier","src":"23998:14:0"}],"id":1129,"name":"ModifierInvocation","src":"23998:14:0"},{"children":[{"attributes":{"assignments":[1134]},"children":[{"attributes":{"constant":false,"name":"curTotalSupply","scope":1185,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1133,"name":"ElementaryTypeName","src":"24039:4:0"}],"id":1134,"name":"VariableDeclaration","src":"24039:19:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":964,"type":"function () view returns (uint256)","value":"totalSupply"},"id":1135,"name":"Identifier","src":"24061:11:0"}],"id":1136,"name":"FunctionCall","src":"24061:13:0"}],"id":1137,"name":"VariableDeclarationStatement","src":"24039:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1138,"name":"Identifier","src":"24085:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1134,"type":"uint256","value":"curTotalSupply"},"id":1139,"name":"Identifier","src":"24093:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1126,"type":"uint256","value":"_amount"},"id":1140,"name":"Identifier","src":"24110:7:0"}],"id":1141,"name":"BinaryOperation","src":"24093:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1134,"type":"uint256","value":"curTotalSupply"},"id":1142,"name":"Identifier","src":"24121:14:0"}],"id":1143,"name":"BinaryOperation","src":"24093:42:0"}],"id":1144,"name":"FunctionCall","src":"24085:51:0"}],"id":1145,"name":"ExpressionStatement","src":"24085:51:0"},{"attributes":{"assignments":[1147]},"children":[{"attributes":{"constant":false,"name":"previousBalanceTo","scope":1185,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1146,"name":"ElementaryTypeName","src":"24169:4:0"}],"id":1147,"name":"VariableDeclaration","src":"24169:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":856,"type":"function (address) view returns (uint256)","value":"balanceOf"},"id":1148,"name":"Identifier","src":"24194:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1124,"type":"address","value":"_owner"},"id":1149,"name":"Identifier","src":"24204:6:0"}],"id":1150,"name":"FunctionCall","src":"24194:17:0"}],"id":1151,"name":"VariableDeclarationStatement","src":"24169:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1152,"name":"Identifier","src":"24222:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"uint256","value":"previousBalanceTo"},"id":1153,"name":"Identifier","src":"24230:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1126,"type":"uint256","value":"_amount"},"id":1154,"name":"Identifier","src":"24250:7:0"}],"id":1155,"name":"BinaryOperation","src":"24230:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"uint256","value":"previousBalanceTo"},"id":1156,"name":"Identifier","src":"24261:17:0"}],"id":1157,"name":"BinaryOperation","src":"24230:48:0"}],"id":1158,"name":"FunctionCall","src":"24222:57:0"}],"id":1159,"name":"ExpressionStatement","src":"24222:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1423,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1160,"name":"Identifier","src":"24312:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":599,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1161,"name":"Identifier","src":"24329:18:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1134,"type":"uint256","value":"curTotalSupply"},"id":1162,"name":"Identifier","src":"24349:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1126,"type":"uint256","value":"_amount"},"id":1163,"name":"Identifier","src":"24366:7:0"}],"id":1164,"name":"BinaryOperation","src":"24349:24:0"}],"id":1165,"name":"FunctionCall","src":"24312:62:0"}],"id":1166,"name":"ExpressionStatement","src":"24312:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1423,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1167,"name":"Identifier","src":"24385:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":1168,"name":"Identifier","src":"24402:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1124,"type":"address","value":"_owner"},"id":1169,"name":"Identifier","src":"24411:6:0"}],"id":1170,"name":"IndexAccess","src":"24402:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"uint256","value":"previousBalanceTo"},"id":1171,"name":"Identifier","src":"24420:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1126,"type":"uint256","value":"_amount"},"id":1172,"name":"Identifier","src":"24440:7:0"}],"id":1173,"name":"BinaryOperation","src":"24420:27:0"}],"id":1174,"name":"FunctionCall","src":"24385:63:0"}],"id":1175,"name":"ExpressionStatement","src":"24385:63:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1549,"type":"function (address,address,uint256)","value":"Transfer"},"id":1176,"name":"Identifier","src":"24459:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1177,"name":"Literal","src":"24468:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1124,"type":"address","value":"_owner"},"id":1178,"name":"Identifier","src":"24471:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1126,"type":"uint256","value":"_amount"},"id":1179,"name":"Identifier","src":"24479:7:0"}],"id":1180,"name":"FunctionCall","src":"24459:28:0"}],"id":1181,"name":"ExpressionStatement","src":"24459:28:0"},{"attributes":{"functionReturnParameters":1132},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1182,"name":"Literal","src":"24505:4:0"}],"id":1183,"name":"Return","src":"24498:11:0"}],"id":1184,"name":"Block","src":"24028:489:0"}],"id":1185,"name":"FunctionDefinition","src":"23931:586:0"},{"attributes":{"constant":false,"documentation":"@notice Burns `_amount` tokens from `_owner`\r\n @param _owner The address that will lose the tokens\r\n @param _amount The quantity of tokens to burn\r\n @return True if the tokens are burned correctly\r","implemented":true,"isConstructor":false,"name":"destroyTokens","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":1244,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1186,"name":"ElementaryTypeName","src":"24777:7:0"}],"id":1187,"name":"VariableDeclaration","src":"24777:14:0"},{"attributes":{"constant":false,"name":"_amount","scope":1244,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1188,"name":"ElementaryTypeName","src":"24793:4:0"}],"id":1189,"name":"VariableDeclaration","src":"24793:12:0"}],"id":1190,"name":"ParameterList","src":"24776:36:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1244,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1193,"name":"ElementaryTypeName","src":"24844:4:0"}],"id":1194,"name":"VariableDeclaration","src":"24844:4:0"}],"id":1195,"name":"ParameterList","src":"24843:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":539,"type":"modifier ()","value":"onlyController"},"id":1191,"name":"Identifier","src":"24813:14:0"}],"id":1192,"name":"ModifierInvocation","src":"24813:14:0"},{"children":[{"attributes":{"assignments":[1197]},"children":[{"attributes":{"constant":false,"name":"curTotalSupply","scope":1244,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1196,"name":"ElementaryTypeName","src":"24861:4:0"}],"id":1197,"name":"VariableDeclaration","src":"24861:19:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":964,"type":"function () view returns (uint256)","value":"totalSupply"},"id":1198,"name":"Identifier","src":"24883:11:0"}],"id":1199,"name":"FunctionCall","src":"24883:13:0"}],"id":1200,"name":"VariableDeclarationStatement","src":"24861:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1201,"name":"Identifier","src":"24907:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1197,"type":"uint256","value":"curTotalSupply"},"id":1202,"name":"Identifier","src":"24915:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1189,"type":"uint256","value":"_amount"},"id":1203,"name":"Identifier","src":"24933:7:0"}],"id":1204,"name":"BinaryOperation","src":"24915:25:0"}],"id":1205,"name":"FunctionCall","src":"24907:34:0"}],"id":1206,"name":"ExpressionStatement","src":"24907:34:0"},{"attributes":{"assignments":[1208]},"children":[{"attributes":{"constant":false,"name":"previousBalanceFrom","scope":1244,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1207,"name":"ElementaryTypeName","src":"24952:4:0"}],"id":1208,"name":"VariableDeclaration","src":"24952:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":856,"type":"function (address) view returns (uint256)","value":"balanceOf"},"id":1209,"name":"Identifier","src":"24979:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1187,"type":"address","value":"_owner"},"id":1210,"name":"Identifier","src":"24989:6:0"}],"id":1211,"name":"FunctionCall","src":"24979:17:0"}],"id":1212,"name":"VariableDeclarationStatement","src":"24952:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1213,"name":"Identifier","src":"25007:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1208,"type":"uint256","value":"previousBalanceFrom"},"id":1214,"name":"Identifier","src":"25015:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1189,"type":"uint256","value":"_amount"},"id":1215,"name":"Identifier","src":"25038:7:0"}],"id":1216,"name":"BinaryOperation","src":"25015:30:0"}],"id":1217,"name":"FunctionCall","src":"25007:39:0"}],"id":1218,"name":"ExpressionStatement","src":"25007:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1423,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1219,"name":"Identifier","src":"25057:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":599,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":1220,"name":"Identifier","src":"25074:18:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1197,"type":"uint256","value":"curTotalSupply"},"id":1221,"name":"Identifier","src":"25094:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1189,"type":"uint256","value":"_amount"},"id":1222,"name":"Identifier","src":"25111:7:0"}],"id":1223,"name":"BinaryOperation","src":"25094:24:0"}],"id":1224,"name":"FunctionCall","src":"25057:62:0"}],"id":1225,"name":"ExpressionStatement","src":"25057:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$579_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1423,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":1226,"name":"Identifier","src":"25130:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":1227,"name":"Identifier","src":"25147:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1187,"type":"address","value":"_owner"},"id":1228,"name":"Identifier","src":"25156:6:0"}],"id":1229,"name":"IndexAccess","src":"25147:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1208,"type":"uint256","value":"previousBalanceFrom"},"id":1230,"name":"Identifier","src":"25165:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1189,"type":"uint256","value":"_amount"},"id":1231,"name":"Identifier","src":"25187:7:0"}],"id":1232,"name":"BinaryOperation","src":"25165:29:0"}],"id":1233,"name":"FunctionCall","src":"25130:65:0"}],"id":1234,"name":"ExpressionStatement","src":"25130:65:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1549,"type":"function (address,address,uint256)","value":"Transfer"},"id":1235,"name":"Identifier","src":"25206:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1187,"type":"address","value":"_owner"},"id":1236,"name":"Identifier","src":"25215:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1237,"name":"Literal","src":"25223:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1189,"type":"uint256","value":"_amount"},"id":1238,"name":"Identifier","src":"25226:7:0"}],"id":1239,"name":"FunctionCall","src":"25206:28:0"}],"id":1240,"name":"ExpressionStatement","src":"25206:28:0"},{"attributes":{"functionReturnParameters":1195},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1241,"name":"Literal","src":"25252:4:0"}],"id":1242,"name":"Return","src":"25245:11:0"}],"id":1243,"name":"Block","src":"24850:414:0"}],"id":1244,"name":"FunctionDefinition","src":"24754:510:0"},{"attributes":{"constant":false,"documentation":"/////////////\r\n @notice Enables token holders to transfer their tokens freely if true\r\n @param _transfersEnabled True if transfers are allowed in the clone\r","implemented":true,"isConstructor":false,"name":"enableTransfers","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_transfersEnabled","scope":1256,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1245,"name":"ElementaryTypeName","src":"25521:4:0"}],"id":1246,"name":"VariableDeclaration","src":"25521:22:0"}],"id":1247,"name":"ParameterList","src":"25520:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":1250,"name":"ParameterList","src":"25567:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":539,"type":"modifier ()","value":"onlyController"},"id":1248,"name":"Identifier","src":"25552:14:0"}],"id":1249,"name":"ModifierInvocation","src":"25552:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":601,"type":"bool","value":"transfersEnabled"},"id":1251,"name":"Identifier","src":"25578:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1246,"type":"bool","value":"_transfersEnabled"},"id":1252,"name":"Identifier","src":"25597:17:0"}],"id":1253,"name":"Assignment","src":"25578:36:0"}],"id":1254,"name":"ExpressionStatement","src":"25578:36:0"}],"id":1255,"name":"Block","src":"25567:55:0"}],"id":1256,"name":"FunctionDefinition","src":"25496:126:0"},{"attributes":{"constant":true,"documentation":"/////////////\r\n @dev `getValueAt` retrieves the number of tokens at a given block number\r\n @param checkpoints The history of values being queried\r\n @param _block The block number to retrieve the value at\r\n @return The number of tokens being queried\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getValueAt","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"checkpoints","scope":1352,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":579,"type":"struct Pinakion.Checkpoint"},"id":1257,"name":"UserDefinedTypeName","src":"26026:10:0"}],"id":1258,"name":"ArrayTypeName","src":"26026:12:0"}],"id":1259,"name":"VariableDeclaration","src":"26026:32:0"},{"attributes":{"constant":false,"name":"_block","scope":1352,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1260,"name":"ElementaryTypeName","src":"26060:4:0"}],"id":1261,"name":"VariableDeclaration","src":"26060:11:0"}],"id":1262,"name":"ParameterList","src":"26025:53:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1352,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1263,"name":"ElementaryTypeName","src":"26106:4:0"}],"id":1264,"name":"VariableDeclaration","src":"26106:4:0"}],"id":1265,"name":"ParameterList","src":"26105:6:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1266,"name":"Identifier","src":"26127:11:0"}],"id":1267,"name":"MemberAccess","src":"26127:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1268,"name":"Literal","src":"26149:1:0"}],"id":1269,"name":"BinaryOperation","src":"26127:23:0"},{"attributes":{"functionReturnParameters":1265},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1270,"name":"Literal","src":"26159:1:0"}],"id":1271,"name":"Return","src":"26152:8:0"}],"id":1272,"name":"IfStatement","src":"26123:37:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1261,"type":"uint256","value":"_block"},"id":1273,"name":"Identifier","src":"26219:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":576,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1274,"name":"Identifier","src":"26229:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1275,"name":"Identifier","src":"26241:11:0"}],"id":1276,"name":"MemberAccess","src":"26241:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1277,"name":"Literal","src":"26260:1:0"}],"id":1278,"name":"BinaryOperation","src":"26241:20:0"}],"id":1279,"name":"IndexAccess","src":"26229:33:0"}],"id":1280,"name":"MemberAccess","src":"26229:43:0"}],"id":1281,"name":"BinaryOperation","src":"26219:53:0"},{"attributes":{"functionReturnParameters":1265},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":578,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1282,"name":"Identifier","src":"26294:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1283,"name":"Identifier","src":"26306:11:0"}],"id":1284,"name":"MemberAccess","src":"26306:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1285,"name":"Literal","src":"26325:1:0"}],"id":1286,"name":"BinaryOperation","src":"26306:20:0"}],"id":1287,"name":"IndexAccess","src":"26294:33:0"}],"id":1288,"name":"MemberAccess","src":"26294:39:0"}],"id":1289,"name":"Return","src":"26287:46:0"}],"id":1290,"name":"IfStatement","src":"26215:118:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1261,"type":"uint256","value":"_block"},"id":1291,"name":"Identifier","src":"26348:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":576,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1292,"name":"Identifier","src":"26357:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1293,"name":"Literal","src":"26369:1:0"}],"id":1294,"name":"IndexAccess","src":"26357:14:0"}],"id":1295,"name":"MemberAccess","src":"26357:24:0"}],"id":1296,"name":"BinaryOperation","src":"26348:33:0"},{"attributes":{"functionReturnParameters":1265},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1297,"name":"Literal","src":"26390:1:0"}],"id":1298,"name":"Return","src":"26383:8:0"}],"id":1299,"name":"IfStatement","src":"26344:47:0"},{"attributes":{"assignments":[1301]},"children":[{"attributes":{"constant":false,"name":"min","scope":1352,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1300,"name":"ElementaryTypeName","src":"26456:4:0"}],"id":1301,"name":"VariableDeclaration","src":"26456:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1302,"name":"Literal","src":"26467:1:0"}],"id":1303,"name":"VariableDeclarationStatement","src":"26456:12:0"},{"attributes":{"assignments":[1305]},"children":[{"attributes":{"constant":false,"name":"max","scope":1352,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1304,"name":"ElementaryTypeName","src":"26479:4:0"}],"id":1305,"name":"VariableDeclaration","src":"26479:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1306,"name":"Identifier","src":"26490:11:0"}],"id":1307,"name":"MemberAccess","src":"26490:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1308,"name":"Literal","src":"26509:1:0"}],"id":1309,"name":"BinaryOperation","src":"26490:20:0"}],"id":1310,"name":"VariableDeclarationStatement","src":"26479:31:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1305,"type":"uint256","value":"max"},"id":1311,"name":"Identifier","src":"26528:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1301,"type":"uint256","value":"min"},"id":1312,"name":"Identifier","src":"26534:3:0"}],"id":1313,"name":"BinaryOperation","src":"26528:9:0"},{"children":[{"attributes":{"assignments":[1315]},"children":[{"attributes":{"constant":false,"name":"mid","scope":1352,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1314,"name":"ElementaryTypeName","src":"26554:4:0"}],"id":1315,"name":"VariableDeclaration","src":"26554:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1305,"type":"uint256","value":"max"},"id":1316,"name":"Identifier","src":"26566:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1301,"type":"uint256","value":"min"},"id":1317,"name":"Identifier","src":"26572:3:0"}],"id":1318,"name":"BinaryOperation","src":"26566:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1319,"name":"Literal","src":"26578:1:0"}],"id":1320,"name":"BinaryOperation","src":"26566:13:0"}],"id":1321,"name":"TupleExpression","src":"26565:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1322,"name":"Literal","src":"26582:1:0"}],"id":1323,"name":"BinaryOperation","src":"26565:18:0"}],"id":1324,"name":"VariableDeclarationStatement","src":"26554:29:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":576,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1325,"name":"Identifier","src":"26602:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1315,"type":"uint256","value":"mid"},"id":1326,"name":"Identifier","src":"26614:3:0"}],"id":1327,"name":"IndexAccess","src":"26602:16:0"}],"id":1328,"name":"MemberAccess","src":"26602:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1261,"type":"uint256","value":"_block"},"id":1329,"name":"Identifier","src":"26630:6:0"}],"id":1330,"name":"BinaryOperation","src":"26602:34:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1301,"type":"uint256","value":"min"},"id":1331,"name":"Identifier","src":"26657:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1315,"type":"uint256","value":"mid"},"id":1332,"name":"Identifier","src":"26663:3:0"}],"id":1333,"name":"Assignment","src":"26657:9:0"}],"id":1334,"name":"ExpressionStatement","src":"26657:9:0"}],"id":1335,"name":"Block","src":"26638:44:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1305,"type":"uint256","value":"max"},"id":1336,"name":"Identifier","src":"26707:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1315,"type":"uint256","value":"mid"},"id":1337,"name":"Identifier","src":"26713:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1338,"name":"Literal","src":"26717:1:0"}],"id":1339,"name":"BinaryOperation","src":"26713:5:0"}],"id":1340,"name":"Assignment","src":"26707:11:0"}],"id":1341,"name":"ExpressionStatement","src":"26707:11:0"}],"id":1342,"name":"Block","src":"26688:46:0"}],"id":1343,"name":"IfStatement","src":"26598:136:0"}],"id":1344,"name":"Block","src":"26539:206:0"}],"id":1345,"name":"WhileStatement","src":"26521:224:0"},{"attributes":{"functionReturnParameters":1265},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":578,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1259,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1346,"name":"Identifier","src":"26762:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1301,"type":"uint256","value":"min"},"id":1347,"name":"Identifier","src":"26774:3:0"}],"id":1348,"name":"IndexAccess","src":"26762:16:0"}],"id":1349,"name":"MemberAccess","src":"26762:22:0"}],"id":1350,"name":"Return","src":"26755:29:0"}],"id":1351,"name":"Block","src":"26112:680:0"}],"id":1352,"name":"FunctionDefinition","src":"26006:786:0"},{"attributes":{"constant":false,"documentation":"@dev `updateValueAtNow` used to update the `balances` map and the\r\n  `totalSupplyHistory`\r\n @param checkpoints The history of data being updated\r\n @param _value The new number of tokens\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"updateValueAtNow","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"checkpoints","scope":1423,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":579,"type":"struct Pinakion.Checkpoint"},"id":1353,"name":"UserDefinedTypeName","src":"27042:10:0"}],"id":1354,"name":"ArrayTypeName","src":"27042:12:0"}],"id":1355,"name":"VariableDeclaration","src":"27042:32:0"},{"attributes":{"constant":false,"name":"_value","scope":1423,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1356,"name":"ElementaryTypeName","src":"27076:4:0"}],"id":1357,"name":"VariableDeclaration","src":"27076:11:0"}],"id":1358,"name":"ParameterList","src":"27041:53:0"},{"attributes":{"parameters":[null]},"children":[],"id":1359,"name":"ParameterList","src":"27105:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1360,"name":"Identifier","src":"27121:11:0"}],"id":1361,"name":"MemberAccess","src":"27121:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1362,"name":"Literal","src":"27143:1:0"}],"id":1363,"name":"BinaryOperation","src":"27121:23:0"}],"id":1364,"name":"TupleExpression","src":"27120:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":576,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1365,"name":"Identifier","src":"27159:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1366,"name":"Identifier","src":"27171:11:0"}],"id":1367,"name":"MemberAccess","src":"27171:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1368,"name":"Literal","src":"27191:1:0"}],"id":1369,"name":"BinaryOperation","src":"27171:21:0"}],"id":1370,"name":"IndexAccess","src":"27159:34:0"}],"id":1371,"name":"MemberAccess","src":"27159:44:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":1372,"name":"Identifier","src":"27206:5:0"}],"id":1373,"name":"MemberAccess","src":"27206:12:0"}],"id":1374,"name":"BinaryOperation","src":"27159:59:0"}],"id":1375,"name":"TupleExpression","src":"27158:61:0"}],"id":1376,"name":"BinaryOperation","src":"27120:99:0"},{"children":[{"attributes":{"assignments":[1378]},"children":[{"attributes":{"constant":false,"name":"newCheckPoint","scope":1423,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":579,"type":"struct Pinakion.Checkpoint"},"id":1377,"name":"UserDefinedTypeName","src":"27239:10:0"}],"id":1378,"name":"VariableDeclaration","src":"27239:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1379,"name":"Identifier","src":"27274:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1380,"name":"Identifier","src":"27287:11:0"}],"id":1381,"name":"MemberAccess","src":"27287:18:0"}],"id":1382,"name":"UnaryOperation","src":"27287:20:0"}],"id":1383,"name":"IndexAccess","src":"27274:35:0"}],"id":1384,"name":"VariableDeclarationStatement","src":"27239:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"fromBlock","referencedDeclaration":576,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1378,"type":"struct Pinakion.Checkpoint storage pointer","value":"newCheckPoint"},"id":1385,"name":"Identifier","src":"27327:13:0"}],"id":1387,"name":"MemberAccess","src":"27327:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":1388,"name":"ElementaryTypeNameExpression","src":"27354:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":1389,"name":"Identifier","src":"27362:5:0"}],"id":1390,"name":"MemberAccess","src":"27362:12:0"}],"id":1391,"name":"FunctionCall","src":"27354:21:0"}],"id":1392,"name":"Assignment","src":"27327:48:0"}],"id":1393,"name":"ExpressionStatement","src":"27327:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"value","referencedDeclaration":578,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1378,"type":"struct Pinakion.Checkpoint storage pointer","value":"newCheckPoint"},"id":1394,"name":"Identifier","src":"27393:13:0"}],"id":1396,"name":"MemberAccess","src":"27393:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":1397,"name":"ElementaryTypeNameExpression","src":"27415:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1357,"type":"uint256","value":"_value"},"id":1398,"name":"Identifier","src":"27423:6:0"}],"id":1399,"name":"FunctionCall","src":"27415:15:0"}],"id":1400,"name":"Assignment","src":"27393:37:0"}],"id":1401,"name":"ExpressionStatement","src":"27393:37:0"}],"id":1402,"name":"Block","src":"27221:224:0"},{"children":[{"attributes":{"assignments":[1404]},"children":[{"attributes":{"constant":false,"name":"oldCheckPoint","scope":1423,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":579,"type":"struct Pinakion.Checkpoint"},"id":1403,"name":"UserDefinedTypeName","src":"27469:10:0"}],"id":1404,"name":"VariableDeclaration","src":"27469:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1405,"name":"Identifier","src":"27504:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":1406,"name":"Identifier","src":"27516:11:0"}],"id":1407,"name":"MemberAccess","src":"27516:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1408,"name":"Literal","src":"27535:1:0"}],"id":1409,"name":"BinaryOperation","src":"27516:20:0"}],"id":1410,"name":"IndexAccess","src":"27504:33:0"}],"id":1411,"name":"VariableDeclarationStatement","src":"27469:68:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"value","referencedDeclaration":578,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1404,"type":"struct Pinakion.Checkpoint storage pointer","value":"oldCheckPoint"},"id":1412,"name":"Identifier","src":"27555:13:0"}],"id":1414,"name":"MemberAccess","src":"27555:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":1415,"name":"ElementaryTypeNameExpression","src":"27577:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1357,"type":"uint256","value":"_value"},"id":1416,"name":"Identifier","src":"27585:6:0"}],"id":1417,"name":"FunctionCall","src":"27577:15:0"}],"id":1418,"name":"Assignment","src":"27555:37:0"}],"id":1419,"name":"ExpressionStatement","src":"27555:37:0"}],"id":1420,"name":"Block","src":"27451:156:0"}],"id":1421,"name":"IfStatement","src":"27116:491:0"}],"id":1422,"name":"Block","src":"27105:509:0"}],"id":1423,"name":"FunctionDefinition","src":"27016:598:0"},{"attributes":{"constant":true,"documentation":"@dev Internal function to determine if an address is a contract\r\n @param _addr The address being queried\r\n @return True if `_addr` is a contract\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isContract","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_addr","scope":1445,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1424,"name":"ElementaryTypeName","src":"27810:7:0"}],"id":1425,"name":"VariableDeclaration","src":"27810:13:0"}],"id":1426,"name":"ParameterList","src":"27809:15:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1445,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1427,"name":"ElementaryTypeName","src":"27851:4:0"}],"id":1428,"name":"VariableDeclaration","src":"27851:4:0"}],"id":1429,"name":"ParameterList","src":"27850:6:0"},{"children":[{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"size","scope":1445,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1430,"name":"ElementaryTypeName","src":"27868:4:0"}],"id":1431,"name":"VariableDeclaration","src":"27868:9:0"}],"id":1432,"name":"VariableDeclarationStatement","src":"27868:9:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1425,"type":"address","value":"_addr"},"id":1433,"name":"Identifier","src":"27892:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1434,"name":"Literal","src":"27901:1:0"}],"id":1435,"name":"BinaryOperation","src":"27892:10:0"},{"attributes":{"functionReturnParameters":1429},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1436,"name":"Literal","src":"27911:5:0"}],"id":1437,"name":"Return","src":"27904:12:0"}],"id":1438,"name":"IfStatement","src":"27888:28:0"},{"attributes":{"externalReferences":[{"_addr":{"declaration":1425,"isOffset":false,"isSlot":false,"src":"27971:5:0","valueSize":1}},{"size":{"declaration":1431,"isOffset":false,"isSlot":false,"src":"27951:4:0","valueSize":1}}],"operations":"{\n    size := extcodesize(_addr)\n}"},"children":[],"id":1439,"name":"InlineAssembly","src":"27927:77:0"},{"attributes":{"functionReturnParameters":1429},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1431,"type":"uint256","value":"size"},"id":1440,"name":"Identifier","src":"28005:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1441,"name":"Literal","src":"28010:1:0"}],"id":1442,"name":"BinaryOperation","src":"28005:6:0"}],"id":1443,"name":"Return","src":"27998:13:0"}],"id":1444,"name":"Block","src":"27857:162:0"}],"id":1445,"name":"FunctionDefinition","src":"27790:229:0"},{"attributes":{"constant":true,"documentation":"@dev Helper function to return a min betwen the two uints\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"min","payable":false,"scope":1564,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":1462,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1446,"name":"ElementaryTypeName","src":"28107:4:0"}],"id":1447,"name":"VariableDeclaration","src":"28107:6:0"},{"attributes":{"constant":false,"name":"b","scope":1462,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1448,"name":"ElementaryTypeName","src":"28115:4:0"}],"id":1449,"name":"VariableDeclaration","src":"28115:6:0"}],"id":1450,"name":"ParameterList","src":"28106:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1462,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1451,"name":"ElementaryTypeName","src":"28146:4:0"}],"id":1452,"name":"VariableDeclaration","src":"28146:4:0"}],"id":1453,"name":"ParameterList","src":"28145:6:0"},{"children":[{"attributes":{"functionReturnParameters":1453},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1447,"type":"uint256","value":"a"},"id":1454,"name":"Identifier","src":"28170:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1449,"type":"uint256","value":"b"},"id":1455,"name":"Identifier","src":"28174:1:0"}],"id":1456,"name":"BinaryOperation","src":"28170:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1447,"type":"uint256","value":"a"},"id":1457,"name":"Identifier","src":"28178:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1449,"type":"uint256","value":"b"},"id":1458,"name":"Identifier","src":"28182:1:0"}],"id":1459,"name":"Conditional","src":"28170:13:0"}],"id":1460,"name":"Return","src":"28163:20:0"}],"id":1461,"name":"Block","src":"28152:39:0"}],"id":1462,"name":"FunctionDefinition","src":"28094:97:0"},{"attributes":{"constant":false,"documentation":"@notice The fallback function: If the contract's controller has not been\r\n  set to 0, then the `proxyPayment` method is called which relays the\r\n  ether and creates tokens as described in the token controller contract\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"","payable":true,"scope":1564,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1463,"name":"ParameterList","src":"28449:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":1464,"name":"ParameterList","src":"28467:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1465,"name":"Identifier","src":"28478:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1445,"type":"function (address) view returns (bool)","value":"isContract"},"id":1466,"name":"Identifier","src":"28486:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":1467,"name":"Identifier","src":"28497:10:0"}],"id":1468,"name":"FunctionCall","src":"28486:22:0"}],"id":1469,"name":"FunctionCall","src":"28478:31:0"}],"id":1470,"name":"ExpressionStatement","src":"28478:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1471,"name":"Identifier","src":"28520:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function (address) payable external returns (bool)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"function (uint256) returns (function (address) payable external returns (bool))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"proxyPayment","referencedDeclaration":505,"type":"function (address) payable external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":528,"type":"type(contract TokenController)","value":"TokenController"},"id":1472,"name":"Identifier","src":"28528:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":1473,"name":"Identifier","src":"28544:10:0"}],"id":1474,"name":"FunctionCall","src":"28528:27:0"}],"id":1475,"name":"MemberAccess","src":"28528:40:0"}],"id":1476,"name":"MemberAccess","src":"28528:46:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1477,"name":"Identifier","src":"28575:3:0"}],"id":1478,"name":"MemberAccess","src":"28575:9:0"}],"id":1479,"name":"FunctionCall","src":"28528:57:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1480,"name":"Identifier","src":"28586:3:0"}],"id":1481,"name":"MemberAccess","src":"28586:10:0"}],"id":1482,"name":"FunctionCall","src":"28528:69:0"}],"id":1483,"name":"FunctionCall","src":"28520:78:0"}],"id":1484,"name":"ExpressionStatement","src":"28520:78:0"}],"id":1485,"name":"Block","src":"28467:139:0"}],"id":1486,"name":"FunctionDefinition","src":"28440:166:0"},{"attributes":{"constant":false,"documentation":"///////\r\n @notice This method can be used by the controller to extract mistakenly\r\n  sent tokens to this contract.\r\n @param _token The address of the token contract that you want to recover\r\n  set to 0 in case you want to extract ether.\r","implemented":true,"isConstructor":false,"name":"claimTokens","payable":false,"scope":1564,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_token","scope":1533,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1487,"name":"ElementaryTypeName","src":"28937:7:0"}],"id":1488,"name":"VariableDeclaration","src":"28937:14:0"}],"id":1489,"name":"ParameterList","src":"28936:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":1492,"name":"ParameterList","src":"28975:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":539,"type":"modifier ()","value":"onlyController"},"id":1490,"name":"Identifier","src":"28960:14:0"}],"id":1491,"name":"ModifierInvocation","src":"28960:14:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1488,"type":"address","value":"_token"},"id":1493,"name":"Identifier","src":"28990:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1494,"name":"Literal","src":"29000:3:0"}],"id":1495,"name":"BinaryOperation","src":"28990:13:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":1496,"name":"Identifier","src":"29020:10:0"}],"id":1498,"name":"MemberAccess","src":"29020:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4575,"type":"contract Pinakion","value":"this"},"id":1499,"name":"Identifier","src":"29040:4:0"}],"id":1500,"name":"MemberAccess","src":"29040:12:0"}],"id":1501,"name":"FunctionCall","src":"29020:33:0"}],"id":1502,"name":"ExpressionStatement","src":"29020:33:0"},{"attributes":{"expression":null,"functionReturnParameters":1492},"id":1503,"name":"Return","src":"29068:7:0"}],"id":1504,"name":"Block","src":"29005:81:0"}],"id":1505,"name":"IfStatement","src":"28986:100:0"},{"attributes":{"assignments":[1507]},"children":[{"attributes":{"constant":false,"name":"token","scope":1533,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":1506,"name":"UserDefinedTypeName","src":"29098:8:0"}],"id":1507,"name":"VariableDeclaration","src":"29098:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1564,"type":"type(contract Pinakion)","value":"Pinakion"},"id":1508,"name":"Identifier","src":"29115:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1488,"type":"address","value":"_token"},"id":1509,"name":"Identifier","src":"29124:6:0"}],"id":1510,"name":"FunctionCall","src":"29115:16:0"}],"id":1511,"name":"VariableDeclarationStatement","src":"29098:33:0"},{"attributes":{"assignments":[1513]},"children":[{"attributes":{"constant":false,"name":"balance","scope":1533,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1512,"name":"ElementaryTypeName","src":"29142:4:0"}],"id":1513,"name":"VariableDeclaration","src":"29142:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1564","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOf","referencedDeclaration":856,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1507,"type":"contract Pinakion","value":"token"},"id":1514,"name":"Identifier","src":"29157:5:0"}],"id":1515,"name":"MemberAccess","src":"29157:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4575,"type":"contract Pinakion","value":"this"},"id":1516,"name":"Identifier","src":"29173:4:0"}],"id":1517,"name":"FunctionCall","src":"29157:21:0"}],"id":1518,"name":"VariableDeclarationStatement","src":"29142:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":681,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1507,"type":"contract Pinakion","value":"token"},"id":1519,"name":"Identifier","src":"29189:5:0"}],"id":1521,"name":"MemberAccess","src":"29189:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":1522,"name":"Identifier","src":"29204:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1513,"type":"uint256","value":"balance"},"id":1523,"name":"Identifier","src":"29216:7:0"}],"id":1524,"name":"FunctionCall","src":"29189:35:0"}],"id":1525,"name":"ExpressionStatement","src":"29189:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1541,"type":"function (address,address,uint256)","value":"ClaimedTokens"},"id":1526,"name":"Identifier","src":"29235:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1488,"type":"address","value":"_token"},"id":1527,"name":"Identifier","src":"29249:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":541,"type":"address","value":"controller"},"id":1528,"name":"Identifier","src":"29257:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1513,"type":"uint256","value":"balance"},"id":1529,"name":"Identifier","src":"29269:7:0"}],"id":1530,"name":"FunctionCall","src":"29235:42:0"}],"id":1531,"name":"ExpressionStatement","src":"29235:42:0"}],"id":1532,"name":"Block","src":"28975:310:0"}],"id":1533,"name":"FunctionDefinition","src":"28916:369:0"},{"attributes":{"anonymous":false,"documentation":"/////////////\r","name":"ClaimedTokens"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_token","scope":1541,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1534,"name":"ElementaryTypeName","src":"29360:7:0"}],"id":1535,"name":"VariableDeclaration","src":"29360:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"_controller","scope":1541,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1536,"name":"ElementaryTypeName","src":"29384:7:0"}],"id":1537,"name":"VariableDeclaration","src":"29384:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1541,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1538,"name":"ElementaryTypeName","src":"29413:4:0"}],"id":1539,"name":"VariableDeclaration","src":"29413:12:0"}],"id":1540,"name":"ParameterList","src":"29359:67:0"}],"id":1541,"name":"EventDefinition","src":"29340:87:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_from","scope":1549,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1542,"name":"ElementaryTypeName","src":"29448:7:0"}],"id":1543,"name":"VariableDeclaration","src":"29448:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"_to","scope":1549,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1544,"name":"ElementaryTypeName","src":"29471:7:0"}],"id":1545,"name":"VariableDeclaration","src":"29471:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1549,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1546,"name":"ElementaryTypeName","src":"29492:7:0"}],"id":1547,"name":"VariableDeclaration","src":"29492:15:0"}],"id":1548,"name":"ParameterList","src":"29447:61:0"}],"id":1549,"name":"EventDefinition","src":"29433:76:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"NewCloneToken"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_cloneToken","scope":1555,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1550,"name":"ElementaryTypeName","src":"29535:7:0"}],"id":1551,"name":"VariableDeclaration","src":"29535:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"_snapshotBlock","scope":1555,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1552,"name":"ElementaryTypeName","src":"29564:4:0"}],"id":1553,"name":"VariableDeclaration","src":"29564:19:0"}],"id":1554,"name":"ParameterList","src":"29534:50:0"}],"id":1555,"name":"EventDefinition","src":"29515:70:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_owner","scope":1563,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1556,"name":"ElementaryTypeName","src":"29616:7:0"}],"id":1557,"name":"VariableDeclaration","src":"29616:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"_spender","scope":1563,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1558,"name":"ElementaryTypeName","src":"29649:7:0"}],"id":1559,"name":"VariableDeclaration","src":"29649:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1563,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1560,"name":"ElementaryTypeName","src":"29684:7:0"}],"id":1561,"name":"VariableDeclaration","src":"29684:15:0"}],"id":1562,"name":"ParameterList","src":"29605:105:0"}],"id":1563,"name":"EventDefinition","src":"29591:120:0"}],"id":1564,"name":"ContractDefinition","src":"9830:19886:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[1564],"contractKind":"contract","documentation":"/////////////\r\n @dev This contract is used to generate clone contracts from a contract.\r\n  In solidity this is the way to create a contract from a contract of the\r\n  same class\r","fullyImplemented":true,"linearizedBaseContracts":[1605],"name":"MiniMeTokenFactory","scope":4540},"children":[{"attributes":{"constant":false,"documentation":"@notice Update the DApp by creating a new token with new functionalities\r\n  the msg.sender becomes the controller of this clone token\r\n @param _parentToken Address of the token being cloned\r\n @param _snapshotBlock Block of the parent token that will\r\n  determine the initial distribution of the clone token\r\n @param _tokenName Name of the new token\r\n @param _decimalUnits Number of decimals of the new token\r\n @param _tokenSymbol Token Symbol for the new token\r\n @param _transfersEnabled If true, tokens will be able to be transferred\r\n @return The address of the new token contract\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createCloneToken","payable":false,"scope":1605,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_parentToken","scope":1604,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1565,"name":"ElementaryTypeName","src":"30683:7:0"}],"id":1566,"name":"VariableDeclaration","src":"30683:20:0"},{"attributes":{"constant":false,"name":"_snapshotBlock","scope":1604,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1567,"name":"ElementaryTypeName","src":"30714:4:0"}],"id":1568,"name":"VariableDeclaration","src":"30714:19:0"},{"attributes":{"constant":false,"name":"_tokenName","scope":1604,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1569,"name":"ElementaryTypeName","src":"30744:6:0"}],"id":1570,"name":"VariableDeclaration","src":"30744:17:0"},{"attributes":{"constant":false,"name":"_decimalUnits","scope":1604,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1571,"name":"ElementaryTypeName","src":"30772:5:0"}],"id":1572,"name":"VariableDeclaration","src":"30772:19:0"},{"attributes":{"constant":false,"name":"_tokenSymbol","scope":1604,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1573,"name":"ElementaryTypeName","src":"30802:6:0"}],"id":1574,"name":"VariableDeclaration","src":"30802:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":1604,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1575,"name":"ElementaryTypeName","src":"30832:4:0"}],"id":1576,"name":"VariableDeclaration","src":"30832:22:0"}],"id":1577,"name":"ParameterList","src":"30672:189:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1604,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":1578,"name":"UserDefinedTypeName","src":"30878:8:0"}],"id":1579,"name":"VariableDeclaration","src":"30878:8:0"}],"id":1580,"name":"ParameterList","src":"30877:10:0"},{"children":[{"attributes":{"assignments":[1582]},"children":[{"attributes":{"constant":false,"name":"newToken","scope":1604,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":1581,"name":"UserDefinedTypeName","src":"30899:8:0"}],"id":1582,"name":"VariableDeclaration","src":"30899:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_MiniMeTokenFactory_$1605","typeString":"contract MiniMeTokenFactory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"function (address,address,uint256,string memory,uint8,string memory,bool) returns (contract Pinakion)"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":1583,"name":"UserDefinedTypeName","src":"30923:8:0"}],"id":1584,"name":"NewExpression","src":"30919:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4577,"type":"contract MiniMeTokenFactory","value":"this"},"id":1585,"name":"Identifier","src":"30946:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1566,"type":"address","value":"_parentToken"},"id":1586,"name":"Identifier","src":"30965:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1568,"type":"uint256","value":"_snapshotBlock"},"id":1587,"name":"Identifier","src":"30992:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1570,"type":"string memory","value":"_tokenName"},"id":1588,"name":"Identifier","src":"31021:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1572,"type":"uint8","value":"_decimalUnits"},"id":1589,"name":"Identifier","src":"31046:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1574,"type":"string memory","value":"_tokenSymbol"},"id":1590,"name":"Identifier","src":"31074:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1576,"type":"bool","value":"_transfersEnabled"},"id":1591,"name":"Identifier","src":"31101:17:0"}],"id":1592,"name":"FunctionCall","src":"30919:214:0"}],"id":1593,"name":"VariableDeclarationStatement","src":"30899:234:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"changeController","referencedDeclaration":562,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1582,"type":"contract Pinakion","value":"newToken"},"id":1594,"name":"Identifier","src":"31146:8:0"}],"id":1596,"name":"MemberAccess","src":"31146:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1597,"name":"Identifier","src":"31172:3:0"}],"id":1598,"name":"MemberAccess","src":"31172:10:0"}],"id":1599,"name":"FunctionCall","src":"31146:37:0"}],"id":1600,"name":"ExpressionStatement","src":"31146:37:0"},{"attributes":{"functionReturnParameters":1580},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1582,"type":"contract Pinakion","value":"newToken"},"id":1601,"name":"Identifier","src":"31201:8:0"}],"id":1602,"name":"Return","src":"31194:15:0"}],"id":1603,"name":"Block","src":"30888:329:0"}],"id":1604,"name":"FunctionDefinition","src":"30647:570:0"}],"id":1605,"name":"ContractDefinition","src":"29955:1265:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[1656],"name":"RNG","scope":4540},"children":[{"attributes":{"body":null,"constant":false,"documentation":"@dev Contribute to the reward of a random number.\r\n @param _block Block the random number is linked to.\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"contribute","payable":true,"scope":1656,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1610,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1606,"name":"ElementaryTypeName","src":"31394:4:0"}],"id":1607,"name":"VariableDeclaration","src":"31394:11:0"}],"id":1608,"name":"ParameterList","src":"31393:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1609,"name":"ParameterList","src":"31421:0:0"}],"id":1610,"name":"FunctionDefinition","src":"31374:48:0"},{"attributes":{"constant":false,"documentation":"@dev Request a random number.\r\n @param _block Block linked to the request.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"requestRN","payable":true,"scope":1656,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1620,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1611,"name":"ElementaryTypeName","src":"31549:4:0"}],"id":1612,"name":"VariableDeclaration","src":"31549:11:0"}],"id":1613,"name":"ParameterList","src":"31548:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1614,"name":"ParameterList","src":"31577:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1610,"type":"function (uint256)","value":"contribute"},"id":1615,"name":"Identifier","src":"31588:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1612,"type":"uint256","value":"_block"},"id":1616,"name":"Identifier","src":"31599:6:0"}],"id":1617,"name":"FunctionCall","src":"31588:18:0"}],"id":1618,"name":"ExpressionStatement","src":"31588:18:0"}],"id":1619,"name":"Block","src":"31577:37:0"}],"id":1620,"name":"FunctionDefinition","src":"31530:84:0"},{"attributes":{"body":null,"constant":false,"documentation":"@dev Get the random number.\r\n @param _block Block the random number is linked to.\r\n @return RN Random Number. If the number is not ready or has not been required 0 instead.\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"getRN","payable":false,"scope":1656,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1627,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1621,"name":"ElementaryTypeName","src":"31842:4:0"}],"id":1622,"name":"VariableDeclaration","src":"31842:11:0"}],"id":1623,"name":"ParameterList","src":"31841:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1627,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1624,"name":"ElementaryTypeName","src":"31871:4:0"}],"id":1625,"name":"VariableDeclaration","src":"31871:7:0"}],"id":1626,"name":"ParameterList","src":"31870:9:0"}],"id":1627,"name":"FunctionDefinition","src":"31827:53:0"},{"attributes":{"constant":false,"documentation":"@dev Get a uncorrelated random number. Act like getRN but give a different number for each sender.\r\n This is to prevent users from getting correlated numbers.\r\n @param _block Block the random number is linked to.\r\n @return RN Random Number. If the number is not ready or has not been required 0 instead.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUncorrelatedRN","payable":false,"scope":1656,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1655,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1628,"name":"ElementaryTypeName","src":"32258:4:0"}],"id":1629,"name":"VariableDeclaration","src":"32258:11:0"}],"id":1630,"name":"ParameterList","src":"32257:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1655,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1631,"name":"ElementaryTypeName","src":"32287:4:0"}],"id":1632,"name":"VariableDeclaration","src":"32287:7:0"}],"id":1633,"name":"ParameterList","src":"32286:9:0"},{"children":[{"attributes":{"assignments":[1635]},"children":[{"attributes":{"constant":false,"name":"baseRN","scope":1655,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1634,"name":"ElementaryTypeName","src":"32307:4:0"}],"id":1635,"name":"VariableDeclaration","src":"32307:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"function (uint256) returns (uint256)","value":"getRN"},"id":1636,"name":"Identifier","src":"32319:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1629,"type":"uint256","value":"_block"},"id":1637,"name":"Identifier","src":"32325:6:0"}],"id":1638,"name":"FunctionCall","src":"32319:13:0"}],"id":1639,"name":"VariableDeclarationStatement","src":"32307:25:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1635,"type":"uint256","value":"baseRN"},"id":1640,"name":"Identifier","src":"32347:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1641,"name":"Literal","src":"32355:1:0"}],"id":1642,"name":"BinaryOperation","src":"32347:9:0"},{"attributes":{"functionReturnParameters":1633},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1643,"name":"Literal","src":"32378:1:0"}],"id":1644,"name":"Return","src":"32371:8:0"},{"attributes":{"functionReturnParameters":1633},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1645,"name":"ElementaryTypeNameExpression","src":"32415:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4548,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":1646,"name":"Identifier","src":"32420:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1647,"name":"Identifier","src":"32430:3:0"}],"id":1648,"name":"MemberAccess","src":"32430:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1635,"type":"uint256","value":"baseRN"},"id":1649,"name":"Identifier","src":"32441:6:0"}],"id":1650,"name":"FunctionCall","src":"32420:28:0"}],"id":1651,"name":"FunctionCall","src":"32415:34:0"}],"id":1652,"name":"Return","src":"32408:41:0"}],"id":1653,"name":"IfStatement","src":"32343:106:0"}],"id":1654,"name":"Block","src":"32296:161:0"}],"id":1655,"name":"FunctionDefinition","src":"32231:226:0"}],"id":1656,"name":"ContractDefinition","src":"31224:1239:0"},{"attributes":{"contractDependencies":[1656],"contractKind":"contract","documentation":"Simple Random Number Generator returning the blockhash.\r\n Allows saving the random number for use in the future.\r\n It allows the contract to still access the blockhash even after 256 blocks.\r\n The first party to call the save function gets the reward.\r","fullyImplemented":true,"linearizedBaseContracts":[1758,1656],"name":"BlockHashRNG","scope":4540},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1656,"type":"contract RNG"},"id":1657,"name":"UserDefinedTypeName","src":"32763:3:0"}],"id":1658,"name":"InheritanceSpecifier","src":"32763:3:0"},{"attributes":{"constant":false,"name":"randomNumber","scope":1758,"stateVariable":true,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1659,"name":"ElementaryTypeName","src":"32785:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1660,"name":"ElementaryTypeName","src":"32793:4:0"}],"id":1661,"name":"Mapping","src":"32776:22:0"}],"id":1662,"name":"VariableDeclaration","src":"32776:42:0"},{"attributes":{"constant":false,"name":"reward","scope":1758,"stateVariable":true,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1663,"name":"ElementaryTypeName","src":"32907:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1664,"name":"ElementaryTypeName","src":"32915:4:0"}],"id":1665,"name":"Mapping","src":"32898:22:0"}],"id":1666,"name":"VariableDeclaration","src":"32898:36:0"},{"attributes":{"constant":false,"documentation":"@dev Contribute to the reward of a random number.\r\n @param _block Block the random number is linked to.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"contribute","payable":true,"scope":1758,"stateMutability":"payable","superFunction":1610,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1679,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1667,"name":"ElementaryTypeName","src":"33154:4:0"}],"id":1668,"name":"VariableDeclaration","src":"33154:11:0"}],"id":1669,"name":"ParameterList","src":"33153:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1670,"name":"ParameterList","src":"33182:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1666,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1671,"name":"Identifier","src":"33184:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1668,"type":"uint256","value":"_block"},"id":1672,"name":"Identifier","src":"33191:6:0"}],"id":1673,"name":"IndexAccess","src":"33184:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1674,"name":"Identifier","src":"33200:3:0"}],"id":1675,"name":"MemberAccess","src":"33200:9:0"}],"id":1676,"name":"Assignment","src":"33184:25:0"}],"id":1677,"name":"ExpressionStatement","src":"33184:25:0"}],"id":1678,"name":"Block","src":"33182:30:0"}],"id":1679,"name":"FunctionDefinition","src":"33134:78:0"},{"attributes":{"constant":false,"documentation":"@dev Return the random number. If it has not been saved and is still computable compute it.\r\n @param _block Block the random number is linked to.\r\n @return RN Random Number. If the number is not ready or has not been requested 0 instead.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getRN","payable":false,"scope":1758,"stateMutability":"nonpayable","superFunction":1627,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1708,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1680,"name":"ElementaryTypeName","src":"33507:4:0"}],"id":1681,"name":"VariableDeclaration","src":"33507:11:0"}],"id":1682,"name":"ParameterList","src":"33506:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1708,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1683,"name":"ElementaryTypeName","src":"33536:4:0"}],"id":1684,"name":"VariableDeclaration","src":"33536:7:0"}],"id":1685,"name":"ParameterList","src":"33535:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1684,"type":"uint256","value":"RN"},"id":1686,"name":"Identifier","src":"33556:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1687,"name":"Identifier","src":"33559:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1681,"type":"uint256","value":"_block"},"id":1688,"name":"Identifier","src":"33572:6:0"}],"id":1689,"name":"IndexAccess","src":"33559:20:0"}],"id":1690,"name":"Assignment","src":"33556:23:0"}],"id":1691,"name":"ExpressionStatement","src":"33556:23:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1684,"type":"uint256","value":"RN"},"id":1692,"name":"Identifier","src":"33594:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1693,"name":"Literal","src":"33598:1:0"}],"id":1694,"name":"BinaryOperation","src":"33594:5:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1757,"type":"function (uint256)","value":"saveRN"},"id":1695,"name":"Identifier","src":"33615:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1681,"type":"uint256","value":"_block"},"id":1696,"name":"Identifier","src":"33622:6:0"}],"id":1697,"name":"FunctionCall","src":"33615:14:0"}],"id":1698,"name":"ExpressionStatement","src":"33615:14:0"},{"attributes":{"functionReturnParameters":1685},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1699,"name":"Identifier","src":"33651:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1681,"type":"uint256","value":"_block"},"id":1700,"name":"Identifier","src":"33664:6:0"}],"id":1701,"name":"IndexAccess","src":"33651:20:0"}],"id":1702,"name":"Return","src":"33644:27:0"}],"id":1703,"name":"Block","src":"33600:83:0"},{"attributes":{"functionReturnParameters":1685},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1684,"type":"uint256","value":"RN"},"id":1704,"name":"Identifier","src":"33718:2:0"}],"id":1705,"name":"Return","src":"33711:9:0"}],"id":1706,"name":"IfStatement","src":"33590:130:0"}],"id":1707,"name":"Block","src":"33545:183:0"}],"id":1708,"name":"FunctionDefinition","src":"33492:236:0"},{"attributes":{"constant":false,"documentation":"@dev Save the random number for this blockhash and give the reward to the caller.\r\n @param _block Block the random number is linked to.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"saveRN","payable":false,"scope":1758,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1757,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1709,"name":"ElementaryTypeName","src":"33913:4:0"}],"id":1710,"name":"VariableDeclaration","src":"33913:11:0"}],"id":1711,"name":"ParameterList","src":"33912:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1712,"name":"ParameterList","src":"33933:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4545,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1713,"name":"Identifier","src":"33948:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1710,"type":"uint256","value":"_block"},"id":1714,"name":"Identifier","src":"33958:6:0"}],"id":1715,"name":"FunctionCall","src":"33948:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1716,"name":"Literal","src":"33969:3:0"}],"id":1717,"name":"BinaryOperation","src":"33948:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1718,"name":"Identifier","src":"33987:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1710,"type":"uint256","value":"_block"},"id":1719,"name":"Identifier","src":"34000:6:0"}],"id":1720,"name":"IndexAccess","src":"33987:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1721,"name":"ElementaryTypeNameExpression","src":"34010:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4545,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1722,"name":"Identifier","src":"34015:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1710,"type":"uint256","value":"_block"},"id":1723,"name":"Identifier","src":"34025:6:0"}],"id":1724,"name":"FunctionCall","src":"34015:17:0"}],"id":1725,"name":"FunctionCall","src":"34010:23:0"}],"id":1726,"name":"Assignment","src":"33987:46:0"}],"id":1727,"name":"ExpressionStatement","src":"33987:46:0"}],"id":1728,"name":"IfStatement","src":"33944:89:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1729,"name":"Identifier","src":"34048:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1710,"type":"uint256","value":"_block"},"id":1730,"name":"Identifier","src":"34061:6:0"}],"id":1731,"name":"IndexAccess","src":"34048:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1732,"name":"Literal","src":"34072:1:0"}],"id":1733,"name":"BinaryOperation","src":"34048:25:0"},{"children":[{"attributes":{"assignments":[1735]},"children":[{"attributes":{"constant":false,"name":"rewardToSend","scope":1757,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1734,"name":"ElementaryTypeName","src":"34115:4:0"}],"id":1735,"name":"VariableDeclaration","src":"34115:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1666,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1736,"name":"Identifier","src":"34135:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1710,"type":"uint256","value":"_block"},"id":1737,"name":"Identifier","src":"34142:6:0"}],"id":1738,"name":"IndexAccess","src":"34135:14:0"}],"id":1739,"name":"VariableDeclarationStatement","src":"34115:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1666,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1740,"name":"Identifier","src":"34164:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1710,"type":"uint256","value":"_block"},"id":1741,"name":"Identifier","src":"34171:6:0"}],"id":1742,"name":"IndexAccess","src":"34164:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1743,"name":"Literal","src":"34181:1:0"}],"id":1744,"name":"Assignment","src":"34164:18:0"}],"id":1745,"name":"ExpressionStatement","src":"34164:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"send","referencedDeclaration":null,"type":"function (uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1746,"name":"Identifier","src":"34197:3:0"}],"id":1749,"name":"MemberAccess","src":"34197:10:0"}],"id":1750,"name":"MemberAccess","src":"34197:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1735,"type":"uint256","value":"rewardToSend"},"id":1751,"name":"Identifier","src":"34213:12:0"}],"id":1752,"name":"FunctionCall","src":"34197:29:0"}],"id":1753,"name":"ExpressionStatement","src":"34197:29:0"}],"id":1754,"name":"Block","src":"34075:273:0"}],"id":1755,"name":"IfStatement","src":"34044:304:0"}],"id":1756,"name":"Block","src":"33933:422:0"}],"id":1757,"name":"FunctionDefinition","src":"33897:458:0"}],"id":1758,"name":"ContractDefinition","src":"32738:1622:0"},{"attributes":{"contractDependencies":[1656,1758],"contractKind":"contract","documentation":"Random Number Generator returning the blockhash with a backup behaviour.\r\n Allows saving the random number for use in the future. \r\n It allows the contract to still access the blockhash even after 256 blocks.\r\n The first party to call the save function gets the reward.\r\n If no one calls the contract within 256 blocks, the contract fallback in returning the blockhash of the previous block.\r","fullyImplemented":true,"linearizedBaseContracts":[1835,1758,1656],"name":"BlockHashRNGFallback","scope":4540},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BlockHashRNG","referencedDeclaration":1758,"type":"contract BlockHashRNG"},"id":1759,"name":"UserDefinedTypeName","src":"34813:12:0"}],"id":1760,"name":"InheritanceSpecifier","src":"34813:12:0"},{"attributes":{"constant":false,"documentation":"@dev Save the random number for this blockhash and give the reward to the caller.\r\n @param _block Block the random number is linked to.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"saveRN","payable":false,"scope":1835,"stateMutability":"nonpayable","superFunction":1757,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1834,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1761,"name":"ElementaryTypeName","src":"35016:4:0"}],"id":1762,"name":"VariableDeclaration","src":"35016:11:0"}],"id":1763,"name":"ParameterList","src":"35015:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1764,"name":"ParameterList","src":"35036:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1765,"name":"Identifier","src":"35051:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":1766,"name":"Identifier","src":"35058:5:0"}],"id":1767,"name":"MemberAccess","src":"35058:12:0"}],"id":1768,"name":"BinaryOperation","src":"35051:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1769,"name":"Identifier","src":"35074:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1770,"name":"Identifier","src":"35087:6:0"}],"id":1771,"name":"IndexAccess","src":"35074:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1772,"name":"Literal","src":"35096:1:0"}],"id":1773,"name":"BinaryOperation","src":"35074:23:0"}],"id":1774,"name":"BinaryOperation","src":"35051:46:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4545,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1775,"name":"Identifier","src":"35172:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1776,"name":"Identifier","src":"35182:6:0"}],"id":1777,"name":"FunctionCall","src":"35172:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1778,"name":"Literal","src":"35191:3:0"}],"id":1779,"name":"BinaryOperation","src":"35172:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1780,"name":"Identifier","src":"35229:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1781,"name":"Identifier","src":"35242:6:0"}],"id":1782,"name":"IndexAccess","src":"35229:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1783,"name":"ElementaryTypeNameExpression","src":"35250:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4545,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1784,"name":"Identifier","src":"35255:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1785,"name":"Identifier","src":"35265:6:0"}],"id":1786,"name":"FunctionCall","src":"35255:17:0"}],"id":1787,"name":"FunctionCall","src":"35250:23:0"}],"id":1788,"name":"Assignment","src":"35229:44:0"}],"id":1789,"name":"ExpressionStatement","src":"35229:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1790,"name":"Identifier","src":"35392:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1791,"name":"Identifier","src":"35405:6:0"}],"id":1792,"name":"IndexAccess","src":"35392:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1793,"name":"ElementaryTypeNameExpression","src":"35413:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4545,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1794,"name":"Identifier","src":"35418:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":1795,"name":"Identifier","src":"35428:5:0"}],"id":1796,"name":"MemberAccess","src":"35428:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1797,"name":"Literal","src":"35441:1:0"}],"id":1798,"name":"BinaryOperation","src":"35428:14:0"}],"id":1799,"name":"FunctionCall","src":"35418:25:0"}],"id":1800,"name":"FunctionCall","src":"35413:31:0"}],"id":1801,"name":"Assignment","src":"35392:52:0"}],"id":1802,"name":"ExpressionStatement","src":"35392:52:0"}],"id":1803,"name":"IfStatement","src":"35168:276:0"}],"id":1804,"name":"Block","src":"35099:357:0"}],"id":1805,"name":"IfStatement","src":"35047:409:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1662,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1806,"name":"Identifier","src":"35470:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1807,"name":"Identifier","src":"35483:6:0"}],"id":1808,"name":"IndexAccess","src":"35470:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1809,"name":"Literal","src":"35494:1:0"}],"id":1810,"name":"BinaryOperation","src":"35470:25:0"},{"children":[{"attributes":{"assignments":[1812]},"children":[{"attributes":{"constant":false,"name":"rewardToSend","scope":1834,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1811,"name":"ElementaryTypeName","src":"35544:4:0"}],"id":1812,"name":"VariableDeclaration","src":"35544:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1666,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1813,"name":"Identifier","src":"35562:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1814,"name":"Identifier","src":"35569:6:0"}],"id":1815,"name":"IndexAccess","src":"35562:14:0"}],"id":1816,"name":"VariableDeclarationStatement","src":"35544:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1666,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1817,"name":"Identifier","src":"35591:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1762,"type":"uint256","value":"_block"},"id":1818,"name":"Identifier","src":"35598:6:0"}],"id":1819,"name":"IndexAccess","src":"35591:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1820,"name":"Literal","src":"35606:1:0"}],"id":1821,"name":"Assignment","src":"35591:16:0"}],"id":1822,"name":"ExpressionStatement","src":"35591:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"send","referencedDeclaration":null,"type":"function (uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1823,"name":"Identifier","src":"35622:3:0"}],"id":1826,"name":"MemberAccess","src":"35622:10:0"}],"id":1827,"name":"MemberAccess","src":"35622:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1812,"type":"uint256","value":"rewardToSend"},"id":1828,"name":"Identifier","src":"35638:12:0"}],"id":1829,"name":"FunctionCall","src":"35622:29:0"}],"id":1830,"name":"ExpressionStatement","src":"35622:29:0"}],"id":1831,"name":"Block","src":"35497:280:0"}],"id":1832,"name":"IfStatement","src":"35466:311:0"}],"id":1833,"name":"Block","src":"35036:748:0"}],"id":1834,"name":"FunctionDefinition","src":"35000:784:0"}],"id":1835,"name":"ContractDefinition","src":"34780:1013:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Arbitrable\r\n Arbitrable abstract contract.\r\n When developing arbitrable contracts, we need to:\r\n -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\r\n -Allow dispute creation. For this a function must:\r\n     -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\r\n     -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);\r","fullyImplemented":false,"linearizedBaseContracts":[1932],"name":"Arbitrable","scope":4540},"children":[{"attributes":{"constant":false,"name":"arbitrator","scope":1932,"stateVariable":true,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2049,"type":"contract Arbitrator"},"id":1836,"name":"UserDefinedTypeName","src":"36253:10:0"}],"id":1837,"name":"VariableDeclaration","src":"36253:28:0"},{"attributes":{"constant":false,"name":"arbitratorExtraData","scope":1932,"stateVariable":true,"storageLocation":"default","type":"bytes","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1838,"name":"ElementaryTypeName","src":"36288:5:0"}],"id":1839,"name":"VariableDeclaration","src":"36288:32:0"},{"attributes":{"documentation":null,"name":"onlyArbitrator","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1840,"name":"ParameterList","src":"36419:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1841,"name":"Identifier","src":"36420:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1842,"name":"Identifier","src":"36428:3:0"}],"id":1843,"name":"MemberAccess","src":"36428:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrator_$2049","typeString":"contract Arbitrator"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1844,"name":"ElementaryTypeNameExpression","src":"36440:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1837,"type":"contract Arbitrator","value":"arbitrator"},"id":1845,"name":"Identifier","src":"36448:10:0"}],"id":1846,"name":"FunctionCall","src":"36440:19:0"}],"id":1847,"name":"BinaryOperation","src":"36428:31:0"}],"id":1848,"name":"FunctionCall","src":"36420:40:0"}],"id":1849,"name":"ExpressionStatement","src":"36420:40:0"},{"id":1850,"name":"PlaceholderStatement","src":"36462:1:0"}],"id":1851,"name":"Block","src":"36419:46:0"}],"id":1852,"name":"ModifierDefinition","src":"36395:70:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a ruling is given.\r\n @param _arbitrator The arbitrator giving the ruling.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling The ruling which was given.\r","name":"Ruling"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1860,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2049,"type":"contract Arbitrator"},"id":1853,"name":"UserDefinedTypeName","src":"36733:10:0"}],"id":1854,"name":"VariableDeclaration","src":"36733:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1860,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1855,"name":"ElementaryTypeName","src":"36765:4:0"}],"id":1856,"name":"VariableDeclaration","src":"36765:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_ruling","scope":1860,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1857,"name":"ElementaryTypeName","src":"36790:4:0"}],"id":1858,"name":"VariableDeclaration","src":"36790:12:0"}],"id":1859,"name":"ParameterList","src":"36732:71:0"}],"id":1860,"name":"EventDefinition","src":"36720:84:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be emmited when meta-evidence is submitted.\r\n @param _metaEvidenceID Unique identifier of meta-evidence.\r\n @param _evidence A link to the meta-evidence JSON.\r","name":"MetaEvidence"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_metaEvidenceID","scope":1866,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1861,"name":"ElementaryTypeName","src":"37029:4:0"}],"id":1862,"name":"VariableDeclaration","src":"37029:28:0"},{"attributes":{"constant":false,"indexed":false,"name":"_evidence","scope":1866,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1863,"name":"ElementaryTypeName","src":"37059:6:0"}],"id":1864,"name":"VariableDeclaration","src":"37059:16:0"}],"id":1865,"name":"ParameterList","src":"37028:48:0"}],"id":1866,"name":"EventDefinition","src":"37010:67:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be emmited when a dispute is created to link the correct meta-evidence to the disputeID\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _metaEvidenceID Unique identifier of meta-evidence.\r","name":"Dispute"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1874,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2049,"type":"contract Arbitrator"},"id":1867,"name":"UserDefinedTypeName","src":"37414:10:0"}],"id":1868,"name":"VariableDeclaration","src":"37414:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1874,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1869,"name":"ElementaryTypeName","src":"37446:4:0"}],"id":1870,"name":"VariableDeclaration","src":"37446:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_metaEvidenceID","scope":1874,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1871,"name":"ElementaryTypeName","src":"37471:4:0"}],"id":1872,"name":"VariableDeclaration","src":"37471:20:0"}],"id":1873,"name":"ParameterList","src":"37413:79:0"}],"id":1874,"name":"EventDefinition","src":"37400:93:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due to gas considerations).\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\r\n @param _evidence A URI to the evidence JSON file whose name should be its keccak256 hash followed by .json.\r","name":"Evidence"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1884,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2049,"type":"contract Arbitrator"},"id":1875,"name":"UserDefinedTypeName","src":"38063:10:0"}],"id":1876,"name":"VariableDeclaration","src":"38063:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1884,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1877,"name":"ElementaryTypeName","src":"38095:4:0"}],"id":1878,"name":"VariableDeclaration","src":"38095:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_party","scope":1884,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1879,"name":"ElementaryTypeName","src":"38120:7:0"}],"id":1880,"name":"VariableDeclaration","src":"38120:14:0"},{"attributes":{"constant":false,"indexed":false,"name":"_evidence","scope":1884,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1881,"name":"ElementaryTypeName","src":"38136:6:0"}],"id":1882,"name":"VariableDeclaration","src":"38136:16:0"}],"id":1883,"name":"ParameterList","src":"38062:91:0"}],"id":1884,"name":"EventDefinition","src":"38048:106:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor. Choose the arbitrator.\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _arbitratorExtraData Extra data for the arbitrator.\r","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":1932,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_arbitrator","scope":1900,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2049,"type":"contract Arbitrator"},"id":1885,"name":"UserDefinedTypeName","src":"38361:10:0"}],"id":1886,"name":"VariableDeclaration","src":"38361:22:0"},{"attributes":{"constant":false,"name":"_arbitratorExtraData","scope":1900,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1887,"name":"ElementaryTypeName","src":"38385:5:0"}],"id":1888,"name":"VariableDeclaration","src":"38385:26:0"}],"id":1889,"name":"ParameterList","src":"38360:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":1890,"name":"ParameterList","src":"38420:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Arbitrator"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1837,"type":"contract Arbitrator","value":"arbitrator"},"id":1891,"name":"Identifier","src":"38431:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1886,"type":"contract Arbitrator","value":"_arbitrator"},"id":1892,"name":"Identifier","src":"38444:11:0"}],"id":1893,"name":"Assignment","src":"38431:24:0"}],"id":1894,"name":"ExpressionStatement","src":"38431:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1839,"type":"bytes storage ref","value":"arbitratorExtraData"},"id":1895,"name":"Identifier","src":"38466:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1888,"type":"bytes memory","value":"_arbitratorExtraData"},"id":1896,"name":"Identifier","src":"38488:20:0"}],"id":1897,"name":"Assignment","src":"38466:42:0"}],"id":1898,"name":"ExpressionStatement","src":"38466:42:0"}],"id":1899,"name":"Block","src":"38420:96:0"}],"id":1900,"name":"FunctionDefinition","src":"38349:167:0"},{"attributes":{"constant":false,"documentation":"@dev Give a ruling for a dispute. Must be called by the arbitrator.\r\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r","implemented":true,"isConstructor":false,"name":"rule","payable":false,"scope":1932,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1924,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1901,"name":"ElementaryTypeName","src":"38938:4:0"}],"id":1902,"name":"VariableDeclaration","src":"38938:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":1924,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1903,"name":"ElementaryTypeName","src":"38955:4:0"}],"id":1904,"name":"VariableDeclaration","src":"38955:12:0"}],"id":1905,"name":"ParameterList","src":"38937:31:0"},{"attributes":{"parameters":[null]},"children":[],"id":1908,"name":"ParameterList","src":"38991:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1852,"type":"modifier ()","value":"onlyArbitrator"},"id":1906,"name":"Identifier","src":"38976:14:0"}],"id":1907,"name":"ModifierInvocation","src":"38976:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrator_$2049","typeString":"contract Arbitrator"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1860,"type":"function (contract Arbitrator,uint256,uint256)","value":"Ruling"},"id":1909,"name":"Identifier","src":"39007:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrator","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2049,"type":"type(contract Arbitrator)","value":"Arbitrator"},"id":1910,"name":"Identifier","src":"39014:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1911,"name":"Identifier","src":"39025:3:0"}],"id":1912,"name":"MemberAccess","src":"39025:10:0"}],"id":1913,"name":"FunctionCall","src":"39014:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1902,"type":"uint256","value":"_disputeID"},"id":1914,"name":"Identifier","src":"39037:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1904,"type":"uint256","value":"_ruling"},"id":1915,"name":"Identifier","src":"39048:7:0"}],"id":1916,"name":"FunctionCall","src":"39007:49:0"}],"id":1917,"name":"EmitStatement","src":"39002:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1931,"type":"function (uint256,uint256)","value":"executeRuling"},"id":1918,"name":"Identifier","src":"39069:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1902,"type":"uint256","value":"_disputeID"},"id":1919,"name":"Identifier","src":"39083:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1904,"type":"uint256","value":"_ruling"},"id":1920,"name":"Identifier","src":"39094:7:0"}],"id":1921,"name":"FunctionCall","src":"39069:33:0"}],"id":1922,"name":"ExpressionStatement","src":"39069:33:0"}],"id":1923,"name":"Block","src":"38991:119:0"}],"id":1924,"name":"FunctionDefinition","src":"38924:186:0"},{"attributes":{"body":null,"constant":false,"documentation":"@dev Execute a ruling of a dispute.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"executeRuling","payable":false,"scope":1932,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1931,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1925,"name":"ElementaryTypeName","src":"39393:4:0"}],"id":1926,"name":"VariableDeclaration","src":"39393:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":1931,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1927,"name":"ElementaryTypeName","src":"39410:4:0"}],"id":1928,"name":"VariableDeclaration","src":"39410:12:0"}],"id":1929,"name":"ParameterList","src":"39392:31:0"},{"attributes":{"parameters":[null]},"children":[],"id":1930,"name":"ParameterList","src":"39432:0:0"}],"id":1931,"name":"FunctionDefinition","src":"39370:63:0"}],"id":1932,"name":"ContractDefinition","src":"36227:3209:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Arbitrator\r\n Arbitrator abstract contract.\r\n When developing arbitrator contracts we need to:\r\n -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\r\n -Define the functions for cost display (arbitrationCost and appealCost).\r\n -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).\r","fullyImplemented":false,"linearizedBaseContracts":[2049],"name":"Arbitrator","scope":4540},"children":[{"attributes":{"canonicalName":"Arbitrator.DisputeStatus","name":"DisputeStatus"},"children":[{"attributes":{"name":"Waiting"},"id":1933,"name":"EnumValue","src":"39967:7:0"},{"attributes":{"name":"Appealable"},"id":1934,"name":"EnumValue","src":"39976:10:0"},{"attributes":{"name":"Solved"},"id":1935,"name":"EnumValue","src":"39988:6:0"}],"id":1936,"name":"EnumDefinition","src":"39947:48:0"},{"attributes":{"documentation":null,"name":"requireArbitrationFee","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":1951,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1937,"name":"ElementaryTypeName","src":"40034:5:0"}],"id":1938,"name":"VariableDeclaration","src":"40034:16:0"}],"id":1939,"name":"ParameterList","src":"40033:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1940,"name":"Identifier","src":"40053:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1941,"name":"Identifier","src":"40061:3:0"}],"id":1942,"name":"MemberAccess","src":"40061:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":2005,"type":"function (bytes memory) view returns (uint256)","value":"arbitrationCost"},"id":1943,"name":"Identifier","src":"40072:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1938,"type":"bytes memory","value":"_extraData"},"id":1944,"name":"Identifier","src":"40088:10:0"}],"id":1945,"name":"FunctionCall","src":"40072:27:0"}],"id":1946,"name":"BinaryOperation","src":"40061:38:0"}],"id":1947,"name":"FunctionCall","src":"40053:47:0"}],"id":1948,"name":"ExpressionStatement","src":"40053:47:0"},{"id":1949,"name":"PlaceholderStatement","src":"40102:1:0"}],"id":1950,"name":"Block","src":"40052:53:0"}],"id":1951,"name":"ModifierDefinition","src":"40003:102:0"},{"attributes":{"documentation":null,"name":"requireAppealFee","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1969,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1952,"name":"ElementaryTypeName","src":"40137:4:0"}],"id":1953,"name":"VariableDeclaration","src":"40137:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1969,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1954,"name":"ElementaryTypeName","src":"40154:5:0"}],"id":1955,"name":"VariableDeclaration","src":"40154:16:0"}],"id":1956,"name":"ParameterList","src":"40136:35:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":1957,"name":"Identifier","src":"40173:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":1958,"name":"Identifier","src":"40181:3:0"}],"id":1959,"name":"MemberAccess","src":"40181:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":2034,"type":"function (uint256,bytes memory) view returns (uint256)","value":"appealCost"},"id":1960,"name":"Identifier","src":"40192:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1953,"type":"uint256","value":"_disputeID"},"id":1961,"name":"Identifier","src":"40203:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1955,"type":"bytes memory","value":"_extraData"},"id":1962,"name":"Identifier","src":"40215:10:0"}],"id":1963,"name":"FunctionCall","src":"40192:34:0"}],"id":1964,"name":"BinaryOperation","src":"40181:45:0"}],"id":1965,"name":"FunctionCall","src":"40173:54:0"}],"id":1966,"name":"ExpressionStatement","src":"40173:54:0"},{"id":1967,"name":"PlaceholderStatement","src":"40229:1:0"}],"id":1968,"name":"Block","src":"40172:60:0"}],"id":1969,"name":"ModifierDefinition","src":"40111:121:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a dispute can be appealed.\r\n @param _disputeID ID of the dispute.\r","name":"AppealPossible"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":1973,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1970,"name":"ElementaryTypeName","src":"40375:4:0"}],"id":1971,"name":"VariableDeclaration","src":"40375:15:0"}],"id":1972,"name":"ParameterList","src":"40374:17:0"}],"id":1973,"name":"EventDefinition","src":"40354:38:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a dispute is created.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r","name":"DisputeCreation"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1979,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1974,"name":"ElementaryTypeName","src":"40599:4:0"}],"id":1975,"name":"VariableDeclaration","src":"40599:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_arbitrable","scope":1979,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1932,"type":"contract Arbitrable"},"id":1976,"name":"UserDefinedTypeName","src":"40624:10:0"}],"id":1977,"name":"VariableDeclaration","src":"40624:22:0"}],"id":1978,"name":"ParameterList","src":"40598:49:0"}],"id":1979,"name":"EventDefinition","src":"40577:71:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when the current ruling is appealed.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r","name":"AppealDecision"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1985,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1980,"name":"ElementaryTypeName","src":"40864:4:0"}],"id":1981,"name":"VariableDeclaration","src":"40864:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_arbitrable","scope":1985,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1932,"type":"contract Arbitrable"},"id":1982,"name":"UserDefinedTypeName","src":"40889:10:0"}],"id":1983,"name":"VariableDeclaration","src":"40889:22:0"}],"id":1984,"name":"ParameterList","src":"40863:49:0"}],"id":1985,"name":"EventDefinition","src":"40843:70:0"},{"attributes":{"constant":false,"documentation":"@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost(_extraData).\r\n @param _choices Amount of choices the arbitrator can make in this dispute.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return disputeID ID of the dispute created.\r","implemented":true,"isConstructor":false,"name":"createDispute","payable":true,"scope":2049,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_choices","scope":1998,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1986,"name":"ElementaryTypeName","src":"41319:4:0"}],"id":1987,"name":"VariableDeclaration","src":"41319:13:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1998,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1988,"name":"ElementaryTypeName","src":"41334:5:0"}],"id":1989,"name":"VariableDeclaration","src":"41334:16:0"}],"id":1990,"name":"ParameterList","src":"41318:33:0"},{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":1998,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1994,"name":"ElementaryTypeName","src":"41409:4:0"}],"id":1995,"name":"VariableDeclaration","src":"41409:14:0"}],"id":1996,"name":"ParameterList","src":"41408:16:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1951,"type":"modifier (bytes memory)","value":"requireArbitrationFee"},"id":1991,"name":"Identifier","src":"41359:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1989,"type":"bytes memory","value":"_extraData"},"id":1992,"name":"Identifier","src":"41381:10:0"}],"id":1993,"name":"ModifierInvocation","src":"41359:33:0"},{"attributes":{"statements":[null]},"children":[],"id":1997,"name":"Block","src":"41426:2:0"}],"id":1998,"name":"FunctionDefinition","src":"41296:132:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"arbitrationCost","payable":false,"scope":2049,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":2005,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1999,"name":"ElementaryTypeName","src":"41797:5:0"}],"id":2000,"name":"VariableDeclaration","src":"41797:16:0"}],"id":2001,"name":"ParameterList","src":"41796:18:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":2005,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2002,"name":"ElementaryTypeName","src":"41839:4:0"}],"id":2003,"name":"VariableDeclaration","src":"41839:8:0"}],"id":2004,"name":"ParameterList","src":"41838:10:0"}],"id":2005,"name":"FunctionDefinition","src":"41772:77:0"},{"attributes":{"constant":false,"documentation":"@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give extra info on the appeal.\r","implemented":true,"isConstructor":false,"name":"appeal","payable":true,"scope":2049,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2025,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2006,"name":"ElementaryTypeName","src":"42120:4:0"}],"id":2007,"name":"VariableDeclaration","src":"42120:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":2025,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2008,"name":"ElementaryTypeName","src":"42137:5:0"}],"id":2009,"name":"VariableDeclaration","src":"42137:16:0"}],"id":2010,"name":"ParameterList","src":"42119:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":2015,"name":"ParameterList","src":"42210:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1969,"type":"modifier (uint256,bytes memory)","value":"requireAppealFee"},"id":2011,"name":"Identifier","src":"42162:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2007,"type":"uint256","value":"_disputeID"},"id":2012,"name":"Identifier","src":"42179:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2009,"type":"bytes memory","value":"_extraData"},"id":2013,"name":"Identifier","src":"42190:10:0"}],"id":2014,"name":"ModifierInvocation","src":"42162:39:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Arbitrable_$1932","typeString":"contract Arbitrable"}],"overloadedDeclarations":[null],"referencedDeclaration":1985,"type":"function (uint256,contract Arbitrable)","value":"AppealDecision"},"id":2016,"name":"Identifier","src":"42226:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2007,"type":"uint256","value":"_disputeID"},"id":2017,"name":"Identifier","src":"42241:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1932,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":2018,"name":"Identifier","src":"42253:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2019,"name":"Identifier","src":"42264:3:0"}],"id":2020,"name":"MemberAccess","src":"42264:10:0"}],"id":2021,"name":"FunctionCall","src":"42253:22:0"}],"id":2022,"name":"FunctionCall","src":"42226:50:0"}],"id":2023,"name":"EmitStatement","src":"42221:55:0"}],"id":2024,"name":"Block","src":"42210:74:0"}],"id":2025,"name":"FunctionDefinition","src":"42104:180:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"appealCost","payable":false,"scope":2049,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2034,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2026,"name":"ElementaryTypeName","src":"42703:4:0"}],"id":2027,"name":"VariableDeclaration","src":"42703:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":2034,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2028,"name":"ElementaryTypeName","src":"42720:5:0"}],"id":2029,"name":"VariableDeclaration","src":"42720:16:0"}],"id":2030,"name":"ParameterList","src":"42702:35:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":2034,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2031,"name":"ElementaryTypeName","src":"42762:4:0"}],"id":2032,"name":"VariableDeclaration","src":"42762:8:0"}],"id":2033,"name":"ParameterList","src":"42761:10:0"}],"id":2034,"name":"FunctionDefinition","src":"42683:89:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Return the status of a dispute.\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"disputeStatus","payable":false,"scope":2049,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2041,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2035,"name":"ElementaryTypeName","src":"42963:4:0"}],"id":2036,"name":"VariableDeclaration","src":"42963:15:0"}],"id":2037,"name":"ParameterList","src":"42962:17:0"},{"children":[{"attributes":{"constant":false,"name":"status","scope":2041,"stateVariable":false,"storageLocation":"default","type":"enum Arbitrator.DisputeStatus","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeStatus","referencedDeclaration":1936,"type":"enum Arbitrator.DisputeStatus"},"id":2038,"name":"UserDefinedTypeName","src":"43004:13:0"}],"id":2039,"name":"VariableDeclaration","src":"43004:20:0"}],"id":2040,"name":"ParameterList","src":"43003:22:0"}],"id":2041,"name":"FunctionDefinition","src":"42940:86:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The ruling which has been given or the one which will be given if there is no appeal.\r","implemented":false,"isConstructor":false,"modifiers":[null],"name":"currentRuling","payable":false,"scope":2049,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2048,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2042,"name":"ElementaryTypeName","src":"43334:4:0"}],"id":2043,"name":"VariableDeclaration","src":"43334:15:0"}],"id":2044,"name":"ParameterList","src":"43333:17:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":2048,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2045,"name":"ElementaryTypeName","src":"43375:4:0"}],"id":2046,"name":"VariableDeclaration","src":"43375:11:0"}],"id":2047,"name":"ParameterList","src":"43374:13:0"}],"id":2048,"name":"FunctionDefinition","src":"43311:77:0"}],"id":2049,"name":"ContractDefinition","src":"39919:3474:0"},{"attributes":{"contractDependencies":[498,2049],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[4539,498,2049],"name":"Kleros","scope":4540},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":2049,"type":"contract Arbitrator"},"id":2050,"name":"UserDefinedTypeName","src":"43420:10:0"}],"id":2051,"name":"InheritanceSpecifier","src":"43420:10:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ApproveAndCallFallBack","referencedDeclaration":498,"type":"contract ApproveAndCallFallBack"},"id":2052,"name":"UserDefinedTypeName","src":"43432:22:0"}],"id":2053,"name":"InheritanceSpecifier","src":"43432:22:0"},{"attributes":{"constant":false,"name":"pinakion","scope":4539,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":2054,"name":"UserDefinedTypeName","src":"43650:8:0"}],"id":2055,"name":"VariableDeclaration","src":"43650:24:0"},{"attributes":{"constant":true,"name":"NON_PAYABLE_AMOUNT","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2056,"name":"ElementaryTypeName","src":"43681:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"/","type":"int_const 5789...(69 digits omitted)...9967"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"int_const 1157...(70 digits omitted)...9934"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1","typeString":"int_const 1157...(70 digits omitted)...9934"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"-","type":"int_const 1157...(70 digits omitted)...9934"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1157...(70 digits omitted)...9936"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2057,"name":"Literal","src":"43724:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"323536","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 256","value":"256"},"id":2058,"name":"Literal","src":"43727:3:0"}],"id":2059,"name":"BinaryOperation","src":"43724:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2060,"name":"Literal","src":"43733:1:0"}],"id":2061,"name":"BinaryOperation","src":"43724:10:0"}],"id":2062,"name":"TupleExpression","src":"43723:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2063,"name":"Literal","src":"43738:1:0"}],"id":2064,"name":"BinaryOperation","src":"43723:16:0"}],"id":2065,"name":"VariableDeclaration","src":"43681:58:0"},{"attributes":{"constant":false,"name":"rng","scope":4539,"stateVariable":true,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1656,"type":"contract RNG"},"id":2066,"name":"UserDefinedTypeName","src":"44001:3:0"}],"id":2067,"name":"VariableDeclaration","src":"44001:14:0"},{"attributes":{"constant":false,"name":"arbitrationFeePerJuror","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2068,"name":"ElementaryTypeName","src":"44070:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"302e3035","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":"ether","token":"number","type":"int_const 50000000000000000","value":"0.05"},"id":2069,"name":"Literal","src":"44107:10:0"}],"id":2070,"name":"VariableDeclaration","src":"44070:47:0"},{"attributes":{"constant":false,"name":"defaultNumberJuror","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint16","visibility":"public"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":2071,"name":"ElementaryTypeName","src":"44169:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":2072,"name":"Literal","src":"44204:1:0"}],"id":2073,"name":"VariableDeclaration","src":"44169:36:0"},{"attributes":{"constant":false,"name":"minActivatedToken","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2074,"name":"ElementaryTypeName","src":"44266:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"int_const 100000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"302e31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"rational_const 1 / 10","value":"0.1"},"id":2075,"name":"Literal","src":"44298:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31653138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1000000000000000000","value":"1e18"},"id":2076,"name":"Literal","src":"44304:4:0"}],"id":2077,"name":"BinaryOperation","src":"44298:10:0"}],"id":2078,"name":"VariableDeclaration","src":"44266:42:0"},{"attributes":{"constant":false,"name":"timePerPeriod","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"public"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2079,"name":"ElementaryTypeName","src":"44370:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":2080,"name":"Literal","src":"44375:1:0"}],"id":2081,"name":"ArrayTypeName","src":"44370:7:0"}],"id":2082,"name":"VariableDeclaration","src":"44370:28:0"},{"attributes":{"constant":false,"name":"alpha","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2083,"name":"ElementaryTypeName","src":"44454:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2000","value":"2000"},"id":2084,"name":"Literal","src":"44474:4:0"}],"id":2085,"name":"VariableDeclaration","src":"44454:24:0"},{"attributes":{"constant":true,"name":"ALPHA_DIVISOR","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2086,"name":"ElementaryTypeName","src":"44515:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"316534","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10000","value":"1e4"},"id":2087,"name":"Literal","src":"44545:3:0"}],"id":2088,"name":"VariableDeclaration","src":"44515:33:0"},{"attributes":{"constant":false,"name":"maxAppeals","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2089,"name":"ElementaryTypeName","src":"44630:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":2090,"name":"Literal","src":"44655:1:0"}],"id":2091,"name":"VariableDeclaration","src":"44630:26:0"},{"attributes":{"constant":false,"name":"governor","scope":4539,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":2092,"name":"ElementaryTypeName","src":"44946:7:0"}],"id":2093,"name":"VariableDeclaration","src":"44946:23:0"},{"attributes":{"constant":false,"name":"session","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2094,"name":"ElementaryTypeName","src":"45073:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2095,"name":"Literal","src":"45095:1:0"}],"id":2096,"name":"VariableDeclaration","src":"45073:23:0"},{"attributes":{"constant":false,"name":"lastPeriodChange","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2097,"name":"ElementaryTypeName","src":"45141:4:0"}],"id":2098,"name":"VariableDeclaration","src":"45141:28:0"},{"attributes":{"constant":false,"name":"segmentSize","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2099,"name":"ElementaryTypeName","src":"45225:4:0"}],"id":2100,"name":"VariableDeclaration","src":"45225:23:0"},{"attributes":{"constant":false,"name":"rnBlock","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2101,"name":"ElementaryTypeName","src":"45304:4:0"}],"id":2102,"name":"VariableDeclaration","src":"45304:19:0"},{"attributes":{"constant":false,"name":"randomNumber","scope":4539,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2103,"name":"ElementaryTypeName","src":"45391:4:0"}],"id":2104,"name":"VariableDeclaration","src":"45391:24:0"},{"attributes":{"canonicalName":"Kleros.Period","name":"Period"},"children":[{"attributes":{"name":"Activation"},"id":2105,"name":"EnumValue","src":"45484:10:0"},{"attributes":{"name":"Draw"},"id":2106,"name":"EnumValue","src":"45572:4:0"},{"attributes":{"name":"Vote"},"id":2107,"name":"EnumValue","src":"45660:4:0"},{"attributes":{"name":"Appeal"},"id":2108,"name":"EnumValue","src":"45719:6:0"},{"attributes":{"name":"Execution"},"id":2109,"name":"EnumValue","src":"45780:9:0"}],"id":2110,"name":"EnumDefinition","src":"45461:421:0"},{"attributes":{"constant":false,"name":"period","scope":4539,"stateVariable":true,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":2110,"type":"enum Kleros.Period"},"id":2111,"name":"UserDefinedTypeName","src":"45890:6:0"}],"id":2112,"name":"VariableDeclaration","src":"45890:20:0"},{"attributes":{"canonicalName":"Kleros.Juror","name":"Juror","scope":4539,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"balance","scope":2123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2113,"name":"ElementaryTypeName","src":"45943:4:0"}],"id":2114,"name":"VariableDeclaration","src":"45943:12:0"},{"attributes":{"constant":false,"name":"atStake","scope":2123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2115,"name":"ElementaryTypeName","src":"46030:4:0"}],"id":2116,"name":"VariableDeclaration","src":"46030:12:0"},{"attributes":{"constant":false,"name":"lastSession","scope":2123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2117,"name":"ElementaryTypeName","src":"46267:4:0"}],"id":2118,"name":"VariableDeclaration","src":"46267:16:0"},{"attributes":{"constant":false,"name":"segmentStart","scope":2123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2119,"name":"ElementaryTypeName","src":"46338:4:0"}],"id":2120,"name":"VariableDeclaration","src":"46338:17:0"},{"attributes":{"constant":false,"name":"segmentEnd","scope":2123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2121,"name":"ElementaryTypeName","src":"46411:4:0"}],"id":2122,"name":"VariableDeclaration","src":"46411:15:0"}],"id":2123,"name":"StructDefinition","src":"45919:560:0"},{"attributes":{"constant":false,"name":"jurors","scope":4539,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct Kleros.Juror)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => struct Kleros.Juror)"},"children":[{"attributes":{"name":"address","type":"address"},"id":2124,"name":"ElementaryTypeName","src":"46496:7:0"},{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":2125,"name":"UserDefinedTypeName","src":"46507:5:0"}],"id":2126,"name":"Mapping","src":"46487:26:0"}],"id":2127,"name":"VariableDeclaration","src":"46487:40:0"},{"attributes":{"canonicalName":"Kleros.Vote","name":"Vote","scope":4539,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"account","scope":2132,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2128,"name":"ElementaryTypeName","src":"46559:7:0"}],"id":2129,"name":"VariableDeclaration","src":"46559:15:0"},{"attributes":{"constant":false,"name":"ruling","scope":2132,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2130,"name":"ElementaryTypeName","src":"46619:4:0"}],"id":2131,"name":"VariableDeclaration","src":"46619:11:0"}],"id":2132,"name":"StructDefinition","src":"46536:137:0"},{"attributes":{"canonicalName":"Kleros.VoteCounter","name":"VoteCounter","scope":4539,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":2141,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2133,"name":"ElementaryTypeName","src":"46711:4:0"}],"id":2134,"name":"VariableDeclaration","src":"46711:18:0"},{"attributes":{"constant":false,"name":"winningCount","scope":2141,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2135,"name":"ElementaryTypeName","src":"46826:4:0"}],"id":2136,"name":"VariableDeclaration","src":"46826:17:0"},{"attributes":{"constant":false,"name":"voteCount","scope":2141,"stateVariable":false,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2137,"name":"ElementaryTypeName","src":"46941:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":2138,"name":"ElementaryTypeName","src":"46949:4:0"}],"id":2139,"name":"Mapping","src":"46932:22:0"}],"id":2140,"name":"VariableDeclaration","src":"46932:32:0"}],"id":2141,"name":"StructDefinition","src":"46681:347:0"},{"attributes":{"canonicalName":"Kleros.DisputeState","name":"DisputeState"},"children":[{"attributes":{"name":"Open"},"id":2142,"name":"EnumValue","src":"47065:4:0"},{"attributes":{"name":"Resolving"},"id":2143,"name":"EnumValue","src":"47211:9:0"},{"attributes":{"name":"Executable"},"id":2144,"name":"EnumValue","src":"47334:10:0"},{"attributes":{"name":"Executed"},"id":2145,"name":"EnumValue","src":"47421:8:0"}],"id":2146,"name":"EnumDefinition","src":"47036:481:0"},{"attributes":{"canonicalName":"Kleros.Dispute","name":"Dispute","scope":4539,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"arbitrated","scope":2177,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1932,"type":"contract Arbitrable"},"id":2147,"name":"UserDefinedTypeName","src":"47551:10:0"}],"id":2148,"name":"VariableDeclaration","src":"47551:21:0"},{"attributes":{"constant":false,"name":"session","scope":2177,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2149,"name":"ElementaryTypeName","src":"47619:4:0"}],"id":2150,"name":"VariableDeclaration","src":"47619:12:0"},{"attributes":{"constant":false,"name":"appeals","scope":2177,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2151,"name":"ElementaryTypeName","src":"47700:4:0"}],"id":2152,"name":"VariableDeclaration","src":"47700:12:0"},{"attributes":{"constant":false,"name":"choices","scope":2177,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2153,"name":"ElementaryTypeName","src":"47760:4:0"}],"id":2154,"name":"VariableDeclaration","src":"47760:12:0"},{"attributes":{"constant":false,"name":"initialNumberJurors","scope":2177,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":2155,"name":"ElementaryTypeName","src":"47848:6:0"}],"id":2156,"name":"VariableDeclaration","src":"47848:26:0"},{"attributes":{"constant":false,"name":"arbitrationFeePerJuror","scope":2177,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2157,"name":"ElementaryTypeName","src":"47919:4:0"}],"id":2158,"name":"VariableDeclaration","src":"47919:27:0"},{"attributes":{"constant":false,"name":"state","scope":2177,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.DisputeState","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeState","referencedDeclaration":2146,"type":"enum Kleros.DisputeState"},"id":2159,"name":"UserDefinedTypeName","src":"48002:12:0"}],"id":2160,"name":"VariableDeclaration","src":"48002:18:0"},{"attributes":{"constant":false,"name":"votes","scope":2177,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.Vote[][]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Vote[][]"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Vote[]"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":2132,"type":"struct Kleros.Vote"},"id":2161,"name":"UserDefinedTypeName","src":"48069:4:0"}],"id":2162,"name":"ArrayTypeName","src":"48069:6:0"}],"id":2163,"name":"ArrayTypeName","src":"48069:8:0"}],"id":2164,"name":"VariableDeclaration","src":"48069:14:0"},{"attributes":{"constant":false,"name":"voteCounter","scope":2177,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.VoteCounter[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.VoteCounter[]"},"children":[{"attributes":{"contractScope":null,"name":"VoteCounter","referencedDeclaration":2141,"type":"struct Kleros.VoteCounter"},"id":2165,"name":"UserDefinedTypeName","src":"48155:11:0"}],"id":2166,"name":"ArrayTypeName","src":"48155:13:0"}],"id":2167,"name":"VariableDeclaration","src":"48155:25:0"},{"attributes":{"constant":false,"name":"lastSessionVote","scope":2177,"stateVariable":false,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":2168,"name":"ElementaryTypeName","src":"48257:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":2169,"name":"ElementaryTypeName","src":"48268:4:0"}],"id":2170,"name":"Mapping","src":"48248:25:0"}],"id":2171,"name":"VariableDeclaration","src":"48248:41:0"},{"attributes":{"constant":false,"name":"currentAppealToRepartition","scope":2177,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2172,"name":"ElementaryTypeName","src":"48373:4:0"}],"id":2173,"name":"VariableDeclaration","src":"48373:31:0"},{"attributes":{"constant":false,"name":"appealsRepartitioned","scope":2177,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.AppealsRepartitioned[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.AppealsRepartitioned[]"},"children":[{"attributes":{"contractScope":null,"name":"AppealsRepartitioned","referencedDeclaration":2195,"type":"struct Kleros.AppealsRepartitioned"},"id":2174,"name":"UserDefinedTypeName","src":"48460:20:0"}],"id":2175,"name":"ArrayTypeName","src":"48460:22:0"}],"id":2176,"name":"VariableDeclaration","src":"48460:43:0"}],"id":2177,"name":"StructDefinition","src":"47525:1070:0"},{"attributes":{"canonicalName":"Kleros.RepartitionStage","name":"RepartitionStage"},"children":[{"attributes":{"name":"Incoherent"},"id":2178,"name":"EnumValue","src":"48743:10:0"},{"attributes":{"name":"Coherent"},"id":2179,"name":"EnumValue","src":"48764:8:0"},{"attributes":{"name":"AtStake"},"id":2180,"name":"EnumValue","src":"48783:7:0"},{"attributes":{"name":"Complete"},"id":2181,"name":"EnumValue","src":"48801:8:0"}],"id":2182,"name":"EnumDefinition","src":"48603:213:0"},{"attributes":{"canonicalName":"Kleros.AppealsRepartitioned","name":"AppealsRepartitioned","scope":4539,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":2195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2183,"name":"ElementaryTypeName","src":"48863:4:0"}],"id":2184,"name":"VariableDeclaration","src":"48863:24:0"},{"attributes":{"constant":false,"name":"nbCoherent","scope":2195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2185,"name":"ElementaryTypeName","src":"48951:4:0"}],"id":2186,"name":"VariableDeclaration","src":"48951:15:0"},{"attributes":{"constant":false,"name":"currentIncoherentVote","scope":2195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2187,"name":"ElementaryTypeName","src":"49030:4:0"}],"id":2188,"name":"VariableDeclaration","src":"49030:26:0"},{"attributes":{"constant":false,"name":"currentCoherentVote","scope":2195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2189,"name":"ElementaryTypeName","src":"49108:4:0"}],"id":2190,"name":"VariableDeclaration","src":"49108:24:0"},{"attributes":{"constant":false,"name":"currentAtStakeVote","scope":2195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2191,"name":"ElementaryTypeName","src":"49179:4:0"}],"id":2192,"name":"VariableDeclaration","src":"49179:23:0"},{"attributes":{"constant":false,"name":"stage","scope":2195,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.RepartitionStage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepartitionStage","referencedDeclaration":2182,"type":"enum Kleros.RepartitionStage"},"id":2193,"name":"UserDefinedTypeName","src":"49250:16:0"}],"id":2194,"name":"VariableDeclaration","src":"49250:22:0"}],"id":2195,"name":"StructDefinition","src":"48824:541:0"},{"attributes":{"constant":false,"name":"disputes","scope":4539,"stateVariable":true,"storageLocation":"default","type":"struct Kleros.Dispute[]","value":null,"visibility":"public"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Dispute[]"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":2196,"name":"UserDefinedTypeName","src":"49373:7:0"}],"id":2197,"name":"ArrayTypeName","src":"49373:9:0"}],"id":2198,"name":"VariableDeclaration","src":"49373:25:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when we pass to a new period.\r\n @param _period The new period.\r\n @param _session The current session.\r","name":"NewPeriod"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_period","scope":2204,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":2110,"type":"enum Kleros.Period"},"id":2199,"name":"UserDefinedTypeName","src":"49692:6:0"}],"id":2200,"name":"VariableDeclaration","src":"49692:14:0"},{"attributes":{"constant":false,"indexed":true,"name":"_session","scope":2204,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2201,"name":"ElementaryTypeName","src":"49708:4:0"}],"id":2202,"name":"VariableDeclaration","src":"49708:21:0"}],"id":2203,"name":"ParameterList","src":"49691:39:0"}],"id":2204,"name":"EventDefinition","src":"49676:55:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when a juror wins or loses tokens.\r\n@param _account The juror affected.\r\n@param _disputeID The ID of the dispute.\r\n@param _amount The amount of parts of token which was won. Can be negative for lost amounts.\r","name":"TokenShift"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_account","scope":2212,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2205,"name":"ElementaryTypeName","src":"50020:7:0"}],"id":2206,"name":"VariableDeclaration","src":"50020:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":2212,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2207,"name":"ElementaryTypeName","src":"50046:4:0"}],"id":2208,"name":"VariableDeclaration","src":"50046:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":2212,"stateVariable":false,"storageLocation":"default","type":"int256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"int","type":"int256"},"id":2209,"name":"ElementaryTypeName","src":"50063:3:0"}],"id":2210,"name":"VariableDeclaration","src":"50063:11:0"}],"id":2211,"name":"ParameterList","src":"50019:56:0"}],"id":2212,"name":"EventDefinition","src":"50003:73:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emited when a juror wins arbitration fees.\r\n@param _account The account affected.\r\n@param _disputeID The ID of the dispute.\r\n@param _amount The amount of weis which was won.\r","name":"ArbitrationReward"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_account","scope":2220,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2213,"name":"ElementaryTypeName","src":"50330:7:0"}],"id":2214,"name":"VariableDeclaration","src":"50330:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":2220,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2215,"name":"ElementaryTypeName","src":"50356:4:0"}],"id":2216,"name":"VariableDeclaration","src":"50356:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":2220,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2217,"name":"ElementaryTypeName","src":"50373:4:0"}],"id":2218,"name":"VariableDeclaration","src":"50373:12:0"}],"id":2219,"name":"ParameterList","src":"50329:57:0"}],"id":2220,"name":"EventDefinition","src":"50306:81:0"},{"attributes":{"documentation":null,"name":"onlyBy","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_account","scope":2233,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2221,"name":"ElementaryTypeName","src":"50531:7:0"}],"id":2222,"name":"VariableDeclaration","src":"50531:16:0"}],"id":2223,"name":"ParameterList","src":"50530:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2224,"name":"Identifier","src":"50550:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2225,"name":"Identifier","src":"50558:3:0"}],"id":2226,"name":"MemberAccess","src":"50558:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2222,"type":"address","value":"_account"},"id":2227,"name":"Identifier","src":"50572:8:0"}],"id":2228,"name":"BinaryOperation","src":"50558:22:0"}],"id":2229,"name":"FunctionCall","src":"50550:31:0"}],"id":2230,"name":"ExpressionStatement","src":"50550:31:0"},{"id":2231,"name":"PlaceholderStatement","src":"50583:1:0"}],"id":2232,"name":"Block","src":"50549:37:0"}],"id":2233,"name":"ModifierDefinition","src":"50515:71:0"},{"attributes":{"documentation":null,"name":"onlyDuring","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_period","scope":2245,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":2110,"type":"enum Kleros.Period"},"id":2234,"name":"UserDefinedTypeName","src":"50612:6:0"}],"id":2235,"name":"VariableDeclaration","src":"50612:14:0"}],"id":2236,"name":"ParameterList","src":"50611:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2237,"name":"Identifier","src":"50629:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2238,"name":"Identifier","src":"50637:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2235,"type":"enum Kleros.Period","value":"_period"},"id":2239,"name":"Identifier","src":"50647:7:0"}],"id":2240,"name":"BinaryOperation","src":"50637:17:0"}],"id":2241,"name":"FunctionCall","src":"50629:26:0"}],"id":2242,"name":"ExpressionStatement","src":"50629:26:0"},{"id":2243,"name":"PlaceholderStatement","src":"50657:1:0"}],"id":2244,"name":"Block","src":"50628:32:0"}],"id":2245,"name":"ModifierDefinition","src":"50592:68:0"},{"attributes":{"documentation":null,"name":"onlyGovernor","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":2246,"name":"ParameterList","src":"50687:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2247,"name":"Identifier","src":"50691:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2248,"name":"Identifier","src":"50699:3:0"}],"id":2249,"name":"MemberAccess","src":"50699:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":2250,"name":"Identifier","src":"50713:8:0"}],"id":2251,"name":"BinaryOperation","src":"50699:22:0"}],"id":2252,"name":"FunctionCall","src":"50691:31:0"}],"id":2253,"name":"ExpressionStatement","src":"50691:31:0"},{"id":2254,"name":"PlaceholderStatement","src":"50724:1:0"}],"id":2255,"name":"Block","src":"50690:37:0"}],"id":2256,"name":"ModifierDefinition","src":"50666:61:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor.\r\n @param _pinakion The address of the pinakion contract.\r\n @param _rng The random number generator which will be used.\r\n @param _timePerPeriod The minimal time for each period (seconds).\r\n @param _governor Address of the governor contract.\r","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_pinakion","scope":2290,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1564,"type":"contract Pinakion"},"id":2257,"name":"UserDefinedTypeName","src":"51053:8:0"}],"id":2258,"name":"VariableDeclaration","src":"51053:18:0"},{"attributes":{"constant":false,"name":"_rng","scope":2290,"stateVariable":false,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1656,"type":"contract RNG"},"id":2259,"name":"UserDefinedTypeName","src":"51073:3:0"}],"id":2260,"name":"VariableDeclaration","src":"51073:8:0"},{"attributes":{"constant":false,"name":"_timePerPeriod","scope":2290,"stateVariable":false,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2261,"name":"ElementaryTypeName","src":"51083:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":2262,"name":"Literal","src":"51088:1:0"}],"id":2263,"name":"ArrayTypeName","src":"51083:7:0"}],"id":2264,"name":"VariableDeclaration","src":"51083:22:0"},{"attributes":{"constant":false,"name":"_governor","scope":2290,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2265,"name":"ElementaryTypeName","src":"51107:7:0"}],"id":2266,"name":"VariableDeclaration","src":"51107:17:0"}],"id":2267,"name":"ParameterList","src":"51052:73:0"},{"attributes":{"parameters":[null]},"children":[],"id":2268,"name":"ParameterList","src":"51133:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2055,"type":"contract Pinakion","value":"pinakion"},"id":2269,"name":"Identifier","src":"51144:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2258,"type":"contract Pinakion","value":"_pinakion"},"id":2270,"name":"Identifier","src":"51155:9:0"}],"id":2271,"name":"Assignment","src":"51144:20:0"}],"id":2272,"name":"ExpressionStatement","src":"51144:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RNG"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2067,"type":"contract RNG","value":"rng"},"id":2273,"name":"Identifier","src":"51175:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2260,"type":"contract RNG","value":"_rng"},"id":2274,"name":"Identifier","src":"51181:4:0"}],"id":2275,"name":"Assignment","src":"51175:10:0"}],"id":2276,"name":"ExpressionStatement","src":"51175:10:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2098,"type":"uint256","value":"lastPeriodChange"},"id":2277,"name":"Identifier","src":"51196:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4556,"type":"uint256","value":"now"},"id":2278,"name":"Identifier","src":"51215:3:0"}],"id":2279,"name":"Assignment","src":"51196:22:0"}],"id":2280,"name":"ExpressionStatement","src":"51196:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[5] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2082,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":2281,"name":"Identifier","src":"51229:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2264,"type":"uint256[5] memory","value":"_timePerPeriod"},"id":2282,"name":"Identifier","src":"51245:14:0"}],"id":2283,"name":"Assignment","src":"51229:30:0"}],"id":2284,"name":"ExpressionStatement","src":"51229:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":2285,"name":"Identifier","src":"51270:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2266,"type":"address","value":"_governor"},"id":2286,"name":"Identifier","src":"51281:9:0"}],"id":2287,"name":"Assignment","src":"51270:20:0"}],"id":2288,"name":"ExpressionStatement","src":"51270:20:0"}],"id":2289,"name":"Block","src":"51133:165:0"}],"id":2290,"name":"FunctionDefinition","src":"51041:257:0"},{"attributes":{"constant":false,"documentation":"@dev Callback of approveAndCall - transfer pinakions of a juror in the contract. Should be called by the pinakion contract. TRUSTED.\r\n @param _from The address making the transfer.\r\n @param _amount Amount of tokens to transfer to Kleros (in basic units).\r","implemented":true,"isConstructor":false,"name":"receiveApproval","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":497,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":2321,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2291,"name":"ElementaryTypeName","src":"51780:7:0"}],"id":2292,"name":"VariableDeclaration","src":"51780:13:0"},{"attributes":{"constant":false,"name":"_amount","scope":2321,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2293,"name":"ElementaryTypeName","src":"51795:4:0"}],"id":2294,"name":"VariableDeclaration","src":"51795:12:0"},{"attributes":{"constant":false,"name":"","scope":2321,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2295,"name":"ElementaryTypeName","src":"51809:7:0"}],"id":2296,"name":"VariableDeclaration","src":"51809:7:0"},{"attributes":{"constant":false,"name":"","scope":2321,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2297,"name":"ElementaryTypeName","src":"51818:5:0"}],"id":2298,"name":"VariableDeclaration","src":"51818:5:0"}],"id":2299,"name":"ParameterList","src":"51779:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":2303,"name":"ParameterList","src":"51849:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2233,"type":"modifier (address)","value":"onlyBy"},"id":2300,"name":"Identifier","src":"51832:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2055,"type":"contract Pinakion","value":"pinakion"},"id":2301,"name":"Identifier","src":"51839:8:0"}],"id":2302,"name":"ModifierInvocation","src":"51832:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2304,"name":"Identifier","src":"51860:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_Kleros_$4539","typeString":"contract Kleros"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":731,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2055,"type":"contract Pinakion","value":"pinakion"},"id":2305,"name":"Identifier","src":"51868:8:0"}],"id":2306,"name":"MemberAccess","src":"51868:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2292,"type":"address","value":"_from"},"id":2307,"name":"Identifier","src":"51890:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4589,"type":"contract Kleros","value":"this"},"id":2308,"name":"Identifier","src":"51897:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2294,"type":"uint256","value":"_amount"},"id":2309,"name":"Identifier","src":"51903:7:0"}],"id":2310,"name":"FunctionCall","src":"51868:43:0"}],"id":2311,"name":"FunctionCall","src":"51860:52:0"}],"id":2312,"name":"ExpressionStatement","src":"51860:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2313,"name":"Identifier","src":"51925:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2292,"type":"address","value":"_from"},"id":2314,"name":"Identifier","src":"51932:5:0"}],"id":2315,"name":"IndexAccess","src":"51925:13:0"}],"id":2316,"name":"MemberAccess","src":"51925:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2294,"type":"uint256","value":"_amount"},"id":2317,"name":"Identifier","src":"51950:7:0"}],"id":2318,"name":"Assignment","src":"51925:32:0"}],"id":2319,"name":"ExpressionStatement","src":"51925:32:0"}],"id":2320,"name":"Block","src":"51849:116:0"}],"id":2321,"name":"FunctionDefinition","src":"51755:210:0"},{"attributes":{"constant":false,"documentation":"@dev Withdraw tokens. Note that we can't withdraw the tokens which are still atStake. \r\n Jurors can't withdraw their tokens if they have deposited some during this session.\r\n This is to prevent jurors from withdrawing tokens they could loose.\r\n @param _value The amount to withdraw.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdraw","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":2374,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2322,"name":"ElementaryTypeName","src":"52313:4:0"}],"id":2323,"name":"VariableDeclaration","src":"52313:11:0"}],"id":2324,"name":"ParameterList","src":"52312:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":2325,"name":"ParameterList","src":"52333:0:0"},{"children":[{"attributes":{"assignments":[2327]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2374,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":2326,"name":"UserDefinedTypeName","src":"52344:5:0"}],"id":2327,"name":"VariableDeclaration","src":"52344:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2328,"name":"Identifier","src":"52366:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2329,"name":"Identifier","src":"52373:3:0"}],"id":2330,"name":"MemberAccess","src":"52373:10:0"}],"id":2331,"name":"IndexAccess","src":"52366:18:0"}],"id":2332,"name":"VariableDeclarationStatement","src":"52344:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2333,"name":"Identifier","src":"52395:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"atStake","referencedDeclaration":2116,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2327,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2334,"name":"Identifier","src":"52403:5:0"}],"id":2335,"name":"MemberAccess","src":"52403:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2327,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2336,"name":"Identifier","src":"52420:5:0"}],"id":2337,"name":"MemberAccess","src":"52420:13:0"}],"id":2338,"name":"BinaryOperation","src":"52403:30:0"}],"id":2339,"name":"FunctionCall","src":"52395:39:0"}],"id":2340,"name":"ExpressionStatement","src":"52395:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2341,"name":"Identifier","src":"52519:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2323,"type":"uint256","value":"_value"},"id":2342,"name":"Identifier","src":"52527:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2327,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2343,"name":"Identifier","src":"52537:5:0"}],"id":2344,"name":"MemberAccess","src":"52537:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"atStake","referencedDeclaration":2116,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2327,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2345,"name":"Identifier","src":"52551:5:0"}],"id":2346,"name":"MemberAccess","src":"52551:13:0"}],"id":2347,"name":"BinaryOperation","src":"52537:27:0"}],"id":2348,"name":"BinaryOperation","src":"52527:37:0"}],"id":2349,"name":"FunctionCall","src":"52519:46:0"}],"id":2350,"name":"ExpressionStatement","src":"52519:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2351,"name":"Identifier","src":"52576:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2118,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2327,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2352,"name":"Identifier","src":"52584:5:0"}],"id":2353,"name":"MemberAccess","src":"52584:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2354,"name":"Identifier","src":"52605:7:0"}],"id":2355,"name":"BinaryOperation","src":"52584:28:0"}],"id":2356,"name":"FunctionCall","src":"52576:37:0"}],"id":2357,"name":"ExpressionStatement","src":"52576:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2327,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2358,"name":"Identifier","src":"52626:5:0"}],"id":2360,"name":"MemberAccess","src":"52626:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2323,"type":"uint256","value":"_value"},"id":2361,"name":"Identifier","src":"52643:6:0"}],"id":2362,"name":"Assignment","src":"52626:23:0"}],"id":2363,"name":"ExpressionStatement","src":"52626:23:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2364,"name":"Identifier","src":"52660:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":681,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2055,"type":"contract Pinakion","value":"pinakion"},"id":2365,"name":"Identifier","src":"52668:8:0"}],"id":2366,"name":"MemberAccess","src":"52668:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2367,"name":"Identifier","src":"52686:3:0"}],"id":2368,"name":"MemberAccess","src":"52686:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2323,"type":"uint256","value":"_value"},"id":2369,"name":"Identifier","src":"52697:6:0"}],"id":2370,"name":"FunctionCall","src":"52668:36:0"}],"id":2371,"name":"FunctionCall","src":"52660:45:0"}],"id":2372,"name":"ExpressionStatement","src":"52660:45:0"}],"id":2373,"name":"Block","src":"52333:380:0"}],"id":2374,"name":"FunctionDefinition","src":"52295:418:0"},{"attributes":{"constant":false,"documentation":"@dev To call to go to a new period. TRUSTED.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"passPeriod","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":2375,"name":"ParameterList","src":"52965:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":2376,"name":"ParameterList","src":"52975:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2377,"name":"Identifier","src":"52986:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4556,"type":"uint256","value":"now"},"id":2378,"name":"Identifier","src":"52994:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2098,"type":"uint256","value":"lastPeriodChange"},"id":2379,"name":"Identifier","src":"52998:16:0"}],"id":2380,"name":"BinaryOperation","src":"52994:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2082,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":2381,"name":"Identifier","src":"53018:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":2382,"name":"ElementaryTypeNameExpression","src":"53032:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2383,"name":"Identifier","src":"53038:6:0"}],"id":2384,"name":"FunctionCall","src":"53032:13:0"}],"id":2385,"name":"IndexAccess","src":"53018:28:0"}],"id":2386,"name":"BinaryOperation","src":"52994:52:0"}],"id":2387,"name":"FunctionCall","src":"52986:61:0"}],"id":2388,"name":"ExpressionStatement","src":"52986:61:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2389,"name":"Identifier","src":"53064:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2390,"name":"Identifier","src":"53074:6:0"}],"id":2391,"name":"MemberAccess","src":"53074:17:0"}],"id":2392,"name":"BinaryOperation","src":"53064:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2102,"type":"uint256","value":"rnBlock"},"id":2393,"name":"Identifier","src":"53108:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4544,"type":"block","value":"block"},"id":2394,"name":"Identifier","src":"53118:5:0"}],"id":2395,"name":"MemberAccess","src":"53118:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2396,"name":"Literal","src":"53133:1:0"}],"id":2397,"name":"BinaryOperation","src":"53118:16:0"}],"id":2398,"name":"Assignment","src":"53108:26:0"}],"id":2399,"name":"ExpressionStatement","src":"53108:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"requestRN","referencedDeclaration":1620,"type":"function (uint256) payable external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2067,"type":"contract RNG","value":"rng"},"id":2400,"name":"Identifier","src":"53149:3:0"}],"id":2402,"name":"MemberAccess","src":"53149:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2102,"type":"uint256","value":"rnBlock"},"id":2403,"name":"Identifier","src":"53163:7:0"}],"id":2404,"name":"FunctionCall","src":"53149:22:0"}],"id":2405,"name":"ExpressionStatement","src":"53149:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2406,"name":"Identifier","src":"53186:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2407,"name":"Identifier","src":"53195:6:0"}],"id":2408,"name":"MemberAccess","src":"53195:11:0"}],"id":2409,"name":"Assignment","src":"53186:20:0"}],"id":2410,"name":"ExpressionStatement","src":"53186:20:0"}],"id":2411,"name":"Block","src":"53093:125:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2412,"name":"Identifier","src":"53228:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2413,"name":"Identifier","src":"53238:6:0"}],"id":2414,"name":"MemberAccess","src":"53238:11:0"}],"id":2415,"name":"BinaryOperation","src":"53228:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2104,"type":"uint256","value":"randomNumber"},"id":2416,"name":"Identifier","src":"53266:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getUncorrelatedRN","referencedDeclaration":1655,"type":"function (uint256) external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2067,"type":"contract RNG","value":"rng"},"id":2417,"name":"Identifier","src":"53281:3:0"}],"id":2418,"name":"MemberAccess","src":"53281:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2102,"type":"uint256","value":"rnBlock"},"id":2419,"name":"Identifier","src":"53303:7:0"}],"id":2420,"name":"FunctionCall","src":"53281:30:0"}],"id":2421,"name":"Assignment","src":"53266:45:0"}],"id":2422,"name":"ExpressionStatement","src":"53266:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2423,"name":"Identifier","src":"53326:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2104,"type":"uint256","value":"randomNumber"},"id":2424,"name":"Identifier","src":"53334:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2425,"name":"Literal","src":"53350:1:0"}],"id":2426,"name":"BinaryOperation","src":"53334:17:0"}],"id":2427,"name":"FunctionCall","src":"53326:26:0"}],"id":2428,"name":"ExpressionStatement","src":"53326:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2429,"name":"Identifier","src":"53367:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2430,"name":"Identifier","src":"53376:6:0"}],"id":2431,"name":"MemberAccess","src":"53376:11:0"}],"id":2432,"name":"Assignment","src":"53367:20:0"}],"id":2433,"name":"ExpressionStatement","src":"53367:20:0"}],"id":2434,"name":"Block","src":"53251:148:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2435,"name":"Identifier","src":"53409:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2436,"name":"Identifier","src":"53419:6:0"}],"id":2437,"name":"MemberAccess","src":"53419:11:0"}],"id":2438,"name":"BinaryOperation","src":"53409:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2439,"name":"Identifier","src":"53447:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2440,"name":"Identifier","src":"53456:6:0"}],"id":2441,"name":"MemberAccess","src":"53456:13:0"}],"id":2442,"name":"Assignment","src":"53447:22:0"}],"id":2443,"name":"ExpressionStatement","src":"53447:22:0"}],"id":2444,"name":"Block","src":"53432:49:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2445,"name":"Identifier","src":"53491:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2446,"name":"Identifier","src":"53501:6:0"}],"id":2447,"name":"MemberAccess","src":"53501:13:0"}],"id":2448,"name":"BinaryOperation","src":"53491:23:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2449,"name":"Identifier","src":"53531:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2450,"name":"Identifier","src":"53540:6:0"}],"id":2451,"name":"MemberAccess","src":"53540:16:0"}],"id":2452,"name":"Assignment","src":"53531:25:0"}],"id":2453,"name":"ExpressionStatement","src":"53531:25:0"}],"id":2454,"name":"Block","src":"53516:52:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2455,"name":"Identifier","src":"53578:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2456,"name":"Identifier","src":"53588:6:0"}],"id":2457,"name":"MemberAccess","src":"53588:16:0"}],"id":2458,"name":"BinaryOperation","src":"53578:26:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2459,"name":"Identifier","src":"53621:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2460,"name":"Identifier","src":"53630:6:0"}],"id":2461,"name":"MemberAccess","src":"53630:17:0"}],"id":2462,"name":"Assignment","src":"53621:26:0"}],"id":2463,"name":"ExpressionStatement","src":"53621:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2464,"name":"Identifier","src":"53664:7:0"}],"id":2465,"name":"UnaryOperation","src":"53662:9:0"}],"id":2466,"name":"ExpressionStatement","src":"53662:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2100,"type":"uint256","value":"segmentSize"},"id":2467,"name":"Identifier","src":"53686:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2468,"name":"Literal","src":"53700:1:0"}],"id":2469,"name":"Assignment","src":"53686:15:0"}],"id":2470,"name":"ExpressionStatement","src":"53686:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2102,"type":"uint256","value":"rnBlock"},"id":2471,"name":"Identifier","src":"53716:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2472,"name":"Literal","src":"53726:1:0"}],"id":2473,"name":"Assignment","src":"53716:11:0"}],"id":2474,"name":"ExpressionStatement","src":"53716:11:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2104,"type":"uint256","value":"randomNumber"},"id":2475,"name":"Identifier","src":"53742:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2476,"name":"Literal","src":"53757:1:0"}],"id":2477,"name":"Assignment","src":"53742:16:0"}],"id":2478,"name":"ExpressionStatement","src":"53742:16:0"}],"id":2479,"name":"Block","src":"53606:164:0"}],"id":2480,"name":"IfStatement","src":"53574:196:0"}],"id":2481,"name":"IfStatement","src":"53487:283:0"}],"id":2482,"name":"IfStatement","src":"53405:365:0"}],"id":2483,"name":"IfStatement","src":"53224:546:0"}],"id":2484,"name":"IfStatement","src":"53060:710:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2098,"type":"uint256","value":"lastPeriodChange"},"id":2485,"name":"Identifier","src":"53784:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4556,"type":"uint256","value":"now"},"id":2486,"name":"Identifier","src":"53803:3:0"}],"id":2487,"name":"Assignment","src":"53784:22:0"}],"id":2488,"name":"ExpressionStatement","src":"53784:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":2204,"type":"function (enum Kleros.Period,uint256)","value":"NewPeriod"},"id":2489,"name":"Identifier","src":"53817:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2490,"name":"Identifier","src":"53827:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2491,"name":"Identifier","src":"53835:7:0"}],"id":2492,"name":"FunctionCall","src":"53817:26:0"}],"id":2493,"name":"ExpressionStatement","src":"53817:26:0"}],"id":2494,"name":"Block","src":"52975:876:0"}],"id":2495,"name":"FunctionDefinition","src":"52946:905:0"},{"attributes":{"constant":false,"documentation":"@dev Deposit tokens in order to have chances of being drawn. Note that once tokens are deposited, \r\n there is no possibility of depositing more.\r\n @param _value Amount of tokens (in basic units) to deposit.\r","implemented":true,"isConstructor":false,"name":"activateTokens","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":2554,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2496,"name":"ElementaryTypeName","src":"54124:4:0"}],"id":2497,"name":"VariableDeclaration","src":"54124:11:0"}],"id":2498,"name":"ParameterList","src":"54123:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":2503,"name":"ParameterList","src":"54174:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2245,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2499,"name":"Identifier","src":"54144:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2500,"name":"Identifier","src":"54155:6:0"}],"id":2501,"name":"MemberAccess","src":"54155:17:0"}],"id":2502,"name":"ModifierInvocation","src":"54144:29:0"},{"children":[{"attributes":{"assignments":[2505]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2554,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":2504,"name":"UserDefinedTypeName","src":"54185:5:0"}],"id":2505,"name":"VariableDeclaration","src":"54185:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2506,"name":"Identifier","src":"54207:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2507,"name":"Identifier","src":"54214:3:0"}],"id":2508,"name":"MemberAccess","src":"54214:10:0"}],"id":2509,"name":"IndexAccess","src":"54207:18:0"}],"id":2510,"name":"VariableDeclarationStatement","src":"54185:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2511,"name":"Identifier","src":"54236:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2497,"type":"uint256","value":"_value"},"id":2512,"name":"Identifier","src":"54244:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2505,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2513,"name":"Identifier","src":"54254:5:0"}],"id":2514,"name":"MemberAccess","src":"54254:13:0"}],"id":2515,"name":"BinaryOperation","src":"54244:23:0"}],"id":2516,"name":"FunctionCall","src":"54236:32:0"}],"id":2517,"name":"ExpressionStatement","src":"54236:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2518,"name":"Identifier","src":"54279:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2497,"type":"uint256","value":"_value"},"id":2519,"name":"Identifier","src":"54287:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2078,"type":"uint256","value":"minActivatedToken"},"id":2520,"name":"Identifier","src":"54297:17:0"}],"id":2521,"name":"BinaryOperation","src":"54287:27:0"}],"id":2522,"name":"FunctionCall","src":"54279:36:0"}],"id":2523,"name":"ExpressionStatement","src":"54279:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2524,"name":"Identifier","src":"54326:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2118,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2505,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2525,"name":"Identifier","src":"54334:5:0"}],"id":2526,"name":"MemberAccess","src":"54334:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2527,"name":"Identifier","src":"54355:7:0"}],"id":2528,"name":"BinaryOperation","src":"54334:28:0"}],"id":2529,"name":"FunctionCall","src":"54326:37:0"}],"id":2530,"name":"ExpressionStatement","src":"54326:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"lastSession","referencedDeclaration":2118,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2505,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2531,"name":"Identifier","src":"54443:5:0"}],"id":2533,"name":"MemberAccess","src":"54443:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2534,"name":"Identifier","src":"54463:7:0"}],"id":2535,"name":"Assignment","src":"54443:27:0"}],"id":2536,"name":"ExpressionStatement","src":"54443:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"segmentStart","referencedDeclaration":2120,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2505,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2537,"name":"Identifier","src":"54481:5:0"}],"id":2539,"name":"MemberAccess","src":"54481:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2100,"type":"uint256","value":"segmentSize"},"id":2540,"name":"Identifier","src":"54502:11:0"}],"id":2541,"name":"Assignment","src":"54481:32:0"}],"id":2542,"name":"ExpressionStatement","src":"54481:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2100,"type":"uint256","value":"segmentSize"},"id":2543,"name":"Identifier","src":"54524:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2497,"type":"uint256","value":"_value"},"id":2544,"name":"Identifier","src":"54539:6:0"}],"id":2545,"name":"Assignment","src":"54524:21:0"}],"id":2546,"name":"ExpressionStatement","src":"54524:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"segmentEnd","referencedDeclaration":2122,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2505,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2547,"name":"Identifier","src":"54556:5:0"}],"id":2549,"name":"MemberAccess","src":"54556:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2100,"type":"uint256","value":"segmentSize"},"id":2550,"name":"Identifier","src":"54575:11:0"}],"id":2551,"name":"Assignment","src":"54556:30:0"}],"id":2552,"name":"ExpressionStatement","src":"54556:30:0"}],"id":2553,"name":"Block","src":"54174:422:0"}],"id":2554,"name":"FunctionDefinition","src":"54100:496:0"},{"attributes":{"constant":false,"documentation":"@dev Vote a ruling. Juror must input the draw ID he was drawn.\r\n Note that the complexity is O(d), where d is amount of times the juror was drawn.\r\n Since being drawn multiple time is a rare occurrence and that a juror can always vote with less weight than it has, it is not a problem.\r\n But note that it can lead to arbitration fees being kept by the contract and never distributed.\r\n @param _disputeID The ID of the dispute the juror was drawn.\r\n @param _ruling The ruling given.\r\n @param _draws The list of draws the juror was drawn. Draw numbering starts at 1 and the numbers should be increasing.\r","implemented":true,"isConstructor":false,"name":"voteRuling","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2738,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2555,"name":"ElementaryTypeName","src":"55286:4:0"}],"id":2556,"name":"VariableDeclaration","src":"55286:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":2738,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2557,"name":"ElementaryTypeName","src":"55303:4:0"}],"id":2558,"name":"VariableDeclaration","src":"55303:12:0"},{"attributes":{"constant":false,"name":"_draws","scope":2738,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2559,"name":"ElementaryTypeName","src":"55317:4:0"}],"id":2560,"name":"ArrayTypeName","src":"55317:6:0"}],"id":2561,"name":"VariableDeclaration","src":"55317:13:0"}],"id":2562,"name":"ParameterList","src":"55285:46:0"},{"attributes":{"parameters":[null]},"children":[],"id":2567,"name":"ParameterList","src":"55363:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2245,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2563,"name":"Identifier","src":"55339:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2564,"name":"Identifier","src":"55350:6:0"}],"id":2565,"name":"MemberAccess","src":"55350:11:0"}],"id":2566,"name":"ModifierInvocation","src":"55339:23:0"},{"children":[{"attributes":{"assignments":[2569]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":2738,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":2568,"name":"UserDefinedTypeName","src":"55374:7:0"}],"id":2569,"name":"VariableDeclaration","src":"55374:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2570,"name":"Identifier","src":"55400:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2556,"type":"uint256","value":"_disputeID"},"id":2571,"name":"Identifier","src":"55409:10:0"}],"id":2572,"name":"IndexAccess","src":"55400:20:0"}],"id":2573,"name":"VariableDeclarationStatement","src":"55374:46:0"},{"attributes":{"assignments":[2575]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2738,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":2574,"name":"UserDefinedTypeName","src":"55431:5:0"}],"id":2575,"name":"VariableDeclaration","src":"55431:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2576,"name":"Identifier","src":"55453:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2577,"name":"Identifier","src":"55460:3:0"}],"id":2578,"name":"MemberAccess","src":"55460:10:0"}],"id":2579,"name":"IndexAccess","src":"55453:18:0"}],"id":2580,"name":"VariableDeclarationStatement","src":"55431:40:0"},{"attributes":{"assignments":[2582]},"children":[{"attributes":{"constant":false,"name":"voteCounter","scope":2738,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.VoteCounter","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"VoteCounter","referencedDeclaration":2141,"type":"struct Kleros.VoteCounter"},"id":2581,"name":"UserDefinedTypeName","src":"55482:11:0"}],"id":2582,"name":"VariableDeclaration","src":"55482:31:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2583,"name":"Identifier","src":"55516:7:0"}],"id":2584,"name":"MemberAccess","src":"55516:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2585,"name":"Identifier","src":"55536:7:0"}],"id":2586,"name":"MemberAccess","src":"55536:15:0"}],"id":2587,"name":"IndexAccess","src":"55516:36:0"}],"id":2588,"name":"VariableDeclarationStatement","src":"55482:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2589,"name":"Identifier","src":"55563:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2171,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2590,"name":"Identifier","src":"55571:7:0"}],"id":2591,"name":"MemberAccess","src":"55571:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2592,"name":"Identifier","src":"55595:3:0"}],"id":2593,"name":"MemberAccess","src":"55595:10:0"}],"id":2594,"name":"IndexAccess","src":"55571:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2595,"name":"Identifier","src":"55610:7:0"}],"id":2596,"name":"BinaryOperation","src":"55571:46:0"}],"id":2597,"name":"FunctionCall","src":"55563:55:0"}],"id":2598,"name":"ExpressionStatement","src":"55563:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2599,"name":"Identifier","src":"55666:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2558,"type":"uint256","value":"_ruling"},"id":2600,"name":"Identifier","src":"55674:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"choices","referencedDeclaration":2154,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2601,"name":"Identifier","src":"55685:7:0"}],"id":2602,"name":"MemberAccess","src":"55685:15:0"}],"id":2603,"name":"BinaryOperation","src":"55674:26:0"}],"id":2604,"name":"FunctionCall","src":"55666:35:0"}],"id":2605,"name":"ExpressionStatement","src":"55666:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2606,"name":"Identifier","src":"55772:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3815,"type":"function (address,uint256,uint256[] memory) view returns (bool)","value":"validDraws"},"id":2607,"name":"Identifier","src":"55780:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2608,"name":"Identifier","src":"55791:3:0"}],"id":2609,"name":"MemberAccess","src":"55791:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2556,"type":"uint256","value":"_disputeID"},"id":2610,"name":"Identifier","src":"55803:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2561,"type":"uint256[] memory","value":"_draws"},"id":2611,"name":"Identifier","src":"55815:6:0"}],"id":2612,"name":"FunctionCall","src":"55780:42:0"}],"id":2613,"name":"FunctionCall","src":"55772:51:0"}],"id":2614,"name":"ExpressionStatement","src":"55772:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2171,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2615,"name":"Identifier","src":"55836:7:0"}],"id":2619,"name":"MemberAccess","src":"55836:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2617,"name":"Identifier","src":"55860:3:0"}],"id":2618,"name":"MemberAccess","src":"55860:10:0"}],"id":2620,"name":"IndexAccess","src":"55836:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2621,"name":"Identifier","src":"55874:7:0"}],"id":2622,"name":"Assignment","src":"55836:45:0"}],"id":2623,"name":"ExpressionStatement","src":"55836:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2140,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2624,"name":"Identifier","src":"55892:11:0"}],"id":2627,"name":"MemberAccess","src":"55892:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2558,"type":"uint256","value":"_ruling"},"id":2626,"name":"Identifier","src":"55914:7:0"}],"id":2628,"name":"IndexAccess","src":"55892:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2561,"type":"uint256[] memory","value":"_draws"},"id":2629,"name":"Identifier","src":"55926:6:0"}],"id":2630,"name":"MemberAccess","src":"55926:13:0"}],"id":2631,"name":"Assignment","src":"55892:47:0"}],"id":2632,"name":"ExpressionStatement","src":"55892:47:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2136,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2633,"name":"Identifier","src":"55954:11:0"}],"id":2634,"name":"MemberAccess","src":"55954:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2140,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2635,"name":"Identifier","src":"55981:11:0"}],"id":2636,"name":"MemberAccess","src":"55981:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2558,"type":"uint256","value":"_ruling"},"id":2637,"name":"Identifier","src":"56003:7:0"}],"id":2638,"name":"IndexAccess","src":"55981:30:0"}],"id":2639,"name":"BinaryOperation","src":"55954:57:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningCount","referencedDeclaration":2136,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2640,"name":"Identifier","src":"56028:11:0"}],"id":2642,"name":"MemberAccess","src":"56028:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2140,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2643,"name":"Identifier","src":"56055:11:0"}],"id":2644,"name":"MemberAccess","src":"56055:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2558,"type":"uint256","value":"_ruling"},"id":2645,"name":"Identifier","src":"56077:7:0"}],"id":2646,"name":"IndexAccess","src":"56055:30:0"}],"id":2647,"name":"Assignment","src":"56028:57:0"}],"id":2648,"name":"ExpressionStatement","src":"56028:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningChoice","referencedDeclaration":2134,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2649,"name":"Identifier","src":"56100:11:0"}],"id":2651,"name":"MemberAccess","src":"56100:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2558,"type":"uint256","value":"_ruling"},"id":2652,"name":"Identifier","src":"56128:7:0"}],"id":2653,"name":"Assignment","src":"56100:35:0"}],"id":2654,"name":"ExpressionStatement","src":"56100:35:0"}],"id":2655,"name":"Block","src":"56013:134:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2136,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2656,"name":"Identifier","src":"56157:11:0"}],"id":2657,"name":"MemberAccess","src":"56157:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2140,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2658,"name":"Identifier","src":"56183:11:0"}],"id":2659,"name":"MemberAccess","src":"56183:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2558,"type":"uint256","value":"_ruling"},"id":2660,"name":"Identifier","src":"56205:7:0"}],"id":2661,"name":"IndexAccess","src":"56183:30:0"}],"id":2662,"name":"BinaryOperation","src":"56157:56:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2561,"type":"uint256[] memory","value":"_draws"},"id":2663,"name":"Identifier","src":"56217:6:0"}],"id":2664,"name":"MemberAccess","src":"56217:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2665,"name":"Literal","src":"56232:1:0"}],"id":2666,"name":"BinaryOperation","src":"56217:16:0"}],"id":2667,"name":"BinaryOperation","src":"56157:76:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningChoice","referencedDeclaration":2134,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2582,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2668,"name":"Identifier","src":"56347:11:0"}],"id":2670,"name":"MemberAccess","src":"56347:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2671,"name":"Literal","src":"56375:1:0"}],"id":2672,"name":"Assignment","src":"56347:29:0"}],"id":2673,"name":"ExpressionStatement","src":"56347:29:0"}],"id":2674,"name":"Block","src":"56235:178:0"}],"id":2675,"name":"IfStatement","src":"56153:260:0"}],"id":2676,"name":"IfStatement","src":"55950:463:0"},{"children":[{"attributes":{"assignments":[2678]},"children":[{"attributes":{"constant":false,"name":"i","scope":2738,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2677,"name":"ElementaryTypeName","src":"56428:4:0"}],"id":2678,"name":"VariableDeclaration","src":"56428:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2679,"name":"Literal","src":"56437:1:0"}],"id":2680,"name":"VariableDeclarationStatement","src":"56428:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2678,"type":"uint256","value":"i"},"id":2681,"name":"Identifier","src":"56440:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2561,"type":"uint256[] memory","value":"_draws"},"id":2682,"name":"Identifier","src":"56444:6:0"}],"id":2683,"name":"MemberAccess","src":"56444:13:0"}],"id":2684,"name":"BinaryOperation","src":"56440:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2678,"type":"uint256","value":"i"},"id":2685,"name":"Identifier","src":"56461:1:0"}],"id":2686,"name":"UnaryOperation","src":"56459:3:0"}],"id":2687,"name":"ExpressionStatement","src":"56459:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vote_$2132_memory","typeString":"struct Kleros.Vote memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (struct Kleros.Vote storage ref) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2688,"name":"Identifier","src":"56479:7:0"}],"id":2692,"name":"MemberAccess","src":"56479:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2690,"name":"Identifier","src":"56493:7:0"}],"id":2691,"name":"MemberAccess","src":"56493:15:0"}],"id":2693,"name":"IndexAccess","src":"56479:30:0"}],"id":2694,"name":"MemberAccess","src":"56479:35:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["account","ruling"],"type":"struct Kleros.Vote memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2132,"type":"type(struct Kleros.Vote storage pointer)","value":"Vote"},"id":2695,"name":"Identifier","src":"56515:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2696,"name":"Identifier","src":"56548:3:0"}],"id":2697,"name":"MemberAccess","src":"56548:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2558,"type":"uint256","value":"_ruling"},"id":2698,"name":"Identifier","src":"56585:7:0"}],"id":2699,"name":"FunctionCall","src":"56515:93:0"}],"id":2700,"name":"FunctionCall","src":"56479:130:0"}],"id":2701,"name":"ExpressionStatement","src":"56479:130:0"}],"id":2702,"name":"Block","src":"56464:157:0"}],"id":2703,"name":"ForStatement","src":"56423:198:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":2116,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2575,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2704,"name":"Identifier","src":"56633:5:0"}],"id":2706,"name":"MemberAccess","src":"56633:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2561,"type":"uint256[] memory","value":"_draws"},"id":2707,"name":"Identifier","src":"56650:6:0"}],"id":2708,"name":"MemberAccess","src":"56650:13:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":4127,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":2709,"name":"Identifier","src":"56666:15:0"}],"id":2710,"name":"FunctionCall","src":"56666:17:0"}],"id":2711,"name":"BinaryOperation","src":"56650:33:0"}],"id":2712,"name":"Assignment","src":"56633:50:0"}],"id":2713,"name":"ExpressionStatement","src":"56633:50:0"},{"attributes":{"assignments":[2715]},"children":[{"attributes":{"constant":false,"name":"feeToPay","scope":2738,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2714,"name":"ElementaryTypeName","src":"56694:4:0"}],"id":2715,"name":"VariableDeclaration","src":"56694:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2561,"type":"uint256[] memory","value":"_draws"},"id":2716,"name":"Identifier","src":"56710:6:0"}],"id":2717,"name":"MemberAccess","src":"56710:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2158,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2569,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2718,"name":"Identifier","src":"56726:7:0"}],"id":2719,"name":"MemberAccess","src":"56726:30:0"}],"id":2720,"name":"BinaryOperation","src":"56710:46:0"}],"id":2721,"name":"VariableDeclarationStatement","src":"56694:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2722,"name":"Identifier","src":"56767:3:0"}],"id":2725,"name":"MemberAccess","src":"56767:10:0"}],"id":2726,"name":"MemberAccess","src":"56767:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2715,"type":"uint256","value":"feeToPay"},"id":2727,"name":"Identifier","src":"56787:8:0"}],"id":2728,"name":"FunctionCall","src":"56767:29:0"}],"id":2729,"name":"ExpressionStatement","src":"56767:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":2220,"type":"function (address,uint256,uint256)","value":"ArbitrationReward"},"id":2730,"name":"Identifier","src":"56807:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2731,"name":"Identifier","src":"56825:3:0"}],"id":2732,"name":"MemberAccess","src":"56825:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2556,"type":"uint256","value":"_disputeID"},"id":2733,"name":"Identifier","src":"56837:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2715,"type":"uint256","value":"feeToPay"},"id":2734,"name":"Identifier","src":"56849:8:0"}],"id":2735,"name":"FunctionCall","src":"56807:51:0"}],"id":2736,"name":"ExpressionStatement","src":"56807:51:0"}],"id":2737,"name":"Block","src":"55363:1503:0"}],"id":2738,"name":"FunctionDefinition","src":"55266:1600:0"},{"attributes":{"constant":false,"documentation":"@dev Steal part of the tokens and the arbitration fee of a juror who failed to vote.\r\n Note that a juror who voted but without all his weight can't be penalized.\r\n It is possible to not penalize with the maximum weight.\r\n But note that it can lead to arbitration fees being kept by the contract and never distributed.\r\n @param _jurorAddress Address of the juror to steal tokens from.\r\n @param _disputeID The ID of the dispute the juror was drawn.\r\n @param _draws The list of draws the juror was drawn. Numbering starts at 1 and the numbers should be increasing.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"penalizeInactiveJuror","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_jurorAddress","scope":2885,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2739,"name":"ElementaryTypeName","src":"57527:7:0"}],"id":2740,"name":"VariableDeclaration","src":"57527:21:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":2885,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2741,"name":"ElementaryTypeName","src":"57550:4:0"}],"id":2742,"name":"VariableDeclaration","src":"57550:15:0"},{"attributes":{"constant":false,"name":"_draws","scope":2885,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2743,"name":"ElementaryTypeName","src":"57567:4:0"}],"id":2744,"name":"ArrayTypeName","src":"57567:6:0"}],"id":2745,"name":"VariableDeclaration","src":"57567:13:0"}],"id":2746,"name":"ParameterList","src":"57526:55:0"},{"attributes":{"parameters":[null]},"children":[],"id":2747,"name":"ParameterList","src":"57589:0:0"},{"children":[{"attributes":{"assignments":[2749]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":2885,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":2748,"name":"UserDefinedTypeName","src":"57600:7:0"}],"id":2749,"name":"VariableDeclaration","src":"57600:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2750,"name":"Identifier","src":"57626:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"uint256","value":"_disputeID"},"id":2751,"name":"Identifier","src":"57635:10:0"}],"id":2752,"name":"IndexAccess","src":"57626:20:0"}],"id":2753,"name":"VariableDeclarationStatement","src":"57600:46:0"},{"attributes":{"assignments":[2755]},"children":[{"attributes":{"constant":false,"name":"inactiveJuror","scope":2885,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":2754,"name":"UserDefinedTypeName","src":"57657:5:0"}],"id":2755,"name":"VariableDeclaration","src":"57657:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2756,"name":"Identifier","src":"57687:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2740,"type":"address","value":"_jurorAddress"},"id":2757,"name":"Identifier","src":"57694:13:0"}],"id":2758,"name":"IndexAccess","src":"57687:21:0"}],"id":2759,"name":"VariableDeclarationStatement","src":"57657:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2760,"name":"Identifier","src":"57719:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":2761,"name":"Identifier","src":"57727:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2762,"name":"Identifier","src":"57736:6:0"}],"id":2763,"name":"MemberAccess","src":"57736:11:0"}],"id":2764,"name":"BinaryOperation","src":"57727:20:0"}],"id":2765,"name":"FunctionCall","src":"57719:29:0"}],"id":2766,"name":"ExpressionStatement","src":"57719:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2767,"name":"Identifier","src":"57759:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2171,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2749,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2768,"name":"Identifier","src":"57767:7:0"}],"id":2769,"name":"MemberAccess","src":"57767:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2740,"type":"address","value":"_jurorAddress"},"id":2770,"name":"Identifier","src":"57791:13:0"}],"id":2771,"name":"IndexAccess","src":"57767:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2772,"name":"Identifier","src":"57809:7:0"}],"id":2773,"name":"BinaryOperation","src":"57767:49:0"}],"id":2774,"name":"FunctionCall","src":"57759:58:0"}],"id":2775,"name":"ExpressionStatement","src":"57759:58:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2171,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2749,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2776,"name":"Identifier","src":"57862:7:0"}],"id":2779,"name":"MemberAccess","src":"57862:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2740,"type":"address","value":"_jurorAddress"},"id":2778,"name":"Identifier","src":"57886:13:0"}],"id":2780,"name":"IndexAccess","src":"57862:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2781,"name":"Identifier","src":"57903:7:0"}],"id":2782,"name":"Assignment","src":"57862:48:0"}],"id":2783,"name":"ExpressionStatement","src":"57862:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2784,"name":"Identifier","src":"57980:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3815,"type":"function (address,uint256,uint256[] memory) view returns (bool)","value":"validDraws"},"id":2785,"name":"Identifier","src":"57988:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2740,"type":"address","value":"_jurorAddress"},"id":2786,"name":"Identifier","src":"57999:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"uint256","value":"_disputeID"},"id":2787,"name":"Identifier","src":"58014:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2745,"type":"uint256[] memory","value":"_draws"},"id":2788,"name":"Identifier","src":"58026:6:0"}],"id":2789,"name":"FunctionCall","src":"57988:45:0"}],"id":2790,"name":"FunctionCall","src":"57980:54:0"}],"id":2791,"name":"ExpressionStatement","src":"57980:54:0"},{"attributes":{"assignments":[2793]},"children":[{"attributes":{"constant":false,"name":"penality","scope":2885,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2792,"name":"ElementaryTypeName","src":"58045:4:0"}],"id":2793,"name":"VariableDeclaration","src":"58045:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2745,"type":"uint256[] memory","value":"_draws"},"id":2794,"name":"Identifier","src":"58061:6:0"}],"id":2795,"name":"MemberAccess","src":"58061:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2078,"type":"uint256","value":"minActivatedToken"},"id":2796,"name":"Identifier","src":"58077:17:0"}],"id":2797,"name":"BinaryOperation","src":"58061:33:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2798,"name":"Literal","src":"58097:1:0"}],"id":2799,"name":"BinaryOperation","src":"58061:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2085,"type":"uint256","value":"alpha"},"id":2800,"name":"Identifier","src":"58101:5:0"}],"id":2801,"name":"BinaryOperation","src":"58061:45:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2088,"type":"uint256","value":"ALPHA_DIVISOR"},"id":2802,"name":"Identifier","src":"58109:13:0"}],"id":2803,"name":"BinaryOperation","src":"58061:61:0"}],"id":2804,"name":"VariableDeclarationStatement","src":"58045:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2805,"name":"Identifier","src":"58133:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2806,"name":"Identifier","src":"58145:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2755,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2807,"name":"Identifier","src":"58156:13:0"}],"id":2808,"name":"MemberAccess","src":"58156:21:0"}],"id":2809,"name":"BinaryOperation","src":"58145:32:0"}],"id":2810,"name":"TupleExpression","src":"58144:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2811,"name":"Identifier","src":"58181:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2755,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2812,"name":"Identifier","src":"58192:13:0"}],"id":2813,"name":"MemberAccess","src":"58192:21:0"}],"id":2814,"name":"Conditional","src":"58144:69:0"}],"id":2815,"name":"Assignment","src":"58133:80:0"}],"id":2816,"name":"ExpressionStatement","src":"58133:80:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2755,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2817,"name":"Identifier","src":"58282:13:0"}],"id":2819,"name":"MemberAccess","src":"58282:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2820,"name":"Identifier","src":"58307:8:0"}],"id":2821,"name":"Assignment","src":"58282:33:0"}],"id":2822,"name":"ExpressionStatement","src":"58282:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2823,"name":"Identifier","src":"58326:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2740,"type":"address","value":"_jurorAddress"},"id":2824,"name":"Identifier","src":"58337:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"uint256","value":"_disputeID"},"id":2825,"name":"Identifier","src":"58352:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"int256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2826,"name":"ElementaryTypeNameExpression","src":"58365:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2827,"name":"Identifier","src":"58369:8:0"}],"id":2828,"name":"FunctionCall","src":"58365:13:0"}],"id":2829,"name":"UnaryOperation","src":"58364:14:0"}],"id":2830,"name":"FunctionCall","src":"58326:53:0"}],"id":2831,"name":"ExpressionStatement","src":"58326:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2832,"name":"Identifier","src":"58390:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2833,"name":"Identifier","src":"58397:3:0"}],"id":2834,"name":"MemberAccess","src":"58397:10:0"}],"id":2835,"name":"IndexAccess","src":"58390:18:0"}],"id":2836,"name":"MemberAccess","src":"58390:26:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2837,"name":"Identifier","src":"58420:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2838,"name":"Literal","src":"58431:1:0"}],"id":2839,"name":"BinaryOperation","src":"58420:12:0"}],"id":2840,"name":"Assignment","src":"58390:42:0"}],"id":2841,"name":"ExpressionStatement","src":"58390:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2842,"name":"Identifier","src":"58486:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2843,"name":"Identifier","src":"58497:3:0"}],"id":2844,"name":"MemberAccess","src":"58497:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"uint256","value":"_disputeID"},"id":2845,"name":"Identifier","src":"58509:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2846,"name":"ElementaryTypeNameExpression","src":"58521:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2847,"name":"Identifier","src":"58525:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2848,"name":"Literal","src":"58536:1:0"}],"id":2849,"name":"BinaryOperation","src":"58525:12:0"}],"id":2850,"name":"FunctionCall","src":"58521:17:0"}],"id":2851,"name":"FunctionCall","src":"58486:53:0"}],"id":2852,"name":"ExpressionStatement","src":"58486:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2853,"name":"Identifier","src":"58550:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":2854,"name":"Identifier","src":"58557:8:0"}],"id":2855,"name":"IndexAccess","src":"58550:16:0"}],"id":2856,"name":"MemberAccess","src":"58550:24:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2857,"name":"Identifier","src":"58578:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2858,"name":"Literal","src":"58589:1:0"}],"id":2859,"name":"BinaryOperation","src":"58578:12:0"}],"id":2860,"name":"Assignment","src":"58550:40:0"}],"id":2861,"name":"ExpressionStatement","src":"58550:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2862,"name":"Identifier","src":"58636:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":2863,"name":"Identifier","src":"58647:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"uint256","value":"_disputeID"},"id":2864,"name":"Identifier","src":"58657:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2865,"name":"ElementaryTypeNameExpression","src":"58669:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2793,"type":"uint256","value":"penality"},"id":2866,"name":"Identifier","src":"58673:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2867,"name":"Literal","src":"58684:1:0"}],"id":2868,"name":"BinaryOperation","src":"58673:12:0"}],"id":2869,"name":"FunctionCall","src":"58669:17:0"}],"id":2870,"name":"FunctionCall","src":"58636:51:0"}],"id":2871,"name":"ExpressionStatement","src":"58636:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":2872,"name":"Identifier","src":"58698:3:0"}],"id":2875,"name":"MemberAccess","src":"58698:10:0"}],"id":2876,"name":"MemberAccess","src":"58698:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2745,"type":"uint256[] memory","value":"_draws"},"id":2877,"name":"Identifier","src":"58718:6:0"}],"id":2878,"name":"MemberAccess","src":"58718:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2158,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2749,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2879,"name":"Identifier","src":"58732:7:0"}],"id":2880,"name":"MemberAccess","src":"58732:30:0"}],"id":2881,"name":"BinaryOperation","src":"58718:44:0"}],"id":2882,"name":"FunctionCall","src":"58698:65:0"}],"id":2883,"name":"ExpressionStatement","src":"58698:65:0"}],"id":2884,"name":"Block","src":"57589:1226:0"}],"id":2885,"name":"FunctionDefinition","src":"57496:1319:0"},{"attributes":{"constant":false,"documentation":"@dev Execute all the token repartition.\r\n Note that this function could consume to much gas if there is too much votes. \r\n It is O(v), where v is the number of votes for this dispute.\r\n In the next version, there will also be a function to execute it in multiple calls \r\n (but note that one shot execution, if possible, is less expensive).\r\n @param _disputeID ID of the dispute.\r","implemented":true,"isConstructor":false,"name":"oneShotTokenRepartition","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2886,"name":"ElementaryTypeName","src":"59288:4:0"}],"id":2887,"name":"VariableDeclaration","src":"59288:15:0"}],"id":2888,"name":"ParameterList","src":"59287:17:0"},{"attributes":{"parameters":[null]},"children":[],"id":2893,"name":"ParameterList","src":"59341:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2245,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2889,"name":"Identifier","src":"59312:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":2890,"name":"Identifier","src":"59323:6:0"}],"id":2891,"name":"MemberAccess","src":"59323:16:0"}],"id":2892,"name":"ModifierInvocation","src":"59312:28:0"},{"children":[{"attributes":{"assignments":[2895]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3174,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":2894,"name":"UserDefinedTypeName","src":"59352:7:0"}],"id":2895,"name":"VariableDeclaration","src":"59352:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2896,"name":"Identifier","src":"59378:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2887,"type":"uint256","value":"_disputeID"},"id":2897,"name":"Identifier","src":"59387:10:0"}],"id":2898,"name":"IndexAccess","src":"59378:20:0"}],"id":2899,"name":"VariableDeclarationStatement","src":"59352:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2900,"name":"Identifier","src":"59409:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2146","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2901,"name":"Identifier","src":"59417:7:0"}],"id":2902,"name":"MemberAccess","src":"59417:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":2903,"name":"Identifier","src":"59434:12:0"}],"id":2904,"name":"MemberAccess","src":"59434:17:0"}],"id":2905,"name":"BinaryOperation","src":"59417:34:0"}],"id":2906,"name":"FunctionCall","src":"59409:43:0"}],"id":2907,"name":"ExpressionStatement","src":"59409:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":2908,"name":"Identifier","src":"59463:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2909,"name":"Identifier","src":"59471:7:0"}],"id":2910,"name":"MemberAccess","src":"59471:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2911,"name":"Identifier","src":"59487:7:0"}],"id":2912,"name":"MemberAccess","src":"59487:15:0"}],"id":2913,"name":"BinaryOperation","src":"59471:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":2914,"name":"Identifier","src":"59506:7:0"}],"id":2915,"name":"BinaryOperation","src":"59471:42:0"}],"id":2916,"name":"FunctionCall","src":"59463:51:0"}],"id":2917,"name":"ExpressionStatement","src":"59463:51:0"},{"attributes":{"assignments":[2919]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2918,"name":"ElementaryTypeName","src":"59527:4:0"}],"id":2919,"name":"VariableDeclaration","src":"59527:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2134,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2920,"name":"Identifier","src":"59548:7:0"}],"id":2921,"name":"MemberAccess","src":"59548:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2922,"name":"Identifier","src":"59568:7:0"}],"id":2923,"name":"MemberAccess","src":"59568:15:0"}],"id":2924,"name":"IndexAccess","src":"59548:36:0"}],"id":2925,"name":"MemberAccess","src":"59548:50:0"}],"id":2926,"name":"VariableDeclarationStatement","src":"59527:71:0"},{"attributes":{"assignments":[2928]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2927,"name":"ElementaryTypeName","src":"59609:4:0"}],"id":2928,"name":"VariableDeclaration","src":"59609:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":4127,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":2929,"name":"Identifier","src":"59628:15:0"}],"id":2930,"name":"FunctionCall","src":"59628:17:0"}],"id":2931,"name":"VariableDeclarationStatement","src":"59609:36:0"},{"children":[{"attributes":{"assignments":[2933]},"children":[{"attributes":{"constant":false,"name":"i","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2932,"name":"ElementaryTypeName","src":"59661:4:0"}],"id":2933,"name":"VariableDeclaration","src":"59661:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2934,"name":"Literal","src":"59670:1:0"}],"id":2935,"name":"VariableDeclarationStatement","src":"59661:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":2936,"name":"Identifier","src":"59673:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2937,"name":"Identifier","src":"59678:7:0"}],"id":2938,"name":"MemberAccess","src":"59678:15:0"}],"id":2939,"name":"BinaryOperation","src":"59673:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":2940,"name":"Identifier","src":"59697:1:0"}],"id":2941,"name":"UnaryOperation","src":"59695:3:0"}],"id":2942,"name":"ExpressionStatement","src":"59695:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2919,"type":"uint256","value":"winningChoice"},"id":2943,"name":"Identifier","src":"60106:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2944,"name":"Literal","src":"60121:1:0"}],"id":2945,"name":"BinaryOperation","src":"60106:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2140,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2946,"name":"Identifier","src":"60127:7:0"}],"id":2947,"name":"MemberAccess","src":"60127:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2948,"name":"Identifier","src":"60147:7:0"}],"id":2949,"name":"MemberAccess","src":"60147:15:0"}],"id":2950,"name":"IndexAccess","src":"60127:36:0"}],"id":2951,"name":"MemberAccess","src":"60127:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2952,"name":"Literal","src":"60174:1:0"}],"id":2953,"name":"IndexAccess","src":"60127:49:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2136,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2954,"name":"Identifier","src":"60180:7:0"}],"id":2955,"name":"MemberAccess","src":"60180:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2956,"name":"Identifier","src":"60200:7:0"}],"id":2957,"name":"MemberAccess","src":"60200:15:0"}],"id":2958,"name":"IndexAccess","src":"60180:36:0"}],"id":2959,"name":"MemberAccess","src":"60180:49:0"}],"id":2960,"name":"BinaryOperation","src":"60127:102:0"}],"id":2961,"name":"TupleExpression","src":"60126:104:0"}],"id":2962,"name":"BinaryOperation","src":"60106:124:0"},{"children":[{"attributes":{"assignments":[2964]},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2963,"name":"ElementaryTypeName","src":"60251:4:0"}],"id":2964,"name":"VariableDeclaration","src":"60251:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2965,"name":"Literal","src":"60278:1:0"}],"id":2966,"name":"VariableDeclarationStatement","src":"60251:28:0"},{"attributes":{"assignments":[2968]},"children":[{"attributes":{"constant":false,"name":"nbCoherent","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2967,"name":"ElementaryTypeName","src":"60298:4:0"}],"id":2968,"name":"VariableDeclaration","src":"60298:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2969,"name":"Literal","src":"60316:1:0"}],"id":2970,"name":"VariableDeclarationStatement","src":"60298:19:0"},{"children":[{"attributes":{"assignments":[2972]},"children":[{"attributes":{"constant":false,"name":"j","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2971,"name":"ElementaryTypeName","src":"60406:4:0"}],"id":2972,"name":"VariableDeclaration","src":"60406:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2973,"name":"Literal","src":"60415:1:0"}],"id":2974,"name":"VariableDeclarationStatement","src":"60406:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":2975,"name":"Identifier","src":"60418:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2976,"name":"Identifier","src":"60422:7:0"}],"id":2977,"name":"MemberAccess","src":"60422:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":2978,"name":"Identifier","src":"60436:1:0"}],"id":2979,"name":"IndexAccess","src":"60422:16:0"}],"id":2980,"name":"MemberAccess","src":"60422:23:0"}],"id":2981,"name":"BinaryOperation","src":"60418:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":2982,"name":"Identifier","src":"60449:1:0"}],"id":2983,"name":"UnaryOperation","src":"60447:3:0"}],"id":2984,"name":"ExpressionStatement","src":"60447:3:0"},{"children":[{"attributes":{"assignments":[2986]},"children":[{"attributes":{"constant":false,"name":"vote","scope":3174,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Vote","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":2132,"type":"struct Kleros.Vote"},"id":2985,"name":"UserDefinedTypeName","src":"60475:4:0"}],"id":2986,"name":"VariableDeclaration","src":"60475:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2987,"name":"Identifier","src":"60495:7:0"}],"id":2988,"name":"MemberAccess","src":"60495:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":2989,"name":"Identifier","src":"60509:1:0"}],"id":2990,"name":"IndexAccess","src":"60495:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":2991,"name":"Identifier","src":"60512:1:0"}],"id":2992,"name":"IndexAccess","src":"60495:19:0"}],"id":2993,"name":"VariableDeclarationStatement","src":"60475:39:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2131,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2994,"name":"Identifier","src":"60541:4:0"}],"id":2995,"name":"MemberAccess","src":"60541:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2919,"type":"uint256","value":"winningChoice"},"id":2996,"name":"Identifier","src":"60556:13:0"}],"id":2997,"name":"BinaryOperation","src":"60541:28:0"},{"children":[{"attributes":{"assignments":[2999]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3174,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":2998,"name":"UserDefinedTypeName","src":"60598:5:0"}],"id":2999,"name":"VariableDeclaration","src":"60598:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3000,"name":"Identifier","src":"60620:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3001,"name":"Identifier","src":"60627:4:0"}],"id":3002,"name":"MemberAccess","src":"60627:12:0"}],"id":3003,"name":"IndexAccess","src":"60620:20:0"}],"id":3004,"name":"VariableDeclarationStatement","src":"60598:42:0"},{"attributes":{"assignments":[3006]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3005,"name":"ElementaryTypeName","src":"60667:4:0"}],"id":3006,"name":"VariableDeclaration","src":"60667:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"uint256","value":"amountShift"},"id":3007,"name":"Identifier","src":"60682:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3008,"name":"Identifier","src":"60694:5:0"}],"id":3009,"name":"MemberAccess","src":"60694:13:0"}],"id":3010,"name":"BinaryOperation","src":"60682:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"uint256","value":"amountShift"},"id":3011,"name":"Identifier","src":"60710:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3012,"name":"Identifier","src":"60724:5:0"}],"id":3013,"name":"MemberAccess","src":"60724:13:0"}],"id":3014,"name":"Conditional","src":"60682:55:0"}],"id":3015,"name":"VariableDeclarationStatement","src":"60667:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3016,"name":"Identifier","src":"60764:5:0"}],"id":3018,"name":"MemberAccess","src":"60764:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3006,"type":"uint256","value":"penalty"},"id":3019,"name":"Identifier","src":"60781:7:0"}],"id":3020,"name":"Assignment","src":"60764:24:0"}],"id":3021,"name":"ExpressionStatement","src":"60764:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3022,"name":"Identifier","src":"60815:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3023,"name":"Identifier","src":"60826:4:0"}],"id":3024,"name":"MemberAccess","src":"60826:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2887,"type":"uint256","value":"_disputeID"},"id":3025,"name":"Identifier","src":"60840:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3026,"name":"ElementaryTypeNameExpression","src":"60852:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3006,"type":"uint256","value":"penalty"},"id":3027,"name":"Identifier","src":"60857:7:0"}],"id":3028,"name":"UnaryOperation","src":"60856:8:0"}],"id":3029,"name":"FunctionCall","src":"60852:13:0"}],"id":3030,"name":"FunctionCall","src":"60815:51:0"}],"id":3031,"name":"ExpressionStatement","src":"60815:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2964,"type":"uint256","value":"totalToRedistribute"},"id":3032,"name":"Identifier","src":"60893:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3006,"type":"uint256","value":"penalty"},"id":3033,"name":"Identifier","src":"60916:7:0"}],"id":3034,"name":"Assignment","src":"60893:30:0"}],"id":3035,"name":"ExpressionStatement","src":"60893:30:0"}],"id":3036,"name":"Block","src":"60571:376:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2968,"type":"uint256","value":"nbCoherent"},"id":3037,"name":"Identifier","src":"60982:10:0"}],"id":3038,"name":"UnaryOperation","src":"60980:12:0"}],"id":3039,"name":"ExpressionStatement","src":"60980:12:0"}],"id":3040,"name":"Block","src":"60953:63:0"}],"id":3041,"name":"IfStatement","src":"60537:479:0"}],"id":3042,"name":"Block","src":"60452:583:0"}],"id":3043,"name":"ForStatement","src":"60401:634:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2968,"type":"uint256","value":"nbCoherent"},"id":3044,"name":"Identifier","src":"61057:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3045,"name":"Literal","src":"61071:1:0"}],"id":3046,"name":"BinaryOperation","src":"61057:15:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3047,"name":"Identifier","src":"61168:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":3048,"name":"Identifier","src":"61175:8:0"}],"id":3049,"name":"IndexAccess","src":"61168:16:0"}],"id":3050,"name":"MemberAccess","src":"61168:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2964,"type":"uint256","value":"totalToRedistribute"},"id":3051,"name":"Identifier","src":"61196:19:0"}],"id":3052,"name":"Assignment","src":"61168:47:0"}],"id":3053,"name":"ExpressionStatement","src":"61168:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3054,"name":"Identifier","src":"61238:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":3055,"name":"Identifier","src":"61249:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2887,"type":"uint256","value":"_disputeID"},"id":3056,"name":"Identifier","src":"61259:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3057,"name":"ElementaryTypeNameExpression","src":"61271:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2964,"type":"uint256","value":"totalToRedistribute"},"id":3058,"name":"Identifier","src":"61275:19:0"}],"id":3059,"name":"FunctionCall","src":"61271:24:0"}],"id":3060,"name":"FunctionCall","src":"61238:58:0"}],"id":3061,"name":"ExpressionStatement","src":"61238:58:0"}],"id":3062,"name":"Block","src":"61074:242:0"},{"children":[{"attributes":{"assignments":[3064]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":3174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3063,"name":"ElementaryTypeName","src":"61378:4:0"}],"id":3064,"name":"VariableDeclaration","src":"61378:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2964,"type":"uint256","value":"totalToRedistribute"},"id":3065,"name":"Identifier","src":"61400:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2968,"type":"uint256","value":"nbCoherent"},"id":3066,"name":"Identifier","src":"61422:10:0"}],"id":3067,"name":"BinaryOperation","src":"61400:32:0"}],"id":3068,"name":"VariableDeclarationStatement","src":"61378:54:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3069,"name":"Identifier","src":"61616:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3070,"name":"Literal","src":"61620:1:0"}],"id":3071,"name":"Assignment","src":"61616:5:0"}],"id":3072,"name":"ExpressionStatement","src":"61616:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3073,"name":"Identifier","src":"61623:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3074,"name":"Identifier","src":"61627:7:0"}],"id":3075,"name":"MemberAccess","src":"61627:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":3076,"name":"Identifier","src":"61641:1:0"}],"id":3077,"name":"IndexAccess","src":"61627:16:0"}],"id":3078,"name":"MemberAccess","src":"61627:23:0"}],"id":3079,"name":"BinaryOperation","src":"61623:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3080,"name":"Identifier","src":"61654:1:0"}],"id":3081,"name":"UnaryOperation","src":"61652:3:0"}],"id":3082,"name":"ExpressionStatement","src":"61652:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3083,"name":"Identifier","src":"61684:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3084,"name":"Identifier","src":"61691:7:0"}],"id":3085,"name":"MemberAccess","src":"61691:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":3086,"name":"Identifier","src":"61705:1:0"}],"id":3087,"name":"IndexAccess","src":"61691:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3088,"name":"Identifier","src":"61708:1:0"}],"id":3089,"name":"IndexAccess","src":"61691:19:0"}],"id":3090,"name":"Assignment","src":"61684:26:0"}],"id":3091,"name":"ExpressionStatement","src":"61684:26:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2131,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3092,"name":"Identifier","src":"61741:4:0"}],"id":3093,"name":"MemberAccess","src":"61741:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2919,"type":"uint256","value":"winningChoice"},"id":3094,"name":"Identifier","src":"61756:13:0"}],"id":3095,"name":"BinaryOperation","src":"61741:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3096,"name":"Identifier","src":"61802:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3097,"name":"Identifier","src":"61810:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3098,"name":"Identifier","src":"61817:4:0"}],"id":3099,"name":"MemberAccess","src":"61817:12:0"}],"id":3100,"name":"IndexAccess","src":"61810:20:0"}],"id":3101,"name":"Assignment","src":"61802:28:0"}],"id":3102,"name":"ExpressionStatement","src":"61802:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3103,"name":"Identifier","src":"61861:5:0"}],"id":3105,"name":"MemberAccess","src":"61861:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3064,"type":"uint256","value":"toRedistribute"},"id":3106,"name":"Identifier","src":"61878:14:0"}],"id":3107,"name":"Assignment","src":"61861:31:0"}],"id":3108,"name":"ExpressionStatement","src":"61861:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3109,"name":"Identifier","src":"61923:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3110,"name":"Identifier","src":"61934:4:0"}],"id":3111,"name":"MemberAccess","src":"61934:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2887,"type":"uint256","value":"_disputeID"},"id":3112,"name":"Identifier","src":"61948:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3113,"name":"ElementaryTypeNameExpression","src":"61960:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3064,"type":"uint256","value":"toRedistribute"},"id":3114,"name":"Identifier","src":"61964:14:0"}],"id":3115,"name":"FunctionCall","src":"61960:19:0"}],"id":3116,"name":"FunctionCall","src":"61923:57:0"}],"id":3117,"name":"ExpressionStatement","src":"61923:57:0"}],"id":3118,"name":"Block","src":"61771:237:0"}],"id":3119,"name":"IfStatement","src":"61737:271:0"}],"id":3120,"name":"Block","src":"61657:374:0"}],"id":3121,"name":"ForStatement","src":"61611:420:0"}],"id":3122,"name":"Block","src":"61322:728:0"}],"id":3123,"name":"IfStatement","src":"61053:997:0"}],"id":3124,"name":"Block","src":"60232:1833:0"}],"id":3125,"name":"IfStatement","src":"60102:1963:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3126,"name":"Identifier","src":"62159:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3127,"name":"Literal","src":"62163:1:0"}],"id":3128,"name":"Assignment","src":"62159:5:0"}],"id":3129,"name":"ExpressionStatement","src":"62159:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3130,"name":"Identifier","src":"62166:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3131,"name":"Identifier","src":"62170:7:0"}],"id":3132,"name":"MemberAccess","src":"62170:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":3133,"name":"Identifier","src":"62184:1:0"}],"id":3134,"name":"IndexAccess","src":"62170:16:0"}],"id":3135,"name":"MemberAccess","src":"62170:23:0"}],"id":3136,"name":"BinaryOperation","src":"62166:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3137,"name":"Identifier","src":"62197:1:0"}],"id":3138,"name":"UnaryOperation","src":"62195:3:0"}],"id":3139,"name":"ExpressionStatement","src":"62195:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3140,"name":"Identifier","src":"62219:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3141,"name":"Identifier","src":"62226:7:0"}],"id":3142,"name":"MemberAccess","src":"62226:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2933,"type":"uint256","value":"i"},"id":3143,"name":"Identifier","src":"62240:1:0"}],"id":3144,"name":"IndexAccess","src":"62226:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2972,"type":"uint256","value":"j"},"id":3145,"name":"Identifier","src":"62243:1:0"}],"id":3146,"name":"IndexAccess","src":"62226:19:0"}],"id":3147,"name":"Assignment","src":"62219:26:0"}],"id":3148,"name":"ExpressionStatement","src":"62219:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3149,"name":"Identifier","src":"62264:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3150,"name":"Identifier","src":"62272:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2986,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3151,"name":"Identifier","src":"62279:4:0"}],"id":3152,"name":"MemberAccess","src":"62279:12:0"}],"id":3153,"name":"IndexAccess","src":"62272:20:0"}],"id":3154,"name":"Assignment","src":"62264:28:0"}],"id":3155,"name":"ExpressionStatement","src":"62264:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":2116,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2999,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3156,"name":"Identifier","src":"62311:5:0"}],"id":3158,"name":"MemberAccess","src":"62311:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"uint256","value":"amountShift"},"id":3159,"name":"Identifier","src":"62328:11:0"}],"id":3160,"name":"Assignment","src":"62311:28:0"}],"id":3161,"name":"ExpressionStatement","src":"62311:28:0"}],"id":3162,"name":"Block","src":"62200:252:0"}],"id":3163,"name":"ForStatement","src":"62154:298:0"}],"id":3164,"name":"Block","src":"59700:2763:0"}],"id":3165,"name":"ForStatement","src":"59656:2807:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2895,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3166,"name":"Identifier","src":"62473:7:0"}],"id":3168,"name":"MemberAccess","src":"62473:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3169,"name":"Identifier","src":"62489:12:0"}],"id":3170,"name":"MemberAccess","src":"62489:23:0"}],"id":3171,"name":"Assignment","src":"62473:39:0"}],"id":3172,"name":"ExpressionStatement","src":"62473:39:0"}],"id":3173,"name":"Block","src":"59341:3251:0"}],"id":3174,"name":"FunctionDefinition","src":"59255:3337:0"},{"attributes":{"constant":false,"documentation":"@dev Execute token repartition on a dispute for a specific number of votes.\r\n This should only be called if oneShotTokenRepartition will throw because there are too many votes (will use too much gas).\r\n Note that There are 3 iterations per vote. e.g. A dispute with 1 appeal (2 sessions) and 3 votes per session will have 18 iterations\r\n @param _disputeID ID of the dispute.\r\n @param _maxIterations the maxium number of votes to repartition in this iteration\r","implemented":true,"isConstructor":false,"name":"multipleShotTokenRepartition","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3175,"name":"ElementaryTypeName","src":"63143:4:0"}],"id":3176,"name":"VariableDeclaration","src":"63143:15:0"},{"attributes":{"constant":false,"name":"_maxIterations","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3177,"name":"ElementaryTypeName","src":"63160:4:0"}],"id":3178,"name":"VariableDeclaration","src":"63160:19:0"}],"id":3179,"name":"ParameterList","src":"63142:38:0"},{"attributes":{"parameters":[null]},"children":[],"id":3184,"name":"ParameterList","src":"63217:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2245,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":3180,"name":"Identifier","src":"63188:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":3181,"name":"Identifier","src":"63199:6:0"}],"id":3182,"name":"MemberAccess","src":"63199:16:0"}],"id":3183,"name":"ModifierInvocation","src":"63188:28:0"},{"children":[{"attributes":{"assignments":[3186]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3668,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":3185,"name":"UserDefinedTypeName","src":"63228:7:0"}],"id":3186,"name":"VariableDeclaration","src":"63228:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3187,"name":"Identifier","src":"63254:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3176,"type":"uint256","value":"_disputeID"},"id":3188,"name":"Identifier","src":"63263:10:0"}],"id":3189,"name":"IndexAccess","src":"63254:20:0"}],"id":3190,"name":"VariableDeclarationStatement","src":"63228:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3191,"name":"Identifier","src":"63285:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2146","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3192,"name":"Identifier","src":"63293:7:0"}],"id":3193,"name":"MemberAccess","src":"63293:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Resolving","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3194,"name":"Identifier","src":"63310:12:0"}],"id":3195,"name":"MemberAccess","src":"63310:22:0"}],"id":3196,"name":"BinaryOperation","src":"63293:39:0"}],"id":3197,"name":"FunctionCall","src":"63285:48:0"}],"id":3198,"name":"ExpressionStatement","src":"63285:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3199,"name":"Identifier","src":"63344:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3200,"name":"Identifier","src":"63352:7:0"}],"id":3201,"name":"MemberAccess","src":"63352:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3202,"name":"Identifier","src":"63368:7:0"}],"id":3203,"name":"MemberAccess","src":"63368:15:0"}],"id":3204,"name":"BinaryOperation","src":"63352:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":3205,"name":"Identifier","src":"63387:7:0"}],"id":3206,"name":"BinaryOperation","src":"63352:42:0"}],"id":3207,"name":"FunctionCall","src":"63344:51:0"}],"id":3208,"name":"ExpressionStatement","src":"63344:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3209,"name":"Identifier","src":"63406:7:0"}],"id":3211,"name":"MemberAccess","src":"63406:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Resolving","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3212,"name":"Identifier","src":"63422:12:0"}],"id":3213,"name":"MemberAccess","src":"63422:22:0"}],"id":3214,"name":"Assignment","src":"63406:38:0"}],"id":3215,"name":"ExpressionStatement","src":"63406:38:0"},{"attributes":{"assignments":[3217]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3216,"name":"ElementaryTypeName","src":"63534:4:0"}],"id":3217,"name":"VariableDeclaration","src":"63534:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2134,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3218,"name":"Identifier","src":"63555:7:0"}],"id":3219,"name":"MemberAccess","src":"63555:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3220,"name":"Identifier","src":"63575:7:0"}],"id":3221,"name":"MemberAccess","src":"63575:15:0"}],"id":3222,"name":"IndexAccess","src":"63555:36:0"}],"id":3223,"name":"MemberAccess","src":"63555:50:0"}],"id":3224,"name":"VariableDeclarationStatement","src":"63534:71:0"},{"attributes":{"assignments":[3226]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3225,"name":"ElementaryTypeName","src":"63616:4:0"}],"id":3226,"name":"VariableDeclaration","src":"63616:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":4127,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":3227,"name":"Identifier","src":"63635:15:0"}],"id":3228,"name":"FunctionCall","src":"63635:17:0"}],"id":3229,"name":"VariableDeclarationStatement","src":"63616:36:0"},{"attributes":{"assignments":[3231]},"children":[{"attributes":{"constant":false,"name":"currentIterations","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3230,"name":"ElementaryTypeName","src":"63663:4:0"}],"id":3231,"name":"VariableDeclaration","src":"63663:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3232,"name":"Literal","src":"63688:1:0"}],"id":3233,"name":"VariableDeclarationStatement","src":"63663:26:0"},{"children":[{"attributes":{"assignments":[3235]},"children":[{"attributes":{"constant":false,"name":"i","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3234,"name":"ElementaryTypeName","src":"63758:4:0"}],"id":3235,"name":"VariableDeclaration","src":"63758:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentAppealToRepartition","referencedDeclaration":2173,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3236,"name":"Identifier","src":"63767:7:0"}],"id":3237,"name":"MemberAccess","src":"63767:34:0"}],"id":3238,"name":"VariableDeclarationStatement","src":"63758:43:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3239,"name":"Identifier","src":"63803:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3240,"name":"Identifier","src":"63808:7:0"}],"id":3241,"name":"MemberAccess","src":"63808:15:0"}],"id":3242,"name":"BinaryOperation","src":"63803:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3243,"name":"Identifier","src":"63827:1:0"}],"id":3244,"name":"UnaryOperation","src":"63825:3:0"}],"id":3245,"name":"ExpressionStatement","src":"63825:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3246,"name":"Identifier","src":"63910:7:0"}],"id":3247,"name":"MemberAccess","src":"63910:28:0"}],"id":3248,"name":"MemberAccess","src":"63910:35:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3249,"name":"Identifier","src":"63948:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3250,"name":"Literal","src":"63950:1:0"}],"id":3251,"name":"BinaryOperation","src":"63948:3:0"}],"id":3252,"name":"BinaryOperation","src":"63910:41:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3253,"name":"Identifier","src":"63972:7:0"}],"id":3256,"name":"MemberAccess","src":"63972:28:0"}],"id":3257,"name":"MemberAccess","src":"63972:35:0"}],"id":3258,"name":"UnaryOperation","src":"63972:37:0"}],"id":3259,"name":"ExpressionStatement","src":"63972:37:0"}],"id":3260,"name":"Block","src":"63953:72:0"}],"id":3261,"name":"IfStatement","src":"63906:119:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3217,"type":"uint256","value":"winningChoice"},"id":3262,"name":"Identifier","src":"64195:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3263,"name":"Literal","src":"64210:1:0"}],"id":3264,"name":"BinaryOperation","src":"64195:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2140,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3265,"name":"Identifier","src":"64216:7:0"}],"id":3266,"name":"MemberAccess","src":"64216:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3267,"name":"Identifier","src":"64236:7:0"}],"id":3268,"name":"MemberAccess","src":"64236:15:0"}],"id":3269,"name":"IndexAccess","src":"64216:36:0"}],"id":3270,"name":"MemberAccess","src":"64216:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3271,"name":"Literal","src":"64263:1:0"}],"id":3272,"name":"IndexAccess","src":"64216:49:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2136,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3273,"name":"Identifier","src":"64269:7:0"}],"id":3274,"name":"MemberAccess","src":"64269:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3275,"name":"Identifier","src":"64289:7:0"}],"id":3276,"name":"MemberAccess","src":"64289:15:0"}],"id":3277,"name":"IndexAccess","src":"64269:36:0"}],"id":3278,"name":"MemberAccess","src":"64269:49:0"}],"id":3279,"name":"BinaryOperation","src":"64216:102:0"}],"id":3280,"name":"TupleExpression","src":"64215:104:0"}],"id":3281,"name":"BinaryOperation","src":"64195:124:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3282,"name":"Identifier","src":"64404:7:0"}],"id":3285,"name":"MemberAccess","src":"64404:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3284,"name":"Identifier","src":"64433:1:0"}],"id":3286,"name":"IndexAccess","src":"64404:31:0"}],"id":3287,"name":"MemberAccess","src":"64404:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3288,"name":"Identifier","src":"64444:16:0"}],"id":3289,"name":"MemberAccess","src":"64444:24:0"}],"id":3290,"name":"Assignment","src":"64404:64:0"}],"id":3291,"name":"ExpressionStatement","src":"64404:64:0"}],"id":3292,"name":"Block","src":"64321:163:0"}],"id":3293,"name":"IfStatement","src":"64191:293:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2182","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3294,"name":"Identifier","src":"64565:7:0"}],"id":3295,"name":"MemberAccess","src":"64565:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3296,"name":"Identifier","src":"64594:1:0"}],"id":3297,"name":"IndexAccess","src":"64565:31:0"}],"id":3298,"name":"MemberAccess","src":"64565:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Incoherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3299,"name":"Identifier","src":"64606:16:0"}],"id":3300,"name":"MemberAccess","src":"64606:27:0"}],"id":3301,"name":"BinaryOperation","src":"64565:68:0"},{"children":[{"children":[{"attributes":{"assignments":[3303]},"children":[{"attributes":{"constant":false,"name":"j","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3302,"name":"ElementaryTypeName","src":"64659:4:0"}],"id":3303,"name":"VariableDeclaration","src":"64659:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentIncoherentVote","referencedDeclaration":2188,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3304,"name":"Identifier","src":"64668:7:0"}],"id":3305,"name":"MemberAccess","src":"64668:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3306,"name":"Identifier","src":"64697:1:0"}],"id":3307,"name":"IndexAccess","src":"64668:31:0"}],"id":3308,"name":"MemberAccess","src":"64668:53:0"}],"id":3309,"name":"VariableDeclarationStatement","src":"64659:62:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3310,"name":"Identifier","src":"64723:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3311,"name":"Identifier","src":"64727:7:0"}],"id":3312,"name":"MemberAccess","src":"64727:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3313,"name":"Identifier","src":"64741:1:0"}],"id":3314,"name":"IndexAccess","src":"64727:16:0"}],"id":3315,"name":"MemberAccess","src":"64727:23:0"}],"id":3316,"name":"BinaryOperation","src":"64723:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3317,"name":"Identifier","src":"64754:1:0"}],"id":3318,"name":"UnaryOperation","src":"64752:3:0"}],"id":3319,"name":"ExpressionStatement","src":"64752:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3231,"type":"uint256","value":"currentIterations"},"id":3320,"name":"Identifier","src":"64784:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3178,"type":"uint256","value":"_maxIterations"},"id":3321,"name":"Identifier","src":"64805:14:0"}],"id":3322,"name":"BinaryOperation","src":"64784:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":3184},"id":3323,"name":"Return","src":"64848:7:0"}],"id":3324,"name":"Block","src":"64821:57:0"}],"id":3325,"name":"IfStatement","src":"64780:98:0"},{"attributes":{"assignments":[3327]},"children":[{"attributes":{"constant":false,"name":"vote","scope":3668,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Vote","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":2132,"type":"struct Kleros.Vote"},"id":3326,"name":"UserDefinedTypeName","src":"64900:4:0"}],"id":3327,"name":"VariableDeclaration","src":"64900:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3328,"name":"Identifier","src":"64920:7:0"}],"id":3329,"name":"MemberAccess","src":"64920:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3330,"name":"Identifier","src":"64934:1:0"}],"id":3331,"name":"IndexAccess","src":"64920:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3332,"name":"Identifier","src":"64937:1:0"}],"id":3333,"name":"IndexAccess","src":"64920:19:0"}],"id":3334,"name":"VariableDeclarationStatement","src":"64900:39:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2131,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3335,"name":"Identifier","src":"64966:4:0"}],"id":3336,"name":"MemberAccess","src":"64966:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3217,"type":"uint256","value":"winningChoice"},"id":3337,"name":"Identifier","src":"64981:13:0"}],"id":3338,"name":"BinaryOperation","src":"64966:28:0"},{"children":[{"attributes":{"assignments":[3340]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3668,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":3339,"name":"UserDefinedTypeName","src":"65023:5:0"}],"id":3340,"name":"VariableDeclaration","src":"65023:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3341,"name":"Identifier","src":"65045:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3342,"name":"Identifier","src":"65052:4:0"}],"id":3343,"name":"MemberAccess","src":"65052:12:0"}],"id":3344,"name":"IndexAccess","src":"65045:20:0"}],"id":3345,"name":"VariableDeclarationStatement","src":"65023:42:0"},{"attributes":{"assignments":[3347]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3346,"name":"ElementaryTypeName","src":"65092:4:0"}],"id":3347,"name":"VariableDeclaration","src":"65092:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3226,"type":"uint256","value":"amountShift"},"id":3348,"name":"Identifier","src":"65107:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3349,"name":"Identifier","src":"65119:5:0"}],"id":3350,"name":"MemberAccess","src":"65119:13:0"}],"id":3351,"name":"BinaryOperation","src":"65107:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3226,"type":"uint256","value":"amountShift"},"id":3352,"name":"Identifier","src":"65135:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3353,"name":"Identifier","src":"65149:5:0"}],"id":3354,"name":"MemberAccess","src":"65149:13:0"}],"id":3355,"name":"Conditional","src":"65107:55:0"}],"id":3356,"name":"VariableDeclarationStatement","src":"65092:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3357,"name":"Identifier","src":"65189:5:0"}],"id":3359,"name":"MemberAccess","src":"65189:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3347,"type":"uint256","value":"penalty"},"id":3360,"name":"Identifier","src":"65206:7:0"}],"id":3361,"name":"Assignment","src":"65189:24:0"}],"id":3362,"name":"ExpressionStatement","src":"65189:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3363,"name":"Identifier","src":"65240:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3364,"name":"Identifier","src":"65251:4:0"}],"id":3365,"name":"MemberAccess","src":"65251:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3176,"type":"uint256","value":"_disputeID"},"id":3366,"name":"Identifier","src":"65265:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3367,"name":"ElementaryTypeNameExpression","src":"65277:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3347,"type":"uint256","value":"penalty"},"id":3368,"name":"Identifier","src":"65282:7:0"}],"id":3369,"name":"UnaryOperation","src":"65281:8:0"}],"id":3370,"name":"FunctionCall","src":"65277:13:0"}],"id":3371,"name":"FunctionCall","src":"65240:51:0"}],"id":3372,"name":"ExpressionStatement","src":"65240:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"totalToRedistribute","referencedDeclaration":2184,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3373,"name":"Identifier","src":"65318:7:0"}],"id":3376,"name":"MemberAccess","src":"65318:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3375,"name":"Identifier","src":"65347:1:0"}],"id":3377,"name":"IndexAccess","src":"65318:31:0"}],"id":3378,"name":"MemberAccess","src":"65318:51:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3347,"type":"uint256","value":"penalty"},"id":3379,"name":"Identifier","src":"65373:7:0"}],"id":3380,"name":"Assignment","src":"65318:62:0"}],"id":3381,"name":"ExpressionStatement","src":"65318:62:0"}],"id":3382,"name":"Block","src":"64996:408:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"nbCoherent","referencedDeclaration":2186,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3383,"name":"Identifier","src":"65439:7:0"}],"id":3384,"name":"MemberAccess","src":"65439:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3385,"name":"Identifier","src":"65468:1:0"}],"id":3386,"name":"IndexAccess","src":"65439:31:0"}],"id":3387,"name":"MemberAccess","src":"65439:42:0"}],"id":3388,"name":"UnaryOperation","src":"65437:44:0"}],"id":3389,"name":"ExpressionStatement","src":"65437:44:0"}],"id":3390,"name":"Block","src":"65410:95:0"}],"id":3391,"name":"IfStatement","src":"64962:543:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentIncoherentVote","referencedDeclaration":2188,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3392,"name":"Identifier","src":"65531:7:0"}],"id":3393,"name":"MemberAccess","src":"65531:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3394,"name":"Identifier","src":"65560:1:0"}],"id":3395,"name":"IndexAccess","src":"65531:31:0"}],"id":3396,"name":"MemberAccess","src":"65531:53:0"}],"id":3397,"name":"UnaryOperation","src":"65529:55:0"}],"id":3398,"name":"ExpressionStatement","src":"65529:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3231,"type":"uint256","value":"currentIterations"},"id":3399,"name":"Identifier","src":"65609:17:0"}],"id":3400,"name":"UnaryOperation","src":"65607:19:0"}],"id":3401,"name":"ExpressionStatement","src":"65607:19:0"}],"id":3402,"name":"Block","src":"64757:889:0"}],"id":3403,"name":"ForStatement","src":"64654:992:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3404,"name":"Identifier","src":"65666:7:0"}],"id":3407,"name":"MemberAccess","src":"65666:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3406,"name":"Identifier","src":"65695:1:0"}],"id":3408,"name":"IndexAccess","src":"65666:31:0"}],"id":3409,"name":"MemberAccess","src":"65666:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Coherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3410,"name":"Identifier","src":"65706:16:0"}],"id":3411,"name":"MemberAccess","src":"65706:25:0"}],"id":3412,"name":"Assignment","src":"65666:65:0"}],"id":3413,"name":"ExpressionStatement","src":"65666:65:0"}],"id":3414,"name":"Block","src":"64635:1112:0"}],"id":3415,"name":"IfStatement","src":"64561:1186:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2182","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3416,"name":"Identifier","src":"65821:7:0"}],"id":3417,"name":"MemberAccess","src":"65821:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3418,"name":"Identifier","src":"65850:1:0"}],"id":3419,"name":"IndexAccess","src":"65821:31:0"}],"id":3420,"name":"MemberAccess","src":"65821:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Coherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3421,"name":"Identifier","src":"65862:16:0"}],"id":3422,"name":"MemberAccess","src":"65862:25:0"}],"id":3423,"name":"BinaryOperation","src":"65821:66:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"nbCoherent","referencedDeclaration":2186,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3424,"name":"Identifier","src":"65912:7:0"}],"id":3425,"name":"MemberAccess","src":"65912:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3426,"name":"Identifier","src":"65941:1:0"}],"id":3427,"name":"IndexAccess","src":"65912:31:0"}],"id":3428,"name":"MemberAccess","src":"65912:42:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3429,"name":"Literal","src":"65958:1:0"}],"id":3430,"name":"BinaryOperation","src":"65912:47:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3431,"name":"Identifier","src":"66055:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":3432,"name":"Identifier","src":"66062:8:0"}],"id":3433,"name":"IndexAccess","src":"66055:16:0"}],"id":3434,"name":"MemberAccess","src":"66055:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":2184,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3435,"name":"Identifier","src":"66083:7:0"}],"id":3436,"name":"MemberAccess","src":"66083:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3437,"name":"Identifier","src":"66112:1:0"}],"id":3438,"name":"IndexAccess","src":"66083:31:0"}],"id":3439,"name":"MemberAccess","src":"66083:51:0"}],"id":3440,"name":"Assignment","src":"66055:79:0"}],"id":3441,"name":"ExpressionStatement","src":"66055:79:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3442,"name":"Identifier","src":"66157:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":3443,"name":"Identifier","src":"66168:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3176,"type":"uint256","value":"_disputeID"},"id":3444,"name":"Identifier","src":"66178:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3445,"name":"ElementaryTypeNameExpression","src":"66190:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":2184,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3446,"name":"Identifier","src":"66194:7:0"}],"id":3447,"name":"MemberAccess","src":"66194:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3448,"name":"Identifier","src":"66223:1:0"}],"id":3449,"name":"IndexAccess","src":"66194:31:0"}],"id":3450,"name":"MemberAccess","src":"66194:51:0"}],"id":3451,"name":"FunctionCall","src":"66190:56:0"}],"id":3452,"name":"FunctionCall","src":"66157:90:0"}],"id":3453,"name":"ExpressionStatement","src":"66157:90:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3454,"name":"Identifier","src":"66270:7:0"}],"id":3457,"name":"MemberAccess","src":"66270:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3456,"name":"Identifier","src":"66299:1:0"}],"id":3458,"name":"IndexAccess","src":"66270:31:0"}],"id":3459,"name":"MemberAccess","src":"66270:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3460,"name":"Identifier","src":"66310:16:0"}],"id":3461,"name":"MemberAccess","src":"66310:24:0"}],"id":3462,"name":"Assignment","src":"66270:64:0"}],"id":3463,"name":"ExpressionStatement","src":"66270:64:0"}],"id":3464,"name":"Block","src":"65961:393:0"},{"children":[{"attributes":{"assignments":[3466]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":3668,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3465,"name":"ElementaryTypeName","src":"66416:4:0"}],"id":3466,"name":"VariableDeclaration","src":"66416:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":2184,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3467,"name":"Identifier","src":"66438:7:0"}],"id":3468,"name":"MemberAccess","src":"66438:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3469,"name":"Identifier","src":"66467:1:0"}],"id":3470,"name":"IndexAccess","src":"66438:31:0"}],"id":3471,"name":"MemberAccess","src":"66438:51:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"nbCoherent","referencedDeclaration":2186,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3472,"name":"Identifier","src":"66492:7:0"}],"id":3473,"name":"MemberAccess","src":"66492:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3474,"name":"Identifier","src":"66521:1:0"}],"id":3475,"name":"IndexAccess","src":"66492:31:0"}],"id":3476,"name":"MemberAccess","src":"66492:42:0"}],"id":3477,"name":"BinaryOperation","src":"66438:96:0"}],"id":3478,"name":"VariableDeclarationStatement","src":"66416:118:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3479,"name":"Identifier","src":"66718:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentCoherentVote","referencedDeclaration":2190,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3480,"name":"Identifier","src":"66722:7:0"}],"id":3481,"name":"MemberAccess","src":"66722:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3482,"name":"Identifier","src":"66751:1:0"}],"id":3483,"name":"IndexAccess","src":"66722:31:0"}],"id":3484,"name":"MemberAccess","src":"66722:51:0"}],"id":3485,"name":"Assignment","src":"66718:55:0"}],"id":3486,"name":"ExpressionStatement","src":"66718:55:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3487,"name":"Identifier","src":"66775:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3488,"name":"Identifier","src":"66779:7:0"}],"id":3489,"name":"MemberAccess","src":"66779:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3490,"name":"Identifier","src":"66793:1:0"}],"id":3491,"name":"IndexAccess","src":"66779:16:0"}],"id":3492,"name":"MemberAccess","src":"66779:23:0"}],"id":3493,"name":"BinaryOperation","src":"66775:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3494,"name":"Identifier","src":"66806:1:0"}],"id":3495,"name":"UnaryOperation","src":"66804:3:0"}],"id":3496,"name":"ExpressionStatement","src":"66804:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3231,"type":"uint256","value":"currentIterations"},"id":3497,"name":"Identifier","src":"66840:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3178,"type":"uint256","value":"_maxIterations"},"id":3498,"name":"Identifier","src":"66861:14:0"}],"id":3499,"name":"BinaryOperation","src":"66840:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":3184},"id":3500,"name":"Return","src":"66908:7:0"}],"id":3501,"name":"Block","src":"66877:65:0"}],"id":3502,"name":"IfStatement","src":"66836:106:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3503,"name":"Identifier","src":"66968:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3504,"name":"Identifier","src":"66975:7:0"}],"id":3505,"name":"MemberAccess","src":"66975:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3506,"name":"Identifier","src":"66989:1:0"}],"id":3507,"name":"IndexAccess","src":"66975:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3508,"name":"Identifier","src":"66992:1:0"}],"id":3509,"name":"IndexAccess","src":"66975:19:0"}],"id":3510,"name":"Assignment","src":"66968:26:0"}],"id":3511,"name":"ExpressionStatement","src":"66968:26:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2131,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3512,"name":"Identifier","src":"67025:4:0"}],"id":3513,"name":"MemberAccess","src":"67025:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3217,"type":"uint256","value":"winningChoice"},"id":3514,"name":"Identifier","src":"67040:13:0"}],"id":3515,"name":"BinaryOperation","src":"67025:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3516,"name":"Identifier","src":"67086:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3517,"name":"Identifier","src":"67094:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3518,"name":"Identifier","src":"67101:4:0"}],"id":3519,"name":"MemberAccess","src":"67101:12:0"}],"id":3520,"name":"IndexAccess","src":"67094:20:0"}],"id":3521,"name":"Assignment","src":"67086:28:0"}],"id":3522,"name":"ExpressionStatement","src":"67086:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":2114,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3523,"name":"Identifier","src":"67145:5:0"}],"id":3525,"name":"MemberAccess","src":"67145:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3466,"type":"uint256","value":"toRedistribute"},"id":3526,"name":"Identifier","src":"67162:14:0"}],"id":3527,"name":"Assignment","src":"67145:31:0"}],"id":3528,"name":"ExpressionStatement","src":"67145:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":2212,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3529,"name":"Identifier","src":"67207:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3530,"name":"Identifier","src":"67218:4:0"}],"id":3531,"name":"MemberAccess","src":"67218:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3176,"type":"uint256","value":"_disputeID"},"id":3532,"name":"Identifier","src":"67232:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3533,"name":"ElementaryTypeNameExpression","src":"67244:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3466,"type":"uint256","value":"toRedistribute"},"id":3534,"name":"Identifier","src":"67248:14:0"}],"id":3535,"name":"FunctionCall","src":"67244:19:0"}],"id":3536,"name":"FunctionCall","src":"67207:57:0"}],"id":3537,"name":"ExpressionStatement","src":"67207:57:0"}],"id":3538,"name":"Block","src":"67055:237:0"}],"id":3539,"name":"IfStatement","src":"67021:271:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3231,"type":"uint256","value":"currentIterations"},"id":3540,"name":"Identifier","src":"67322:17:0"}],"id":3541,"name":"UnaryOperation","src":"67320:19:0"}],"id":3542,"name":"ExpressionStatement","src":"67320:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentCoherentVote","referencedDeclaration":2190,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3543,"name":"Identifier","src":"67368:7:0"}],"id":3544,"name":"MemberAccess","src":"67368:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3545,"name":"Identifier","src":"67397:1:0"}],"id":3546,"name":"IndexAccess","src":"67368:31:0"}],"id":3547,"name":"MemberAccess","src":"67368:51:0"}],"id":3548,"name":"UnaryOperation","src":"67366:53:0"}],"id":3549,"name":"ExpressionStatement","src":"67366:53:0"}],"id":3550,"name":"Block","src":"66809:634:0"}],"id":3551,"name":"ForStatement","src":"66713:730:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3552,"name":"Identifier","src":"67467:7:0"}],"id":3555,"name":"MemberAccess","src":"67467:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3554,"name":"Identifier","src":"67496:1:0"}],"id":3556,"name":"IndexAccess","src":"67467:31:0"}],"id":3557,"name":"MemberAccess","src":"67467:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3558,"name":"Identifier","src":"67507:16:0"}],"id":3559,"name":"MemberAccess","src":"67507:24:0"}],"id":3560,"name":"Assignment","src":"67467:64:0"}],"id":3561,"name":"ExpressionStatement","src":"67467:64:0"}],"id":3562,"name":"Block","src":"66360:1191:0"}],"id":3563,"name":"IfStatement","src":"65908:1643:0"}],"id":3564,"name":"Block","src":"65889:1677:0"}],"id":3565,"name":"IfStatement","src":"65817:1749:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2182","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3566,"name":"Identifier","src":"67586:7:0"}],"id":3567,"name":"MemberAccess","src":"67586:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3568,"name":"Identifier","src":"67615:1:0"}],"id":3569,"name":"IndexAccess","src":"67586:31:0"}],"id":3570,"name":"MemberAccess","src":"67586:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3571,"name":"Identifier","src":"67627:16:0"}],"id":3572,"name":"MemberAccess","src":"67627:24:0"}],"id":3573,"name":"BinaryOperation","src":"67586:65:0"},{"children":[{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3574,"name":"Identifier","src":"67756:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentAtStakeVote","referencedDeclaration":2192,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3575,"name":"Identifier","src":"67760:7:0"}],"id":3576,"name":"MemberAccess","src":"67760:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3577,"name":"Identifier","src":"67789:1:0"}],"id":3578,"name":"IndexAccess","src":"67760:31:0"}],"id":3579,"name":"MemberAccess","src":"67760:50:0"}],"id":3580,"name":"Assignment","src":"67756:54:0"}],"id":3581,"name":"ExpressionStatement","src":"67756:54:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3582,"name":"Identifier","src":"67812:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3583,"name":"Identifier","src":"67816:7:0"}],"id":3584,"name":"MemberAccess","src":"67816:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3585,"name":"Identifier","src":"67830:1:0"}],"id":3586,"name":"IndexAccess","src":"67816:16:0"}],"id":3587,"name":"MemberAccess","src":"67816:23:0"}],"id":3588,"name":"BinaryOperation","src":"67812:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3589,"name":"Identifier","src":"67843:1:0"}],"id":3590,"name":"UnaryOperation","src":"67841:3:0"}],"id":3591,"name":"ExpressionStatement","src":"67841:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3231,"type":"uint256","value":"currentIterations"},"id":3592,"name":"Identifier","src":"67873:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3178,"type":"uint256","value":"_maxIterations"},"id":3593,"name":"Identifier","src":"67894:14:0"}],"id":3594,"name":"BinaryOperation","src":"67873:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":3184},"id":3595,"name":"Return","src":"67937:7:0"}],"id":3596,"name":"Block","src":"67910:57:0"}],"id":3597,"name":"IfStatement","src":"67869:98:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3598,"name":"Identifier","src":"67989:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3599,"name":"Identifier","src":"67996:7:0"}],"id":3600,"name":"MemberAccess","src":"67996:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3601,"name":"Identifier","src":"68010:1:0"}],"id":3602,"name":"IndexAccess","src":"67996:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3303,"type":"uint256","value":"j"},"id":3603,"name":"Identifier","src":"68013:1:0"}],"id":3604,"name":"IndexAccess","src":"67996:19:0"}],"id":3605,"name":"Assignment","src":"67989:26:0"}],"id":3606,"name":"ExpressionStatement","src":"67989:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3607,"name":"Identifier","src":"68038:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3608,"name":"Identifier","src":"68046:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3327,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3609,"name":"Identifier","src":"68053:4:0"}],"id":3610,"name":"MemberAccess","src":"68053:12:0"}],"id":3611,"name":"IndexAccess","src":"68046:20:0"}],"id":3612,"name":"Assignment","src":"68038:28:0"}],"id":3613,"name":"ExpressionStatement","src":"68038:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":2116,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3614,"name":"Identifier","src":"68089:5:0"}],"id":3616,"name":"MemberAccess","src":"68089:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3226,"type":"uint256","value":"amountShift"},"id":3617,"name":"Identifier","src":"68106:11:0"}],"id":3618,"name":"Assignment","src":"68089:28:0"}],"id":3619,"name":"ExpressionStatement","src":"68089:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3231,"type":"uint256","value":"currentIterations"},"id":3620,"name":"Identifier","src":"68241:17:0"}],"id":3621,"name":"UnaryOperation","src":"68239:19:0"}],"id":3622,"name":"ExpressionStatement","src":"68239:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentAtStakeVote","referencedDeclaration":2192,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3623,"name":"Identifier","src":"68283:7:0"}],"id":3624,"name":"MemberAccess","src":"68283:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3625,"name":"Identifier","src":"68312:1:0"}],"id":3626,"name":"IndexAccess","src":"68283:31:0"}],"id":3627,"name":"MemberAccess","src":"68283:50:0"}],"id":3628,"name":"UnaryOperation","src":"68281:52:0"}],"id":3629,"name":"ExpressionStatement","src":"68281:52:0"}],"id":3630,"name":"Block","src":"67846:507:0"}],"id":3631,"name":"ForStatement","src":"67751:602:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3632,"name":"Identifier","src":"68373:7:0"}],"id":3635,"name":"MemberAccess","src":"68373:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3634,"name":"Identifier","src":"68402:1:0"}],"id":3636,"name":"IndexAccess","src":"68373:31:0"}],"id":3637,"name":"MemberAccess","src":"68373:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Complete","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3638,"name":"Identifier","src":"68413:16:0"}],"id":3639,"name":"MemberAccess","src":"68413:25:0"}],"id":3640,"name":"Assignment","src":"68373:65:0"}],"id":3641,"name":"ExpressionStatement","src":"68373:65:0"}],"id":3642,"name":"Block","src":"67653:801:0"}],"id":3643,"name":"IfStatement","src":"67582:872:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$2182","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":2194,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":2176,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3644,"name":"Identifier","src":"68474:7:0"}],"id":3645,"name":"MemberAccess","src":"68474:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3235,"type":"uint256","value":"i"},"id":3646,"name":"Identifier","src":"68503:1:0"}],"id":3647,"name":"IndexAccess","src":"68474:31:0"}],"id":3648,"name":"MemberAccess","src":"68474:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Complete","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2182,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3649,"name":"Identifier","src":"68515:16:0"}],"id":3650,"name":"MemberAccess","src":"68515:25:0"}],"id":3651,"name":"BinaryOperation","src":"68474:66:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentAppealToRepartition","referencedDeclaration":2173,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3652,"name":"Identifier","src":"68563:7:0"}],"id":3653,"name":"MemberAccess","src":"68563:34:0"}],"id":3654,"name":"UnaryOperation","src":"68561:36:0"}],"id":3655,"name":"ExpressionStatement","src":"68561:36:0"}],"id":3656,"name":"Block","src":"68542:71:0"}],"id":3657,"name":"IfStatement","src":"68470:143:0"}],"id":3658,"name":"Block","src":"63830:4794:0"}],"id":3659,"name":"ForStatement","src":"63753:4871:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3186,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3660,"name":"Identifier","src":"68636:7:0"}],"id":3662,"name":"MemberAccess","src":"68636:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3663,"name":"Identifier","src":"68652:12:0"}],"id":3664,"name":"MemberAccess","src":"68652:23:0"}],"id":3665,"name":"Assignment","src":"68636:39:0"}],"id":3666,"name":"ExpressionStatement","src":"68636:39:0"}],"id":3667,"name":"Block","src":"63217:5466:0"}],"id":3668,"name":"FunctionDefinition","src":"63105:5578:0"},{"attributes":{"constant":true,"documentation":"@dev Return the amount of jurors which are or will be drawn in the dispute.\r\n The number of jurors is doubled and 1 is added at each appeal. We have proven the formula by recurrence.\r\n This avoid having a variable number of jurors which would be updated in order to save gas.\r\n @param _disputeID The ID of the dispute we compute the amount of jurors.\r\n @return nbJurors The number of jurors which are drawn.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"amountJurors","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3695,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3669,"name":"ElementaryTypeName","src":"69329:4:0"}],"id":3670,"name":"VariableDeclaration","src":"69329:15:0"}],"id":3671,"name":"ParameterList","src":"69328:17:0"},{"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3695,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3672,"name":"ElementaryTypeName","src":"69367:4:0"}],"id":3673,"name":"VariableDeclaration","src":"69367:13:0"}],"id":3674,"name":"ParameterList","src":"69366:15:0"},{"children":[{"attributes":{"assignments":[3676]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3695,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":3675,"name":"UserDefinedTypeName","src":"69393:7:0"}],"id":3676,"name":"VariableDeclaration","src":"69393:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3677,"name":"Identifier","src":"69419:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3670,"type":"uint256","value":"_disputeID"},"id":3678,"name":"Identifier","src":"69428:10:0"}],"id":3679,"name":"IndexAccess","src":"69419:20:0"}],"id":3680,"name":"VariableDeclarationStatement","src":"69393:46:0"},{"attributes":{"functionReturnParameters":3674},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"initialNumberJurors","referencedDeclaration":2156,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3676,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3681,"name":"Identifier","src":"69458:7:0"}],"id":3682,"name":"MemberAccess","src":"69458:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3683,"name":"Literal","src":"69488:1:0"}],"id":3684,"name":"BinaryOperation","src":"69458:31:0"}],"id":3685,"name":"TupleExpression","src":"69457:33:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":3686,"name":"Literal","src":"69493:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3676,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3687,"name":"Identifier","src":"69496:7:0"}],"id":3688,"name":"MemberAccess","src":"69496:15:0"}],"id":3689,"name":"BinaryOperation","src":"69493:18:0"}],"id":3690,"name":"BinaryOperation","src":"69457:54:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3691,"name":"Literal","src":"69514:1:0"}],"id":3692,"name":"BinaryOperation","src":"69457:58:0"}],"id":3693,"name":"Return","src":"69450:65:0"}],"id":3694,"name":"Block","src":"69382:141:0"}],"id":3695,"name":"FunctionDefinition","src":"69307:216:0"},{"attributes":{"constant":true,"documentation":"@dev Must be used to verify that a juror has been draw at least _draws.length times.\r\n We have to require the user to specify the draws that lead the juror to be drawn.\r\n Because doing otherwise (looping through all draws) could consume too much gas.\r\n @param _jurorAddress Address of the juror we want to verify draws.\r\n @param _disputeID The ID of the dispute the juror was drawn.\r\n @param _draws The list of draws the juror was drawn. It draw numbering starts at 1 and the numbers should be increasing.\r\n Note that in most cases this list will just contain 1 number.\r\n @param valid true if the draws are valid.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"validDraws","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_jurorAddress","scope":3815,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3696,"name":"ElementaryTypeName","src":"70232:7:0"}],"id":3697,"name":"VariableDeclaration","src":"70232:21:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":3815,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3698,"name":"ElementaryTypeName","src":"70255:4:0"}],"id":3699,"name":"VariableDeclaration","src":"70255:15:0"},{"attributes":{"constant":false,"name":"_draws","scope":3815,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3700,"name":"ElementaryTypeName","src":"70272:4:0"}],"id":3701,"name":"ArrayTypeName","src":"70272:6:0"}],"id":3702,"name":"VariableDeclaration","src":"70272:13:0"}],"id":3703,"name":"ParameterList","src":"70231:55:0"},{"children":[{"attributes":{"constant":false,"name":"valid","scope":3815,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3704,"name":"ElementaryTypeName","src":"70308:4:0"}],"id":3705,"name":"VariableDeclaration","src":"70308:10:0"}],"id":3706,"name":"ParameterList","src":"70307:12:0"},{"children":[{"attributes":{"assignments":[3708]},"children":[{"attributes":{"constant":false,"name":"draw","scope":3815,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3707,"name":"ElementaryTypeName","src":"70331:4:0"}],"id":3708,"name":"VariableDeclaration","src":"70331:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3709,"name":"Literal","src":"70343:1:0"}],"id":3710,"name":"VariableDeclarationStatement","src":"70331:13:0"},{"attributes":{"assignments":[3712]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3815,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":3711,"name":"UserDefinedTypeName","src":"70355:5:0"}],"id":3712,"name":"VariableDeclaration","src":"70355:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3713,"name":"Identifier","src":"70377:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3697,"type":"address","value":"_jurorAddress"},"id":3714,"name":"Identifier","src":"70384:13:0"}],"id":3715,"name":"IndexAccess","src":"70377:21:0"}],"id":3716,"name":"VariableDeclarationStatement","src":"70355:43:0"},{"attributes":{"assignments":[3718]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3815,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":3717,"name":"UserDefinedTypeName","src":"70409:7:0"}],"id":3718,"name":"VariableDeclaration","src":"70409:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3719,"name":"Identifier","src":"70435:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3699,"type":"uint256","value":"_disputeID"},"id":3720,"name":"Identifier","src":"70444:10:0"}],"id":3721,"name":"IndexAccess","src":"70435:20:0"}],"id":3722,"name":"VariableDeclarationStatement","src":"70409:46:0"},{"attributes":{"assignments":[3724]},"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3815,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3723,"name":"ElementaryTypeName","src":"70466:4:0"}],"id":3724,"name":"VariableDeclaration","src":"70466:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3695,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":3725,"name":"Identifier","src":"70482:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3699,"type":"uint256","value":"_disputeID"},"id":3726,"name":"Identifier","src":"70495:10:0"}],"id":3727,"name":"FunctionCall","src":"70482:24:0"}],"id":3728,"name":"VariableDeclarationStatement","src":"70466:40:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2118,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3712,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3729,"name":"Identifier","src":"70523:5:0"}],"id":3730,"name":"MemberAccess","src":"70523:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":3731,"name":"Identifier","src":"70544:7:0"}],"id":3732,"name":"BinaryOperation","src":"70523:28:0"},{"attributes":{"functionReturnParameters":3706},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3733,"name":"Literal","src":"70560:5:0"}],"id":3734,"name":"Return","src":"70553:12:0"}],"id":3735,"name":"IfStatement","src":"70519:46:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3718,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3736,"name":"Identifier","src":"70642:7:0"}],"id":3737,"name":"MemberAccess","src":"70642:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3718,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3738,"name":"Identifier","src":"70658:7:0"}],"id":3739,"name":"MemberAccess","src":"70658:15:0"}],"id":3740,"name":"BinaryOperation","src":"70642:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":3741,"name":"Identifier","src":"70677:7:0"}],"id":3742,"name":"BinaryOperation","src":"70642:42:0"},{"attributes":{"functionReturnParameters":3706},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3743,"name":"Literal","src":"70693:5:0"}],"id":3744,"name":"Return","src":"70686:12:0"}],"id":3745,"name":"IfStatement","src":"70638:60:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":3746,"name":"Identifier","src":"70756:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":3747,"name":"Identifier","src":"70766:6:0"}],"id":3748,"name":"MemberAccess","src":"70766:11:0"}],"id":3749,"name":"BinaryOperation","src":"70756:21:0"},{"attributes":{"functionReturnParameters":3706},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3750,"name":"Literal","src":"70786:5:0"}],"id":3751,"name":"Return","src":"70779:12:0"}],"id":3752,"name":"IfStatement","src":"70752:39:0"},{"children":[{"attributes":{"assignments":[3754]},"children":[{"attributes":{"constant":false,"name":"i","scope":3815,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3753,"name":"ElementaryTypeName","src":"70851:4:0"}],"id":3754,"name":"VariableDeclaration","src":"70851:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3755,"name":"Literal","src":"70860:1:0"}],"id":3756,"name":"VariableDeclarationStatement","src":"70851:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3754,"type":"uint256","value":"i"},"id":3757,"name":"Identifier","src":"70863:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3702,"type":"uint256[] memory","value":"_draws"},"id":3758,"name":"Identifier","src":"70867:6:0"}],"id":3759,"name":"MemberAccess","src":"70867:13:0"}],"id":3760,"name":"BinaryOperation","src":"70863:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3754,"type":"uint256","value":"i"},"id":3761,"name":"Identifier","src":"70884:1:0"}],"id":3762,"name":"UnaryOperation","src":"70882:3:0"}],"id":3763,"name":"ExpressionStatement","src":"70882:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3702,"type":"uint256[] memory","value":"_draws"},"id":3764,"name":"Identifier","src":"70906:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3754,"type":"uint256","value":"i"},"id":3765,"name":"Identifier","src":"70913:1:0"}],"id":3766,"name":"IndexAccess","src":"70906:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3708,"type":"uint256","value":"draw"},"id":3767,"name":"Identifier","src":"70919:4:0"}],"id":3768,"name":"BinaryOperation","src":"70906:17:0"},{"attributes":{"functionReturnParameters":3706},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3769,"name":"Literal","src":"70932:5:0"}],"id":3770,"name":"Return","src":"70925:12:0"}],"id":3771,"name":"IfStatement","src":"70902:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3708,"type":"uint256","value":"draw"},"id":3772,"name":"Identifier","src":"71049:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3702,"type":"uint256[] memory","value":"_draws"},"id":3773,"name":"Identifier","src":"71056:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3754,"type":"uint256","value":"i"},"id":3774,"name":"Identifier","src":"71063:1:0"}],"id":3775,"name":"IndexAccess","src":"71056:9:0"}],"id":3776,"name":"Assignment","src":"71049:16:0"}],"id":3777,"name":"ExpressionStatement","src":"71049:16:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3708,"type":"uint256","value":"draw"},"id":3778,"name":"Identifier","src":"71084:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3724,"type":"uint256","value":"nbJurors"},"id":3779,"name":"Identifier","src":"71091:8:0"}],"id":3780,"name":"BinaryOperation","src":"71084:15:0"},{"attributes":{"functionReturnParameters":3706},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3781,"name":"Literal","src":"71108:5:0"}],"id":3782,"name":"Return","src":"71101:12:0"}],"id":3783,"name":"IfStatement","src":"71080:33:0"},{"attributes":{"assignments":[3785]},"children":[{"attributes":{"constant":false,"name":"position","scope":3815,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3784,"name":"ElementaryTypeName","src":"71128:4:0"}],"id":3785,"name":"VariableDeclaration","src":"71128:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":3786,"name":"ElementaryTypeNameExpression","src":"71144:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4548,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":3787,"name":"Identifier","src":"71149:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2104,"type":"uint256","value":"randomNumber"},"id":3788,"name":"Identifier","src":"71159:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3699,"type":"uint256","value":"_disputeID"},"id":3789,"name":"Identifier","src":"71173:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3708,"type":"uint256","value":"draw"},"id":3790,"name":"Identifier","src":"71185:4:0"}],"id":3791,"name":"FunctionCall","src":"71149:41:0"}],"id":3792,"name":"FunctionCall","src":"71144:47:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2100,"type":"uint256","value":"segmentSize"},"id":3793,"name":"Identifier","src":"71194:11:0"}],"id":3794,"name":"BinaryOperation","src":"71144:61:0"}],"id":3795,"name":"VariableDeclarationStatement","src":"71128:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3796,"name":"Identifier","src":"71264:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3785,"type":"uint256","value":"position"},"id":3797,"name":"Identifier","src":"71272:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentStart","referencedDeclaration":2120,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3712,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3798,"name":"Identifier","src":"71284:5:0"}],"id":3799,"name":"MemberAccess","src":"71284:18:0"}],"id":3800,"name":"BinaryOperation","src":"71272:30:0"}],"id":3801,"name":"FunctionCall","src":"71264:39:0"}],"id":3802,"name":"ExpressionStatement","src":"71264:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3803,"name":"Identifier","src":"71318:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3785,"type":"uint256","value":"position"},"id":3804,"name":"Identifier","src":"71326:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentEnd","referencedDeclaration":2122,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3712,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3805,"name":"Identifier","src":"71337:5:0"}],"id":3806,"name":"MemberAccess","src":"71337:16:0"}],"id":3807,"name":"BinaryOperation","src":"71326:27:0"}],"id":3808,"name":"FunctionCall","src":"71318:36:0"}],"id":3809,"name":"ExpressionStatement","src":"71318:36:0"}],"id":3810,"name":"Block","src":"70887:479:0"}],"id":3811,"name":"ForStatement","src":"70846:520:0"},{"attributes":{"functionReturnParameters":3706},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":3812,"name":"Literal","src":"71385:4:0"}],"id":3813,"name":"Return","src":"71378:11:0"}],"id":3814,"name":"Block","src":"70320:1077:0"}],"id":3815,"name":"FunctionDefinition","src":"70212:1185:0"},{"attributes":{"constant":false,"documentation":"@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost().\r\n @param _choices Amount of choices the arbitrator can make in this dispute.\r\n @param _extraData Null for the default number. Otherwise, first 16 bytes will be used to return the number of jurors.\r\n @return disputeID ID of the dispute created.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createDispute","payable":true,"scope":4539,"stateMutability":"payable","superFunction":1998,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_choices","scope":3922,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3816,"name":"ElementaryTypeName","src":"71989:4:0"}],"id":3817,"name":"VariableDeclaration","src":"71989:13:0"},{"attributes":{"constant":false,"name":"_extraData","scope":3922,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3818,"name":"ElementaryTypeName","src":"72004:5:0"}],"id":3819,"name":"VariableDeclaration","src":"72004:16:0"}],"id":3820,"name":"ParameterList","src":"71988:33:0"},{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":3922,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3821,"name":"ElementaryTypeName","src":"72046:4:0"}],"id":3822,"name":"VariableDeclaration","src":"72046:14:0"}],"id":3823,"name":"ParameterList","src":"72045:16:0"},{"children":[{"attributes":{"assignments":[3825]},"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3922,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":3824,"name":"ElementaryTypeName","src":"72073:6:0"}],"id":3825,"name":"VariableDeclaration","src":"72073:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":4114,"type":"function (bytes memory) view returns (uint16)","value":"extraDataToNbJurors"},"id":3826,"name":"Identifier","src":"72091:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3819,"type":"bytes memory","value":"_extraData"},"id":3827,"name":"Identifier","src":"72111:10:0"}],"id":3828,"name":"FunctionCall","src":"72091:31:0"}],"id":3829,"name":"VariableDeclarationStatement","src":"72073:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3830,"name":"Identifier","src":"72133:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":3831,"name":"Identifier","src":"72141:3:0"}],"id":3832,"name":"MemberAccess","src":"72141:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[4049],"referencedDeclaration":4049,"type":"function (bytes memory) view returns (uint256)","value":"arbitrationCost"},"id":3833,"name":"Identifier","src":"72154:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3819,"type":"bytes memory","value":"_extraData"},"id":3834,"name":"Identifier","src":"72170:10:0"}],"id":3835,"name":"FunctionCall","src":"72154:27:0"}],"id":3836,"name":"BinaryOperation","src":"72141:40:0"}],"id":3837,"name":"FunctionCall","src":"72133:49:0"}],"id":3838,"name":"ExpressionStatement","src":"72133:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3822,"type":"uint256","value":"disputeID"},"id":3839,"name":"Identifier","src":"72195:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3840,"name":"Identifier","src":"72207:8:0"}],"id":3841,"name":"MemberAccess","src":"72207:15:0"}],"id":3842,"name":"UnaryOperation","src":"72207:17:0"}],"id":3843,"name":"Assignment","src":"72195:29:0"}],"id":3844,"name":"ExpressionStatement","src":"72195:29:0"},{"attributes":{"assignments":[3846]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3922,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":3845,"name":"UserDefinedTypeName","src":"72235:7:0"}],"id":3846,"name":"VariableDeclaration","src":"72235:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3847,"name":"Identifier","src":"72261:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3822,"type":"uint256","value":"disputeID"},"id":3848,"name":"Identifier","src":"72270:9:0"}],"id":3849,"name":"IndexAccess","src":"72261:19:0"}],"id":3850,"name":"VariableDeclarationStatement","src":"72235:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"arbitrated","referencedDeclaration":2148,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3851,"name":"Identifier","src":"72291:7:0"}],"id":3853,"name":"MemberAccess","src":"72291:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1932,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":3854,"name":"Identifier","src":"72312:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":3855,"name":"Identifier","src":"72323:3:0"}],"id":3856,"name":"MemberAccess","src":"72323:10:0"}],"id":3857,"name":"FunctionCall","src":"72312:22:0"}],"id":3858,"name":"Assignment","src":"72291:43:0"}],"id":3859,"name":"ExpressionStatement","src":"72291:43:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":3860,"name":"Identifier","src":"72349:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":3861,"name":"Identifier","src":"72358:6:0"}],"id":3862,"name":"MemberAccess","src":"72358:11:0"}],"id":3863,"name":"BinaryOperation","src":"72349:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3864,"name":"Identifier","src":"72449:7:0"}],"id":3866,"name":"MemberAccess","src":"72449:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":3867,"name":"Identifier","src":"72467:7:0"}],"id":3868,"name":"Assignment","src":"72449:25:0"}],"id":3869,"name":"ExpressionStatement","src":"72449:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3870,"name":"Identifier","src":"72546:7:0"}],"id":3872,"name":"MemberAccess","src":"72546:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":3873,"name":"Identifier","src":"72564:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3874,"name":"Literal","src":"72572:1:0"}],"id":3875,"name":"BinaryOperation","src":"72564:9:0"}],"id":3876,"name":"Assignment","src":"72546:27:0"}],"id":3877,"name":"ExpressionStatement","src":"72546:27:0"}],"id":3878,"name":"IfStatement","src":"72345:228:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"choices","referencedDeclaration":2154,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3879,"name":"Identifier","src":"72584:7:0"}],"id":3881,"name":"MemberAccess","src":"72584:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3817,"type":"uint256","value":"_choices"},"id":3882,"name":"Identifier","src":"72602:8:0"}],"id":3883,"name":"Assignment","src":"72584:26:0"}],"id":3884,"name":"ExpressionStatement","src":"72584:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"initialNumberJurors","referencedDeclaration":2156,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3885,"name":"Identifier","src":"72621:7:0"}],"id":3887,"name":"MemberAccess","src":"72621:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3825,"type":"uint16","value":"nbJurors"},"id":3888,"name":"Identifier","src":"72651:8:0"}],"id":3889,"name":"Assignment","src":"72621:38:0"}],"id":3890,"name":"ExpressionStatement","src":"72621:38:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2158,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3891,"name":"Identifier","src":"72670:7:0"}],"id":3893,"name":"MemberAccess","src":"72670:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2070,"type":"uint256","value":"arbitrationFeePerJuror"},"id":3894,"name":"Identifier","src":"72703:22:0"}],"id":3895,"name":"Assignment","src":"72670:55:0"}],"id":3896,"name":"ExpressionStatement","src":"72670:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3897,"name":"Identifier","src":"72819:7:0"}],"id":3900,"name":"MemberAccess","src":"72819:13:0"}],"id":3901,"name":"MemberAccess","src":"72819:20:0"}],"id":3902,"name":"UnaryOperation","src":"72819:22:0"}],"id":3903,"name":"ExpressionStatement","src":"72819:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3846,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3904,"name":"Identifier","src":"72852:7:0"}],"id":3907,"name":"MemberAccess","src":"72852:19:0"}],"id":3908,"name":"MemberAccess","src":"72852:26:0"}],"id":3909,"name":"UnaryOperation","src":"72852:28:0"}],"id":3910,"name":"ExpressionStatement","src":"72852:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Arbitrable_$1932","typeString":"contract Arbitrable"}],"overloadedDeclarations":[null],"referencedDeclaration":1979,"type":"function (uint256,contract Arbitrable)","value":"DisputeCreation"},"id":3911,"name":"Identifier","src":"72893:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3822,"type":"uint256","value":"disputeID"},"id":3912,"name":"Identifier","src":"72909:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1932,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":3913,"name":"Identifier","src":"72920:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":3914,"name":"Identifier","src":"72931:3:0"}],"id":3915,"name":"MemberAccess","src":"72931:10:0"}],"id":3916,"name":"FunctionCall","src":"72920:22:0"}],"id":3917,"name":"FunctionCall","src":"72893:50:0"}],"id":3918,"name":"ExpressionStatement","src":"72893:50:0"},{"attributes":{"functionReturnParameters":3823},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3822,"type":"uint256","value":"disputeID"},"id":3919,"name":"Identifier","src":"72961:9:0"}],"id":3920,"name":"Return","src":"72954:16:0"}],"id":3921,"name":"Block","src":"72062:916:0"}],"id":3922,"name":"FunctionDefinition","src":"71966:1012:0"},{"attributes":{"constant":false,"documentation":"@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Standard but not used by this contract.\r","implemented":true,"isConstructor":false,"name":"appeal","payable":true,"scope":4539,"stateMutability":"payable","superFunction":2025,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3994,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3923,"name":"ElementaryTypeName","src":"73243:4:0"}],"id":3924,"name":"VariableDeclaration","src":"73243:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":3994,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3925,"name":"ElementaryTypeName","src":"73260:5:0"}],"id":3926,"name":"VariableDeclaration","src":"73260:16:0"}],"id":3927,"name":"ParameterList","src":"73242:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":3932,"name":"ParameterList","src":"73319:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2245,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":3928,"name":"Identifier","src":"73293:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":3929,"name":"Identifier","src":"73304:6:0"}],"id":3930,"name":"MemberAccess","src":"73304:13:0"}],"id":3931,"name":"ModifierInvocation","src":"73293:25:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"appeal","referencedDeclaration":2025,"type":"function (uint256,bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4590,"type":"contract super Kleros","value":"super"},"id":3933,"name":"Identifier","src":"73330:5:0"}],"id":3935,"name":"MemberAccess","src":"73330:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3924,"type":"uint256","value":"_disputeID"},"id":3936,"name":"Identifier","src":"73343:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3926,"type":"bytes memory","value":"_extraData"},"id":3937,"name":"Identifier","src":"73354:10:0"}],"id":3938,"name":"FunctionCall","src":"73330:35:0"}],"id":3939,"name":"ExpressionStatement","src":"73330:35:0"},{"attributes":{"assignments":[3941]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3994,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":3940,"name":"UserDefinedTypeName","src":"73376:7:0"}],"id":3941,"name":"VariableDeclaration","src":"73376:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3942,"name":"Identifier","src":"73402:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3924,"type":"uint256","value":"_disputeID"},"id":3943,"name":"Identifier","src":"73411:10:0"}],"id":3944,"name":"IndexAccess","src":"73402:20:0"}],"id":3945,"name":"VariableDeclarationStatement","src":"73376:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3946,"name":"Identifier","src":"73433:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":3947,"name":"Identifier","src":"73441:3:0"}],"id":3948,"name":"MemberAccess","src":"73441:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[4084],"referencedDeclaration":4084,"type":"function (uint256,bytes memory) view returns (uint256)","value":"appealCost"},"id":3949,"name":"Identifier","src":"73454:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3924,"type":"uint256","value":"_disputeID"},"id":3950,"name":"Identifier","src":"73465:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3926,"type":"bytes memory","value":"_extraData"},"id":3951,"name":"Identifier","src":"73477:10:0"}],"id":3952,"name":"FunctionCall","src":"73454:34:0"}],"id":3953,"name":"BinaryOperation","src":"73441:47:0"}],"id":3954,"name":"FunctionCall","src":"73433:56:0"}],"id":3955,"name":"ExpressionStatement","src":"73433:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3956,"name":"Identifier","src":"73500:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3941,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3957,"name":"Identifier","src":"73508:7:0"}],"id":3958,"name":"MemberAccess","src":"73508:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3941,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3959,"name":"Identifier","src":"73524:7:0"}],"id":3960,"name":"MemberAccess","src":"73524:15:0"}],"id":3961,"name":"BinaryOperation","src":"73508:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":3962,"name":"Identifier","src":"73543:7:0"}],"id":3963,"name":"BinaryOperation","src":"73508:42:0"}],"id":3964,"name":"FunctionCall","src":"73500:51:0"}],"id":3965,"name":"ExpressionStatement","src":"73500:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":3966,"name":"Identifier","src":"73597:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrated","referencedDeclaration":2148,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3941,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3967,"name":"Identifier","src":"73605:7:0"}],"id":3968,"name":"MemberAccess","src":"73605:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4554,"type":"msg","value":"msg"},"id":3969,"name":"Identifier","src":"73627:3:0"}],"id":3970,"name":"MemberAccess","src":"73627:10:0"}],"id":3971,"name":"BinaryOperation","src":"73605:32:0"}],"id":3972,"name":"FunctionCall","src":"73597:41:0"}],"id":3973,"name":"ExpressionStatement","src":"73597:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3941,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3974,"name":"Identifier","src":"73659:7:0"}],"id":3976,"name":"MemberAccess","src":"73659:15:0"}],"id":3977,"name":"UnaryOperation","src":"73659:17:0"}],"id":3978,"name":"ExpressionStatement","src":"73659:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3941,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3979,"name":"Identifier","src":"73687:7:0"}],"id":3982,"name":"MemberAccess","src":"73687:13:0"}],"id":3983,"name":"MemberAccess","src":"73687:20:0"}],"id":3984,"name":"UnaryOperation","src":"73687:22:0"}],"id":3985,"name":"ExpressionStatement","src":"73687:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3941,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3986,"name":"Identifier","src":"73720:7:0"}],"id":3989,"name":"MemberAccess","src":"73720:19:0"}],"id":3990,"name":"MemberAccess","src":"73720:26:0"}],"id":3991,"name":"UnaryOperation","src":"73720:28:0"}],"id":3992,"name":"ExpressionStatement","src":"73720:28:0"}],"id":3993,"name":"Block","src":"73319:437:0"}],"id":3994,"name":"FunctionDefinition","src":"73227:529:0"},{"attributes":{"constant":false,"documentation":"@dev Execute the ruling of a dispute which is in the state executable. UNTRUSTED.\r\n @param disputeID ID of the dispute to execute the ruling.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"executeRuling","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":4035,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3995,"name":"ElementaryTypeName","src":"73954:4:0"}],"id":3996,"name":"VariableDeclaration","src":"73954:14:0"}],"id":3997,"name":"ParameterList","src":"73953:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":3998,"name":"ParameterList","src":"73977:0:0"},{"children":[{"attributes":{"assignments":[4000]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4035,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":3999,"name":"UserDefinedTypeName","src":"73988:7:0"}],"id":4000,"name":"VariableDeclaration","src":"73988:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4001,"name":"Identifier","src":"74014:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3996,"type":"uint256","value":"disputeID"},"id":4002,"name":"Identifier","src":"74023:9:0"}],"id":4003,"name":"IndexAccess","src":"74014:19:0"}],"id":4004,"name":"VariableDeclarationStatement","src":"73988:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4557,4558],"referencedDeclaration":4557,"type":"function (bool) pure","value":"require"},"id":4005,"name":"Identifier","src":"74044:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2146","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4000,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4006,"name":"Identifier","src":"74052:7:0"}],"id":4007,"name":"MemberAccess","src":"74052:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":4008,"name":"Identifier","src":"74069:12:0"}],"id":4009,"name":"MemberAccess","src":"74069:23:0"}],"id":4010,"name":"BinaryOperation","src":"74052:40:0"}],"id":4011,"name":"FunctionCall","src":"74044:49:0"}],"id":4012,"name":"ExpressionStatement","src":"74044:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4000,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4013,"name":"Identifier","src":"74106:7:0"}],"id":4015,"name":"MemberAccess","src":"74106:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executed","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":4016,"name":"Identifier","src":"74122:12:0"}],"id":4017,"name":"MemberAccess","src":"74122:21:0"}],"id":4018,"name":"Assignment","src":"74106:37:0"}],"id":4019,"name":"ExpressionStatement","src":"74106:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"rule","referencedDeclaration":1924,"type":"function (uint256,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrated","referencedDeclaration":2148,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4000,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4020,"name":"Identifier","src":"74154:7:0"}],"id":4023,"name":"MemberAccess","src":"74154:18:0"}],"id":4024,"name":"MemberAccess","src":"74154:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3996,"type":"uint256","value":"disputeID"},"id":4025,"name":"Identifier","src":"74178:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2134,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4000,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4026,"name":"Identifier","src":"74189:7:0"}],"id":4027,"name":"MemberAccess","src":"74189:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4000,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4028,"name":"Identifier","src":"74209:7:0"}],"id":4029,"name":"MemberAccess","src":"74209:15:0"}],"id":4030,"name":"IndexAccess","src":"74189:36:0"}],"id":4031,"name":"MemberAccess","src":"74189:50:0"}],"id":4032,"name":"FunctionCall","src":"74154:86:0"}],"id":4033,"name":"ExpressionStatement","src":"74154:86:0"}],"id":4034,"name":"Block","src":"73977:271:0"}],"id":4035,"name":"FunctionDefinition","src":"73931:317:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the cost of arbitration. It is recommended not to increase it often, \r\n as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\r\n @return fee Amount to be paid.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"arbitrationCost","payable":false,"scope":4539,"stateMutability":"view","superFunction":2005,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":4049,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":4036,"name":"ElementaryTypeName","src":"74817:5:0"}],"id":4037,"name":"VariableDeclaration","src":"74817:16:0"}],"id":4038,"name":"ParameterList","src":"74816:18:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":4049,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4039,"name":"ElementaryTypeName","src":"74856:4:0"}],"id":4040,"name":"VariableDeclaration","src":"74856:8:0"}],"id":4041,"name":"ParameterList","src":"74855:10:0"},{"children":[{"attributes":{"functionReturnParameters":4041},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":4114,"type":"function (bytes memory) view returns (uint16)","value":"extraDataToNbJurors"},"id":4042,"name":"Identifier","src":"74884:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4037,"type":"bytes memory","value":"_extraData"},"id":4043,"name":"Identifier","src":"74904:10:0"}],"id":4044,"name":"FunctionCall","src":"74884:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2070,"type":"uint256","value":"arbitrationFeePerJuror"},"id":4045,"name":"Identifier","src":"74918:22:0"}],"id":4046,"name":"BinaryOperation","src":"74884:56:0"}],"id":4047,"name":"Return","src":"74877:63:0"}],"id":4048,"name":"Block","src":"74866:82:0"}],"id":4049,"name":"FunctionDefinition","src":"74792:156:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the cost of appeal. It is recommended not to increase it often, \r\n as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Is not used there.\r\n @return fee Amount to be paid.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"appealCost","payable":false,"scope":4539,"stateMutability":"view","superFunction":2034,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4084,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4050,"name":"ElementaryTypeName","src":"75331:4:0"}],"id":4051,"name":"VariableDeclaration","src":"75331:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":4084,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":4052,"name":"ElementaryTypeName","src":"75348:5:0"}],"id":4053,"name":"VariableDeclaration","src":"75348:16:0"}],"id":4054,"name":"ParameterList","src":"75330:35:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":4084,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4055,"name":"ElementaryTypeName","src":"75387:4:0"}],"id":4056,"name":"VariableDeclaration","src":"75387:8:0"}],"id":4057,"name":"ParameterList","src":"75386:10:0"},{"children":[{"attributes":{"assignments":[4059]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4084,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":4058,"name":"UserDefinedTypeName","src":"75408:7:0"}],"id":4059,"name":"VariableDeclaration","src":"75408:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4060,"name":"Identifier","src":"75434:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4051,"type":"uint256","value":"_disputeID"},"id":4061,"name":"Identifier","src":"75443:10:0"}],"id":4062,"name":"IndexAccess","src":"75434:20:0"}],"id":4063,"name":"VariableDeclarationStatement","src":"75408:46:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4064,"name":"Identifier","src":"75470:7:0"}],"id":4065,"name":"MemberAccess","src":"75470:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2091,"type":"uint256","value":"maxAppeals"},"id":4066,"name":"Identifier","src":"75489:10:0"}],"id":4067,"name":"BinaryOperation","src":"75470:29:0"},{"attributes":{"functionReturnParameters":4057},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2065,"type":"uint256","value":"NON_PAYABLE_AMOUNT"},"id":4068,"name":"Identifier","src":"75508:18:0"}],"id":4069,"name":"Return","src":"75501:25:0"}],"id":4070,"name":"IfStatement","src":"75467:59:0"},{"attributes":{"functionReturnParameters":4057},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":4071,"name":"Literal","src":"75547:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3695,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":4072,"name":"Identifier","src":"75549:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4051,"type":"uint256","value":"_disputeID"},"id":4073,"name":"Identifier","src":"75562:10:0"}],"id":4074,"name":"FunctionCall","src":"75549:24:0"}],"id":4075,"name":"BinaryOperation","src":"75547:26:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":4076,"name":"Literal","src":"75576:1:0"}],"id":4077,"name":"BinaryOperation","src":"75547:30:0"}],"id":4078,"name":"TupleExpression","src":"75546:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":2158,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4079,"name":"Identifier","src":"75581:7:0"}],"id":4080,"name":"MemberAccess","src":"75581:30:0"}],"id":4081,"name":"BinaryOperation","src":"75546:65:0"}],"id":4082,"name":"Return","src":"75539:72:0"}],"id":4083,"name":"Block","src":"75397:222:0"}],"id":4084,"name":"FunctionDefinition","src":"75311:308:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the amount of jurors to be drawn.\r\n @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\r\n Note that it does not check that the number of jurors is odd, but users are advised to choose a odd number of jurors.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"extraDataToNbJurors","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":4114,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":4085,"name":"ElementaryTypeName","src":"75969:5:0"}],"id":4086,"name":"VariableDeclaration","src":"75969:16:0"}],"id":4087,"name":"ParameterList","src":"75968:18:0"},{"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":4114,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":4088,"name":"ElementaryTypeName","src":"76010:6:0"}],"id":4089,"name":"VariableDeclaration","src":"76010:15:0"}],"id":4090,"name":"ParameterList","src":"76009:17:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4086,"type":"bytes memory","value":"_extraData"},"id":4091,"name":"Identifier","src":"76042:10:0"}],"id":4092,"name":"MemberAccess","src":"76042:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":4093,"name":"Literal","src":"76062:1:0"}],"id":4094,"name":"BinaryOperation","src":"76042:21:0"},{"attributes":{"functionReturnParameters":4090},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint16","value":"defaultNumberJuror"},"id":4095,"name":"Identifier","src":"76085:18:0"}],"id":4096,"name":"Return","src":"76078:25:0"},{"attributes":{"functionReturnParameters":4090},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<<","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint16)","value":"uint16"},"id":4097,"name":"ElementaryTypeNameExpression","src":"76140:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4086,"type":"bytes memory","value":"_extraData"},"id":4098,"name":"Identifier","src":"76147:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":4099,"name":"Literal","src":"76158:1:0"}],"id":4100,"name":"IndexAccess","src":"76147:13:0"}],"id":4101,"name":"FunctionCall","src":"76140:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":4102,"name":"Literal","src":"76165:1:0"}],"id":4103,"name":"BinaryOperation","src":"76140:26:0"}],"id":4104,"name":"TupleExpression","src":"76139:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint16)","value":"uint16"},"id":4105,"name":"ElementaryTypeNameExpression","src":"76170:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4086,"type":"bytes memory","value":"_extraData"},"id":4106,"name":"Identifier","src":"76177:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":4107,"name":"Literal","src":"76188:1:0"}],"id":4108,"name":"IndexAccess","src":"76177:13:0"}],"id":4109,"name":"FunctionCall","src":"76170:21:0"}],"id":4110,"name":"BinaryOperation","src":"76139:52:0"}],"id":4111,"name":"Return","src":"76132:59:0"}],"id":4112,"name":"IfStatement","src":"76038:153:0"}],"id":4113,"name":"Block","src":"76027:172:0"}],"id":4114,"name":"FunctionDefinition","src":"75940:259:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the minimum activated pinakions in alpha.\r\n Note there may be multiple draws for a single user on a single dispute.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getStakePerDraw","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":4115,"name":"ParameterList","src":"76385:2:0"},{"children":[{"attributes":{"constant":false,"name":"minActivatedTokenInAlpha","scope":4127,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4116,"name":"ElementaryTypeName","src":"76409:4:0"}],"id":4117,"name":"VariableDeclaration","src":"76409:29:0"}],"id":4118,"name":"ParameterList","src":"76408:31:0"},{"children":[{"attributes":{"functionReturnParameters":4118},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2085,"type":"uint256","value":"alpha"},"id":4119,"name":"Identifier","src":"76459:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2078,"type":"uint256","value":"minActivatedToken"},"id":4120,"name":"Identifier","src":"76467:17:0"}],"id":4121,"name":"BinaryOperation","src":"76459:25:0"}],"id":4122,"name":"TupleExpression","src":"76458:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2088,"type":"uint256","value":"ALPHA_DIVISOR"},"id":4123,"name":"Identifier","src":"76488:13:0"}],"id":4124,"name":"BinaryOperation","src":"76458:43:0"}],"id":4125,"name":"Return","src":"76451:50:0"}],"id":4126,"name":"Block","src":"76440:69:0"}],"id":4127,"name":"FunctionDefinition","src":"76361:148:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for account in Vote.\r\n @param _disputeID ID of the dispute.\r\n @param _appeals Which appeal (or 0 for the initial session).\r\n @param _voteID The ID of the vote for this appeal (or initial session).\r\n @return account The address of the voter.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteAccount","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4149,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4128,"name":"ElementaryTypeName","src":"76964:4:0"}],"id":4129,"name":"VariableDeclaration","src":"76964:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4149,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4130,"name":"ElementaryTypeName","src":"76981:4:0"}],"id":4131,"name":"VariableDeclaration","src":"76981:13:0"},{"attributes":{"constant":false,"name":"_voteID","scope":4149,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4132,"name":"ElementaryTypeName","src":"76996:4:0"}],"id":4133,"name":"VariableDeclaration","src":"76996:12:0"}],"id":4134,"name":"ParameterList","src":"76963:46:0"},{"children":[{"attributes":{"constant":false,"name":"account","scope":4149,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4135,"name":"ElementaryTypeName","src":"77031:7:0"}],"id":4136,"name":"VariableDeclaration","src":"77031:15:0"}],"id":4137,"name":"ParameterList","src":"77030:17:0"},{"children":[{"attributes":{"functionReturnParameters":4137},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":2129,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4138,"name":"Identifier","src":"77066:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4129,"type":"uint256","value":"_disputeID"},"id":4139,"name":"Identifier","src":"77075:10:0"}],"id":4140,"name":"IndexAccess","src":"77066:20:0"}],"id":4141,"name":"MemberAccess","src":"77066:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4131,"type":"uint256","value":"_appeals"},"id":4142,"name":"Identifier","src":"77093:8:0"}],"id":4143,"name":"IndexAccess","src":"77066:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4133,"type":"uint256","value":"_voteID"},"id":4144,"name":"Identifier","src":"77103:7:0"}],"id":4145,"name":"IndexAccess","src":"77066:45:0"}],"id":4146,"name":"MemberAccess","src":"77066:53:0"}],"id":4147,"name":"Return","src":"77059:60:0"}],"id":4148,"name":"Block","src":"77048:79:0"}],"id":4149,"name":"FunctionDefinition","src":"76940:187:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for ruling in Vote.\r\n @param _disputeID ID of the dispute.\r\n @param _appeals Which appeal (or 0 for the initial session).\r\n @param _voteID The ID of the vote for this appeal (or initial session).\r\n @return ruling The ruling given by the voter.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteRuling","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4171,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4150,"name":"ElementaryTypeName","src":"77460:4:0"}],"id":4151,"name":"VariableDeclaration","src":"77460:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4171,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4152,"name":"ElementaryTypeName","src":"77477:4:0"}],"id":4153,"name":"VariableDeclaration","src":"77477:13:0"},{"attributes":{"constant":false,"name":"_voteID","scope":4171,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4154,"name":"ElementaryTypeName","src":"77492:4:0"}],"id":4155,"name":"VariableDeclaration","src":"77492:12:0"}],"id":4156,"name":"ParameterList","src":"77459:46:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":4171,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4157,"name":"ElementaryTypeName","src":"77527:4:0"}],"id":4158,"name":"VariableDeclaration","src":"77527:11:0"}],"id":4159,"name":"ParameterList","src":"77526:13:0"},{"children":[{"attributes":{"functionReturnParameters":4159},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":2131,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":2164,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4160,"name":"Identifier","src":"77558:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4151,"type":"uint256","value":"_disputeID"},"id":4161,"name":"Identifier","src":"77567:10:0"}],"id":4162,"name":"IndexAccess","src":"77558:20:0"}],"id":4163,"name":"MemberAccess","src":"77558:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4153,"type":"uint256","value":"_appeals"},"id":4164,"name":"Identifier","src":"77585:8:0"}],"id":4165,"name":"IndexAccess","src":"77558:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4155,"type":"uint256","value":"_voteID"},"id":4166,"name":"Identifier","src":"77595:7:0"}],"id":4167,"name":"IndexAccess","src":"77558:45:0"}],"id":4168,"name":"MemberAccess","src":"77558:52:0"}],"id":4169,"name":"Return","src":"77551:59:0"}],"id":4170,"name":"Block","src":"77540:78:0"}],"id":4171,"name":"FunctionDefinition","src":"77437:181:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for winningChoice in VoteCounter.\r\n @param _disputeID ID of the dispute.\r\n @param _appeals Which appeal (or 0 for the initial session).\r\n @return winningChoice The currently winning choice (or 0 if it's tied). Note that 0 can also be return if the majority refuses to arbitrate.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getWinningChoice","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4189,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4172,"name":"ElementaryTypeName","src":"77982:4:0"}],"id":4173,"name":"VariableDeclaration","src":"77982:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4189,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4174,"name":"ElementaryTypeName","src":"77999:4:0"}],"id":4175,"name":"VariableDeclaration","src":"77999:13:0"}],"id":4176,"name":"ParameterList","src":"77981:32:0"},{"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":4189,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4177,"name":"ElementaryTypeName","src":"78035:4:0"}],"id":4178,"name":"VariableDeclaration","src":"78035:18:0"}],"id":4179,"name":"ParameterList","src":"78034:20:0"},{"children":[{"attributes":{"functionReturnParameters":4179},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2134,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4180,"name":"Identifier","src":"78073:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4173,"type":"uint256","value":"_disputeID"},"id":4181,"name":"Identifier","src":"78082:10:0"}],"id":4182,"name":"IndexAccess","src":"78073:20:0"}],"id":4183,"name":"MemberAccess","src":"78073:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4175,"type":"uint256","value":"_appeals"},"id":4184,"name":"Identifier","src":"78106:8:0"}],"id":4185,"name":"IndexAccess","src":"78073:42:0"}],"id":4186,"name":"MemberAccess","src":"78073:56:0"}],"id":4187,"name":"Return","src":"78066:63:0"}],"id":4188,"name":"Block","src":"78055:82:0"}],"id":4189,"name":"FunctionDefinition","src":"77956:181:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for winningCount in VoteCounter.\r\n @param _disputeID ID of the dispute.\r\n @param _appeals Which appeal (or 0 for the initial session).\r\n @return winningCount The amount of votes the winning choice (or those who are tied) has.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getWinningCount","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4207,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4190,"name":"ElementaryTypeName","src":"78447:4:0"}],"id":4191,"name":"VariableDeclaration","src":"78447:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4207,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4192,"name":"ElementaryTypeName","src":"78464:4:0"}],"id":4193,"name":"VariableDeclaration","src":"78464:13:0"}],"id":4194,"name":"ParameterList","src":"78446:32:0"},{"children":[{"attributes":{"constant":false,"name":"winningCount","scope":4207,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4195,"name":"ElementaryTypeName","src":"78500:4:0"}],"id":4196,"name":"VariableDeclaration","src":"78500:17:0"}],"id":4197,"name":"ParameterList","src":"78499:19:0"},{"children":[{"attributes":{"functionReturnParameters":4197},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":2136,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4198,"name":"Identifier","src":"78537:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4191,"type":"uint256","value":"_disputeID"},"id":4199,"name":"Identifier","src":"78546:10:0"}],"id":4200,"name":"IndexAccess","src":"78537:20:0"}],"id":4201,"name":"MemberAccess","src":"78537:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4193,"type":"uint256","value":"_appeals"},"id":4202,"name":"Identifier","src":"78570:8:0"}],"id":4203,"name":"IndexAccess","src":"78537:42:0"}],"id":4204,"name":"MemberAccess","src":"78537:55:0"}],"id":4205,"name":"Return","src":"78530:62:0"}],"id":4206,"name":"Block","src":"78519:81:0"}],"id":4207,"name":"FunctionDefinition","src":"78422:178:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for voteCount in VoteCounter.\r\n @param _disputeID ID of the dispute.\r\n @param _appeals Which appeal (or 0 for the initial session).\r\n @param _choice The choice.\r\n @return voteCount The amount of votes the winning choice (or those who are tied) has.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteCount","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4229,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4208,"name":"ElementaryTypeName","src":"78937:4:0"}],"id":4209,"name":"VariableDeclaration","src":"78937:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":4229,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4210,"name":"ElementaryTypeName","src":"78954:4:0"}],"id":4211,"name":"VariableDeclaration","src":"78954:13:0"},{"attributes":{"constant":false,"name":"_choice","scope":4229,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4212,"name":"ElementaryTypeName","src":"78969:4:0"}],"id":4213,"name":"VariableDeclaration","src":"78969:12:0"}],"id":4214,"name":"ParameterList","src":"78936:46:0"},{"children":[{"attributes":{"constant":false,"name":"voteCount","scope":4229,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4215,"name":"ElementaryTypeName","src":"79004:4:0"}],"id":4216,"name":"VariableDeclaration","src":"79004:14:0"}],"id":4217,"name":"ParameterList","src":"79003:16:0"},{"children":[{"attributes":{"functionReturnParameters":4217},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":2140,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4218,"name":"Identifier","src":"79038:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4209,"type":"uint256","value":"_disputeID"},"id":4219,"name":"Identifier","src":"79047:10:0"}],"id":4220,"name":"IndexAccess","src":"79038:20:0"}],"id":4221,"name":"MemberAccess","src":"79038:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4211,"type":"uint256","value":"_appeals"},"id":4222,"name":"Identifier","src":"79071:8:0"}],"id":4223,"name":"IndexAccess","src":"79038:42:0"}],"id":4224,"name":"MemberAccess","src":"79038:52:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4213,"type":"uint256","value":"_choice"},"id":4225,"name":"Identifier","src":"79091:7:0"}],"id":4226,"name":"IndexAccess","src":"79038:61:0"}],"id":4227,"name":"Return","src":"79031:68:0"}],"id":4228,"name":"Block","src":"79020:87:0"}],"id":4229,"name":"FunctionDefinition","src":"78915:192:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for lastSessionVote in Dispute.\r\n @param _disputeID ID of the dispute.\r\n @param _juror The juror we want to get the last session he voted.\r\n @return lastSessionVote The last session the juror voted.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getLastSessionVote","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4230,"name":"ElementaryTypeName","src":"79393:4:0"}],"id":4231,"name":"VariableDeclaration","src":"79393:15:0"},{"attributes":{"constant":false,"name":"_juror","scope":4246,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4232,"name":"ElementaryTypeName","src":"79410:7:0"}],"id":4233,"name":"VariableDeclaration","src":"79410:14:0"}],"id":4234,"name":"ParameterList","src":"79392:33:0"},{"children":[{"attributes":{"constant":false,"name":"lastSessionVote","scope":4246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4235,"name":"ElementaryTypeName","src":"79447:4:0"}],"id":4236,"name":"VariableDeclaration","src":"79447:20:0"}],"id":4237,"name":"ParameterList","src":"79446:22:0"},{"children":[{"attributes":{"functionReturnParameters":4237},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":2171,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4238,"name":"Identifier","src":"79487:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4231,"type":"uint256","value":"_disputeID"},"id":4239,"name":"Identifier","src":"79496:10:0"}],"id":4240,"name":"IndexAccess","src":"79487:20:0"}],"id":4241,"name":"MemberAccess","src":"79487:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4233,"type":"address","value":"_juror"},"id":4242,"name":"Identifier","src":"79524:6:0"}],"id":4243,"name":"IndexAccess","src":"79487:44:0"}],"id":4244,"name":"Return","src":"79480:51:0"}],"id":4245,"name":"Block","src":"79469:70:0"}],"id":4246,"name":"FunctionDefinition","src":"79365:174:0"},{"attributes":{"constant":true,"documentation":"@dev Is the juror drawn in the draw of the dispute.\r\n @param _disputeID ID of the dispute.\r\n @param _juror The juror.\r\n @param _draw The draw. Note that it starts at 1.\r\n @return drawn True if the juror is drawn, false otherwise.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isDrawn","payable":false,"scope":4539,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4331,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4247,"name":"ElementaryTypeName","src":"79840:4:0"}],"id":4248,"name":"VariableDeclaration","src":"79840:15:0"},{"attributes":{"constant":false,"name":"_juror","scope":4331,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4249,"name":"ElementaryTypeName","src":"79857:7:0"}],"id":4250,"name":"VariableDeclaration","src":"79857:14:0"},{"attributes":{"constant":false,"name":"_draw","scope":4331,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4251,"name":"ElementaryTypeName","src":"79873:4:0"}],"id":4252,"name":"VariableDeclaration","src":"79873:10:0"}],"id":4253,"name":"ParameterList","src":"79839:45:0"},{"children":[{"attributes":{"constant":false,"name":"drawn","scope":4331,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":4254,"name":"ElementaryTypeName","src":"79906:4:0"}],"id":4255,"name":"VariableDeclaration","src":"79906:10:0"}],"id":4256,"name":"ParameterList","src":"79905:12:0"},{"children":[{"attributes":{"assignments":[4258]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4331,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":4257,"name":"UserDefinedTypeName","src":"79929:7:0"}],"id":4258,"name":"VariableDeclaration","src":"79929:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4259,"name":"Identifier","src":"79955:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4248,"type":"uint256","value":"_disputeID"},"id":4260,"name":"Identifier","src":"79964:10:0"}],"id":4261,"name":"IndexAccess","src":"79955:20:0"}],"id":4262,"name":"VariableDeclarationStatement","src":"79929:46:0"},{"attributes":{"assignments":[4264]},"children":[{"attributes":{"constant":false,"name":"juror","scope":4331,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":2123,"type":"struct Kleros.Juror"},"id":4263,"name":"UserDefinedTypeName","src":"79986:5:0"}],"id":4264,"name":"VariableDeclaration","src":"79986:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2127,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":4265,"name":"Identifier","src":"80008:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4250,"type":"address","value":"_juror"},"id":4266,"name":"Identifier","src":"80015:6:0"}],"id":4267,"name":"IndexAccess","src":"80008:14:0"}],"id":4268,"name":"VariableDeclarationStatement","src":"79986:36:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":2118,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4264,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":4269,"name":"Identifier","src":"80037:5:0"}],"id":4270,"name":"MemberAccess","src":"80037:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":4271,"name":"Identifier","src":"80058:7:0"}],"id":4272,"name":"BinaryOperation","src":"80037:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4258,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4273,"name":"Identifier","src":"80079:7:0"}],"id":4274,"name":"MemberAccess","src":"80079:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4258,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4275,"name":"Identifier","src":"80095:7:0"}],"id":4276,"name":"MemberAccess","src":"80095:15:0"}],"id":4277,"name":"BinaryOperation","src":"80079:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":4278,"name":"Identifier","src":"80114:7:0"}],"id":4279,"name":"BinaryOperation","src":"80079:42:0"}],"id":4280,"name":"TupleExpression","src":"80078:44:0"}],"id":4281,"name":"BinaryOperation","src":"80037:85:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":4282,"name":"Identifier","src":"80135:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":4283,"name":"Identifier","src":"80143:6:0"}],"id":4284,"name":"MemberAccess","src":"80143:11:0"}],"id":4285,"name":"BinaryOperation","src":"80135:19:0"}],"id":4286,"name":"BinaryOperation","src":"80037:117:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4252,"type":"uint256","value":"_draw"},"id":4287,"name":"Identifier","src":"80167:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3695,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":4288,"name":"Identifier","src":"80173:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4248,"type":"uint256","value":"_disputeID"},"id":4289,"name":"Identifier","src":"80186:10:0"}],"id":4290,"name":"FunctionCall","src":"80173:24:0"}],"id":4291,"name":"BinaryOperation","src":"80167:30:0"}],"id":4292,"name":"BinaryOperation","src":"80037:160:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4252,"type":"uint256","value":"_draw"},"id":4293,"name":"Identifier","src":"80210:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":4294,"name":"Literal","src":"80217:1:0"}],"id":4295,"name":"BinaryOperation","src":"80210:8:0"}],"id":4296,"name":"BinaryOperation","src":"80037:181:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2100,"type":"uint256","value":"segmentSize"},"id":4297,"name":"Identifier","src":"80231:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":4298,"name":"Literal","src":"80244:1:0"}],"id":4299,"name":"BinaryOperation","src":"80231:14:0"}],"id":4300,"name":"BinaryOperation","src":"80037:208:0"},{"children":[{"attributes":{"functionReturnParameters":4256},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":4301,"name":"Literal","src":"80279:5:0"}],"id":4302,"name":"Return","src":"80272:12:0"}],"id":4303,"name":"Block","src":"80257:39:0"},{"children":[{"attributes":{"assignments":[4305]},"children":[{"attributes":{"constant":false,"name":"position","scope":4331,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4304,"name":"ElementaryTypeName","src":"80317:4:0"}],"id":4305,"name":"VariableDeclaration","src":"80317:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":4306,"name":"ElementaryTypeNameExpression","src":"80333:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4548,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":4307,"name":"Identifier","src":"80338:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2104,"type":"uint256","value":"randomNumber"},"id":4308,"name":"Identifier","src":"80348:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4248,"type":"uint256","value":"_disputeID"},"id":4309,"name":"Identifier","src":"80361:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4252,"type":"uint256","value":"_draw"},"id":4310,"name":"Identifier","src":"80372:5:0"}],"id":4311,"name":"FunctionCall","src":"80338:40:0"}],"id":4312,"name":"FunctionCall","src":"80333:46:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2100,"type":"uint256","value":"segmentSize"},"id":4313,"name":"Identifier","src":"80382:11:0"}],"id":4314,"name":"BinaryOperation","src":"80333:60:0"}],"id":4315,"name":"VariableDeclarationStatement","src":"80317:76:0"},{"attributes":{"functionReturnParameters":4256},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4305,"type":"uint256","value":"position"},"id":4316,"name":"Identifier","src":"80416:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentStart","referencedDeclaration":2120,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4264,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":4317,"name":"Identifier","src":"80428:5:0"}],"id":4318,"name":"MemberAccess","src":"80428:18:0"}],"id":4319,"name":"BinaryOperation","src":"80416:30:0"}],"id":4320,"name":"TupleExpression","src":"80415:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4305,"type":"uint256","value":"position"},"id":4321,"name":"Identifier","src":"80452:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentEnd","referencedDeclaration":2122,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4264,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":4322,"name":"Identifier","src":"80463:5:0"}],"id":4323,"name":"MemberAccess","src":"80463:16:0"}],"id":4324,"name":"BinaryOperation","src":"80452:27:0"}],"id":4325,"name":"TupleExpression","src":"80451:29:0"}],"id":4326,"name":"BinaryOperation","src":"80415:65:0"}],"id":4327,"name":"Return","src":"80408:72:0"}],"id":4328,"name":"Block","src":"80302:190:0"}],"id":4329,"name":"IfStatement","src":"80033:459:0"}],"id":4330,"name":"Block","src":"79918:583:0"}],"id":4331,"name":"FunctionDefinition","src":"79823:678:0"},{"attributes":{"constant":true,"documentation":"@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The current ruling which will be given if there is no appeal. If it is not available, return 0.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"currentRuling","payable":false,"scope":4539,"stateMutability":"view","superFunction":2048,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4352,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4332,"name":"ElementaryTypeName","src":"80819:4:0"}],"id":4333,"name":"VariableDeclaration","src":"80819:15:0"}],"id":4334,"name":"ParameterList","src":"80818:17:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":4352,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4335,"name":"ElementaryTypeName","src":"80857:4:0"}],"id":4336,"name":"VariableDeclaration","src":"80857:11:0"}],"id":4337,"name":"ParameterList","src":"80856:13:0"},{"children":[{"attributes":{"assignments":[4339]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4352,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":4338,"name":"UserDefinedTypeName","src":"80881:7:0"}],"id":4339,"name":"VariableDeclaration","src":"80881:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4340,"name":"Identifier","src":"80907:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4333,"type":"uint256","value":"_disputeID"},"id":4341,"name":"Identifier","src":"80916:10:0"}],"id":4342,"name":"IndexAccess","src":"80907:20:0"}],"id":4343,"name":"VariableDeclarationStatement","src":"80881:46:0"},{"attributes":{"functionReturnParameters":4337},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":2134,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":2167,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4339,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4344,"name":"Identifier","src":"80945:7:0"}],"id":4345,"name":"MemberAccess","src":"80945:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4339,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4346,"name":"Identifier","src":"80965:7:0"}],"id":4347,"name":"MemberAccess","src":"80965:15:0"}],"id":4348,"name":"IndexAccess","src":"80945:36:0"}],"id":4349,"name":"MemberAccess","src":"80945:50:0"}],"id":4350,"name":"Return","src":"80938:57:0"}],"id":4351,"name":"Block","src":"80870:133:0"}],"id":4352,"name":"FunctionDefinition","src":"80796:207:0"},{"attributes":{"constant":true,"documentation":"@dev Return the status of a dispute.\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r","implemented":true,"isConstructor":false,"modifiers":[null],"name":"disputeStatus","payable":false,"scope":4539,"stateMutability":"view","superFunction":2041,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":4418,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4353,"name":"ElementaryTypeName","src":"81194:4:0"}],"id":4354,"name":"VariableDeclaration","src":"81194:15:0"}],"id":4355,"name":"ParameterList","src":"81193:17:0"},{"children":[{"attributes":{"constant":false,"name":"status","scope":4418,"stateVariable":false,"storageLocation":"default","type":"enum Arbitrator.DisputeStatus","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeStatus","referencedDeclaration":1936,"type":"enum Arbitrator.DisputeStatus"},"id":4356,"name":"UserDefinedTypeName","src":"81232:13:0"}],"id":4357,"name":"VariableDeclaration","src":"81232:20:0"}],"id":4358,"name":"ParameterList","src":"81231:22:0"},{"children":[{"attributes":{"assignments":[4360]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":4418,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":2177,"type":"struct Kleros.Dispute"},"id":4359,"name":"UserDefinedTypeName","src":"81265:7:0"}],"id":4360,"name":"VariableDeclaration","src":"81265:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2198,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":4361,"name":"Identifier","src":"81291:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4354,"type":"uint256","value":"_disputeID"},"id":4362,"name":"Identifier","src":"81300:10:0"}],"id":4363,"name":"IndexAccess","src":"81291:20:0"}],"id":4364,"name":"VariableDeclarationStatement","src":"81265:46:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4360,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4365,"name":"Identifier","src":"81326:7:0"}],"id":4366,"name":"MemberAccess","src":"81326:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4360,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4367,"name":"Identifier","src":"81342:7:0"}],"id":4368,"name":"MemberAccess","src":"81342:15:0"}],"id":4369,"name":"BinaryOperation","src":"81326:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":4370,"name":"Identifier","src":"81360:7:0"}],"id":4371,"name":"BinaryOperation","src":"81326:41:0"},{"attributes":{"functionReturnParameters":4358},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1936,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4372,"name":"Identifier","src":"81417:13:0"}],"id":4373,"name":"MemberAccess","src":"81417:20:0"}],"id":4374,"name":"Return","src":"81410:27:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":2150,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4360,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4375,"name":"Identifier","src":"81456:7:0"}],"id":4376,"name":"MemberAccess","src":"81456:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":2152,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4360,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4377,"name":"Identifier","src":"81472:7:0"}],"id":4378,"name":"MemberAccess","src":"81472:15:0"}],"id":4379,"name":"BinaryOperation","src":"81456:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2096,"type":"uint256","value":"session"},"id":4380,"name":"Identifier","src":"81491:7:0"}],"id":4381,"name":"BinaryOperation","src":"81456:42:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$2146","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":2160,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4360,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":4382,"name":"Identifier","src":"81550:7:0"}],"id":4383,"name":"MemberAccess","src":"81550:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2146,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":4384,"name":"Identifier","src":"81567:12:0"}],"id":4385,"name":"MemberAccess","src":"81567:17:0"}],"id":4386,"name":"BinaryOperation","src":"81550:34:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":4387,"name":"Identifier","src":"81609:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":4388,"name":"Identifier","src":"81618:6:0"}],"id":4389,"name":"MemberAccess","src":"81618:13:0"}],"id":4390,"name":"BinaryOperation","src":"81609:22:0"},{"attributes":{"functionReturnParameters":4358},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Waiting","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1936,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4391,"name":"Identifier","src":"81661:13:0"}],"id":4392,"name":"MemberAccess","src":"81661:21:0"}],"id":4393,"name":"Return","src":"81654:28:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$2110","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2112,"type":"enum Kleros.Period","value":"period"},"id":4394,"name":"Identifier","src":"81710:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2110,"type":"type(enum Kleros.Period)","value":"Period"},"id":4395,"name":"Identifier","src":"81720:6:0"}],"id":4396,"name":"MemberAccess","src":"81720:13:0"}],"id":4397,"name":"BinaryOperation","src":"81710:23:0"},{"attributes":{"functionReturnParameters":4358},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appealable","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1936,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4398,"name":"Identifier","src":"81763:13:0"}],"id":4399,"name":"MemberAccess","src":"81763:24:0"}],"id":4400,"name":"Return","src":"81756:31:0"},{"attributes":{"functionReturnParameters":4358},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1936,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4401,"name":"Identifier","src":"81818:13:0"}],"id":4402,"name":"MemberAccess","src":"81818:20:0"}],"id":4403,"name":"Return","src":"81811:27:0"}],"id":4404,"name":"IfStatement","src":"81706:132:0"}],"id":4405,"name":"IfStatement","src":"81605:233:0"}],"id":4406,"name":"Block","src":"81586:268:0"},{"attributes":{"functionReturnParameters":4358},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1936,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4407,"name":"Identifier","src":"81867:13:0"}],"id":4408,"name":"MemberAccess","src":"81867:20:0"}],"id":4409,"name":"Return","src":"81860:27:0"}],"id":4410,"name":"IfStatement","src":"81546:341:0"}],"id":4411,"name":"Block","src":"81500:399:0"},{"attributes":{"functionReturnParameters":4358},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Waiting","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1936,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":4412,"name":"Identifier","src":"81912:13:0"}],"id":4413,"name":"MemberAccess","src":"81912:21:0"}],"id":4414,"name":"Return","src":"81905:28:0"}],"id":4415,"name":"IfStatement","src":"81453:480:0"}],"id":4416,"name":"IfStatement","src":"81322:611:0"}],"id":4417,"name":"Block","src":"81254:718:0"}],"id":4418,"name":"FunctionDefinition","src":"81171:801:0"},{"attributes":{"constant":false,"documentation":"@dev General call function where the contract execute an arbitrary call with data and ETH following governor orders.\r\n @param _data Transaction data.\r\n @param _value Transaction value.\r\n @param _target Transaction target.\r","implemented":true,"isConstructor":false,"name":"executeOrder","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_data","scope":4440,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":4419,"name":"ElementaryTypeName","src":"82385:7:0"}],"id":4420,"name":"VariableDeclaration","src":"82385:13:0"},{"attributes":{"constant":false,"name":"_value","scope":4440,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4421,"name":"ElementaryTypeName","src":"82400:4:0"}],"id":4422,"name":"VariableDeclaration","src":"82400:11:0"},{"attributes":{"constant":false,"name":"_target","scope":4440,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4423,"name":"ElementaryTypeName","src":"82413:7:0"}],"id":4424,"name":"VariableDeclaration","src":"82413:15:0"}],"id":4425,"name":"ParameterList","src":"82384:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":4428,"name":"ParameterList","src":"82450:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4426,"name":"Identifier","src":"82437:12:0"}],"id":4427,"name":"ModifierInvocation","src":"82437:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function () payable returns (bool)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"function (uint256) returns (function () payable returns (bool))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"call","referencedDeclaration":null,"type":"function () payable returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4424,"type":"address","value":"_target"},"id":4429,"name":"Identifier","src":"82461:7:0"}],"id":4432,"name":"MemberAccess","src":"82461:12:0"}],"id":4433,"name":"MemberAccess","src":"82461:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4422,"type":"uint256","value":"_value"},"id":4434,"name":"Identifier","src":"82480:6:0"}],"id":4435,"name":"FunctionCall","src":"82461:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4420,"type":"bytes32","value":"_data"},"id":4436,"name":"Identifier","src":"82488:5:0"}],"id":4437,"name":"FunctionCall","src":"82461:33:0"}],"id":4438,"name":"ExpressionStatement","src":"82461:33:0"}],"id":4439,"name":"Block","src":"82450:52:0"}],"id":4440,"name":"FunctionDefinition","src":"82363:139:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for rng.\r\n @param _rng An instance of RNG.\r","implemented":true,"isConstructor":false,"name":"setRng","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_rng","scope":4452,"stateVariable":false,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1656,"type":"contract RNG"},"id":4441,"name":"UserDefinedTypeName","src":"82606:3:0"}],"id":4442,"name":"VariableDeclaration","src":"82606:8:0"}],"id":4443,"name":"ParameterList","src":"82605:10:0"},{"attributes":{"parameters":[null]},"children":[],"id":4446,"name":"ParameterList","src":"82636:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4444,"name":"Identifier","src":"82623:12:0"}],"id":4445,"name":"ModifierInvocation","src":"82623:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RNG"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2067,"type":"contract RNG","value":"rng"},"id":4447,"name":"Identifier","src":"82647:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4442,"type":"contract RNG","value":"_rng"},"id":4448,"name":"Identifier","src":"82653:4:0"}],"id":4449,"name":"Assignment","src":"82647:10:0"}],"id":4450,"name":"ExpressionStatement","src":"82647:10:0"}],"id":4451,"name":"Block","src":"82636:29:0"}],"id":4452,"name":"FunctionDefinition","src":"82590:75:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for arbitrationFeePerJuror.\r\n @param _arbitrationFeePerJuror The fee which will be paid to each juror.\r","implemented":true,"isConstructor":false,"name":"setArbitrationFeePerJuror","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_arbitrationFeePerJuror","scope":4464,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4453,"name":"ElementaryTypeName","src":"82848:4:0"}],"id":4454,"name":"VariableDeclaration","src":"82848:28:0"}],"id":4455,"name":"ParameterList","src":"82847:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":4458,"name":"ParameterList","src":"82898:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4456,"name":"Identifier","src":"82885:12:0"}],"id":4457,"name":"ModifierInvocation","src":"82885:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2070,"type":"uint256","value":"arbitrationFeePerJuror"},"id":4459,"name":"Identifier","src":"82909:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4454,"type":"uint256","value":"_arbitrationFeePerJuror"},"id":4460,"name":"Identifier","src":"82934:23:0"}],"id":4461,"name":"Assignment","src":"82909:48:0"}],"id":4462,"name":"ExpressionStatement","src":"82909:48:0"}],"id":4463,"name":"Block","src":"82898:67:0"}],"id":4464,"name":"FunctionDefinition","src":"82813:152:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for defaultNumberJuror.\r\n @param _defaultNumberJuror Number of drawn jurors unless specified otherwise.\r","implemented":true,"isConstructor":false,"name":"setDefaultNumberJuror","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_defaultNumberJuror","scope":4476,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":4465,"name":"ElementaryTypeName","src":"83145:6:0"}],"id":4466,"name":"VariableDeclaration","src":"83145:26:0"}],"id":4467,"name":"ParameterList","src":"83144:28:0"},{"attributes":{"parameters":[null]},"children":[],"id":4470,"name":"ParameterList","src":"83193:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4468,"name":"Identifier","src":"83180:12:0"}],"id":4469,"name":"ModifierInvocation","src":"83180:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint16","value":"defaultNumberJuror"},"id":4471,"name":"Identifier","src":"83204:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4466,"type":"uint16","value":"_defaultNumberJuror"},"id":4472,"name":"Identifier","src":"83225:19:0"}],"id":4473,"name":"Assignment","src":"83204:40:0"}],"id":4474,"name":"ExpressionStatement","src":"83204:40:0"}],"id":4475,"name":"Block","src":"83193:59:0"}],"id":4476,"name":"FunctionDefinition","src":"83114:138:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for minActivatedToken.\r\n @param _minActivatedToken Minimum of tokens to be activated (in basic units).\r","implemented":true,"isConstructor":false,"name":"setMinActivatedToken","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_minActivatedToken","scope":4488,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4477,"name":"ElementaryTypeName","src":"83430:4:0"}],"id":4478,"name":"VariableDeclaration","src":"83430:23:0"}],"id":4479,"name":"ParameterList","src":"83429:25:0"},{"attributes":{"parameters":[null]},"children":[],"id":4482,"name":"ParameterList","src":"83475:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4480,"name":"Identifier","src":"83462:12:0"}],"id":4481,"name":"ModifierInvocation","src":"83462:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2078,"type":"uint256","value":"minActivatedToken"},"id":4483,"name":"Identifier","src":"83486:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4478,"type":"uint256","value":"_minActivatedToken"},"id":4484,"name":"Identifier","src":"83506:18:0"}],"id":4485,"name":"Assignment","src":"83486:38:0"}],"id":4486,"name":"ExpressionStatement","src":"83486:38:0"}],"id":4487,"name":"Block","src":"83475:57:0"}],"id":4488,"name":"FunctionDefinition","src":"83400:132:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for timePerPeriod.\r\n @param _timePerPeriod The minimum time each period lasts (seconds).\r","implemented":true,"isConstructor":false,"name":"setTimePerPeriod","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_timePerPeriod","scope":4502,"stateVariable":false,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4489,"name":"ElementaryTypeName","src":"83692:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":4490,"name":"Literal","src":"83697:1:0"}],"id":4491,"name":"ArrayTypeName","src":"83692:7:0"}],"id":4492,"name":"VariableDeclaration","src":"83692:22:0"}],"id":4493,"name":"ParameterList","src":"83691:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":4496,"name":"ParameterList","src":"83736:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4494,"name":"Identifier","src":"83723:12:0"}],"id":4495,"name":"ModifierInvocation","src":"83723:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[5] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2082,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":4497,"name":"Identifier","src":"83747:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4492,"type":"uint256[5] memory","value":"_timePerPeriod"},"id":4498,"name":"Identifier","src":"83763:14:0"}],"id":4499,"name":"Assignment","src":"83747:30:0"}],"id":4500,"name":"ExpressionStatement","src":"83747:30:0"}],"id":4501,"name":"Block","src":"83736:49:0"}],"id":4502,"name":"FunctionDefinition","src":"83666:119:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for alpha.\r\n @param _alpha Alpha in ‱.\r","implemented":true,"isConstructor":false,"name":"setAlpha","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_alpha","scope":4514,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4503,"name":"ElementaryTypeName","src":"83889:4:0"}],"id":4504,"name":"VariableDeclaration","src":"83889:11:0"}],"id":4505,"name":"ParameterList","src":"83888:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":4508,"name":"ParameterList","src":"83922:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4506,"name":"Identifier","src":"83909:12:0"}],"id":4507,"name":"ModifierInvocation","src":"83909:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2085,"type":"uint256","value":"alpha"},"id":4509,"name":"Identifier","src":"83933:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4504,"type":"uint256","value":"_alpha"},"id":4510,"name":"Identifier","src":"83941:6:0"}],"id":4511,"name":"Assignment","src":"83933:14:0"}],"id":4512,"name":"ExpressionStatement","src":"83933:14:0"}],"id":4513,"name":"Block","src":"83922:33:0"}],"id":4514,"name":"FunctionDefinition","src":"83871:84:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for maxAppeals.\r\n @param _maxAppeals Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.\r","implemented":true,"isConstructor":false,"name":"setMaxAppeals","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_maxAppeals","scope":4526,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4515,"name":"ElementaryTypeName","src":"84157:4:0"}],"id":4516,"name":"VariableDeclaration","src":"84157:16:0"}],"id":4517,"name":"ParameterList","src":"84156:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":4520,"name":"ParameterList","src":"84195:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4518,"name":"Identifier","src":"84182:12:0"}],"id":4519,"name":"ModifierInvocation","src":"84182:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2091,"type":"uint256","value":"maxAppeals"},"id":4521,"name":"Identifier","src":"84206:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4516,"type":"uint256","value":"_maxAppeals"},"id":4522,"name":"Identifier","src":"84219:11:0"}],"id":4523,"name":"Assignment","src":"84206:24:0"}],"id":4524,"name":"ExpressionStatement","src":"84206:24:0"}],"id":4525,"name":"Block","src":"84195:43:0"}],"id":4526,"name":"FunctionDefinition","src":"84134:104:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for governor.\r\n @param _governor Address of the governor contract.\r","implemented":true,"isConstructor":false,"name":"setGovernor","payable":false,"scope":4539,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_governor","scope":4538,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4527,"name":"ElementaryTypeName","src":"84371:7:0"}],"id":4528,"name":"VariableDeclaration","src":"84371:17:0"}],"id":4529,"name":"ParameterList","src":"84370:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":4532,"name":"ParameterList","src":"84410:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2256,"type":"modifier ()","value":"onlyGovernor"},"id":4530,"name":"Identifier","src":"84397:12:0"}],"id":4531,"name":"ModifierInvocation","src":"84397:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2093,"type":"address","value":"governor"},"id":4533,"name":"Identifier","src":"84421:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4528,"type":"address","value":"_governor"},"id":4534,"name":"Identifier","src":"84432:9:0"}],"id":4535,"name":"Assignment","src":"84421:20:0"}],"id":4536,"name":"ExpressionStatement","src":"84421:20:0"}],"id":4537,"name":"Block","src":"84410:39:0"}],"id":4538,"name":"FunctionDefinition","src":"84350:99:0"}],"id":4539,"name":"ContractDefinition","src":"43401:41051:0"}],"id":4540,"name":"SourceUnit","src":"243:84209:0"}}