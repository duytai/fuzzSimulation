{"name":"StableCoinInterestRateModel","address":"0xc10c50f4521dcde8be1fb04acaa6ce0e47733d40","source":"pragma solidity ^0.4.24;\ncontract ErrorReporter {\n\n    /**\n      * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\n      * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\n      **/\n    event Failure(uint error, uint info, uint detail);\n\n    enum Error {\n        NO_ERROR,\n        OPAQUE_ERROR, // To be used when reporting errors from upgradeable contracts; the opaque code should be given as `detail` in the `Failure` event\n        UNAUTHORIZED,\n        INTEGER_OVERFLOW,\n        INTEGER_UNDERFLOW,\n        DIVISION_BY_ZERO,\n        BAD_INPUT,\n        TOKEN_INSUFFICIENT_ALLOWANCE,\n        TOKEN_INSUFFICIENT_BALANCE,\n        TOKEN_TRANSFER_FAILED,\n        MARKET_NOT_SUPPORTED,\n        SUPPLY_RATE_CALCULATION_FAILED,\n        BORROW_RATE_CALCULATION_FAILED,\n        TOKEN_INSUFFICIENT_CASH,\n        TOKEN_TRANSFER_OUT_FAILED,\n        INSUFFICIENT_LIQUIDITY,\n        INSUFFICIENT_BALANCE,\n        INVALID_COLLATERAL_RATIO,\n        MISSING_ASSET_PRICE,\n        EQUITY_INSUFFICIENT_BALANCE,\n        INVALID_CLOSE_AMOUNT_REQUESTED,\n        ASSET_NOT_PRICED,\n        INVALID_LIQUIDATION_DISCOUNT,\n        INVALID_COMBINED_RISK_PARAMETERS,\n        ZERO_ORACLE_ADDRESS,\n        CONTRACT_PAUSED\n    }\n\n    /*\n     * Note: FailureInfo (but not Error) is kept in alphabetical order\n     *       This is because FailureInfo grows significantly faster, and\n     *       the order of Error has some meaning, while the order of FailureInfo\n     *       is entirely arbitrary.\n     */\n    enum FailureInfo {\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\n        BORROW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED,\n        BORROW_ACCOUNT_SHORTFALL_PRESENT,\n        BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        BORROW_AMOUNT_LIQUIDITY_SHORTFALL,\n        BORROW_AMOUNT_VALUE_CALCULATION_FAILED,\n        BORROW_CONTRACT_PAUSED,\n        BORROW_MARKET_NOT_SUPPORTED,\n        BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        BORROW_NEW_BORROW_RATE_CALCULATION_FAILED,\n        BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED,\n        BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED,\n        BORROW_ORIGINATION_FEE_CALCULATION_FAILED,\n        BORROW_TRANSFER_OUT_FAILED,\n        EQUITY_WITHDRAWAL_AMOUNT_VALIDATION,\n        EQUITY_WITHDRAWAL_CALCULATE_EQUITY,\n        EQUITY_WITHDRAWAL_MODEL_OWNER_CHECK,\n        EQUITY_WITHDRAWAL_TRANSFER_OUT_FAILED,\n        LIQUIDATE_ACCUMULATED_BORROW_BALANCE_CALCULATION_FAILED,\n        LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET,\n        LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET,\n        LIQUIDATE_AMOUNT_SEIZE_CALCULATION_FAILED,\n        LIQUIDATE_BORROW_DENOMINATED_COLLATERAL_CALCULATION_FAILED,\n        LIQUIDATE_CLOSE_AMOUNT_TOO_HIGH,\n        LIQUIDATE_CONTRACT_PAUSED,\n        LIQUIDATE_DISCOUNTED_REPAY_TO_EVEN_AMOUNT_CALCULATION_FAILED,\n        LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET,\n        LIQUIDATE_NEW_BORROW_RATE_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET,\n        LIQUIDATE_NEW_SUPPLY_RATE_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_TOTAL_BORROW_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_TOTAL_CASH_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET,\n        LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET,\n        LIQUIDATE_FETCH_ASSET_PRICE_FAILED,\n        LIQUIDATE_TRANSFER_IN_FAILED,\n        LIQUIDATE_TRANSFER_IN_NOT_POSSIBLE,\n        REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        REPAY_BORROW_CONTRACT_PAUSED,\n        REPAY_BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_BORROW_RATE_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED,\n        REPAY_BORROW_TRANSFER_IN_FAILED,\n        REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE,\n        SET_ASSET_PRICE_CHECK_ORACLE,\n        SET_MARKET_INTEREST_RATE_MODEL_OWNER_CHECK,\n        SET_ORACLE_OWNER_CHECK,\n        SET_ORIGINATION_FEE_OWNER_CHECK,\n        SET_PAUSED_OWNER_CHECK,\n        SET_PENDING_ADMIN_OWNER_CHECK,\n        SET_RISK_PARAMETERS_OWNER_CHECK,\n        SET_RISK_PARAMETERS_VALIDATION,\n        SUPPLY_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        SUPPLY_CONTRACT_PAUSED,\n        SUPPLY_MARKET_NOT_SUPPORTED,\n        SUPPLY_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        SUPPLY_NEW_BORROW_RATE_CALCULATION_FAILED,\n        SUPPLY_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        SUPPLY_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        SUPPLY_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        SUPPLY_NEW_TOTAL_CASH_CALCULATION_FAILED,\n        SUPPLY_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\n        SUPPLY_TRANSFER_IN_FAILED,\n        SUPPLY_TRANSFER_IN_NOT_POSSIBLE,\n        SUPPORT_MARKET_FETCH_PRICE_FAILED,\n        SUPPORT_MARKET_OWNER_CHECK,\n        SUPPORT_MARKET_PRICE_CHECK,\n        SUSPEND_MARKET_OWNER_CHECK,\n        WITHDRAW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED,\n        WITHDRAW_ACCOUNT_SHORTFALL_PRESENT,\n        WITHDRAW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        WITHDRAW_AMOUNT_LIQUIDITY_SHORTFALL,\n        WITHDRAW_AMOUNT_VALUE_CALCULATION_FAILED,\n        WITHDRAW_CAPACITY_CALCULATION_FAILED,\n        WITHDRAW_CONTRACT_PAUSED,\n        WITHDRAW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        WITHDRAW_NEW_BORROW_RATE_CALCULATION_FAILED,\n        WITHDRAW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        WITHDRAW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        WITHDRAW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        WITHDRAW_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\n        WITHDRAW_TRANSFER_OUT_FAILED,\n        WITHDRAW_TRANSFER_OUT_NOT_POSSIBLE\n    }\n\n\n    /**\n      * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\n      */\n    function fail(Error err, FailureInfo info) internal returns (uint) {\n        emit Failure(uint(err), uint(info), 0);\n\n        return uint(err);\n    }\n\n\n    /**\n      * @dev use this when reporting an opaque error from an upgradeable collaborator contract\n      */\n    function failOpaque(FailureInfo info, uint opaqueError) internal returns (uint) {\n        emit Failure(uint(Error.OPAQUE_ERROR), uint(info), opaqueError);\n\n        return uint(Error.OPAQUE_ERROR);\n    }\n\n}\ncontract InterestRateModel {\n\n    /**\n      * @notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the supply interest rate per block scaled by 10e18\n      */\n    function getSupplyRate(address asset, uint cash, uint borrows) public view returns (uint, uint);\n\n    /**\n      * @notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the borrow interest rate per block scaled by 10e18\n      */\n    function getBorrowRate(address asset, uint cash, uint borrows) public view returns (uint, uint);\n}\ncontract CarefulMath is ErrorReporter {\n\n    /**\n    * @dev Multiplies two numbers, returns an error on overflow.\n    */\n    function mul(uint a, uint b) internal pure returns (Error, uint) {\n        if (a == 0) {\n            return (Error.NO_ERROR, 0);\n        }\n\n        uint c = a * b;\n\n        if (c / a != b) {\n            return (Error.INTEGER_OVERFLOW, 0);\n        } else {\n            return (Error.NO_ERROR, c);\n        }\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint a, uint b) internal pure returns (Error, uint) {\n        if (b == 0) {\n            return (Error.DIVISION_BY_ZERO, 0);\n        }\n\n        return (Error.NO_ERROR, a / b);\n    }\n\n    /**\n    * @dev Subtracts two numbers, returns an error on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint a, uint b) internal pure returns (Error, uint) {\n        if (b <= a) {\n            return (Error.NO_ERROR, a - b);\n        } else {\n            return (Error.INTEGER_UNDERFLOW, 0);\n        }\n    }\n\n    /**\n    * @dev Adds two numbers, returns an error on overflow.\n    */\n    function add(uint a, uint b) internal pure returns (Error, uint) {\n        uint c = a + b;\n\n        if (c >= a) {\n            return (Error.NO_ERROR, c);\n        } else {\n            return (Error.INTEGER_OVERFLOW, 0);\n        }\n    }\n\n    /**\n    * @dev add a and b and then subtract c\n    */\n    function addThenSub(uint a, uint b, uint c) internal pure returns (Error, uint) {\n        (Error err0, uint sum) = add(a, b);\n\n        if (err0 != Error.NO_ERROR) {\n            return (err0, 0);\n        }\n\n        return sub(sum, c);\n    }\n}\ncontract Exponential is ErrorReporter, CarefulMath {\n\n    // TODO: We may wish to put the result of 10**18 here instead of the expression.\n    // Per https://solidity.readthedocs.io/en/latest/contracts.html#constant-state-variables\n    // the optimizer MAY replace the expression 10**18 with its calculated value.\n    uint constant expScale = 10**18;\n\n    // See TODO on expScale\n    uint constant halfExpScale = expScale/2;\n\n    struct Exp {\n        uint mantissa;\n    }\n\n    uint constant mantissaOne = 10**18;\n    uint constant mantissaOneTenth = 10**17;\n\n    /**\n    * @dev Creates an exponential from numerator and denominator values.\n    *      Note: Returns an error if (`num` * 10e18) > MAX_INT,\n    *            or if `denom` is zero.\n    */\n    function getExp(uint num, uint denom) pure internal returns (Error, Exp memory) {\n        (Error err0, uint scaledNumerator) = mul(num, expScale);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        (Error err1, uint rational) = div(scaledNumerator, denom);\n        if (err1 != Error.NO_ERROR) {\n            return (err1, Exp({mantissa: 0}));\n        }\n\n        return (Error.NO_ERROR, Exp({mantissa: rational}));\n    }\n\n    /**\n    * @dev Adds two exponentials, returning a new exponential.\n    */\n    function addExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n        (Error error, uint result) = add(a.mantissa, b.mantissa);\n\n        return (error, Exp({mantissa: result}));\n    }\n\n    /**\n    * @dev Subtracts two exponentials, returning a new exponential.\n    */\n    function subExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n        (Error error, uint result) = sub(a.mantissa, b.mantissa);\n\n        return (error, Exp({mantissa: result}));\n    }\n\n    /**\n    * @dev Multiply an Exp by a scalar, returning a new Exp.\n    */\n    function mulScalar(Exp memory a, uint scalar) pure internal returns (Error, Exp memory) {\n        (Error err0, uint scaledMantissa) = mul(a.mantissa, scalar);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        return (Error.NO_ERROR, Exp({mantissa: scaledMantissa}));\n    }\n\n    /**\n    * @dev Divide an Exp by a scalar, returning a new Exp.\n    */\n    function divScalar(Exp memory a, uint scalar) pure internal returns (Error, Exp memory) {\n        (Error err0, uint descaledMantissa) = div(a.mantissa, scalar);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        return (Error.NO_ERROR, Exp({mantissa: descaledMantissa}));\n    }\n\n    /**\n    * @dev Divide a scalar by an Exp, returning a new Exp.\n    */\n    function divScalarByExp(uint scalar, Exp divisor) pure internal returns (Error, Exp memory) {\n        /*\n            We are doing this as:\n            getExp(mul(expScale, scalar), divisor.mantissa)\n\n            How it works:\n            Exp = a / b;\n            Scalar = s;\n            `s / (a / b)` = `b * s / a` and since for an Exp `a = mantissa, b = expScale`\n        */\n        (Error err0, uint numerator) = mul(expScale, scalar);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n        return getExp(numerator, divisor.mantissa);\n    }\n\n    /**\n    * @dev Multiplies two exponentials, returning a new exponential.\n    */\n    function mulExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n\n        (Error err0, uint doubleScaledProduct) = mul(a.mantissa, b.mantissa);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        // We add half the scale before dividing so that we get rounding instead of truncation.\n        //  See \"Listing 6\" and text above it at https://accu.org/index.php/journals/1717\n        // Without this change, a result like 6.6...e-19 will be truncated to 0 instead of being rounded to 1e-18.\n        (Error err1, uint doubleScaledProductWithHalfScale) = add(halfExpScale, doubleScaledProduct);\n        if (err1 != Error.NO_ERROR) {\n            return (err1, Exp({mantissa: 0}));\n        }\n\n        (Error err2, uint product) = div(doubleScaledProductWithHalfScale, expScale);\n        // The only error `div` can return is Error.DIVISION_BY_ZERO but we control `expScale` and it is not zero.\n        assert(err2 == Error.NO_ERROR);\n\n        return (Error.NO_ERROR, Exp({mantissa: product}));\n    }\n\n    /**\n      * @dev Divides two exponentials, returning a new exponential.\n      *     (a/scale) / (b/scale) = (a/scale) * (scale/b) = a/b,\n      *  which we can scale as an Exp by calling getExp(a.mantissa, b.mantissa)\n      */\n    function divExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n        return getExp(a.mantissa, b.mantissa);\n    }\n\n    /**\n      * @dev Truncates the given exp to a whole number value.\n      *      For example, truncate(Exp{mantissa: 15 * (10**18)}) = 15\n      */\n    function truncate(Exp memory exp) pure internal returns (uint) {\n        // Note: We are not using careful math here as we're performing a division that cannot fail\n        return exp.mantissa / 10**18;\n    }\n\n    /**\n      * @dev Checks if first Exp is less than second Exp.\n      */\n    function lessThanExp(Exp memory left, Exp memory right) pure internal returns (bool) {\n        return left.mantissa < right.mantissa; //TODO: Add some simple tests and this in another PR yo.\n    }\n\n    /**\n      * @dev Checks if left Exp <= right Exp.\n      */\n    function lessThanOrEqualExp(Exp memory left, Exp memory right) pure internal returns (bool) {\n        return left.mantissa <= right.mantissa;\n    }\n\n    /**\n      * @dev returns true if Exp is exactly zero\n      */\n    function isZeroExp(Exp memory value) pure internal returns (bool) {\n        return value.mantissa == 0;\n    }\n}\ncontract StableCoinInterestRateModel is Exponential {\n\n    uint constant oneMinusSpreadBasisPoints = 8500;\n    uint constant blocksPerYear = 2102400;\n\n    enum IRError {\n        NO_ERROR,\n        FAILED_TO_ADD_CASH_PLUS_BORROWS,\n        FAILED_TO_GET_EXP,\n        FAILED_TO_MUL_PRODUCT_TIMES_BORROW_RATE\n    }\n\n    /*\n     * @dev Calculates the utilization rate (borrows / (cash + borrows)) as an Exp\n     */\n    function getUtilizationRate(uint cash, uint borrows) pure internal returns (IRError, Exp memory) {\n        if (borrows == 0) {\n            // Utilization rate is zero when there's no borrows\n            return (IRError.NO_ERROR, Exp({mantissa: 0}));\n        }\n\n        (Error err0, uint cashPlusBorrows) = add(cash, borrows);\n        if (err0 != Error.NO_ERROR) {\n            return (IRError.FAILED_TO_ADD_CASH_PLUS_BORROWS, Exp({mantissa: 0}));\n        }\n\n        (Error err1, Exp memory utilizationRate) = getExp(borrows, cashPlusBorrows);\n        if (err1 != Error.NO_ERROR) {\n            return (IRError.FAILED_TO_GET_EXP, Exp({mantissa: 0}));\n        }\n\n        return (IRError.NO_ERROR, utilizationRate);\n    }\n\n    /*\n     * @dev Calculates the utilization and borrow rates for use by get{Supply,Borrow}Rate functions\n     */\n    function getUtilizationAndAnnualBorrowRate(uint cash, uint borrows) pure internal returns (IRError, Exp memory, Exp memory) {\n        (IRError err0, Exp memory utilizationRate) = getUtilizationRate(cash, borrows);\n        if (err0 != IRError.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}), Exp({mantissa: 0}));\n        }\n\n        // utilizationRate * 0.3 (30%), which is `rate * 3 / 10`\n        (Error err1, Exp memory utilizationRateMuled) = mulScalar(utilizationRate, 3);\n        // `mulScalar` only overflows when the product is >= 2^256.\n        // utilizationRate is a real number on the interval [0,1], which means that\n        // utilizationRate.mantissa is in the interval [0e18,1e18], which means that three times\n        // that is in the interval [0e18,3e18]. That interval has no intersection with 2^256, and therefore\n        // this can never overflow. As such, we assert.\n        assert(err1 == Error.NO_ERROR);\n\n        (Error err2, Exp memory utilizationRateScaled) = divScalar(utilizationRateMuled, 10);\n        // 10 is a constant, and therefore cannot be zero, which is the only error case of divScalar.\n        assert(err2 == Error.NO_ERROR);\n\n        // Add the 10% for (10% + 30% * Ua)\n        (Error err3, Exp memory annualBorrowRate) = addExp(utilizationRateScaled, Exp({mantissa: mantissaOneTenth}));\n        // `addExp` only fails when the addition of mantissas overflow.\n        // As per above, utilizationRateMuled is capped at 3e18 and when divided by 10,\n        // utilizationRateScaled is capped at 3e17. mantissaOneTenth = 1e17, and thus the addition\n        // is capped at 4e17, which is less than 2^256.\n        assert(err3 == Error.NO_ERROR);\n\n        return (IRError.NO_ERROR, utilizationRate, annualBorrowRate);\n    }\n\n    /**\n      * @notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param _asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the supply interest rate per block scaled by 10e18\n      */\n    function getSupplyRate(address _asset, uint cash, uint borrows) public view returns (uint, uint) {\n        _asset; // pragma ignore unused argument\n\n        (IRError err0, Exp memory utilizationRate0, Exp memory annualBorrowRate) = getUtilizationAndAnnualBorrowRate(cash, borrows);\n        if (err0 != IRError.NO_ERROR) {\n            return (uint(err0), 0);\n        }\n\n        // We're going to multiply the utilization rate by the spread's numerator\n        (Error err1, Exp memory utilizationRate1) = mulScalar(utilizationRate0, oneMinusSpreadBasisPoints);\n        // mulScalar only overflows when product is greater than or equal to 2^256.\n        // utilization rate's mantissa is a number between [0e18,1e18]. That means that\n        // utilizationRate1 is a value between [0e18,8.5e21]. This is strictly less than 2^256.\n        assert(err1 == Error.NO_ERROR);\n\n        // Next multiply this product times the borrow rate\n        (Error err2, Exp memory supplyRate0) = mulExp(utilizationRate1, annualBorrowRate);\n        // If the product of the mantissas for mulExp are both less than 2^256,\n        // then this operation will never fail. TODO: Verify.\n        // We know that borrow rate is in the interval [0, 4e17] from above.\n        // We know that utilizationRate1 is in the interval [0, 8.5e21] from directly above.\n        // As such, the multiplication is in the interval of [0, 3.4e39]. This is strictly\n        // less than 2^256 (which is about 10e77).\n        assert(err2 == Error.NO_ERROR);\n\n        // And then divide down by the spread's denominator (basis points divisor)\n        // as well as by blocks per year.\n        (Error err3, Exp memory standardSupplyRate) = divScalar(supplyRate0, 10000 * blocksPerYear); // basis points * blocks per year\n        // divScalar only fails when divisor is zero. This is clearly not the case.\n        assert(err3 == Error.NO_ERROR);\n\n        // Note: StableCoins interest rate should be much less than the standard rate for other tokens\n        (Error err4, uint finalSupplyRate) = div(standardSupplyRate.mantissa, 2);\n\n        assert(err4 == Error.NO_ERROR);\n        return (uint(IRError.NO_ERROR), finalSupplyRate);\n    }\n\n    /**\n      * @notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param _asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the borrow interest rate per block scaled by 10e18\n      */\n    function getBorrowRate(address _asset, uint cash, uint borrows) public view returns (uint, uint) {\n        _asset; // pragma ignore unused argument\n\n        (IRError err0, Exp memory _utilizationRate, Exp memory annualBorrowRate) = getUtilizationAndAnnualBorrowRate(cash, borrows);\n        if (err0 != IRError.NO_ERROR) {\n            return (uint(err0), 0);\n        }\n\n        // And then divide down by blocks per year.\n        (Error err1, Exp memory standardBorrowRate) = divScalar(annualBorrowRate, blocksPerYear); // basis points * blocks per year\n        // divScalar only fails when divisor is zero. This is clearly not the case.\n        assert(err1 == Error.NO_ERROR);\n\n        _utilizationRate; // pragma ignore unused variable\n\n        // Note: StableCoins interest rate should be much less than the standard rate for other tokens\n        (Error err2, uint finalBorrowRate) = div(standardBorrowRate.mantissa, 2);\n\n        assert(err2 == Error.NO_ERROR);\n        return (uint(IRError.NO_ERROR), finalBorrowRate);\n    }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"_asset\",\"type\":\"address\"},{\"name\":\"cash\",\"type\":\"uint256\"},{\"name\":\"borrows\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_asset\",\"type\":\"address\"},{\"name\":\"cash\",\"type\":\"uint256\"},{\"name\":\"borrows\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"}]","bin":"608060405234801561001057600080fd5b50610a27806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063517cf73e14610051578063ed2b5a3c146100c3575b600080fd5b34801561005d57600080fd5b506100a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610135565b604051808381526020018281526020019250505060405180910390f35b3480156100cf57600080fd5b50610118600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506102a9565b604051808381526020018281526020019250505060405180910390f35b60008060006101426109e7565b61014a6109e7565b60006101546109e7565b600061015e6109e7565b60006101686109e7565b6000806101758f8f61039f565b9a509a509a506000600381111561018857fe5b8b600381111561019457fe5b1415156101b5578a60038111156101a757fe5b60008090509c509c50610296565b6101c18a6121346104fe565b97509750600060198111156101d257fe5b8860198111156101de57fe5b1415156101e757fe5b6101f1878a61057e565b955095506000601981111561020257fe5b86601981111561020e57fe5b14151561021757fe5b6102288562201480612710026106a4565b935093506000601981111561023957fe5b84601981111561024557fe5b14151561024e57fe5b61025d83600001516002610724565b915091506000601981111561026e57fe5b82601981111561027a57fe5b14151561028357fe5b6000600381111561029057fe5b819c509c505b5050505050505050505050935093915050565b60008060006102b66109e7565b6102be6109e7565b60006102c86109e7565b6000806102d58b8b61039f565b965096509650600060038111156102e857fe5b8760038111156102f457fe5b1415156103155786600381111561030757fe5b600080905098509850610390565b61032285622014806106a4565b935093506000601981111561033357fe5b84601981111561033f57fe5b14151561034857fe5b61035783600001516002610724565b915091506000601981111561036857fe5b82601981111561037457fe5b14151561037d57fe5b6000600381111561038a57fe5b81985098505b50505050505050935093915050565b60006103a96109e7565b6103b16109e7565b60006103bb6109e7565b60006103c56109e7565b60006103cf6109e7565b60006103d96109e7565b6103e38d8d61075a565b97509750600060038111156103f457fe5b88600381111561040057fe5b14151561043b5787602060405190810160405280600081525060206040519081016040528060008152508191508090509a509a509a506104ef565b6104468760036104fe565b955095506000601981111561045757fe5b86601981111561046357fe5b14151561046c57fe5b61047785600a6106a4565b935093506000601981111561048857fe5b84601981111561049457fe5b14151561049d57fe5b6104be8360206040519081016040528067016345785d8a0000815250610846565b91509150600060198111156104cf57fe5b8260198111156104db57fe5b1415156104e457fe5b600087829a509a509a505b50505050505050509250925092565b60006105086109e7565b60008061051986600001518661088a565b915091506000601981111561052a57fe5b82601981111561053657fe5b14151561055b5781602060405190810160405280600081525080905093509350610575565b600060206040519081016040528083815250809050935093505b50509250929050565b60006105886109e7565b6000806000806000806105a38a600001518a6000015161088a565b95509550600060198111156105b457fe5b8660198111156105c057fe5b1415156105e55785602060405190810160405280600081525080905097509750610697565b6106036002670de0b6b3a76400008115156105fc57fe5b04866108df565b935093506000601981111561061457fe5b84601981111561062057fe5b1415156106455783602060405190810160405280600081525080905097509750610697565b61065783670de0b6b3a7640000610724565b915091506000601981111561066857fe5b82601981111561067457fe5b14151561067d57fe5b600060206040519081016040528083815250809050975097505b5050505050509250929050565b60006106ae6109e7565b6000806106bf866000015186610724565b91509150600060198111156106d057fe5b8260198111156106dc57fe5b141515610701578160206040519081016040528060008152508090509350935061071b565b600060206040519081016040528083815250809050935093505b50509250929050565b6000806000831415610740576005600080905091509150610753565b6000838581151561074d57fe5b04915091505b9250929050565b60006107646109e7565b60008060006107716109e7565b600087141561079957600060206040519081016040528060008152508090509550955061083b565b6107a388886108df565b93509350600060198111156107b457fe5b8460198111156107c057fe5b1415156107e657600160206040519081016040528060008152508090509550955061083b565b6107f08784610912565b915091506000601981111561080157fe5b82601981111561080d57fe5b14151561083357600260206040519081016040528060008152508090509550955061083b565b600081955095505b505050509250929050565b60006108506109e7565b600080610865866000015186600001516108df565b9150915081602060405190810160405280838152508090509350935050509250929050565b6000806000808514156108a657600080809050925092506108d7565b83850290508385828115156108b757fe5b041415156108cf5760036000809050925092506108d7565b600081925092505b509250929050565b6000806000838501905084811015156108fe576000819250925061090a565b60036000809050925092505b509250929050565b600061091c6109e7565b60008060008061093488670de0b6b3a764000061088a565b935093506000601981111561094557fe5b84601981111561095157fe5b14151561097657836020604051908101604052806000815250809050955095506109dc565b6109808388610724565b915091506000601981111561099157fe5b82601981111561099d57fe5b1415156109c257816020604051908101604052806000815250809050955095506109dc565b600060206040519081016040528083815250809050955095505b505050509250929050565b6020604051908101604052806000815250905600a165627a7a72305820974d996f162e25b1b7bebc39293da8076eb9fc1943a5a55a908d1c6c8137513f0029","bin-runtime":"60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063517cf73e14610051578063ed2b5a3c146100c3575b600080fd5b34801561005d57600080fd5b506100a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610135565b604051808381526020018281526020019250505060405180910390f35b3480156100cf57600080fd5b50610118600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506102a9565b604051808381526020018281526020019250505060405180910390f35b60008060006101426109e7565b61014a6109e7565b60006101546109e7565b600061015e6109e7565b60006101686109e7565b6000806101758f8f61039f565b9a509a509a506000600381111561018857fe5b8b600381111561019457fe5b1415156101b5578a60038111156101a757fe5b60008090509c509c50610296565b6101c18a6121346104fe565b97509750600060198111156101d257fe5b8860198111156101de57fe5b1415156101e757fe5b6101f1878a61057e565b955095506000601981111561020257fe5b86601981111561020e57fe5b14151561021757fe5b6102288562201480612710026106a4565b935093506000601981111561023957fe5b84601981111561024557fe5b14151561024e57fe5b61025d83600001516002610724565b915091506000601981111561026e57fe5b82601981111561027a57fe5b14151561028357fe5b6000600381111561029057fe5b819c509c505b5050505050505050505050935093915050565b60008060006102b66109e7565b6102be6109e7565b60006102c86109e7565b6000806102d58b8b61039f565b965096509650600060038111156102e857fe5b8760038111156102f457fe5b1415156103155786600381111561030757fe5b600080905098509850610390565b61032285622014806106a4565b935093506000601981111561033357fe5b84601981111561033f57fe5b14151561034857fe5b61035783600001516002610724565b915091506000601981111561036857fe5b82601981111561037457fe5b14151561037d57fe5b6000600381111561038a57fe5b81985098505b50505050505050935093915050565b60006103a96109e7565b6103b16109e7565b60006103bb6109e7565b60006103c56109e7565b60006103cf6109e7565b60006103d96109e7565b6103e38d8d61075a565b97509750600060038111156103f457fe5b88600381111561040057fe5b14151561043b5787602060405190810160405280600081525060206040519081016040528060008152508191508090509a509a509a506104ef565b6104468760036104fe565b955095506000601981111561045757fe5b86601981111561046357fe5b14151561046c57fe5b61047785600a6106a4565b935093506000601981111561048857fe5b84601981111561049457fe5b14151561049d57fe5b6104be8360206040519081016040528067016345785d8a0000815250610846565b91509150600060198111156104cf57fe5b8260198111156104db57fe5b1415156104e457fe5b600087829a509a509a505b50505050505050509250925092565b60006105086109e7565b60008061051986600001518661088a565b915091506000601981111561052a57fe5b82601981111561053657fe5b14151561055b5781602060405190810160405280600081525080905093509350610575565b600060206040519081016040528083815250809050935093505b50509250929050565b60006105886109e7565b6000806000806000806105a38a600001518a6000015161088a565b95509550600060198111156105b457fe5b8660198111156105c057fe5b1415156105e55785602060405190810160405280600081525080905097509750610697565b6106036002670de0b6b3a76400008115156105fc57fe5b04866108df565b935093506000601981111561061457fe5b84601981111561062057fe5b1415156106455783602060405190810160405280600081525080905097509750610697565b61065783670de0b6b3a7640000610724565b915091506000601981111561066857fe5b82601981111561067457fe5b14151561067d57fe5b600060206040519081016040528083815250809050975097505b5050505050509250929050565b60006106ae6109e7565b6000806106bf866000015186610724565b91509150600060198111156106d057fe5b8260198111156106dc57fe5b141515610701578160206040519081016040528060008152508090509350935061071b565b600060206040519081016040528083815250809050935093505b50509250929050565b6000806000831415610740576005600080905091509150610753565b6000838581151561074d57fe5b04915091505b9250929050565b60006107646109e7565b60008060006107716109e7565b600087141561079957600060206040519081016040528060008152508090509550955061083b565b6107a388886108df565b93509350600060198111156107b457fe5b8460198111156107c057fe5b1415156107e657600160206040519081016040528060008152508090509550955061083b565b6107f08784610912565b915091506000601981111561080157fe5b82601981111561080d57fe5b14151561083357600260206040519081016040528060008152508090509550955061083b565b600081955095505b505050509250929050565b60006108506109e7565b600080610865866000015186600001516108df565b9150915081602060405190810160405280838152508090509350935050509250929050565b6000806000808514156108a657600080809050925092506108d7565b83850290508385828115156108b757fe5b041415156108cf5760036000809050925092506108d7565b600081925092505b509250929050565b6000806000838501905084811015156108fe576000819250925061090a565b60036000809050925092505b509250929050565b600061091c6109e7565b60008060008061093488670de0b6b3a764000061088a565b935093506000601981111561094557fe5b84601981111561095157fe5b14151561097657836020604051908101604052806000815250809050955095506109dc565b6109808388610724565b915091506000601981111561099157fe5b82601981111561099d57fe5b1415156109c257816020604051908101604052806000815250809050955095506109dc565b600060206040519081016040528083815250809050955095505b505050509250929050565b6020604051908101604052806000815250905600a165627a7a72305820974d996f162e25b1b7bebc39293da8076eb9fc1943a5a55a908d1c6c8137513f0029","srcmap":"15888:7413:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15888:7413:0;;;;;;;","srcmap-runtime":"15888:7413:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19495:2188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19495:2188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22272:1027;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22272:1027:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19495:2188;19580:4;19586;19653:12;19667:27;;:::i;:::-;19696;;:::i;:::-;19955:10;19967:27;;:::i;:::-;20432:10;20444:22;;:::i;:::-;21143:10;21155:29;;:::i;:::-;21506:10;21518:20;19727:48;19761:4;19767:7;19727:33;:48::i;:::-;19652:123;;;;;;19797:16;19789:24;;;;;;;;:4;:24;;;;;;;;;;19785:77;;;19842:4;19837:10;;;;;;;;19849:1;19829:22;;;;;;;;;19785:77;19998:54;20008:16;15989:4;19998:9;:54::i;:::-;19954:98;;;;20345:14;20337:22;;;;;;;;:4;:22;;;;;;;;;20330:30;;;;;;20470:42;20477:16;20495;20470:6;:42::i;:::-;20431:81;;;;20991:14;20983:22;;;;;;;;:4;:22;;;;;;;;;20976:30;;;;;;21188:45;21198:11;16029:7;21211:5;:21;21188:9;:45::i;:::-;21142:91;;;;21376:14;21368:22;;;;;;;;:4;:22;;;;;;;;;21361:30;;;;;;21542:35;21546:18;:27;;;21575:1;21542:3;:35::i;:::-;21505:72;;;;21603:14;21595:22;;;;;;;;:4;:22;;;;;;;;;21588:30;;;;;;21641:16;21636:22;;;;;;;;21660:15;21628:48;;;;19495:2188;;;;;;;;;;;;;;;;;;:::o;22272:1027::-;22357:4;22363;22430:12;22444:27;;:::i;:::-;22473;;:::i;:::-;22702:10;22714:29;;:::i;:::-;23122:10;23134:20;22504:48;22538:4;22544:7;22504:33;:48::i;:::-;22429:123;;;;;;22574:16;22566:24;;;;;;;;:4;:24;;;;;;;;;;22562:77;;;22619:4;22614:10;;;;;;;;22626:1;22606:22;;;;;;;;;22562:77;22747:42;22757:16;16029:7;22747:9;:42::i;:::-;22701:88;;;;22932:14;22924:22;;;;;;;;:4;:22;;;;;;;;;22917:30;;;;;;23158:35;23162:18;:27;;;23191:1;23158:3;:35::i;:::-;23121:72;;;;23219:14;23211:22;;;;;;;;:4;:22;;;;;;;;;23204:30;;;;;;23257:16;23252:22;;;;;;;;23276:15;23244:48;;;;22272:1027;;;;;;;;;;;;;;:::o;17138:1768::-;17229:7;17238:3;;:::i;:::-;17250;;:::i;:::-;17273:12;17287:26;;:::i;:::-;17544:10;17556:31;;:::i;:::-;18085:10;18097:32;;:::i;:::-;18366:10;18378:27;;:::i;:::-;17317:33;17336:4;17342:7;17317:18;:33::i;:::-;17272:78;;;;17372:16;17364:24;;;;;;;;:4;:24;;;;;;;;;;17360:108;;;17412:4;17418:18;;;;;;;;;17433:1;17418:18;;;17438;;;;;;;;;17453:1;17438:18;;;17404:53;;;;;;;;;;;;;;17360:108;17591:29;17601:15;17618:1;17591:9;:29::i;:::-;17543:77;;;;18058:14;18050:22;;;;;;;;:4;:22;;;;;;;;;18043:30;;;;;;18133:35;18143:20;18165:2;18133:9;:35::i;:::-;18084:84;;;;18295:14;18287:22;;;;;;;;:4;:22;;;;;;;;;18280:30;;;;;;18409:64;18416:21;18439:33;;;;;;;;;10559:6;18439:33;;;18409:6;:64::i;:::-;18365:108;;;;18813:14;18805:22;;;;;;;;:4;:22;;;;;;;;;18798:30;;;;;;18847:16;18865:15;18882:16;18839:60;;;;;;17138:1768;;;;;;;;;;;;;;:::o;11908:326::-;11977:5;11984:3;;:::i;:::-;12007:10;12019:19;12042:23;12046:1;:10;;;12058:6;12042:3;:23::i;:::-;12006:59;;;;12087:14;12079:22;;;;;;;;:4;:22;;;;;;;;;;12075:86;;;12125:4;12131:18;;;;;;;;;12146:1;12131:18;;;12117:33;;;;;;;;;12075:86;12179:14;12195:31;;;;;;;;;12210:14;12195:31;;;12171:56;;;;;;;11908:326;;;;;;;;:::o;13404:1068::-;13471:5;13478:3;;:::i;:::-;13502:10;13514:24;13977:10;13989:37;14175:10;14187:12;13542:27;13546:1;:10;;;13558:1;:10;;;13542:3;:27::i;:::-;13501:68;;;;13591:14;13583:22;;;;;;;;:4;:22;;;;;;;;;;13579:86;;;13629:4;13635:18;;;;;;;;;13650:1;13635:18;;;13621:33;;;;;;;;;13579:86;14030:38;10431:1;10352:6;10422:10;;;;;;;;14048:19;14030:3;:38::i;:::-;13976:92;;;;14090:14;14082:22;;;;;;;;:4;:22;;;;;;;;;;14078:86;;;14128:4;14134:18;;;;;;;;;14149:1;14134:18;;;14120:33;;;;;;;;;14078:86;14203:47;14207:32;10352:6;14203:3;:47::i;:::-;14174:76;;;;14390:14;14382:22;;;;;;;;:4;:22;;;;;;;;;14375:30;;;;;;14424:14;14440:24;;;;;;;;;14455:7;14440:24;;;14416:49;;;;;;;13404:1068;;;;;;;;;;;;:::o;12314:330::-;12383:5;12390:3;;:::i;:::-;12413:10;12425:21;12450:23;12454:1;:10;;;12466:6;12450:3;:23::i;:::-;12412:61;;;;12495:14;12487:22;;;;;;;;:4;:22;;;;;;;;;;12483:86;;;12533:4;12539:18;;;;;;;;;12554:1;12539:18;;;12525:33;;;;;;;;;12483:86;12587:14;12603:33;;;;;;;;;12618:16;12603:33;;;12579:58;;;;;;;12314:330;;;;;;;;:::o;8852:193::-;8904:5;8911:4;8936:1;8931;:6;8927:71;;;8961:22;8985:1;8953:34;;;;;;;;;8927:71;9016:14;9036:1;9032;:5;;;;;;;;9008:30;;;;8852:193;;;;;;:::o;16301:716::-;16377:7;16386:3;;:::i;:::-;16571:10;16583:20;16767:10;16779:26;;:::i;:::-;16423:1;16412:7;:12;16408:152;;;16512:16;16530:18;;;;;;;;;16545:1;16530:18;;;16504:45;;;;;;;;;16408:152;16607:18;16611:4;16617:7;16607:3;:18::i;:::-;16570:55;;;;16647:14;16639:22;;;;;;;;:4;:22;;;;;;;;;;16635:121;;;16685:39;16726:18;;;;;;;;;16741:1;16726:18;;;16677:68;;;;;;;;;16635:121;16809:32;16816:7;16825:15;16809:6;:32::i;:::-;16766:75;;;;16863:14;16855:22;;;;;;;;:4;:22;;;;;;;;;;16851:107;;;16901:25;16928:18;;;;;;;;;16943:1;16928:18;;;16893:54;;;;;;;;;16851:107;16976:16;16994:15;16968:42;;;;16301:716;;;;;;;;;;:::o;11319:209::-;11386:5;11393:3;;:::i;:::-;11416:11;11429;11444:27;11448:1;:10;;;11460:1;:10;;;11444:3;:27::i;:::-;11415:56;;;;11490:5;11497:23;;;;;;;;;11512:6;11497:23;;;11482:39;;;;;;;11319:209;;;;;;;:::o;8451:311::-;8503:5;8510:4;8599:6;8535:1;8530;:6;8526:63;;;8560:14;8576:1;8552:26;;;;;;;;;8526:63;8612:1;8608;:5;8599:14;;8637:1;8632;8628;:5;;;;;;;;:10;;8624:132;;;8662:22;8686:1;8654:34;;;;;;;;;8624:132;8727:14;8743:1;8719:26;;;;8451:311;;;;;;;:::o;9469:234::-;9521:5;9528:4;9544:6;9557:1;9553;:5;9544:14;;9578:1;9573;:6;;9569:128;;;9603:14;9619:1;9595:26;;;;;;9569:128;9660:22;9684:1;9652:34;;;;;;;9469:234;;;;;;;:::o;10764:471::-;10825:5;10832:3;;:::i;:::-;10855:10;10867:20;11016:10;11028:13;10891:18;10895:3;10352:6;10891:3;:18::i;:::-;10854:55;;;;10931:14;10923:22;;;;;;;;:4;:22;;;;;;;;;;10919:86;;;10969:4;10975:18;;;;;;;;;10990:1;10975:18;;;10961:33;;;;;;;;;10919:86;11045:27;11049:15;11066:5;11045:3;:27::i;:::-;11015:57;;;;11094:14;11086:22;;;;;;;;:4;:22;;;;;;;;;;11082:86;;;11132:4;11138:18;;;;;;;;;11153:1;11138:18;;;11124:33;;;;;;;;;11082:86;11186:14;11202:25;;;;;;;;;11217:8;11202:25;;;11178:50;;;;;;;10764:471;;;;;;;;;;:::o;15888:7413::-;;;;;;;;;;;;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0xc10c50f4521dcde8be1fb04acaa6ce0e47733d40_StableCoinInterestRateModel.sol","exportedSymbols":{"CarefulMath":[387],"ErrorReporter":[180],"Exponential":[813],"InterestRateModel":[207],"StableCoinInterestRateModel":[1188]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[180],"name":"ErrorReporter","scope":1189},"children":[{"attributes":{"anonymous":false,"documentation":"@dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\ncontract-specific code that enables us to report opaque error codes from upgradeable contracts.*","name":"Failure"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"error","scope":9,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"308:4:0"}],"id":3,"name":"VariableDeclaration","src":"308:10:0"},{"attributes":{"constant":false,"indexed":false,"name":"info","scope":9,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"320:4:0"}],"id":5,"name":"VariableDeclaration","src":"320:9:0"},{"attributes":{"constant":false,"indexed":false,"name":"detail","scope":9,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":6,"name":"ElementaryTypeName","src":"331:4:0"}],"id":7,"name":"VariableDeclaration","src":"331:11:0"}],"id":8,"name":"ParameterList","src":"307:36:0"}],"id":9,"name":"EventDefinition","src":"294:50:0"},{"attributes":{"canonicalName":"ErrorReporter.Error","name":"Error"},"children":[{"attributes":{"name":"NO_ERROR"},"id":10,"name":"EnumValue","src":"371:8:0"},{"attributes":{"name":"OPAQUE_ERROR"},"id":11,"name":"EnumValue","src":"389:12:0"},{"attributes":{"name":"UNAUTHORIZED"},"id":12,"name":"EnumValue","src":"542:12:0"},{"attributes":{"name":"INTEGER_OVERFLOW"},"id":13,"name":"EnumValue","src":"564:16:0"},{"attributes":{"name":"INTEGER_UNDERFLOW"},"id":14,"name":"EnumValue","src":"590:17:0"},{"attributes":{"name":"DIVISION_BY_ZERO"},"id":15,"name":"EnumValue","src":"617:16:0"},{"attributes":{"name":"BAD_INPUT"},"id":16,"name":"EnumValue","src":"643:9:0"},{"attributes":{"name":"TOKEN_INSUFFICIENT_ALLOWANCE"},"id":17,"name":"EnumValue","src":"662:28:0"},{"attributes":{"name":"TOKEN_INSUFFICIENT_BALANCE"},"id":18,"name":"EnumValue","src":"700:26:0"},{"attributes":{"name":"TOKEN_TRANSFER_FAILED"},"id":19,"name":"EnumValue","src":"736:21:0"},{"attributes":{"name":"MARKET_NOT_SUPPORTED"},"id":20,"name":"EnumValue","src":"767:20:0"},{"attributes":{"name":"SUPPLY_RATE_CALCULATION_FAILED"},"id":21,"name":"EnumValue","src":"797:30:0"},{"attributes":{"name":"BORROW_RATE_CALCULATION_FAILED"},"id":22,"name":"EnumValue","src":"837:30:0"},{"attributes":{"name":"TOKEN_INSUFFICIENT_CASH"},"id":23,"name":"EnumValue","src":"877:23:0"},{"attributes":{"name":"TOKEN_TRANSFER_OUT_FAILED"},"id":24,"name":"EnumValue","src":"910:25:0"},{"attributes":{"name":"INSUFFICIENT_LIQUIDITY"},"id":25,"name":"EnumValue","src":"945:22:0"},{"attributes":{"name":"INSUFFICIENT_BALANCE"},"id":26,"name":"EnumValue","src":"977:20:0"},{"attributes":{"name":"INVALID_COLLATERAL_RATIO"},"id":27,"name":"EnumValue","src":"1007:24:0"},{"attributes":{"name":"MISSING_ASSET_PRICE"},"id":28,"name":"EnumValue","src":"1041:19:0"},{"attributes":{"name":"EQUITY_INSUFFICIENT_BALANCE"},"id":29,"name":"EnumValue","src":"1070:27:0"},{"attributes":{"name":"INVALID_CLOSE_AMOUNT_REQUESTED"},"id":30,"name":"EnumValue","src":"1107:30:0"},{"attributes":{"name":"ASSET_NOT_PRICED"},"id":31,"name":"EnumValue","src":"1147:16:0"},{"attributes":{"name":"INVALID_LIQUIDATION_DISCOUNT"},"id":32,"name":"EnumValue","src":"1173:28:0"},{"attributes":{"name":"INVALID_COMBINED_RISK_PARAMETERS"},"id":33,"name":"EnumValue","src":"1211:32:0"},{"attributes":{"name":"ZERO_ORACLE_ADDRESS"},"id":34,"name":"EnumValue","src":"1253:19:0"},{"attributes":{"name":"CONTRACT_PAUSED"},"id":35,"name":"EnumValue","src":"1282:15:0"}],"id":36,"name":"EnumDefinition","src":"350:953:0"},{"attributes":{"canonicalName":"ErrorReporter.FailureInfo","name":"FailureInfo"},"children":[{"attributes":{"name":"ACCEPT_ADMIN_PENDING_ADMIN_CHECK"},"id":37,"name":"EnumValue","src":"1612:32:0"},{"attributes":{"name":"BORROW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED"},"id":38,"name":"EnumValue","src":"1654:43:0"},{"attributes":{"name":"BORROW_ACCOUNT_SHORTFALL_PRESENT"},"id":39,"name":"EnumValue","src":"1707:32:0"},{"attributes":{"name":"BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":40,"name":"EnumValue","src":"1749:45:0"},{"attributes":{"name":"BORROW_AMOUNT_LIQUIDITY_SHORTFALL"},"id":41,"name":"EnumValue","src":"1804:33:0"},{"attributes":{"name":"BORROW_AMOUNT_VALUE_CALCULATION_FAILED"},"id":42,"name":"EnumValue","src":"1847:38:0"},{"attributes":{"name":"BORROW_CONTRACT_PAUSED"},"id":43,"name":"EnumValue","src":"1895:22:0"},{"attributes":{"name":"BORROW_MARKET_NOT_SUPPORTED"},"id":44,"name":"EnumValue","src":"1927:27:0"},{"attributes":{"name":"BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":45,"name":"EnumValue","src":"1964:42:0"},{"attributes":{"name":"BORROW_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":46,"name":"EnumValue","src":"2016:41:0"},{"attributes":{"name":"BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":47,"name":"EnumValue","src":"2067:42:0"},{"attributes":{"name":"BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":48,"name":"EnumValue","src":"2119:41:0"},{"attributes":{"name":"BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":49,"name":"EnumValue","src":"2170:43:0"},{"attributes":{"name":"BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED"},"id":50,"name":"EnumValue","src":"2223:42:0"},{"attributes":{"name":"BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED"},"id":51,"name":"EnumValue","src":"2275:40:0"},{"attributes":{"name":"BORROW_ORIGINATION_FEE_CALCULATION_FAILED"},"id":52,"name":"EnumValue","src":"2325:41:0"},{"attributes":{"name":"BORROW_TRANSFER_OUT_FAILED"},"id":53,"name":"EnumValue","src":"2376:26:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_AMOUNT_VALIDATION"},"id":54,"name":"EnumValue","src":"2412:35:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_CALCULATE_EQUITY"},"id":55,"name":"EnumValue","src":"2457:34:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_MODEL_OWNER_CHECK"},"id":56,"name":"EnumValue","src":"2501:35:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_TRANSFER_OUT_FAILED"},"id":57,"name":"EnumValue","src":"2546:37:0"},{"attributes":{"name":"LIQUIDATE_ACCUMULATED_BORROW_BALANCE_CALCULATION_FAILED"},"id":58,"name":"EnumValue","src":"2593:55:0"},{"attributes":{"name":"LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET"},"id":59,"name":"EnumValue","src":"2658:81:0"},{"attributes":{"name":"LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET"},"id":60,"name":"EnumValue","src":"2749:83:0"},{"attributes":{"name":"LIQUIDATE_AMOUNT_SEIZE_CALCULATION_FAILED"},"id":61,"name":"EnumValue","src":"2842:41:0"},{"attributes":{"name":"LIQUIDATE_BORROW_DENOMINATED_COLLATERAL_CALCULATION_FAILED"},"id":62,"name":"EnumValue","src":"2893:58:0"},{"attributes":{"name":"LIQUIDATE_CLOSE_AMOUNT_TOO_HIGH"},"id":63,"name":"EnumValue","src":"2961:31:0"},{"attributes":{"name":"LIQUIDATE_CONTRACT_PAUSED"},"id":64,"name":"EnumValue","src":"3002:25:0"},{"attributes":{"name":"LIQUIDATE_DISCOUNTED_REPAY_TO_EVEN_AMOUNT_CALCULATION_FAILED"},"id":65,"name":"EnumValue","src":"3037:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_BORROWED_ASSET"},"id":66,"name":"EnumValue","src":"3107:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET"},"id":67,"name":"EnumValue","src":"3177:62:0"},{"attributes":{"name":"LIQUIDATE_NEW_BORROW_RATE_CALCULATION_FAILED_BORROWED_ASSET"},"id":68,"name":"EnumValue","src":"3249:59:0"},{"attributes":{"name":"LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_BORROWED_ASSET"},"id":69,"name":"EnumValue","src":"3318:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET"},"id":70,"name":"EnumValue","src":"3388:62:0"},{"attributes":{"name":"LIQUIDATE_NEW_SUPPLY_RATE_CALCULATION_FAILED_BORROWED_ASSET"},"id":71,"name":"EnumValue","src":"3460:59:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_BORROW_CALCULATION_FAILED_BORROWED_ASSET"},"id":72,"name":"EnumValue","src":"3529:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_CASH_CALCULATION_FAILED_BORROWED_ASSET"},"id":73,"name":"EnumValue","src":"3599:58:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET"},"id":74,"name":"EnumValue","src":"3667:79:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET"},"id":75,"name":"EnumValue","src":"3756:81:0"},{"attributes":{"name":"LIQUIDATE_FETCH_ASSET_PRICE_FAILED"},"id":76,"name":"EnumValue","src":"3847:34:0"},{"attributes":{"name":"LIQUIDATE_TRANSFER_IN_FAILED"},"id":77,"name":"EnumValue","src":"3891:28:0"},{"attributes":{"name":"LIQUIDATE_TRANSFER_IN_NOT_POSSIBLE"},"id":78,"name":"EnumValue","src":"3929:34:0"},{"attributes":{"name":"REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":79,"name":"EnumValue","src":"3973:51:0"},{"attributes":{"name":"REPAY_BORROW_CONTRACT_PAUSED"},"id":80,"name":"EnumValue","src":"4034:28:0"},{"attributes":{"name":"REPAY_BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":81,"name":"EnumValue","src":"4072:48:0"},{"attributes":{"name":"REPAY_BORROW_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":82,"name":"EnumValue","src":"4130:47:0"},{"attributes":{"name":"REPAY_BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":83,"name":"EnumValue","src":"4187:48:0"},{"attributes":{"name":"REPAY_BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":84,"name":"EnumValue","src":"4245:47:0"},{"attributes":{"name":"REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":85,"name":"EnumValue","src":"4302:49:0"},{"attributes":{"name":"REPAY_BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED"},"id":86,"name":"EnumValue","src":"4361:48:0"},{"attributes":{"name":"REPAY_BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED"},"id":87,"name":"EnumValue","src":"4419:46:0"},{"attributes":{"name":"REPAY_BORROW_TRANSFER_IN_FAILED"},"id":88,"name":"EnumValue","src":"4475:31:0"},{"attributes":{"name":"REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE"},"id":89,"name":"EnumValue","src":"4516:37:0"},{"attributes":{"name":"SET_ASSET_PRICE_CHECK_ORACLE"},"id":90,"name":"EnumValue","src":"4563:28:0"},{"attributes":{"name":"SET_MARKET_INTEREST_RATE_MODEL_OWNER_CHECK"},"id":91,"name":"EnumValue","src":"4601:42:0"},{"attributes":{"name":"SET_ORACLE_OWNER_CHECK"},"id":92,"name":"EnumValue","src":"4653:22:0"},{"attributes":{"name":"SET_ORIGINATION_FEE_OWNER_CHECK"},"id":93,"name":"EnumValue","src":"4685:31:0"},{"attributes":{"name":"SET_PAUSED_OWNER_CHECK"},"id":94,"name":"EnumValue","src":"4726:22:0"},{"attributes":{"name":"SET_PENDING_ADMIN_OWNER_CHECK"},"id":95,"name":"EnumValue","src":"4758:29:0"},{"attributes":{"name":"SET_RISK_PARAMETERS_OWNER_CHECK"},"id":96,"name":"EnumValue","src":"4797:31:0"},{"attributes":{"name":"SET_RISK_PARAMETERS_VALIDATION"},"id":97,"name":"EnumValue","src":"4838:30:0"},{"attributes":{"name":"SUPPLY_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":98,"name":"EnumValue","src":"4878:45:0"},{"attributes":{"name":"SUPPLY_CONTRACT_PAUSED"},"id":99,"name":"EnumValue","src":"4933:22:0"},{"attributes":{"name":"SUPPLY_MARKET_NOT_SUPPORTED"},"id":100,"name":"EnumValue","src":"4965:27:0"},{"attributes":{"name":"SUPPLY_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":101,"name":"EnumValue","src":"5002:42:0"},{"attributes":{"name":"SUPPLY_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":102,"name":"EnumValue","src":"5054:41:0"},{"attributes":{"name":"SUPPLY_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":103,"name":"EnumValue","src":"5105:42:0"},{"attributes":{"name":"SUPPLY_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":104,"name":"EnumValue","src":"5157:41:0"},{"attributes":{"name":"SUPPLY_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":105,"name":"EnumValue","src":"5208:43:0"},{"attributes":{"name":"SUPPLY_NEW_TOTAL_CASH_CALCULATION_FAILED"},"id":106,"name":"EnumValue","src":"5261:40:0"},{"attributes":{"name":"SUPPLY_NEW_TOTAL_SUPPLY_CALCULATION_FAILED"},"id":107,"name":"EnumValue","src":"5311:42:0"},{"attributes":{"name":"SUPPLY_TRANSFER_IN_FAILED"},"id":108,"name":"EnumValue","src":"5363:25:0"},{"attributes":{"name":"SUPPLY_TRANSFER_IN_NOT_POSSIBLE"},"id":109,"name":"EnumValue","src":"5398:31:0"},{"attributes":{"name":"SUPPORT_MARKET_FETCH_PRICE_FAILED"},"id":110,"name":"EnumValue","src":"5439:33:0"},{"attributes":{"name":"SUPPORT_MARKET_OWNER_CHECK"},"id":111,"name":"EnumValue","src":"5482:26:0"},{"attributes":{"name":"SUPPORT_MARKET_PRICE_CHECK"},"id":112,"name":"EnumValue","src":"5518:26:0"},{"attributes":{"name":"SUSPEND_MARKET_OWNER_CHECK"},"id":113,"name":"EnumValue","src":"5554:26:0"},{"attributes":{"name":"WITHDRAW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED"},"id":114,"name":"EnumValue","src":"5590:45:0"},{"attributes":{"name":"WITHDRAW_ACCOUNT_SHORTFALL_PRESENT"},"id":115,"name":"EnumValue","src":"5645:34:0"},{"attributes":{"name":"WITHDRAW_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":116,"name":"EnumValue","src":"5689:47:0"},{"attributes":{"name":"WITHDRAW_AMOUNT_LIQUIDITY_SHORTFALL"},"id":117,"name":"EnumValue","src":"5746:35:0"},{"attributes":{"name":"WITHDRAW_AMOUNT_VALUE_CALCULATION_FAILED"},"id":118,"name":"EnumValue","src":"5791:40:0"},{"attributes":{"name":"WITHDRAW_CAPACITY_CALCULATION_FAILED"},"id":119,"name":"EnumValue","src":"5841:36:0"},{"attributes":{"name":"WITHDRAW_CONTRACT_PAUSED"},"id":120,"name":"EnumValue","src":"5887:24:0"},{"attributes":{"name":"WITHDRAW_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":121,"name":"EnumValue","src":"5921:44:0"},{"attributes":{"name":"WITHDRAW_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":122,"name":"EnumValue","src":"5975:43:0"},{"attributes":{"name":"WITHDRAW_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":123,"name":"EnumValue","src":"6028:44:0"},{"attributes":{"name":"WITHDRAW_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":124,"name":"EnumValue","src":"6082:43:0"},{"attributes":{"name":"WITHDRAW_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":125,"name":"EnumValue","src":"6135:45:0"},{"attributes":{"name":"WITHDRAW_NEW_TOTAL_SUPPLY_CALCULATION_FAILED"},"id":126,"name":"EnumValue","src":"6190:44:0"},{"attributes":{"name":"WITHDRAW_TRANSFER_OUT_FAILED"},"id":127,"name":"EnumValue","src":"6244:28:0"},{"attributes":{"name":"WITHDRAW_TRANSFER_OUT_NOT_POSSIBLE"},"id":128,"name":"EnumValue","src":"6282:34:0"}],"id":129,"name":"EnumDefinition","src":"1585:4737:0"},{"attributes":{"constant":false,"documentation":"@dev use this when reporting a known error from the money market or a non-upgradeable collaborator","implemented":true,"isConstructor":false,"modifiers":[null],"name":"fail","payable":false,"scope":180,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"err","scope":153,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":130,"name":"UserDefinedTypeName","src":"6467:5:0"}],"id":131,"name":"VariableDeclaration","src":"6467:9:0"},{"attributes":{"constant":false,"name":"info","scope":153,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.FailureInfo","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"FailureInfo","referencedDeclaration":129,"type":"enum ErrorReporter.FailureInfo"},"id":132,"name":"UserDefinedTypeName","src":"6478:11:0"}],"id":133,"name":"VariableDeclaration","src":"6478:16:0"}],"id":134,"name":"ParameterList","src":"6466:29:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":153,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":135,"name":"ElementaryTypeName","src":"6514:4:0"}],"id":136,"name":"VariableDeclaration","src":"6514:4:0"}],"id":137,"name":"ParameterList","src":"6513:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"function (uint256,uint256,uint256)","value":"Failure"},"id":138,"name":"Identifier","src":"6535:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":139,"name":"ElementaryTypeNameExpression","src":"6543:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":131,"type":"enum ErrorReporter.Error","value":"err"},"id":140,"name":"Identifier","src":"6548:3:0"}],"id":141,"name":"FunctionCall","src":"6543:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_FailureInfo_$129","typeString":"enum ErrorReporter.FailureInfo"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":142,"name":"ElementaryTypeNameExpression","src":"6554:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":133,"type":"enum ErrorReporter.FailureInfo","value":"info"},"id":143,"name":"Identifier","src":"6559:4:0"}],"id":144,"name":"FunctionCall","src":"6554:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":145,"name":"Literal","src":"6566:1:0"}],"id":146,"name":"FunctionCall","src":"6535:33:0"}],"id":147,"name":"EmitStatement","src":"6530:38:0"},{"attributes":{"functionReturnParameters":137},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":148,"name":"ElementaryTypeNameExpression","src":"6586:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":131,"type":"enum ErrorReporter.Error","value":"err"},"id":149,"name":"Identifier","src":"6591:3:0"}],"id":150,"name":"FunctionCall","src":"6586:9:0"}],"id":151,"name":"Return","src":"6579:16:0"}],"id":152,"name":"Block","src":"6520:82:0"}],"id":153,"name":"FunctionDefinition","src":"6453:149:0"},{"attributes":{"constant":false,"documentation":"@dev use this when reporting an opaque error from an upgradeable collaborator contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"failOpaque","payable":false,"scope":180,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"info","scope":179,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.FailureInfo","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"FailureInfo","referencedDeclaration":129,"type":"enum ErrorReporter.FailureInfo"},"id":154,"name":"UserDefinedTypeName","src":"6741:11:0"}],"id":155,"name":"VariableDeclaration","src":"6741:16:0"},{"attributes":{"constant":false,"name":"opaqueError","scope":179,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":156,"name":"ElementaryTypeName","src":"6759:4:0"}],"id":157,"name":"VariableDeclaration","src":"6759:16:0"}],"id":158,"name":"ParameterList","src":"6740:36:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":179,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":159,"name":"ElementaryTypeName","src":"6795:4:0"}],"id":160,"name":"VariableDeclaration","src":"6795:4:0"}],"id":161,"name":"ParameterList","src":"6794:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"function (uint256,uint256,uint256)","value":"Failure"},"id":162,"name":"Identifier","src":"6816:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":163,"name":"ElementaryTypeNameExpression","src":"6824:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"OPAQUE_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":164,"name":"Identifier","src":"6829:5:0"}],"id":165,"name":"MemberAccess","src":"6829:18:0"}],"id":166,"name":"FunctionCall","src":"6824:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_FailureInfo_$129","typeString":"enum ErrorReporter.FailureInfo"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":167,"name":"ElementaryTypeNameExpression","src":"6850:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":155,"type":"enum ErrorReporter.FailureInfo","value":"info"},"id":168,"name":"Identifier","src":"6855:4:0"}],"id":169,"name":"FunctionCall","src":"6850:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":157,"type":"uint256","value":"opaqueError"},"id":170,"name":"Identifier","src":"6862:11:0"}],"id":171,"name":"FunctionCall","src":"6816:58:0"}],"id":172,"name":"EmitStatement","src":"6811:63:0"},{"attributes":{"functionReturnParameters":161},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":173,"name":"ElementaryTypeNameExpression","src":"6892:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"OPAQUE_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":174,"name":"Identifier","src":"6897:5:0"}],"id":175,"name":"MemberAccess","src":"6897:18:0"}],"id":176,"name":"FunctionCall","src":"6892:24:0"}],"id":177,"name":"Return","src":"6885:31:0"}],"id":178,"name":"Block","src":"6801:122:0"}],"id":179,"name":"FunctionDefinition","src":"6721:202:0"}],"id":180,"name":"ContractDefinition","src":"25:6901:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[207],"name":"InterestRateModel","scope":1189},"children":[{"attributes":{"body":null,"constant":true,"documentation":"@notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the supply interest rate per block scaled by 10e18","implemented":false,"isConstructor":false,"modifiers":[null],"name":"getSupplyRate","payable":false,"scope":207,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"asset","scope":193,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":181,"name":"ElementaryTypeName","src":"7566:7:0"}],"id":182,"name":"VariableDeclaration","src":"7566:13:0"},{"attributes":{"constant":false,"name":"cash","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":183,"name":"ElementaryTypeName","src":"7581:4:0"}],"id":184,"name":"VariableDeclaration","src":"7581:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":185,"name":"ElementaryTypeName","src":"7592:4:0"}],"id":186,"name":"VariableDeclaration","src":"7592:12:0"}],"id":187,"name":"ParameterList","src":"7565:40:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":188,"name":"ElementaryTypeName","src":"7627:4:0"}],"id":189,"name":"VariableDeclaration","src":"7627:4:0"},{"attributes":{"constant":false,"name":"","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":190,"name":"ElementaryTypeName","src":"7633:4:0"}],"id":191,"name":"VariableDeclaration","src":"7633:4:0"}],"id":192,"name":"ParameterList","src":"7626:12:0"}],"id":193,"name":"FunctionDefinition","src":"7543:96:0"},{"attributes":{"body":null,"constant":true,"documentation":"@notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the borrow interest rate per block scaled by 10e18","implemented":false,"isConstructor":false,"modifiers":[null],"name":"getBorrowRate","payable":false,"scope":207,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"asset","scope":206,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":194,"name":"ElementaryTypeName","src":"8250:7:0"}],"id":195,"name":"VariableDeclaration","src":"8250:13:0"},{"attributes":{"constant":false,"name":"cash","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":196,"name":"ElementaryTypeName","src":"8265:4:0"}],"id":197,"name":"VariableDeclaration","src":"8265:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":198,"name":"ElementaryTypeName","src":"8276:4:0"}],"id":199,"name":"VariableDeclaration","src":"8276:12:0"}],"id":200,"name":"ParameterList","src":"8249:40:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":201,"name":"ElementaryTypeName","src":"8311:4:0"}],"id":202,"name":"VariableDeclaration","src":"8311:4:0"},{"attributes":{"constant":false,"name":"","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":203,"name":"ElementaryTypeName","src":"8317:4:0"}],"id":204,"name":"VariableDeclaration","src":"8317:4:0"}],"id":205,"name":"ParameterList","src":"8310:12:0"}],"id":206,"name":"FunctionDefinition","src":"8227:96:0"}],"id":207,"name":"ContractDefinition","src":"6927:1398:0"},{"attributes":{"contractDependencies":[180],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[387,180],"name":"CarefulMath","scope":1189},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ErrorReporter","referencedDeclaration":180,"type":"contract ErrorReporter"},"id":208,"name":"UserDefinedTypeName","src":"8350:13:0"}],"id":209,"name":"InheritanceSpecifier","src":"8350:13:0"},{"attributes":{"constant":true,"documentation":"@dev Multiplies two numbers, returns an error on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mul","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":210,"name":"ElementaryTypeName","src":"8464:4:0"}],"id":211,"name":"VariableDeclaration","src":"8464:6:0"},{"attributes":{"constant":false,"name":"b","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":212,"name":"ElementaryTypeName","src":"8472:4:0"}],"id":213,"name":"VariableDeclaration","src":"8472:6:0"}],"id":214,"name":"ParameterList","src":"8463:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":255,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":215,"name":"UserDefinedTypeName","src":"8503:5:0"}],"id":216,"name":"VariableDeclaration","src":"8503:5:0"},{"attributes":{"constant":false,"name":"","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":217,"name":"ElementaryTypeName","src":"8510:4:0"}],"id":218,"name":"VariableDeclaration","src":"8510:4:0"}],"id":219,"name":"ParameterList","src":"8502:13:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"a"},"id":220,"name":"Identifier","src":"8530:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":221,"name":"Literal","src":"8535:1:0"}],"id":222,"name":"BinaryOperation","src":"8530:6:0"},{"children":[{"attributes":{"functionReturnParameters":219},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":223,"name":"Identifier","src":"8560:5:0"}],"id":224,"name":"MemberAccess","src":"8560:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":225,"name":"Literal","src":"8576:1:0"}],"id":226,"name":"TupleExpression","src":"8559:19:0"}],"id":227,"name":"Return","src":"8552:26:0"}],"id":228,"name":"Block","src":"8538:51:0"}],"id":229,"name":"IfStatement","src":"8526:63:0"},{"attributes":{"assignments":[231]},"children":[{"attributes":{"constant":false,"name":"c","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":230,"name":"ElementaryTypeName","src":"8599:4:0"}],"id":231,"name":"VariableDeclaration","src":"8599:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"a"},"id":232,"name":"Identifier","src":"8608:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":213,"type":"uint256","value":"b"},"id":233,"name":"Identifier","src":"8612:1:0"}],"id":234,"name":"BinaryOperation","src":"8608:5:0"}],"id":235,"name":"VariableDeclarationStatement","src":"8599:14:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":231,"type":"uint256","value":"c"},"id":236,"name":"Identifier","src":"8628:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"a"},"id":237,"name":"Identifier","src":"8632:1:0"}],"id":238,"name":"BinaryOperation","src":"8628:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":213,"type":"uint256","value":"b"},"id":239,"name":"Identifier","src":"8637:1:0"}],"id":240,"name":"BinaryOperation","src":"8628:10:0"},{"children":[{"attributes":{"functionReturnParameters":219},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"INTEGER_OVERFLOW","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":241,"name":"Identifier","src":"8662:5:0"}],"id":242,"name":"MemberAccess","src":"8662:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":243,"name":"Literal","src":"8686:1:0"}],"id":244,"name":"TupleExpression","src":"8661:27:0"}],"id":245,"name":"Return","src":"8654:34:0"}],"id":246,"name":"Block","src":"8640:59:0"},{"children":[{"attributes":{"functionReturnParameters":219},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":247,"name":"Identifier","src":"8727:5:0"}],"id":248,"name":"MemberAccess","src":"8727:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":231,"type":"uint256","value":"c"},"id":249,"name":"Identifier","src":"8743:1:0"}],"id":250,"name":"TupleExpression","src":"8726:19:0"}],"id":251,"name":"Return","src":"8719:26:0"}],"id":252,"name":"Block","src":"8705:51:0"}],"id":253,"name":"IfStatement","src":"8624:132:0"}],"id":254,"name":"Block","src":"8516:246:0"}],"id":255,"name":"FunctionDefinition","src":"8451:311:0"},{"attributes":{"constant":true,"documentation":"@dev Integer division of two numbers, truncating the quotient.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"div","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":284,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":256,"name":"ElementaryTypeName","src":"8865:4:0"}],"id":257,"name":"VariableDeclaration","src":"8865:6:0"},{"attributes":{"constant":false,"name":"b","scope":284,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":258,"name":"ElementaryTypeName","src":"8873:4:0"}],"id":259,"name":"VariableDeclaration","src":"8873:6:0"}],"id":260,"name":"ParameterList","src":"8864:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":284,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":261,"name":"UserDefinedTypeName","src":"8904:5:0"}],"id":262,"name":"VariableDeclaration","src":"8904:5:0"},{"attributes":{"constant":false,"name":"","scope":284,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":263,"name":"ElementaryTypeName","src":"8911:4:0"}],"id":264,"name":"VariableDeclaration","src":"8911:4:0"}],"id":265,"name":"ParameterList","src":"8903:13:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"b"},"id":266,"name":"Identifier","src":"8931:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":267,"name":"Literal","src":"8936:1:0"}],"id":268,"name":"BinaryOperation","src":"8931:6:0"},{"children":[{"attributes":{"functionReturnParameters":265},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"DIVISION_BY_ZERO","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":269,"name":"Identifier","src":"8961:5:0"}],"id":270,"name":"MemberAccess","src":"8961:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":271,"name":"Literal","src":"8985:1:0"}],"id":272,"name":"TupleExpression","src":"8960:27:0"}],"id":273,"name":"Return","src":"8953:34:0"}],"id":274,"name":"Block","src":"8939:59:0"}],"id":275,"name":"IfStatement","src":"8927:71:0"},{"attributes":{"functionReturnParameters":265},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":276,"name":"Identifier","src":"9016:5:0"}],"id":277,"name":"MemberAccess","src":"9016:14:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint256","value":"a"},"id":278,"name":"Identifier","src":"9032:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"b"},"id":279,"name":"Identifier","src":"9036:1:0"}],"id":280,"name":"BinaryOperation","src":"9032:5:0"}],"id":281,"name":"TupleExpression","src":"9015:23:0"}],"id":282,"name":"Return","src":"9008:30:0"}],"id":283,"name":"Block","src":"8917:128:0"}],"id":284,"name":"FunctionDefinition","src":"8852:193:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two numbers, returns an error on overflow (i.e. if subtrahend is greater than minuend).","implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":314,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":285,"name":"ElementaryTypeName","src":"9188:4:0"}],"id":286,"name":"VariableDeclaration","src":"9188:6:0"},{"attributes":{"constant":false,"name":"b","scope":314,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":287,"name":"ElementaryTypeName","src":"9196:4:0"}],"id":288,"name":"VariableDeclaration","src":"9196:6:0"}],"id":289,"name":"ParameterList","src":"9187:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":314,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":290,"name":"UserDefinedTypeName","src":"9227:5:0"}],"id":291,"name":"VariableDeclaration","src":"9227:5:0"},{"attributes":{"constant":false,"name":"","scope":314,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":292,"name":"ElementaryTypeName","src":"9234:4:0"}],"id":293,"name":"VariableDeclaration","src":"9234:4:0"}],"id":294,"name":"ParameterList","src":"9226:13:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"b"},"id":295,"name":"Identifier","src":"9254:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":286,"type":"uint256","value":"a"},"id":296,"name":"Identifier","src":"9259:1:0"}],"id":297,"name":"BinaryOperation","src":"9254:6:0"},{"children":[{"attributes":{"functionReturnParameters":294},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":298,"name":"Identifier","src":"9284:5:0"}],"id":299,"name":"MemberAccess","src":"9284:14:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":286,"type":"uint256","value":"a"},"id":300,"name":"Identifier","src":"9300:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"b"},"id":301,"name":"Identifier","src":"9304:1:0"}],"id":302,"name":"BinaryOperation","src":"9300:5:0"}],"id":303,"name":"TupleExpression","src":"9283:23:0"}],"id":304,"name":"Return","src":"9276:30:0"}],"id":305,"name":"Block","src":"9262:55:0"},{"children":[{"attributes":{"functionReturnParameters":294},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"INTEGER_UNDERFLOW","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":306,"name":"Identifier","src":"9345:5:0"}],"id":307,"name":"MemberAccess","src":"9345:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":308,"name":"Literal","src":"9370:1:0"}],"id":309,"name":"TupleExpression","src":"9344:28:0"}],"id":310,"name":"Return","src":"9337:35:0"}],"id":311,"name":"Block","src":"9323:60:0"}],"id":312,"name":"IfStatement","src":"9250:133:0"}],"id":313,"name":"Block","src":"9240:149:0"}],"id":314,"name":"FunctionDefinition","src":"9175:214:0"},{"attributes":{"constant":true,"documentation":"@dev Adds two numbers, returns an error on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":315,"name":"ElementaryTypeName","src":"9482:4:0"}],"id":316,"name":"VariableDeclaration","src":"9482:6:0"},{"attributes":{"constant":false,"name":"b","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":317,"name":"ElementaryTypeName","src":"9490:4:0"}],"id":318,"name":"VariableDeclaration","src":"9490:6:0"}],"id":319,"name":"ParameterList","src":"9481:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":348,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":320,"name":"UserDefinedTypeName","src":"9521:5:0"}],"id":321,"name":"VariableDeclaration","src":"9521:5:0"},{"attributes":{"constant":false,"name":"","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":322,"name":"ElementaryTypeName","src":"9528:4:0"}],"id":323,"name":"VariableDeclaration","src":"9528:4:0"}],"id":324,"name":"ParameterList","src":"9520:13:0"},{"children":[{"attributes":{"assignments":[326]},"children":[{"attributes":{"constant":false,"name":"c","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":325,"name":"ElementaryTypeName","src":"9544:4:0"}],"id":326,"name":"VariableDeclaration","src":"9544:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":316,"type":"uint256","value":"a"},"id":327,"name":"Identifier","src":"9553:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":318,"type":"uint256","value":"b"},"id":328,"name":"Identifier","src":"9557:1:0"}],"id":329,"name":"BinaryOperation","src":"9553:5:0"}],"id":330,"name":"VariableDeclarationStatement","src":"9544:14:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":326,"type":"uint256","value":"c"},"id":331,"name":"Identifier","src":"9573:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":316,"type":"uint256","value":"a"},"id":332,"name":"Identifier","src":"9578:1:0"}],"id":333,"name":"BinaryOperation","src":"9573:6:0"},{"children":[{"attributes":{"functionReturnParameters":324},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":334,"name":"Identifier","src":"9603:5:0"}],"id":335,"name":"MemberAccess","src":"9603:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":326,"type":"uint256","value":"c"},"id":336,"name":"Identifier","src":"9619:1:0"}],"id":337,"name":"TupleExpression","src":"9602:19:0"}],"id":338,"name":"Return","src":"9595:26:0"}],"id":339,"name":"Block","src":"9581:51:0"},{"children":[{"attributes":{"functionReturnParameters":324},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"INTEGER_OVERFLOW","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":340,"name":"Identifier","src":"9660:5:0"}],"id":341,"name":"MemberAccess","src":"9660:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":342,"name":"Literal","src":"9684:1:0"}],"id":343,"name":"TupleExpression","src":"9659:27:0"}],"id":344,"name":"Return","src":"9652:34:0"}],"id":345,"name":"Block","src":"9638:59:0"}],"id":346,"name":"IfStatement","src":"9569:128:0"}],"id":347,"name":"Block","src":"9534:169:0"}],"id":348,"name":"FunctionDefinition","src":"9469:234:0"},{"attributes":{"constant":true,"documentation":"@dev add a and b and then subtract c","implemented":true,"isConstructor":false,"modifiers":[null],"name":"addThenSub","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":349,"name":"ElementaryTypeName","src":"9787:4:0"}],"id":350,"name":"VariableDeclaration","src":"9787:6:0"},{"attributes":{"constant":false,"name":"b","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":351,"name":"ElementaryTypeName","src":"9795:4:0"}],"id":352,"name":"VariableDeclaration","src":"9795:6:0"},{"attributes":{"constant":false,"name":"c","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":353,"name":"ElementaryTypeName","src":"9803:4:0"}],"id":354,"name":"VariableDeclaration","src":"9803:6:0"}],"id":355,"name":"ParameterList","src":"9786:24:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":386,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":356,"name":"UserDefinedTypeName","src":"9834:5:0"}],"id":357,"name":"VariableDeclaration","src":"9834:5:0"},{"attributes":{"constant":false,"name":"","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":358,"name":"ElementaryTypeName","src":"9841:4:0"}],"id":359,"name":"VariableDeclaration","src":"9841:4:0"}],"id":360,"name":"ParameterList","src":"9833:13:0"},{"children":[{"attributes":{"assignments":[362,364]},"children":[{"attributes":{"constant":false,"name":"err0","scope":386,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":361,"name":"UserDefinedTypeName","src":"9858:5:0"}],"id":362,"name":"VariableDeclaration","src":"9858:10:0"},{"attributes":{"constant":false,"name":"sum","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":363,"name":"ElementaryTypeName","src":"9870:4:0"}],"id":364,"name":"VariableDeclaration","src":"9870:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":365,"name":"Identifier","src":"9882:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":350,"type":"uint256","value":"a"},"id":366,"name":"Identifier","src":"9886:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":352,"type":"uint256","value":"b"},"id":367,"name":"Identifier","src":"9889:1:0"}],"id":368,"name":"FunctionCall","src":"9882:9:0"}],"id":369,"name":"VariableDeclarationStatement","src":"9857:34:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":362,"type":"enum ErrorReporter.Error","value":"err0"},"id":370,"name":"Identifier","src":"9906:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":371,"name":"Identifier","src":"9914:5:0"}],"id":372,"name":"MemberAccess","src":"9914:14:0"}],"id":373,"name":"BinaryOperation","src":"9906:22:0"},{"children":[{"attributes":{"functionReturnParameters":360},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":362,"type":"enum ErrorReporter.Error","value":"err0"},"id":374,"name":"Identifier","src":"9952:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":375,"name":"Literal","src":"9958:1:0"}],"id":376,"name":"TupleExpression","src":"9951:9:0"}],"id":377,"name":"Return","src":"9944:16:0"}],"id":378,"name":"Block","src":"9930:41:0"}],"id":379,"name":"IfStatement","src":"9902:69:0"},{"attributes":{"functionReturnParameters":360},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":314,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"sub"},"id":380,"name":"Identifier","src":"9988:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"uint256","value":"sum"},"id":381,"name":"Identifier","src":"9992:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":354,"type":"uint256","value":"c"},"id":382,"name":"Identifier","src":"9997:1:0"}],"id":383,"name":"FunctionCall","src":"9988:11:0"}],"id":384,"name":"Return","src":"9981:18:0"}],"id":385,"name":"Block","src":"9847:159:0"}],"id":386,"name":"FunctionDefinition","src":"9767:239:0"}],"id":387,"name":"ContractDefinition","src":"8326:1682:0"},{"attributes":{"contractDependencies":[180,387],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[813,387,180],"name":"Exponential","scope":1189},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ErrorReporter","referencedDeclaration":180,"type":"contract ErrorReporter"},"id":388,"name":"UserDefinedTypeName","src":"10033:13:0"}],"id":389,"name":"InheritanceSpecifier","src":"10033:13:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"CarefulMath","referencedDeclaration":387,"type":"contract CarefulMath"},"id":390,"name":"UserDefinedTypeName","src":"10048:11:0"}],"id":391,"name":"InheritanceSpecifier","src":"10048:11:0"},{"attributes":{"constant":true,"name":"expScale","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":392,"name":"ElementaryTypeName","src":"10327:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1000000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":393,"name":"Literal","src":"10352:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":394,"name":"Literal","src":"10356:2:0"}],"id":395,"name":"BinaryOperation","src":"10352:6:0"}],"id":396,"name":"VariableDeclaration","src":"10327:31:0"},{"attributes":{"constant":true,"name":"halfExpScale","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":397,"name":"ElementaryTypeName","src":"10393:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":398,"name":"Identifier","src":"10422:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":399,"name":"Literal","src":"10431:1:0"}],"id":400,"name":"BinaryOperation","src":"10422:10:0"}],"id":401,"name":"VariableDeclaration","src":"10393:39:0"},{"attributes":{"canonicalName":"Exponential.Exp","name":"Exp","scope":813,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"mantissa","scope":404,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":402,"name":"ElementaryTypeName","src":"10460:4:0"}],"id":403,"name":"VariableDeclaration","src":"10460:13:0"}],"id":404,"name":"StructDefinition","src":"10439:41:0"},{"attributes":{"constant":true,"name":"mantissaOne","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":405,"name":"ElementaryTypeName","src":"10486:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1000000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":406,"name":"Literal","src":"10514:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":407,"name":"Literal","src":"10518:2:0"}],"id":408,"name":"BinaryOperation","src":"10514:6:0"}],"id":409,"name":"VariableDeclaration","src":"10486:34:0"},{"attributes":{"constant":true,"name":"mantissaOneTenth","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":410,"name":"ElementaryTypeName","src":"10526:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 100000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":411,"name":"Literal","src":"10559:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3137","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 17","value":"17"},"id":412,"name":"Literal","src":"10563:2:0"}],"id":413,"name":"BinaryOperation","src":"10559:6:0"}],"id":414,"name":"VariableDeclaration","src":"10526:39:0"},{"attributes":{"constant":true,"documentation":"@dev Creates an exponential from numerator and denominator values.\n     Note: Returns an error if (`num` * 10e18) > MAX_INT,\n           or if `denom` is zero.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"num","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":415,"name":"ElementaryTypeName","src":"10780:4:0"}],"id":416,"name":"VariableDeclaration","src":"10780:8:0"},{"attributes":{"constant":false,"name":"denom","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":417,"name":"ElementaryTypeName","src":"10790:4:0"}],"id":418,"name":"VariableDeclaration","src":"10790:10:0"}],"id":419,"name":"ParameterList","src":"10779:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":475,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":420,"name":"UserDefinedTypeName","src":"10825:5:0"}],"id":421,"name":"VariableDeclaration","src":"10825:5:0"},{"attributes":{"constant":false,"name":"","scope":475,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":422,"name":"UserDefinedTypeName","src":"10832:3:0"}],"id":423,"name":"VariableDeclaration","src":"10832:3:0"}],"id":424,"name":"ParameterList","src":"10824:19:0"},{"children":[{"attributes":{"assignments":[426,428]},"children":[{"attributes":{"constant":false,"name":"err0","scope":475,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":425,"name":"UserDefinedTypeName","src":"10855:5:0"}],"id":426,"name":"VariableDeclaration","src":"10855:10:0"},{"attributes":{"constant":false,"name":"scaledNumerator","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":427,"name":"ElementaryTypeName","src":"10867:4:0"}],"id":428,"name":"VariableDeclaration","src":"10867:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":429,"name":"Identifier","src":"10891:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":416,"type":"uint256","value":"num"},"id":430,"name":"Identifier","src":"10895:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":431,"name":"Identifier","src":"10900:8:0"}],"id":432,"name":"FunctionCall","src":"10891:18:0"}],"id":433,"name":"VariableDeclarationStatement","src":"10854:55:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":426,"type":"enum ErrorReporter.Error","value":"err0"},"id":434,"name":"Identifier","src":"10923:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":435,"name":"Identifier","src":"10931:5:0"}],"id":436,"name":"MemberAccess","src":"10931:14:0"}],"id":437,"name":"BinaryOperation","src":"10923:22:0"},{"children":[{"attributes":{"functionReturnParameters":424},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":426,"type":"enum ErrorReporter.Error","value":"err0"},"id":438,"name":"Identifier","src":"10969:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":439,"name":"Identifier","src":"10975:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":440,"name":"Literal","src":"10990:1:0"}],"id":441,"name":"FunctionCall","src":"10975:18:0"}],"id":442,"name":"TupleExpression","src":"10968:26:0"}],"id":443,"name":"Return","src":"10961:33:0"}],"id":444,"name":"Block","src":"10947:58:0"}],"id":445,"name":"IfStatement","src":"10919:86:0"},{"attributes":{"assignments":[447,449]},"children":[{"attributes":{"constant":false,"name":"err1","scope":475,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":446,"name":"UserDefinedTypeName","src":"11016:5:0"}],"id":447,"name":"VariableDeclaration","src":"11016:10:0"},{"attributes":{"constant":false,"name":"rational","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":448,"name":"ElementaryTypeName","src":"11028:4:0"}],"id":449,"name":"VariableDeclaration","src":"11028:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":450,"name":"Identifier","src":"11045:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":428,"type":"uint256","value":"scaledNumerator"},"id":451,"name":"Identifier","src":"11049:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":418,"type":"uint256","value":"denom"},"id":452,"name":"Identifier","src":"11066:5:0"}],"id":453,"name":"FunctionCall","src":"11045:27:0"}],"id":454,"name":"VariableDeclarationStatement","src":"11015:57:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":447,"type":"enum ErrorReporter.Error","value":"err1"},"id":455,"name":"Identifier","src":"11086:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":456,"name":"Identifier","src":"11094:5:0"}],"id":457,"name":"MemberAccess","src":"11094:14:0"}],"id":458,"name":"BinaryOperation","src":"11086:22:0"},{"children":[{"attributes":{"functionReturnParameters":424},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":447,"type":"enum ErrorReporter.Error","value":"err1"},"id":459,"name":"Identifier","src":"11132:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":460,"name":"Identifier","src":"11138:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":461,"name":"Literal","src":"11153:1:0"}],"id":462,"name":"FunctionCall","src":"11138:18:0"}],"id":463,"name":"TupleExpression","src":"11131:26:0"}],"id":464,"name":"Return","src":"11124:33:0"}],"id":465,"name":"Block","src":"11110:58:0"}],"id":466,"name":"IfStatement","src":"11082:86:0"},{"attributes":{"functionReturnParameters":424},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":467,"name":"Identifier","src":"11186:5:0"}],"id":468,"name":"MemberAccess","src":"11186:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":469,"name":"Identifier","src":"11202:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":449,"type":"uint256","value":"rational"},"id":470,"name":"Identifier","src":"11217:8:0"}],"id":471,"name":"FunctionCall","src":"11202:25:0"}],"id":472,"name":"TupleExpression","src":"11185:43:0"}],"id":473,"name":"Return","src":"11178:50:0"}],"id":474,"name":"Block","src":"10844:391:0"}],"id":475,"name":"FunctionDefinition","src":"10764:471:0"},{"attributes":{"constant":true,"documentation":"@dev Adds two exponentials, returning a new exponential.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"addExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":504,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":476,"name":"UserDefinedTypeName","src":"11335:3:0"}],"id":477,"name":"VariableDeclaration","src":"11335:12:0"},{"attributes":{"constant":false,"name":"b","scope":504,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":478,"name":"UserDefinedTypeName","src":"11349:3:0"}],"id":479,"name":"VariableDeclaration","src":"11349:12:0"}],"id":480,"name":"ParameterList","src":"11334:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":504,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":481,"name":"UserDefinedTypeName","src":"11386:5:0"}],"id":482,"name":"VariableDeclaration","src":"11386:5:0"},{"attributes":{"constant":false,"name":"","scope":504,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":483,"name":"UserDefinedTypeName","src":"11393:3:0"}],"id":484,"name":"VariableDeclaration","src":"11393:3:0"}],"id":485,"name":"ParameterList","src":"11385:19:0"},{"children":[{"attributes":{"assignments":[487,489]},"children":[{"attributes":{"constant":false,"name":"error","scope":504,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":486,"name":"UserDefinedTypeName","src":"11416:5:0"}],"id":487,"name":"VariableDeclaration","src":"11416:11:0"},{"attributes":{"constant":false,"name":"result","scope":504,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":488,"name":"ElementaryTypeName","src":"11429:4:0"}],"id":489,"name":"VariableDeclaration","src":"11429:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":490,"name":"Identifier","src":"11444:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":477,"type":"struct Exponential.Exp memory","value":"a"},"id":491,"name":"Identifier","src":"11448:1:0"}],"id":492,"name":"MemberAccess","src":"11448:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":479,"type":"struct Exponential.Exp memory","value":"b"},"id":493,"name":"Identifier","src":"11460:1:0"}],"id":494,"name":"MemberAccess","src":"11460:10:0"}],"id":495,"name":"FunctionCall","src":"11444:27:0"}],"id":496,"name":"VariableDeclarationStatement","src":"11415:56:0"},{"attributes":{"functionReturnParameters":485},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":487,"type":"enum ErrorReporter.Error","value":"error"},"id":497,"name":"Identifier","src":"11490:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":498,"name":"Identifier","src":"11497:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":489,"type":"uint256","value":"result"},"id":499,"name":"Identifier","src":"11512:6:0"}],"id":500,"name":"FunctionCall","src":"11497:23:0"}],"id":501,"name":"TupleExpression","src":"11489:32:0"}],"id":502,"name":"Return","src":"11482:39:0"}],"id":503,"name":"Block","src":"11405:123:0"}],"id":504,"name":"FunctionDefinition","src":"11319:209:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two exponentials, returning a new exponential.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"subExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":533,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":505,"name":"UserDefinedTypeName","src":"11633:3:0"}],"id":506,"name":"VariableDeclaration","src":"11633:12:0"},{"attributes":{"constant":false,"name":"b","scope":533,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":507,"name":"UserDefinedTypeName","src":"11647:3:0"}],"id":508,"name":"VariableDeclaration","src":"11647:12:0"}],"id":509,"name":"ParameterList","src":"11632:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":533,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":510,"name":"UserDefinedTypeName","src":"11684:5:0"}],"id":511,"name":"VariableDeclaration","src":"11684:5:0"},{"attributes":{"constant":false,"name":"","scope":533,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":512,"name":"UserDefinedTypeName","src":"11691:3:0"}],"id":513,"name":"VariableDeclaration","src":"11691:3:0"}],"id":514,"name":"ParameterList","src":"11683:19:0"},{"children":[{"attributes":{"assignments":[516,518]},"children":[{"attributes":{"constant":false,"name":"error","scope":533,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":515,"name":"UserDefinedTypeName","src":"11714:5:0"}],"id":516,"name":"VariableDeclaration","src":"11714:11:0"},{"attributes":{"constant":false,"name":"result","scope":533,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":517,"name":"ElementaryTypeName","src":"11727:4:0"}],"id":518,"name":"VariableDeclaration","src":"11727:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":314,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"sub"},"id":519,"name":"Identifier","src":"11742:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":506,"type":"struct Exponential.Exp memory","value":"a"},"id":520,"name":"Identifier","src":"11746:1:0"}],"id":521,"name":"MemberAccess","src":"11746:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":508,"type":"struct Exponential.Exp memory","value":"b"},"id":522,"name":"Identifier","src":"11758:1:0"}],"id":523,"name":"MemberAccess","src":"11758:10:0"}],"id":524,"name":"FunctionCall","src":"11742:27:0"}],"id":525,"name":"VariableDeclarationStatement","src":"11713:56:0"},{"attributes":{"functionReturnParameters":514},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":516,"type":"enum ErrorReporter.Error","value":"error"},"id":526,"name":"Identifier","src":"11788:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":527,"name":"Identifier","src":"11795:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":518,"type":"uint256","value":"result"},"id":528,"name":"Identifier","src":"11810:6:0"}],"id":529,"name":"FunctionCall","src":"11795:23:0"}],"id":530,"name":"TupleExpression","src":"11787:32:0"}],"id":531,"name":"Return","src":"11780:39:0"}],"id":532,"name":"Block","src":"11703:123:0"}],"id":533,"name":"FunctionDefinition","src":"11617:209:0"},{"attributes":{"constant":true,"documentation":"@dev Multiply an Exp by a scalar, returning a new Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mulScalar","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":574,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":534,"name":"UserDefinedTypeName","src":"11927:3:0"}],"id":535,"name":"VariableDeclaration","src":"11927:12:0"},{"attributes":{"constant":false,"name":"scalar","scope":574,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":536,"name":"ElementaryTypeName","src":"11941:4:0"}],"id":537,"name":"VariableDeclaration","src":"11941:11:0"}],"id":538,"name":"ParameterList","src":"11926:27:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":574,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":539,"name":"UserDefinedTypeName","src":"11977:5:0"}],"id":540,"name":"VariableDeclaration","src":"11977:5:0"},{"attributes":{"constant":false,"name":"","scope":574,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":541,"name":"UserDefinedTypeName","src":"11984:3:0"}],"id":542,"name":"VariableDeclaration","src":"11984:3:0"}],"id":543,"name":"ParameterList","src":"11976:19:0"},{"children":[{"attributes":{"assignments":[545,547]},"children":[{"attributes":{"constant":false,"name":"err0","scope":574,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":544,"name":"UserDefinedTypeName","src":"12007:5:0"}],"id":545,"name":"VariableDeclaration","src":"12007:10:0"},{"attributes":{"constant":false,"name":"scaledMantissa","scope":574,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":546,"name":"ElementaryTypeName","src":"12019:4:0"}],"id":547,"name":"VariableDeclaration","src":"12019:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":548,"name":"Identifier","src":"12042:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":535,"type":"struct Exponential.Exp memory","value":"a"},"id":549,"name":"Identifier","src":"12046:1:0"}],"id":550,"name":"MemberAccess","src":"12046:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":537,"type":"uint256","value":"scalar"},"id":551,"name":"Identifier","src":"12058:6:0"}],"id":552,"name":"FunctionCall","src":"12042:23:0"}],"id":553,"name":"VariableDeclarationStatement","src":"12006:59:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":545,"type":"enum ErrorReporter.Error","value":"err0"},"id":554,"name":"Identifier","src":"12079:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":555,"name":"Identifier","src":"12087:5:0"}],"id":556,"name":"MemberAccess","src":"12087:14:0"}],"id":557,"name":"BinaryOperation","src":"12079:22:0"},{"children":[{"attributes":{"functionReturnParameters":543},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":545,"type":"enum ErrorReporter.Error","value":"err0"},"id":558,"name":"Identifier","src":"12125:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":559,"name":"Identifier","src":"12131:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":560,"name":"Literal","src":"12146:1:0"}],"id":561,"name":"FunctionCall","src":"12131:18:0"}],"id":562,"name":"TupleExpression","src":"12124:26:0"}],"id":563,"name":"Return","src":"12117:33:0"}],"id":564,"name":"Block","src":"12103:58:0"}],"id":565,"name":"IfStatement","src":"12075:86:0"},{"attributes":{"functionReturnParameters":543},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":566,"name":"Identifier","src":"12179:5:0"}],"id":567,"name":"MemberAccess","src":"12179:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":568,"name":"Identifier","src":"12195:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":547,"type":"uint256","value":"scaledMantissa"},"id":569,"name":"Identifier","src":"12210:14:0"}],"id":570,"name":"FunctionCall","src":"12195:31:0"}],"id":571,"name":"TupleExpression","src":"12178:49:0"}],"id":572,"name":"Return","src":"12171:56:0"}],"id":573,"name":"Block","src":"11996:238:0"}],"id":574,"name":"FunctionDefinition","src":"11908:326:0"},{"attributes":{"constant":true,"documentation":"@dev Divide an Exp by a scalar, returning a new Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"divScalar","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":615,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":575,"name":"UserDefinedTypeName","src":"12333:3:0"}],"id":576,"name":"VariableDeclaration","src":"12333:12:0"},{"attributes":{"constant":false,"name":"scalar","scope":615,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":577,"name":"ElementaryTypeName","src":"12347:4:0"}],"id":578,"name":"VariableDeclaration","src":"12347:11:0"}],"id":579,"name":"ParameterList","src":"12332:27:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":615,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":580,"name":"UserDefinedTypeName","src":"12383:5:0"}],"id":581,"name":"VariableDeclaration","src":"12383:5:0"},{"attributes":{"constant":false,"name":"","scope":615,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":582,"name":"UserDefinedTypeName","src":"12390:3:0"}],"id":583,"name":"VariableDeclaration","src":"12390:3:0"}],"id":584,"name":"ParameterList","src":"12382:19:0"},{"children":[{"attributes":{"assignments":[586,588]},"children":[{"attributes":{"constant":false,"name":"err0","scope":615,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":585,"name":"UserDefinedTypeName","src":"12413:5:0"}],"id":586,"name":"VariableDeclaration","src":"12413:10:0"},{"attributes":{"constant":false,"name":"descaledMantissa","scope":615,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":587,"name":"ElementaryTypeName","src":"12425:4:0"}],"id":588,"name":"VariableDeclaration","src":"12425:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":589,"name":"Identifier","src":"12450:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":576,"type":"struct Exponential.Exp memory","value":"a"},"id":590,"name":"Identifier","src":"12454:1:0"}],"id":591,"name":"MemberAccess","src":"12454:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256","value":"scalar"},"id":592,"name":"Identifier","src":"12466:6:0"}],"id":593,"name":"FunctionCall","src":"12450:23:0"}],"id":594,"name":"VariableDeclarationStatement","src":"12412:61:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"enum ErrorReporter.Error","value":"err0"},"id":595,"name":"Identifier","src":"12487:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":596,"name":"Identifier","src":"12495:5:0"}],"id":597,"name":"MemberAccess","src":"12495:14:0"}],"id":598,"name":"BinaryOperation","src":"12487:22:0"},{"children":[{"attributes":{"functionReturnParameters":584},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"enum ErrorReporter.Error","value":"err0"},"id":599,"name":"Identifier","src":"12533:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":600,"name":"Identifier","src":"12539:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":601,"name":"Literal","src":"12554:1:0"}],"id":602,"name":"FunctionCall","src":"12539:18:0"}],"id":603,"name":"TupleExpression","src":"12532:26:0"}],"id":604,"name":"Return","src":"12525:33:0"}],"id":605,"name":"Block","src":"12511:58:0"}],"id":606,"name":"IfStatement","src":"12483:86:0"},{"attributes":{"functionReturnParameters":584},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":607,"name":"Identifier","src":"12587:5:0"}],"id":608,"name":"MemberAccess","src":"12587:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":609,"name":"Identifier","src":"12603:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":588,"type":"uint256","value":"descaledMantissa"},"id":610,"name":"Identifier","src":"12618:16:0"}],"id":611,"name":"FunctionCall","src":"12603:33:0"}],"id":612,"name":"TupleExpression","src":"12586:51:0"}],"id":613,"name":"Return","src":"12579:58:0"}],"id":614,"name":"Block","src":"12402:242:0"}],"id":615,"name":"FunctionDefinition","src":"12314:330:0"},{"attributes":{"constant":true,"documentation":"@dev Divide a scalar by an Exp, returning a new Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"divScalarByExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"scalar","scope":654,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":616,"name":"ElementaryTypeName","src":"12748:4:0"}],"id":617,"name":"VariableDeclaration","src":"12748:11:0"},{"attributes":{"constant":false,"name":"divisor","scope":654,"stateVariable":false,"storageLocation":"default","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":618,"name":"UserDefinedTypeName","src":"12761:3:0"}],"id":619,"name":"VariableDeclaration","src":"12761:11:0"}],"id":620,"name":"ParameterList","src":"12747:26:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":654,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":621,"name":"UserDefinedTypeName","src":"12797:5:0"}],"id":622,"name":"VariableDeclaration","src":"12797:5:0"},{"attributes":{"constant":false,"name":"","scope":654,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":623,"name":"UserDefinedTypeName","src":"12804:3:0"}],"id":624,"name":"VariableDeclaration","src":"12804:3:0"}],"id":625,"name":"ParameterList","src":"12796:19:0"},{"children":[{"attributes":{"assignments":[627,629]},"children":[{"attributes":{"constant":false,"name":"err0","scope":654,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":626,"name":"UserDefinedTypeName","src":"13109:5:0"}],"id":627,"name":"VariableDeclaration","src":"13109:10:0"},{"attributes":{"constant":false,"name":"numerator","scope":654,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":628,"name":"ElementaryTypeName","src":"13121:4:0"}],"id":629,"name":"VariableDeclaration","src":"13121:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":630,"name":"Identifier","src":"13139:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":631,"name":"Identifier","src":"13143:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":617,"type":"uint256","value":"scalar"},"id":632,"name":"Identifier","src":"13153:6:0"}],"id":633,"name":"FunctionCall","src":"13139:21:0"}],"id":634,"name":"VariableDeclarationStatement","src":"13108:52:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":627,"type":"enum ErrorReporter.Error","value":"err0"},"id":635,"name":"Identifier","src":"13174:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":636,"name":"Identifier","src":"13182:5:0"}],"id":637,"name":"MemberAccess","src":"13182:14:0"}],"id":638,"name":"BinaryOperation","src":"13174:22:0"},{"children":[{"attributes":{"functionReturnParameters":625},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":627,"type":"enum ErrorReporter.Error","value":"err0"},"id":639,"name":"Identifier","src":"13220:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":640,"name":"Identifier","src":"13226:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":641,"name":"Literal","src":"13241:1:0"}],"id":642,"name":"FunctionCall","src":"13226:18:0"}],"id":643,"name":"TupleExpression","src":"13219:26:0"}],"id":644,"name":"Return","src":"13212:33:0"}],"id":645,"name":"Block","src":"13198:58:0"}],"id":646,"name":"IfStatement","src":"13170:86:0"},{"attributes":{"functionReturnParameters":625},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"getExp"},"id":647,"name":"Identifier","src":"13272:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":629,"type":"uint256","value":"numerator"},"id":648,"name":"Identifier","src":"13279:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":619,"type":"struct Exponential.Exp memory","value":"divisor"},"id":649,"name":"Identifier","src":"13290:7:0"}],"id":650,"name":"MemberAccess","src":"13290:16:0"}],"id":651,"name":"FunctionCall","src":"13272:35:0"}],"id":652,"name":"Return","src":"13265:42:0"}],"id":653,"name":"Block","src":"12816:498:0"}],"id":654,"name":"FunctionDefinition","src":"12724:590:0"},{"attributes":{"constant":true,"documentation":"@dev Multiplies two exponentials, returning a new exponential.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mulExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":733,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":655,"name":"UserDefinedTypeName","src":"13420:3:0"}],"id":656,"name":"VariableDeclaration","src":"13420:12:0"},{"attributes":{"constant":false,"name":"b","scope":733,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":657,"name":"UserDefinedTypeName","src":"13434:3:0"}],"id":658,"name":"VariableDeclaration","src":"13434:12:0"}],"id":659,"name":"ParameterList","src":"13419:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":660,"name":"UserDefinedTypeName","src":"13471:5:0"}],"id":661,"name":"VariableDeclaration","src":"13471:5:0"},{"attributes":{"constant":false,"name":"","scope":733,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":662,"name":"UserDefinedTypeName","src":"13478:3:0"}],"id":663,"name":"VariableDeclaration","src":"13478:3:0"}],"id":664,"name":"ParameterList","src":"13470:19:0"},{"children":[{"attributes":{"assignments":[666,668]},"children":[{"attributes":{"constant":false,"name":"err0","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":665,"name":"UserDefinedTypeName","src":"13502:5:0"}],"id":666,"name":"VariableDeclaration","src":"13502:10:0"},{"attributes":{"constant":false,"name":"doubleScaledProduct","scope":733,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":667,"name":"ElementaryTypeName","src":"13514:4:0"}],"id":668,"name":"VariableDeclaration","src":"13514:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":669,"name":"Identifier","src":"13542:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":656,"type":"struct Exponential.Exp memory","value":"a"},"id":670,"name":"Identifier","src":"13546:1:0"}],"id":671,"name":"MemberAccess","src":"13546:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":658,"type":"struct Exponential.Exp memory","value":"b"},"id":672,"name":"Identifier","src":"13558:1:0"}],"id":673,"name":"MemberAccess","src":"13558:10:0"}],"id":674,"name":"FunctionCall","src":"13542:27:0"}],"id":675,"name":"VariableDeclarationStatement","src":"13501:68:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":666,"type":"enum ErrorReporter.Error","value":"err0"},"id":676,"name":"Identifier","src":"13583:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":677,"name":"Identifier","src":"13591:5:0"}],"id":678,"name":"MemberAccess","src":"13591:14:0"}],"id":679,"name":"BinaryOperation","src":"13583:22:0"},{"children":[{"attributes":{"functionReturnParameters":664},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":666,"type":"enum ErrorReporter.Error","value":"err0"},"id":680,"name":"Identifier","src":"13629:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":681,"name":"Identifier","src":"13635:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":682,"name":"Literal","src":"13650:1:0"}],"id":683,"name":"FunctionCall","src":"13635:18:0"}],"id":684,"name":"TupleExpression","src":"13628:26:0"}],"id":685,"name":"Return","src":"13621:33:0"}],"id":686,"name":"Block","src":"13607:58:0"}],"id":687,"name":"IfStatement","src":"13579:86:0"},{"attributes":{"assignments":[689,691]},"children":[{"attributes":{"constant":false,"name":"err1","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":688,"name":"UserDefinedTypeName","src":"13977:5:0"}],"id":689,"name":"VariableDeclaration","src":"13977:10:0"},{"attributes":{"constant":false,"name":"doubleScaledProductWithHalfScale","scope":733,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":690,"name":"ElementaryTypeName","src":"13989:4:0"}],"id":691,"name":"VariableDeclaration","src":"13989:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":692,"name":"Identifier","src":"14030:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":401,"type":"uint256","value":"halfExpScale"},"id":693,"name":"Identifier","src":"14034:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":668,"type":"uint256","value":"doubleScaledProduct"},"id":694,"name":"Identifier","src":"14048:19:0"}],"id":695,"name":"FunctionCall","src":"14030:38:0"}],"id":696,"name":"VariableDeclarationStatement","src":"13976:92:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":689,"type":"enum ErrorReporter.Error","value":"err1"},"id":697,"name":"Identifier","src":"14082:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":698,"name":"Identifier","src":"14090:5:0"}],"id":699,"name":"MemberAccess","src":"14090:14:0"}],"id":700,"name":"BinaryOperation","src":"14082:22:0"},{"children":[{"attributes":{"functionReturnParameters":664},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":689,"type":"enum ErrorReporter.Error","value":"err1"},"id":701,"name":"Identifier","src":"14128:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":702,"name":"Identifier","src":"14134:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":703,"name":"Literal","src":"14149:1:0"}],"id":704,"name":"FunctionCall","src":"14134:18:0"}],"id":705,"name":"TupleExpression","src":"14127:26:0"}],"id":706,"name":"Return","src":"14120:33:0"}],"id":707,"name":"Block","src":"14106:58:0"}],"id":708,"name":"IfStatement","src":"14078:86:0"},{"attributes":{"assignments":[710,712]},"children":[{"attributes":{"constant":false,"name":"err2","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":709,"name":"UserDefinedTypeName","src":"14175:5:0"}],"id":710,"name":"VariableDeclaration","src":"14175:10:0"},{"attributes":{"constant":false,"name":"product","scope":733,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":711,"name":"ElementaryTypeName","src":"14187:4:0"}],"id":712,"name":"VariableDeclaration","src":"14187:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":713,"name":"Identifier","src":"14203:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":691,"type":"uint256","value":"doubleScaledProductWithHalfScale"},"id":714,"name":"Identifier","src":"14207:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":715,"name":"Identifier","src":"14241:8:0"}],"id":716,"name":"FunctionCall","src":"14203:47:0"}],"id":717,"name":"VariableDeclarationStatement","src":"14174:76:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":718,"name":"Identifier","src":"14375:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":710,"type":"enum ErrorReporter.Error","value":"err2"},"id":719,"name":"Identifier","src":"14382:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":720,"name":"Identifier","src":"14390:5:0"}],"id":721,"name":"MemberAccess","src":"14390:14:0"}],"id":722,"name":"BinaryOperation","src":"14382:22:0"}],"id":723,"name":"FunctionCall","src":"14375:30:0"}],"id":724,"name":"ExpressionStatement","src":"14375:30:0"},{"attributes":{"functionReturnParameters":664},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":725,"name":"Identifier","src":"14424:5:0"}],"id":726,"name":"MemberAccess","src":"14424:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":727,"name":"Identifier","src":"14440:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":712,"type":"uint256","value":"product"},"id":728,"name":"Identifier","src":"14455:7:0"}],"id":729,"name":"FunctionCall","src":"14440:24:0"}],"id":730,"name":"TupleExpression","src":"14423:42:0"}],"id":731,"name":"Return","src":"14416:49:0"}],"id":732,"name":"Block","src":"13490:982:0"}],"id":733,"name":"FunctionDefinition","src":"13404:1068:0"},{"attributes":{"constant":true,"documentation":"@dev Divides two exponentials, returning a new exponential.\n    (a/scale) / (b/scale) = (a/scale) * (scale/b) = a/b,\n which we can scale as an Exp by calling getExp(a.mantissa, b.mantissa)","implemented":true,"isConstructor":false,"modifiers":[null],"name":"divExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":752,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":734,"name":"UserDefinedTypeName","src":"14724:3:0"}],"id":735,"name":"VariableDeclaration","src":"14724:12:0"},{"attributes":{"constant":false,"name":"b","scope":752,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":736,"name":"UserDefinedTypeName","src":"14738:3:0"}],"id":737,"name":"VariableDeclaration","src":"14738:12:0"}],"id":738,"name":"ParameterList","src":"14723:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":752,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":739,"name":"UserDefinedTypeName","src":"14775:5:0"}],"id":740,"name":"VariableDeclaration","src":"14775:5:0"},{"attributes":{"constant":false,"name":"","scope":752,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":741,"name":"UserDefinedTypeName","src":"14782:3:0"}],"id":742,"name":"VariableDeclaration","src":"14782:3:0"}],"id":743,"name":"ParameterList","src":"14774:19:0"},{"children":[{"attributes":{"functionReturnParameters":743},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"getExp"},"id":744,"name":"Identifier","src":"14811:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"struct Exponential.Exp memory","value":"a"},"id":745,"name":"Identifier","src":"14818:1:0"}],"id":746,"name":"MemberAccess","src":"14818:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"struct Exponential.Exp memory","value":"b"},"id":747,"name":"Identifier","src":"14830:1:0"}],"id":748,"name":"MemberAccess","src":"14830:10:0"}],"id":749,"name":"FunctionCall","src":"14811:30:0"}],"id":750,"name":"Return","src":"14804:37:0"}],"id":751,"name":"Block","src":"14794:54:0"}],"id":752,"name":"FunctionDefinition","src":"14708:140:0"},{"attributes":{"constant":true,"documentation":"@dev Truncates the given exp to a whole number value.\n     For example, truncate(Exp{mantissa: 15 * (10**18)}) = 15","implemented":true,"isConstructor":false,"modifiers":[null],"name":"truncate","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"exp","scope":767,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":753,"name":"UserDefinedTypeName","src":"15021:3:0"}],"id":754,"name":"VariableDeclaration","src":"15021:14:0"}],"id":755,"name":"ParameterList","src":"15020:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":767,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":756,"name":"ElementaryTypeName","src":"15060:4:0"}],"id":757,"name":"VariableDeclaration","src":"15060:4:0"}],"id":758,"name":"ParameterList","src":"15059:6:0"},{"children":[{"attributes":{"functionReturnParameters":758},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":754,"type":"struct Exponential.Exp memory","value":"exp"},"id":759,"name":"Identifier","src":"15183:3:0"}],"id":760,"name":"MemberAccess","src":"15183:12:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1000000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":761,"name":"Literal","src":"15198:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":762,"name":"Literal","src":"15202:2:0"}],"id":763,"name":"BinaryOperation","src":"15198:6:0"}],"id":764,"name":"BinaryOperation","src":"15183:21:0"}],"id":765,"name":"Return","src":"15176:28:0"}],"id":766,"name":"Block","src":"15066:145:0"}],"id":767,"name":"FunctionDefinition","src":"15003:208:0"},{"attributes":{"constant":true,"documentation":"@dev Checks if first Exp is less than second Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"lessThanExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"left","scope":783,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":768,"name":"UserDefinedTypeName","src":"15313:3:0"}],"id":769,"name":"VariableDeclaration","src":"15313:15:0"},{"attributes":{"constant":false,"name":"right","scope":783,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":770,"name":"UserDefinedTypeName","src":"15330:3:0"}],"id":771,"name":"VariableDeclaration","src":"15330:16:0"}],"id":772,"name":"ParameterList","src":"15312:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":783,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":773,"name":"ElementaryTypeName","src":"15371:4:0"}],"id":774,"name":"VariableDeclaration","src":"15371:4:0"}],"id":775,"name":"ParameterList","src":"15370:6:0"},{"children":[{"attributes":{"functionReturnParameters":775},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":769,"type":"struct Exponential.Exp memory","value":"left"},"id":776,"name":"Identifier","src":"15394:4:0"}],"id":777,"name":"MemberAccess","src":"15394:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":771,"type":"struct Exponential.Exp memory","value":"right"},"id":778,"name":"Identifier","src":"15410:5:0"}],"id":779,"name":"MemberAccess","src":"15410:14:0"}],"id":780,"name":"BinaryOperation","src":"15394:30:0"}],"id":781,"name":"Return","src":"15387:37:0"}],"id":782,"name":"Block","src":"15377:111:0"}],"id":783,"name":"FunctionDefinition","src":"15292:196:0"},{"attributes":{"constant":true,"documentation":"@dev Checks if left Exp <= right Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"lessThanOrEqualExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"left","scope":799,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":784,"name":"UserDefinedTypeName","src":"15585:3:0"}],"id":785,"name":"VariableDeclaration","src":"15585:15:0"},{"attributes":{"constant":false,"name":"right","scope":799,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":786,"name":"UserDefinedTypeName","src":"15602:3:0"}],"id":787,"name":"VariableDeclaration","src":"15602:16:0"}],"id":788,"name":"ParameterList","src":"15584:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":799,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":789,"name":"ElementaryTypeName","src":"15643:4:0"}],"id":790,"name":"VariableDeclaration","src":"15643:4:0"}],"id":791,"name":"ParameterList","src":"15642:6:0"},{"children":[{"attributes":{"functionReturnParameters":791},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":785,"type":"struct Exponential.Exp memory","value":"left"},"id":792,"name":"Identifier","src":"15666:4:0"}],"id":793,"name":"MemberAccess","src":"15666:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":787,"type":"struct Exponential.Exp memory","value":"right"},"id":794,"name":"Identifier","src":"15683:5:0"}],"id":795,"name":"MemberAccess","src":"15683:14:0"}],"id":796,"name":"BinaryOperation","src":"15666:31:0"}],"id":797,"name":"Return","src":"15659:38:0"}],"id":798,"name":"Block","src":"15649:55:0"}],"id":799,"name":"FunctionDefinition","src":"15557:147:0"},{"attributes":{"constant":true,"documentation":"@dev returns true if Exp is exactly zero","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isZeroExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"value","scope":812,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":800,"name":"UserDefinedTypeName","src":"15795:3:0"}],"id":801,"name":"VariableDeclaration","src":"15795:16:0"}],"id":802,"name":"ParameterList","src":"15794:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":812,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":803,"name":"ElementaryTypeName","src":"15836:4:0"}],"id":804,"name":"VariableDeclaration","src":"15836:4:0"}],"id":805,"name":"ParameterList","src":"15835:6:0"},{"children":[{"attributes":{"functionReturnParameters":805},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":801,"type":"struct Exponential.Exp memory","value":"value"},"id":806,"name":"Identifier","src":"15859:5:0"}],"id":807,"name":"MemberAccess","src":"15859:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":808,"name":"Literal","src":"15877:1:0"}],"id":809,"name":"BinaryOperation","src":"15859:19:0"}],"id":810,"name":"Return","src":"15852:26:0"}],"id":811,"name":"Block","src":"15842:43:0"}],"id":812,"name":"FunctionDefinition","src":"15776:109:0"}],"id":813,"name":"ContractDefinition","src":"10009:5878:0"},{"attributes":{"contractDependencies":[180,387,813],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[1188,813,387,180],"name":"StableCoinInterestRateModel","scope":1189},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Exponential","referencedDeclaration":813,"type":"contract Exponential"},"id":814,"name":"UserDefinedTypeName","src":"15928:11:0"}],"id":815,"name":"InheritanceSpecifier","src":"15928:11:0"},{"attributes":{"constant":true,"name":"oneMinusSpreadBasisPoints","scope":1188,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":816,"name":"ElementaryTypeName","src":"15947:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38353030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8500","value":"8500"},"id":817,"name":"Literal","src":"15989:4:0"}],"id":818,"name":"VariableDeclaration","src":"15947:46:0"},{"attributes":{"constant":true,"name":"blocksPerYear","scope":1188,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":819,"name":"ElementaryTypeName","src":"15999:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32313032343030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2102400","value":"2102400"},"id":820,"name":"Literal","src":"16029:7:0"}],"id":821,"name":"VariableDeclaration","src":"15999:37:0"},{"attributes":{"canonicalName":"StableCoinInterestRateModel.IRError","name":"IRError"},"children":[{"attributes":{"name":"NO_ERROR"},"id":822,"name":"EnumValue","src":"16066:8:0"},{"attributes":{"name":"FAILED_TO_ADD_CASH_PLUS_BORROWS"},"id":823,"name":"EnumValue","src":"16084:31:0"},{"attributes":{"name":"FAILED_TO_GET_EXP"},"id":824,"name":"EnumValue","src":"16125:17:0"},{"attributes":{"name":"FAILED_TO_MUL_PRODUCT_TIMES_BORROW_RATE"},"id":825,"name":"EnumValue","src":"16152:39:0"}],"id":826,"name":"EnumDefinition","src":"16043:154:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUtilizationRate","payable":false,"scope":1188,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"cash","scope":899,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":827,"name":"ElementaryTypeName","src":"16329:4:0"}],"id":828,"name":"VariableDeclaration","src":"16329:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":899,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":829,"name":"ElementaryTypeName","src":"16340:4:0"}],"id":830,"name":"VariableDeclaration","src":"16340:12:0"}],"id":831,"name":"ParameterList","src":"16328:25:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":899,"stateVariable":false,"storageLocation":"default","type":"enum StableCoinInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":826,"type":"enum StableCoinInterestRateModel.IRError"},"id":832,"name":"UserDefinedTypeName","src":"16377:7:0"}],"id":833,"name":"VariableDeclaration","src":"16377:7:0"},{"attributes":{"constant":false,"name":"","scope":899,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":834,"name":"UserDefinedTypeName","src":"16386:3:0"}],"id":835,"name":"VariableDeclaration","src":"16386:3:0"}],"id":836,"name":"ParameterList","src":"16376:21:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":830,"type":"uint256","value":"borrows"},"id":837,"name":"Identifier","src":"16412:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":838,"name":"Literal","src":"16423:1:0"}],"id":839,"name":"BinaryOperation","src":"16412:12:0"},{"children":[{"attributes":{"functionReturnParameters":836},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":840,"name":"Identifier","src":"16512:7:0"}],"id":841,"name":"MemberAccess","src":"16512:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":842,"name":"Identifier","src":"16530:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":843,"name":"Literal","src":"16545:1:0"}],"id":844,"name":"FunctionCall","src":"16530:18:0"}],"id":845,"name":"TupleExpression","src":"16511:38:0"}],"id":846,"name":"Return","src":"16504:45:0"}],"id":847,"name":"Block","src":"16426:134:0"}],"id":848,"name":"IfStatement","src":"16408:152:0"},{"attributes":{"assignments":[850,852]},"children":[{"attributes":{"constant":false,"name":"err0","scope":899,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":849,"name":"UserDefinedTypeName","src":"16571:5:0"}],"id":850,"name":"VariableDeclaration","src":"16571:10:0"},{"attributes":{"constant":false,"name":"cashPlusBorrows","scope":899,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":851,"name":"ElementaryTypeName","src":"16583:4:0"}],"id":852,"name":"VariableDeclaration","src":"16583:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":853,"name":"Identifier","src":"16607:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":828,"type":"uint256","value":"cash"},"id":854,"name":"Identifier","src":"16611:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":830,"type":"uint256","value":"borrows"},"id":855,"name":"Identifier","src":"16617:7:0"}],"id":856,"name":"FunctionCall","src":"16607:18:0"}],"id":857,"name":"VariableDeclarationStatement","src":"16570:55:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":850,"type":"enum ErrorReporter.Error","value":"err0"},"id":858,"name":"Identifier","src":"16639:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":859,"name":"Identifier","src":"16647:5:0"}],"id":860,"name":"MemberAccess","src":"16647:14:0"}],"id":861,"name":"BinaryOperation","src":"16639:22:0"},{"children":[{"attributes":{"functionReturnParameters":836},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"FAILED_TO_ADD_CASH_PLUS_BORROWS","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":862,"name":"Identifier","src":"16685:7:0"}],"id":863,"name":"MemberAccess","src":"16685:39:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":864,"name":"Identifier","src":"16726:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":865,"name":"Literal","src":"16741:1:0"}],"id":866,"name":"FunctionCall","src":"16726:18:0"}],"id":867,"name":"TupleExpression","src":"16684:61:0"}],"id":868,"name":"Return","src":"16677:68:0"}],"id":869,"name":"Block","src":"16663:93:0"}],"id":870,"name":"IfStatement","src":"16635:121:0"},{"attributes":{"assignments":[872,874]},"children":[{"attributes":{"constant":false,"name":"err1","scope":899,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":871,"name":"UserDefinedTypeName","src":"16767:5:0"}],"id":872,"name":"VariableDeclaration","src":"16767:10:0"},{"attributes":{"constant":false,"name":"utilizationRate","scope":899,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":873,"name":"UserDefinedTypeName","src":"16779:3:0"}],"id":874,"name":"VariableDeclaration","src":"16779:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"getExp"},"id":875,"name":"Identifier","src":"16809:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":830,"type":"uint256","value":"borrows"},"id":876,"name":"Identifier","src":"16816:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":852,"type":"uint256","value":"cashPlusBorrows"},"id":877,"name":"Identifier","src":"16825:15:0"}],"id":878,"name":"FunctionCall","src":"16809:32:0"}],"id":879,"name":"VariableDeclarationStatement","src":"16766:75:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":872,"type":"enum ErrorReporter.Error","value":"err1"},"id":880,"name":"Identifier","src":"16855:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":881,"name":"Identifier","src":"16863:5:0"}],"id":882,"name":"MemberAccess","src":"16863:14:0"}],"id":883,"name":"BinaryOperation","src":"16855:22:0"},{"children":[{"attributes":{"functionReturnParameters":836},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"FAILED_TO_GET_EXP","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":884,"name":"Identifier","src":"16901:7:0"}],"id":885,"name":"MemberAccess","src":"16901:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":886,"name":"Identifier","src":"16928:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":887,"name":"Literal","src":"16943:1:0"}],"id":888,"name":"FunctionCall","src":"16928:18:0"}],"id":889,"name":"TupleExpression","src":"16900:47:0"}],"id":890,"name":"Return","src":"16893:54:0"}],"id":891,"name":"Block","src":"16879:79:0"}],"id":892,"name":"IfStatement","src":"16851:107:0"},{"attributes":{"functionReturnParameters":836},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":893,"name":"Identifier","src":"16976:7:0"}],"id":894,"name":"MemberAccess","src":"16976:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":874,"type":"struct Exponential.Exp memory","value":"utilizationRate"},"id":895,"name":"Identifier","src":"16994:15:0"}],"id":896,"name":"TupleExpression","src":"16975:35:0"}],"id":897,"name":"Return","src":"16968:42:0"}],"id":898,"name":"Block","src":"16398:619:0"}],"id":899,"name":"FunctionDefinition","src":"16301:716:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUtilizationAndAnnualBorrowRate","payable":false,"scope":1188,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"cash","scope":993,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":900,"name":"ElementaryTypeName","src":"17181:4:0"}],"id":901,"name":"VariableDeclaration","src":"17181:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":993,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":902,"name":"ElementaryTypeName","src":"17192:4:0"}],"id":903,"name":"VariableDeclaration","src":"17192:12:0"}],"id":904,"name":"ParameterList","src":"17180:25:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":993,"stateVariable":false,"storageLocation":"default","type":"enum StableCoinInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":826,"type":"enum StableCoinInterestRateModel.IRError"},"id":905,"name":"UserDefinedTypeName","src":"17229:7:0"}],"id":906,"name":"VariableDeclaration","src":"17229:7:0"},{"attributes":{"constant":false,"name":"","scope":993,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":907,"name":"UserDefinedTypeName","src":"17238:3:0"}],"id":908,"name":"VariableDeclaration","src":"17238:3:0"},{"attributes":{"constant":false,"name":"","scope":993,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":909,"name":"UserDefinedTypeName","src":"17250:3:0"}],"id":910,"name":"VariableDeclaration","src":"17250:3:0"}],"id":911,"name":"ParameterList","src":"17228:33:0"},{"children":[{"attributes":{"assignments":[913,915]},"children":[{"attributes":{"constant":false,"name":"err0","scope":993,"stateVariable":false,"storageLocation":"default","type":"enum StableCoinInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":826,"type":"enum StableCoinInterestRateModel.IRError"},"id":912,"name":"UserDefinedTypeName","src":"17273:7:0"}],"id":913,"name":"VariableDeclaration","src":"17273:12:0"},{"attributes":{"constant":false,"name":"utilizationRate","scope":993,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":914,"name":"UserDefinedTypeName","src":"17287:3:0"}],"id":915,"name":"VariableDeclaration","src":"17287:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":899,"type":"function (uint256,uint256) pure returns (enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory)","value":"getUtilizationRate"},"id":916,"name":"Identifier","src":"17317:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":901,"type":"uint256","value":"cash"},"id":917,"name":"Identifier","src":"17336:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":903,"type":"uint256","value":"borrows"},"id":918,"name":"Identifier","src":"17342:7:0"}],"id":919,"name":"FunctionCall","src":"17317:33:0"}],"id":920,"name":"VariableDeclarationStatement","src":"17272:78:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_IRError_$826","typeString":"enum StableCoinInterestRateModel.IRError"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"enum StableCoinInterestRateModel.IRError","value":"err0"},"id":921,"name":"Identifier","src":"17364:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":922,"name":"Identifier","src":"17372:7:0"}],"id":923,"name":"MemberAccess","src":"17372:16:0"}],"id":924,"name":"BinaryOperation","src":"17364:24:0"},{"children":[{"attributes":{"functionReturnParameters":911},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":913,"type":"enum StableCoinInterestRateModel.IRError","value":"err0"},"id":925,"name":"Identifier","src":"17412:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":926,"name":"Identifier","src":"17418:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":927,"name":"Literal","src":"17433:1:0"}],"id":928,"name":"FunctionCall","src":"17418:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":929,"name":"Identifier","src":"17438:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":930,"name":"Literal","src":"17453:1:0"}],"id":931,"name":"FunctionCall","src":"17438:18:0"}],"id":932,"name":"TupleExpression","src":"17411:46:0"}],"id":933,"name":"Return","src":"17404:53:0"}],"id":934,"name":"Block","src":"17390:78:0"}],"id":935,"name":"IfStatement","src":"17360:108:0"},{"attributes":{"assignments":[937,939]},"children":[{"attributes":{"constant":false,"name":"err1","scope":993,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":936,"name":"UserDefinedTypeName","src":"17544:5:0"}],"id":937,"name":"VariableDeclaration","src":"17544:10:0"},{"attributes":{"constant":false,"name":"utilizationRateMuled","scope":993,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":938,"name":"UserDefinedTypeName","src":"17556:3:0"}],"id":939,"name":"VariableDeclaration","src":"17556:31:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"mulScalar"},"id":940,"name":"Identifier","src":"17591:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"struct Exponential.Exp memory","value":"utilizationRate"},"id":941,"name":"Identifier","src":"17601:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":942,"name":"Literal","src":"17618:1:0"}],"id":943,"name":"FunctionCall","src":"17591:29:0"}],"id":944,"name":"VariableDeclarationStatement","src":"17543:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":945,"name":"Identifier","src":"18043:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":937,"type":"enum ErrorReporter.Error","value":"err1"},"id":946,"name":"Identifier","src":"18050:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":947,"name":"Identifier","src":"18058:5:0"}],"id":948,"name":"MemberAccess","src":"18058:14:0"}],"id":949,"name":"BinaryOperation","src":"18050:22:0"}],"id":950,"name":"FunctionCall","src":"18043:30:0"}],"id":951,"name":"ExpressionStatement","src":"18043:30:0"},{"attributes":{"assignments":[953,955]},"children":[{"attributes":{"constant":false,"name":"err2","scope":993,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":952,"name":"UserDefinedTypeName","src":"18085:5:0"}],"id":953,"name":"VariableDeclaration","src":"18085:10:0"},{"attributes":{"constant":false,"name":"utilizationRateScaled","scope":993,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":954,"name":"UserDefinedTypeName","src":"18097:3:0"}],"id":955,"name":"VariableDeclaration","src":"18097:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"overloadedDeclarations":[null],"referencedDeclaration":615,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"divScalar"},"id":956,"name":"Identifier","src":"18133:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":939,"type":"struct Exponential.Exp memory","value":"utilizationRateMuled"},"id":957,"name":"Identifier","src":"18143:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":958,"name":"Literal","src":"18165:2:0"}],"id":959,"name":"FunctionCall","src":"18133:35:0"}],"id":960,"name":"VariableDeclarationStatement","src":"18084:84:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":961,"name":"Identifier","src":"18280:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":953,"type":"enum ErrorReporter.Error","value":"err2"},"id":962,"name":"Identifier","src":"18287:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":963,"name":"Identifier","src":"18295:5:0"}],"id":964,"name":"MemberAccess","src":"18295:14:0"}],"id":965,"name":"BinaryOperation","src":"18287:22:0"}],"id":966,"name":"FunctionCall","src":"18280:30:0"}],"id":967,"name":"ExpressionStatement","src":"18280:30:0"},{"attributes":{"assignments":[969,971]},"children":[{"attributes":{"constant":false,"name":"err3","scope":993,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":968,"name":"UserDefinedTypeName","src":"18366:5:0"}],"id":969,"name":"VariableDeclaration","src":"18366:10:0"},{"attributes":{"constant":false,"name":"annualBorrowRate","scope":993,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":970,"name":"UserDefinedTypeName","src":"18378:3:0"}],"id":971,"name":"VariableDeclaration","src":"18378:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_struct$_Exp_$404_memory","typeString":"struct Exponential.Exp memory"}],"overloadedDeclarations":[null],"referencedDeclaration":504,"type":"function (struct Exponential.Exp memory,struct Exponential.Exp memory) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"addExp"},"id":972,"name":"Identifier","src":"18409:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":955,"type":"struct Exponential.Exp memory","value":"utilizationRateScaled"},"id":973,"name":"Identifier","src":"18416:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":974,"name":"Identifier","src":"18439:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":414,"type":"uint256","value":"mantissaOneTenth"},"id":975,"name":"Identifier","src":"18454:16:0"}],"id":976,"name":"FunctionCall","src":"18439:33:0"}],"id":977,"name":"FunctionCall","src":"18409:64:0"}],"id":978,"name":"VariableDeclarationStatement","src":"18365:108:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":979,"name":"Identifier","src":"18798:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":969,"type":"enum ErrorReporter.Error","value":"err3"},"id":980,"name":"Identifier","src":"18805:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":981,"name":"Identifier","src":"18813:5:0"}],"id":982,"name":"MemberAccess","src":"18813:14:0"}],"id":983,"name":"BinaryOperation","src":"18805:22:0"}],"id":984,"name":"FunctionCall","src":"18798:30:0"}],"id":985,"name":"ExpressionStatement","src":"18798:30:0"},{"attributes":{"functionReturnParameters":911},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":986,"name":"Identifier","src":"18847:7:0"}],"id":987,"name":"MemberAccess","src":"18847:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":915,"type":"struct Exponential.Exp memory","value":"utilizationRate"},"id":988,"name":"Identifier","src":"18865:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":971,"type":"struct Exponential.Exp memory","value":"annualBorrowRate"},"id":989,"name":"Identifier","src":"18882:16:0"}],"id":990,"name":"TupleExpression","src":"18846:53:0"}],"id":991,"name":"Return","src":"18839:60:0"}],"id":992,"name":"Block","src":"17262:1644:0"}],"id":993,"name":"FunctionDefinition","src":"17138:1768:0"},{"attributes":{"constant":true,"documentation":"@notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param _asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the supply interest rate per block scaled by 10e18","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getSupplyRate","payable":false,"scope":1188,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_asset","scope":1106,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":994,"name":"ElementaryTypeName","src":"19518:7:0"}],"id":995,"name":"VariableDeclaration","src":"19518:14:0"},{"attributes":{"constant":false,"name":"cash","scope":1106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":996,"name":"ElementaryTypeName","src":"19534:4:0"}],"id":997,"name":"VariableDeclaration","src":"19534:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":1106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":998,"name":"ElementaryTypeName","src":"19545:4:0"}],"id":999,"name":"VariableDeclaration","src":"19545:12:0"}],"id":1000,"name":"ParameterList","src":"19517:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1001,"name":"ElementaryTypeName","src":"19580:4:0"}],"id":1002,"name":"VariableDeclaration","src":"19580:4:0"},{"attributes":{"constant":false,"name":"","scope":1106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1003,"name":"ElementaryTypeName","src":"19586:4:0"}],"id":1004,"name":"VariableDeclaration","src":"19586:4:0"}],"id":1005,"name":"ParameterList","src":"19579:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":995,"type":"address","value":"_asset"},"id":1006,"name":"Identifier","src":"19602:6:0"}],"id":1007,"name":"ExpressionStatement","src":"19602:6:0"},{"attributes":{"assignments":[1009,1011,1013]},"children":[{"attributes":{"constant":false,"name":"err0","scope":1106,"stateVariable":false,"storageLocation":"default","type":"enum StableCoinInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":826,"type":"enum StableCoinInterestRateModel.IRError"},"id":1008,"name":"UserDefinedTypeName","src":"19653:7:0"}],"id":1009,"name":"VariableDeclaration","src":"19653:12:0"},{"attributes":{"constant":false,"name":"utilizationRate0","scope":1106,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1010,"name":"UserDefinedTypeName","src":"19667:3:0"}],"id":1011,"name":"VariableDeclaration","src":"19667:27:0"},{"attributes":{"constant":false,"name":"annualBorrowRate","scope":1106,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1012,"name":"UserDefinedTypeName","src":"19696:3:0"}],"id":1013,"name":"VariableDeclaration","src":"19696:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":993,"type":"function (uint256,uint256) pure returns (enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","value":"getUtilizationAndAnnualBorrowRate"},"id":1014,"name":"Identifier","src":"19727:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":997,"type":"uint256","value":"cash"},"id":1015,"name":"Identifier","src":"19761:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":999,"type":"uint256","value":"borrows"},"id":1016,"name":"Identifier","src":"19767:7:0"}],"id":1017,"name":"FunctionCall","src":"19727:48:0"}],"id":1018,"name":"VariableDeclarationStatement","src":"19652:123:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_IRError_$826","typeString":"enum StableCoinInterestRateModel.IRError"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1009,"type":"enum StableCoinInterestRateModel.IRError","value":"err0"},"id":1019,"name":"Identifier","src":"19789:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":1020,"name":"Identifier","src":"19797:7:0"}],"id":1021,"name":"MemberAccess","src":"19797:16:0"}],"id":1022,"name":"BinaryOperation","src":"19789:24:0"},{"children":[{"attributes":{"functionReturnParameters":1005},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$826","typeString":"enum StableCoinInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1023,"name":"ElementaryTypeNameExpression","src":"19837:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1009,"type":"enum StableCoinInterestRateModel.IRError","value":"err0"},"id":1024,"name":"Identifier","src":"19842:4:0"}],"id":1025,"name":"FunctionCall","src":"19837:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1026,"name":"Literal","src":"19849:1:0"}],"id":1027,"name":"TupleExpression","src":"19836:15:0"}],"id":1028,"name":"Return","src":"19829:22:0"}],"id":1029,"name":"Block","src":"19815:47:0"}],"id":1030,"name":"IfStatement","src":"19785:77:0"},{"attributes":{"assignments":[1032,1034]},"children":[{"attributes":{"constant":false,"name":"err1","scope":1106,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1031,"name":"UserDefinedTypeName","src":"19955:5:0"}],"id":1032,"name":"VariableDeclaration","src":"19955:10:0"},{"attributes":{"constant":false,"name":"utilizationRate1","scope":1106,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1033,"name":"UserDefinedTypeName","src":"19967:3:0"}],"id":1034,"name":"VariableDeclaration","src":"19967:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"mulScalar"},"id":1035,"name":"Identifier","src":"19998:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1011,"type":"struct Exponential.Exp memory","value":"utilizationRate0"},"id":1036,"name":"Identifier","src":"20008:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":818,"type":"uint256","value":"oneMinusSpreadBasisPoints"},"id":1037,"name":"Identifier","src":"20026:25:0"}],"id":1038,"name":"FunctionCall","src":"19998:54:0"}],"id":1039,"name":"VariableDeclarationStatement","src":"19954:98:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":1040,"name":"Identifier","src":"20330:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1032,"type":"enum ErrorReporter.Error","value":"err1"},"id":1041,"name":"Identifier","src":"20337:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1042,"name":"Identifier","src":"20345:5:0"}],"id":1043,"name":"MemberAccess","src":"20345:14:0"}],"id":1044,"name":"BinaryOperation","src":"20337:22:0"}],"id":1045,"name":"FunctionCall","src":"20330:30:0"}],"id":1046,"name":"ExpressionStatement","src":"20330:30:0"},{"attributes":{"assignments":[1048,1050]},"children":[{"attributes":{"constant":false,"name":"err2","scope":1106,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1047,"name":"UserDefinedTypeName","src":"20432:5:0"}],"id":1048,"name":"VariableDeclaration","src":"20432:10:0"},{"attributes":{"constant":false,"name":"supplyRate0","scope":1106,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1049,"name":"UserDefinedTypeName","src":"20444:3:0"}],"id":1050,"name":"VariableDeclaration","src":"20444:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"}],"overloadedDeclarations":[null],"referencedDeclaration":733,"type":"function (struct Exponential.Exp memory,struct Exponential.Exp memory) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"mulExp"},"id":1051,"name":"Identifier","src":"20470:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1034,"type":"struct Exponential.Exp memory","value":"utilizationRate1"},"id":1052,"name":"Identifier","src":"20477:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1013,"type":"struct Exponential.Exp memory","value":"annualBorrowRate"},"id":1053,"name":"Identifier","src":"20495:16:0"}],"id":1054,"name":"FunctionCall","src":"20470:42:0"}],"id":1055,"name":"VariableDeclarationStatement","src":"20431:81:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":1056,"name":"Identifier","src":"20976:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1048,"type":"enum ErrorReporter.Error","value":"err2"},"id":1057,"name":"Identifier","src":"20983:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1058,"name":"Identifier","src":"20991:5:0"}],"id":1059,"name":"MemberAccess","src":"20991:14:0"}],"id":1060,"name":"BinaryOperation","src":"20983:22:0"}],"id":1061,"name":"FunctionCall","src":"20976:30:0"}],"id":1062,"name":"ExpressionStatement","src":"20976:30:0"},{"attributes":{"assignments":[1064,1066]},"children":[{"attributes":{"constant":false,"name":"err3","scope":1106,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1063,"name":"UserDefinedTypeName","src":"21143:5:0"}],"id":1064,"name":"VariableDeclaration","src":"21143:10:0"},{"attributes":{"constant":false,"name":"standardSupplyRate","scope":1106,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1065,"name":"UserDefinedTypeName","src":"21155:3:0"}],"id":1066,"name":"VariableDeclaration","src":"21155:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":615,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"divScalar"},"id":1067,"name":"Identifier","src":"21188:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1050,"type":"struct Exponential.Exp memory","value":"supplyRate0"},"id":1068,"name":"Identifier","src":"21198:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10000","value":"10000"},"id":1069,"name":"Literal","src":"21211:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":821,"type":"uint256","value":"blocksPerYear"},"id":1070,"name":"Identifier","src":"21219:13:0"}],"id":1071,"name":"BinaryOperation","src":"21211:21:0"}],"id":1072,"name":"FunctionCall","src":"21188:45:0"}],"id":1073,"name":"VariableDeclarationStatement","src":"21142:91:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":1074,"name":"Identifier","src":"21361:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1064,"type":"enum ErrorReporter.Error","value":"err3"},"id":1075,"name":"Identifier","src":"21368:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1076,"name":"Identifier","src":"21376:5:0"}],"id":1077,"name":"MemberAccess","src":"21376:14:0"}],"id":1078,"name":"BinaryOperation","src":"21368:22:0"}],"id":1079,"name":"FunctionCall","src":"21361:30:0"}],"id":1080,"name":"ExpressionStatement","src":"21361:30:0"},{"attributes":{"assignments":[1082,1084]},"children":[{"attributes":{"constant":false,"name":"err4","scope":1106,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1081,"name":"UserDefinedTypeName","src":"21506:5:0"}],"id":1082,"name":"VariableDeclaration","src":"21506:10:0"},{"attributes":{"constant":false,"name":"finalSupplyRate","scope":1106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1083,"name":"ElementaryTypeName","src":"21518:4:0"}],"id":1084,"name":"VariableDeclaration","src":"21518:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":1085,"name":"Identifier","src":"21542:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1066,"type":"struct Exponential.Exp memory","value":"standardSupplyRate"},"id":1086,"name":"Identifier","src":"21546:18:0"}],"id":1087,"name":"MemberAccess","src":"21546:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1088,"name":"Literal","src":"21575:1:0"}],"id":1089,"name":"FunctionCall","src":"21542:35:0"}],"id":1090,"name":"VariableDeclarationStatement","src":"21505:72:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":1091,"name":"Identifier","src":"21588:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1082,"type":"enum ErrorReporter.Error","value":"err4"},"id":1092,"name":"Identifier","src":"21595:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1093,"name":"Identifier","src":"21603:5:0"}],"id":1094,"name":"MemberAccess","src":"21603:14:0"}],"id":1095,"name":"BinaryOperation","src":"21595:22:0"}],"id":1096,"name":"FunctionCall","src":"21588:30:0"}],"id":1097,"name":"ExpressionStatement","src":"21588:30:0"},{"attributes":{"functionReturnParameters":1005},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$826","typeString":"enum StableCoinInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1098,"name":"ElementaryTypeNameExpression","src":"21636:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":1099,"name":"Identifier","src":"21641:7:0"}],"id":1100,"name":"MemberAccess","src":"21641:16:0"}],"id":1101,"name":"FunctionCall","src":"21636:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1084,"type":"uint256","value":"finalSupplyRate"},"id":1102,"name":"Identifier","src":"21660:15:0"}],"id":1103,"name":"TupleExpression","src":"21635:41:0"}],"id":1104,"name":"Return","src":"21628:48:0"}],"id":1105,"name":"Block","src":"19592:2091:0"}],"id":1106,"name":"FunctionDefinition","src":"19495:2188:0"},{"attributes":{"constant":true,"documentation":"@notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param _asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the borrow interest rate per block scaled by 10e18","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getBorrowRate","payable":false,"scope":1188,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_asset","scope":1187,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1107,"name":"ElementaryTypeName","src":"22295:7:0"}],"id":1108,"name":"VariableDeclaration","src":"22295:14:0"},{"attributes":{"constant":false,"name":"cash","scope":1187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1109,"name":"ElementaryTypeName","src":"22311:4:0"}],"id":1110,"name":"VariableDeclaration","src":"22311:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":1187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1111,"name":"ElementaryTypeName","src":"22322:4:0"}],"id":1112,"name":"VariableDeclaration","src":"22322:12:0"}],"id":1113,"name":"ParameterList","src":"22294:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1114,"name":"ElementaryTypeName","src":"22357:4:0"}],"id":1115,"name":"VariableDeclaration","src":"22357:4:0"},{"attributes":{"constant":false,"name":"","scope":1187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1116,"name":"ElementaryTypeName","src":"22363:4:0"}],"id":1117,"name":"VariableDeclaration","src":"22363:4:0"}],"id":1118,"name":"ParameterList","src":"22356:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1108,"type":"address","value":"_asset"},"id":1119,"name":"Identifier","src":"22379:6:0"}],"id":1120,"name":"ExpressionStatement","src":"22379:6:0"},{"attributes":{"assignments":[1122,1124,1126]},"children":[{"attributes":{"constant":false,"name":"err0","scope":1187,"stateVariable":false,"storageLocation":"default","type":"enum StableCoinInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":826,"type":"enum StableCoinInterestRateModel.IRError"},"id":1121,"name":"UserDefinedTypeName","src":"22430:7:0"}],"id":1122,"name":"VariableDeclaration","src":"22430:12:0"},{"attributes":{"constant":false,"name":"_utilizationRate","scope":1187,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1123,"name":"UserDefinedTypeName","src":"22444:3:0"}],"id":1124,"name":"VariableDeclaration","src":"22444:27:0"},{"attributes":{"constant":false,"name":"annualBorrowRate","scope":1187,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1125,"name":"UserDefinedTypeName","src":"22473:3:0"}],"id":1126,"name":"VariableDeclaration","src":"22473:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":993,"type":"function (uint256,uint256) pure returns (enum StableCoinInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","value":"getUtilizationAndAnnualBorrowRate"},"id":1127,"name":"Identifier","src":"22504:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1110,"type":"uint256","value":"cash"},"id":1128,"name":"Identifier","src":"22538:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1112,"type":"uint256","value":"borrows"},"id":1129,"name":"Identifier","src":"22544:7:0"}],"id":1130,"name":"FunctionCall","src":"22504:48:0"}],"id":1131,"name":"VariableDeclarationStatement","src":"22429:123:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_IRError_$826","typeString":"enum StableCoinInterestRateModel.IRError"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1122,"type":"enum StableCoinInterestRateModel.IRError","value":"err0"},"id":1132,"name":"Identifier","src":"22566:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":1133,"name":"Identifier","src":"22574:7:0"}],"id":1134,"name":"MemberAccess","src":"22574:16:0"}],"id":1135,"name":"BinaryOperation","src":"22566:24:0"},{"children":[{"attributes":{"functionReturnParameters":1118},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$826","typeString":"enum StableCoinInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1136,"name":"ElementaryTypeNameExpression","src":"22614:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1122,"type":"enum StableCoinInterestRateModel.IRError","value":"err0"},"id":1137,"name":"Identifier","src":"22619:4:0"}],"id":1138,"name":"FunctionCall","src":"22614:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1139,"name":"Literal","src":"22626:1:0"}],"id":1140,"name":"TupleExpression","src":"22613:15:0"}],"id":1141,"name":"Return","src":"22606:22:0"}],"id":1142,"name":"Block","src":"22592:47:0"}],"id":1143,"name":"IfStatement","src":"22562:77:0"},{"attributes":{"assignments":[1145,1147]},"children":[{"attributes":{"constant":false,"name":"err1","scope":1187,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1144,"name":"UserDefinedTypeName","src":"22702:5:0"}],"id":1145,"name":"VariableDeclaration","src":"22702:10:0"},{"attributes":{"constant":false,"name":"standardBorrowRate","scope":1187,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1146,"name":"UserDefinedTypeName","src":"22714:3:0"}],"id":1147,"name":"VariableDeclaration","src":"22714:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":615,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"divScalar"},"id":1148,"name":"Identifier","src":"22747:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1126,"type":"struct Exponential.Exp memory","value":"annualBorrowRate"},"id":1149,"name":"Identifier","src":"22757:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":821,"type":"uint256","value":"blocksPerYear"},"id":1150,"name":"Identifier","src":"22775:13:0"}],"id":1151,"name":"FunctionCall","src":"22747:42:0"}],"id":1152,"name":"VariableDeclarationStatement","src":"22701:88:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":1153,"name":"Identifier","src":"22917:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1145,"type":"enum ErrorReporter.Error","value":"err1"},"id":1154,"name":"Identifier","src":"22924:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1155,"name":"Identifier","src":"22932:5:0"}],"id":1156,"name":"MemberAccess","src":"22932:14:0"}],"id":1157,"name":"BinaryOperation","src":"22924:22:0"}],"id":1158,"name":"FunctionCall","src":"22917:30:0"}],"id":1159,"name":"ExpressionStatement","src":"22917:30:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1124,"type":"struct Exponential.Exp memory","value":"_utilizationRate"},"id":1160,"name":"Identifier","src":"22958:16:0"}],"id":1161,"name":"ExpressionStatement","src":"22958:16:0"},{"attributes":{"assignments":[1163,1165]},"children":[{"attributes":{"constant":false,"name":"err2","scope":1187,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1162,"name":"UserDefinedTypeName","src":"23122:5:0"}],"id":1163,"name":"VariableDeclaration","src":"23122:10:0"},{"attributes":{"constant":false,"name":"finalBorrowRate","scope":1187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1164,"name":"ElementaryTypeName","src":"23134:4:0"}],"id":1165,"name":"VariableDeclaration","src":"23134:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":1166,"name":"Identifier","src":"23158:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"struct Exponential.Exp memory","value":"standardBorrowRate"},"id":1167,"name":"Identifier","src":"23162:18:0"}],"id":1168,"name":"MemberAccess","src":"23162:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1169,"name":"Literal","src":"23191:1:0"}],"id":1170,"name":"FunctionCall","src":"23158:35:0"}],"id":1171,"name":"VariableDeclarationStatement","src":"23121:72:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1192,"type":"function (bool) pure","value":"assert"},"id":1172,"name":"Identifier","src":"23204:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1163,"type":"enum ErrorReporter.Error","value":"err2"},"id":1173,"name":"Identifier","src":"23211:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1174,"name":"Identifier","src":"23219:5:0"}],"id":1175,"name":"MemberAccess","src":"23219:14:0"}],"id":1176,"name":"BinaryOperation","src":"23211:22:0"}],"id":1177,"name":"FunctionCall","src":"23204:30:0"}],"id":1178,"name":"ExpressionStatement","src":"23204:30:0"},{"attributes":{"functionReturnParameters":1118},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$826","typeString":"enum StableCoinInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1179,"name":"ElementaryTypeNameExpression","src":"23252:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StableCoinInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":826,"type":"type(enum StableCoinInterestRateModel.IRError)","value":"IRError"},"id":1180,"name":"Identifier","src":"23257:7:0"}],"id":1181,"name":"MemberAccess","src":"23257:16:0"}],"id":1182,"name":"FunctionCall","src":"23252:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1165,"type":"uint256","value":"finalBorrowRate"},"id":1183,"name":"Identifier","src":"23276:15:0"}],"id":1184,"name":"TupleExpression","src":"23251:41:0"}],"id":1185,"name":"Return","src":"23244:48:0"}],"id":1186,"name":"Block","src":"22369:930:0"}],"id":1187,"name":"FunctionDefinition","src":"22272:1027:0"}],"id":1188,"name":"ContractDefinition","src":"15888:7413:0"}],"id":1189,"name":"SourceUnit","src":"0:23301:0"}}