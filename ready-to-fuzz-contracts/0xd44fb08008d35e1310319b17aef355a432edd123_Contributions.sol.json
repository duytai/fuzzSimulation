{"name":"Contributions","address":"0xd44fb08008d35e1310319b17aef355a432edd123","source":"pragma solidity ^0.4.24;\n\n// File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (_a == 0) {\n      return 0;\n    }\n\n    c = _a * _b;\n    assert(c / _a == _b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    // assert(_b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = _a / _b;\n    // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n    return _a / _b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n    assert(_b <= _a);\n    return _a - _b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n    c = _a + _b;\n    assert(c >= _a);\n    return c;\n  }\n}\n\n// File: openzeppelin-solidity/contracts/access/rbac/Roles.sol\n\n/**\n * @title Roles\n * @author Francisco Giordano (@frangio)\n * @dev Library for managing addresses assigned to a Role.\n * See RBAC.sol for example usage.\n */\nlibrary Roles {\n  struct Role {\n    mapping (address => bool) bearer;\n  }\n\n  /**\n   * @dev give an address access to this role\n   */\n  function add(Role storage _role, address _addr)\n    internal\n  {\n    _role.bearer[_addr] = true;\n  }\n\n  /**\n   * @dev remove an address' access to this role\n   */\n  function remove(Role storage _role, address _addr)\n    internal\n  {\n    _role.bearer[_addr] = false;\n  }\n\n  /**\n   * @dev check if an address has this role\n   * // reverts\n   */\n  function check(Role storage _role, address _addr)\n    internal\n    view\n  {\n    require(has(_role, _addr));\n  }\n\n  /**\n   * @dev check if an address has this role\n   * @return bool\n   */\n  function has(Role storage _role, address _addr)\n    internal\n    view\n    returns (bool)\n  {\n    return _role.bearer[_addr];\n  }\n}\n\n// File: openzeppelin-solidity/contracts/access/rbac/RBAC.sol\n\n/**\n * @title RBAC (Role-Based Access Control)\n * @author Matt Condon (@Shrugs)\n * @dev Stores and provides setters and getters for roles and addresses.\n * Supports unlimited numbers of roles and addresses.\n * See //contracts/mocks/RBACMock.sol for an example of usage.\n * This RBAC method uses strings to key roles. It may be beneficial\n * for you to write your own implementation of this interface using Enums or similar.\n */\ncontract RBAC {\n  using Roles for Roles.Role;\n\n  mapping (string => Roles.Role) private roles;\n\n  event RoleAdded(address indexed operator, string role);\n  event RoleRemoved(address indexed operator, string role);\n\n  /**\n   * @dev reverts if addr does not have role\n   * @param _operator address\n   * @param _role the name of the role\n   * // reverts\n   */\n  function checkRole(address _operator, string _role)\n    public\n    view\n  {\n    roles[_role].check(_operator);\n  }\n\n  /**\n   * @dev determine if addr has role\n   * @param _operator address\n   * @param _role the name of the role\n   * @return bool\n   */\n  function hasRole(address _operator, string _role)\n    public\n    view\n    returns (bool)\n  {\n    return roles[_role].has(_operator);\n  }\n\n  /**\n   * @dev add a role to an address\n   * @param _operator address\n   * @param _role the name of the role\n   */\n  function addRole(address _operator, string _role)\n    internal\n  {\n    roles[_role].add(_operator);\n    emit RoleAdded(_operator, _role);\n  }\n\n  /**\n   * @dev remove a role from an address\n   * @param _operator address\n   * @param _role the name of the role\n   */\n  function removeRole(address _operator, string _role)\n    internal\n  {\n    roles[_role].remove(_operator);\n    emit RoleRemoved(_operator, _role);\n  }\n\n  /**\n   * @dev modifier to scope access to a single role (uses msg.sender as addr)\n   * @param _role the name of the role\n   * // reverts\n   */\n  modifier onlyRole(string _role)\n  {\n    checkRole(msg.sender, _role);\n    _;\n  }\n\n  /**\n   * @dev modifier to scope access to a set of roles (uses msg.sender as addr)\n   * @param _roles the names of the roles to scope access to\n   * // reverts\n   *\n   * @TODO - when solidity supports dynamic arrays as arguments to modifiers, provide this\n   *  see: https://github.com/ethereum/solidity/issues/2467\n   */\n  // modifier onlyRoles(string[] _roles) {\n  //     bool hasAnyRole = false;\n  //     for (uint8 i = 0; i < _roles.length; i++) {\n  //         if (hasRole(msg.sender, _roles[i])) {\n  //             hasAnyRole = true;\n  //             break;\n  //         }\n  //     }\n\n  //     require(hasAnyRole);\n\n  //     _;\n  // }\n}\n\n// File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n// File: contracts/crowdsale/utils/Contributions.sol\n\n/**\n * @title Contributions\n * @author Vittorio Minacori (https://github.com/vittominacori)\n * @dev Utility contract where to save any information about Crowdsale contributions\n */\ncontract Contributions is RBAC, Ownable {\n\n  using SafeMath for uint256;\n\n  string public constant ROLE_OPERATOR = \"operator\";\n\n  modifier onlyOperator () {\n    checkRole(msg.sender, ROLE_OPERATOR);\n    _;\n  }\n\n  uint256 public totalSoldTokens;\n  uint256 public totalWeiRaised;\n  mapping(address => uint256) public tokenBalances;\n  mapping(address => uint256) public weiContributions;\n  address[] public addresses;\n\n  constructor() public {}\n\n  /**\n   * @dev add contribution into the contributions array\n   * @param _address address\n   * @param _weiAmount uint256\n   * @param _tokenAmount uint256\n   */\n  function addBalance(\n    address _address,\n    uint256 _weiAmount,\n    uint256 _tokenAmount\n  )\n  public\n  onlyOperator\n  {\n    if (weiContributions[_address] == 0) {\n      addresses.push(_address);\n    }\n    weiContributions[_address] = weiContributions[_address].add(_weiAmount);\n    totalWeiRaised = totalWeiRaised.add(_weiAmount);\n\n    tokenBalances[_address] = tokenBalances[_address].add(_tokenAmount);\n    totalSoldTokens = totalSoldTokens.add(_tokenAmount);\n  }\n\n  /**\n   * @dev add a operator role to an address\n   * @param _operator address\n   */\n  function addOperator(address _operator) public onlyOwner {\n    addRole(_operator, ROLE_OPERATOR);\n  }\n\n  /**\n   * @dev remove a operator role from an address\n   * @param _operator address\n   */\n  function removeOperator(address _operator) public onlyOwner {\n    removeRole(_operator, ROLE_OPERATOR);\n  }\n\n  /**\n   * @dev return the contributions length\n   * @return uint256\n   */\n  function getContributorsLength() public view returns (uint) {\n    return addresses.length;\n  }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"checkRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"weiContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContributorsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWeiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_weiAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSoldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleRemoved\",\"type\":\"event\"}]","bin":"","bin-runtime":"6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630988ca8c146100e0578063217fe6c61461016957806325d18e311461020a5780634ab6d33714610261578063523fba7f1461028c57806353f4db01146102e3578063715018a61461030e5780638da5cb5b146103255780639870d7fe1461037c57806398a1b397146103bf578063ac8a584a1461044f578063cfad741014610492578063d7ca9949146104e9578063edf26d9b14610514578063f2fde38b14610581575b600080fd5b3480156100ec57600080fd5b50610167600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105c4565b005b34801561017557600080fd5b506101f0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610645565b604051808215151515815260200191505060405180910390f35b34801561021657600080fd5b5061024b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106cc565b6040518082815260200191505060405180910390f35b34801561026d57600080fd5b506102766106e4565b6040518082815260200191505060405180910390f35b34801561029857600080fd5b506102cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f1565b6040518082815260200191505060405180910390f35b3480156102ef57600080fd5b506102f8610709565b6040518082815260200191505060405180910390f35b34801561031a57600080fd5b5061032361070f565b005b34801561033157600080fd5b5061033a610814565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038857600080fd5b506103bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061083a565b005b3480156103cb57600080fd5b506103d46108d8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104145780820151818401526020810190506103f9565b50505050905090810190601f1680156104415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045b57600080fd5b50610490600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610911565b005b34801561049e57600080fd5b506104e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506109af565b005b3480156104f557600080fd5b506104fe610c02565b6040518082815260200191505060405180910390f35b34801561052057600080fd5b5061053f60048036038101908080359060200190929190505050610c08565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058d57600080fd5b506105c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c46565b005b610641826000836040518082805190602001908083835b60208310151561060057805182526020820191506020810190506020830392506105db565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020610cae90919063ffffffff16565b5050565b60006106c4836000846040518082805190602001908083835b602083101515610683578051825260208201915060208101905060208303925061065e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020610cc790919063ffffffff16565b905092915050565b60056020528060005260406000206000915090505481565b6000600680549050905090565b60046020528060005260406000206000915090505481565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561076b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561089657600080fd5b6108d5816040805190810160405280600881526020017f6f70657261746f72000000000000000000000000000000000000000000000000815250610d20565b50565b6040805190810160405280600881526020017f6f70657261746f7200000000000000000000000000000000000000000000000081525081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561096d57600080fd5b6109ac816040805190810160405280600881526020017f6f70657261746f72000000000000000000000000000000000000000000000000815250610e54565b50565b6109ee336040805190810160405280600881526020017f6f70657261746f720000000000000000000000000000000000000000000000008152506105c4565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415610a9d5760068390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b610aef82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8890919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b4782600354610f8890919063ffffffff16565b600381905550610b9f81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f8890919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bf781600254610f8890919063ffffffff16565b600281905550505050565b60025481565b600681815481101515610c1757fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ca257600080fd5b610cab81610fa4565b50565b610cb88282610cc7565b1515610cc357600080fd5b5050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610d9d826000836040518082805190602001908083835b602083101515610d5c5780518252602082019150602081019050602083039250610d37565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206110a090919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e16578082015181840152602081019050610dfb565b50505050905090810190601f168015610e435780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b610ed1826000836040518082805190602001908083835b602083101515610e905780518252602082019150602081019050602083039250610e6b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206110fe90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fd211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803a826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f4a578082015181840152602081019050610f2f565b50505050905090810190601f168015610f775780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b60008183019050828110151515610f9b57fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fe057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a723058203f05e0e11ea7549f8ac8f31151fed7c18f8661ec7e3794898e5ec5020c6b66960029","srcmap":"7063:1643:0:-;;;7481:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;7481:23:0;5716:10;5708:5;;:18;;;;;;;;;;;;;;;;;;7063:1643;;;;;;","srcmap-runtime":"7063:1643:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3303:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3303:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3557:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3557:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7395:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7395:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8610:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8610:94:0;;;;;;;;;;;;;;;;;;;;;;;7343:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7343:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7310:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7310:29:0;;;;;;;;;;;;;;;;;;;;;;;6142:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6142:111:0;;;;;;5379:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5379:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;8228:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8228:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;7139:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7139:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7139:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8424:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8424:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;7669:469;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7669:469:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7276:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7276:30:0;;;;;;;;;;;;;;;;;;;;;;;7450:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7450:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6415:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6415:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3303:114;3383:29;3402:9;3383:5;3389;3383:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3383:12:0;;;;;;;;;;;;;;;;;;;;;:18;;:29;;;;:::i;:::-;3303:114;;:::o;3557:136::-;3640:4;3661:27;3678:9;3661:5;3667;3661:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3661:12:0;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;3654:34;;3557:136;;;;:::o;7395:51::-;;;;;;;;;;;;;;;;;:::o;8610:94::-;8664:4;8683:9;:16;;;;8676:23;;8610:94;:::o;7343:48::-;;;;;;;;;;;;;;;;;:::o;7310:29::-;;;;:::o;6142:111::-;5860:5;;;;;;;;;;;5846:19;;:10;:19;;;5838:28;;;;;;;;6218:5;;;;;;;;;;;6199:25;;;;;;;;;;;;6246:1;6230:5;;:18;;;;;;;;;;;;;;;;;;6142:111::o;5379:20::-;;;;;;;;;;;;;:::o;8228:101::-;5860:5;;;;;;;;;;;5846:19;;:10;:19;;;5838:28;;;;;;;;8291:33;8299:9;8310:13;;;;;;;;;;;;;;;;;;8291:7;:33::i;:::-;8228:101;:::o;7139:49::-;;;;;;;;;;;;;;;;;;;;:::o;8424:107::-;5860:5;;;;;;;;;;;5846:19;;:10;:19;;;5838:28;;;;;;;;8490:36;8501:9;8512:13;;;;;;;;;;;;;;;;;;8490:10;:36::i;:::-;8424:107;:::o;7669:469::-;7224:36;7234:10;7246:13;;;;;;;;;;;;;;;;;;7224:9;:36::i;:::-;7831:1;7801:16;:26;7818:8;7801:26;;;;;;;;;;;;;;;;:31;7797:76;;;7842:9;7857:8;7842:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7842:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7797:76;7907:42;7938:10;7907:16;:26;7924:8;7907:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;7878:16;:26;7895:8;7878:26;;;;;;;;;;;;;;;:71;;;;7972:30;7991:10;7972:14;;:18;;:30;;;;:::i;:::-;7955:14;:47;;;;8035:41;8063:12;8035:13;:23;8049:8;8035:23;;;;;;;;;;;;;;;;:27;;:41;;;;:::i;:::-;8009:13;:23;8023:8;8009:23;;;;;;;;;;;;;;;:67;;;;8100:33;8120:12;8100:15;;:19;;:33;;;;:::i;:::-;8082:15;:51;;;;7669:469;;;:::o;7276:30::-;;;;:::o;7450:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6415:103::-;5860:5;;;;;;;;;;;5846:19;;:10;:19;;;5838:28;;;;;;;;6484:29;6503:9;6484:18;:29::i;:::-;6415:103;:::o;2132:111::-;2220:17;2224:5;2231;2220:3;:17::i;:::-;2212:26;;;;;;;;2132:111;;:::o;2321:128::-;2404:4;2425:5;:12;;:19;2438:5;2425:19;;;;;;;;;;;;;;;;;;;;;;;;;2418:26;;2321:128;;;;:::o;3813:141::-;3884:27;3901:9;3884:5;3890;3884:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3884:12:0;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;3932:9;3922:27;;;3943:5;3922:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3922:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3813:141;;:::o;4079:149::-;4153:30;4173:9;4153:5;4159;4153:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4153:12:0;;;;;;;;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;4206:9;4194:29;;;4217:5;4194:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4194:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4079:149;;:::o;1297:128::-;1357:9;1383:2;1378;:7;1374:11;;1403:2;1398:1;:7;;1391:15;;;;;;1419:1;1412:8;;1297:128;;;;:::o;6653:171::-;6744:1;6723:23;;:9;:23;;;;6715:32;;;;;;;;6786:9;6758:38;;6779:5;;;;;;;;;;;6758:38;;;;;;;;;;;;6810:9;6802:5;;:17;;;;;;;;;;;;;;;;;;6653:171;:::o;1787:100::-;1878:4;1856:5;:12;;:19;1869:5;1856:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1787:100;;:::o;1952:104::-;2046:5;2024;:12;;:19;2037:5;2024:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1952:104;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0xd44fb08008d35e1310319b17aef355a432edd123_Contributions.sol","exportedSymbols":{"Contributions":[485],"Ownable":[349],"RBAC":[265],"Roles":[161],"SafeMath":[93]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title SafeMath\n@dev Math operations with safety checks that throw on error","fullyImplemented":true,"linearizedBaseContracts":[93],"name":"SafeMath","scope":486},"children":[{"attributes":{"constant":true,"documentation":"@dev Multiplies two numbers, throws on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mul","payable":false,"scope":93,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_a","scope":34,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"275:7:0"}],"id":3,"name":"VariableDeclaration","src":"275:10:0"},{"attributes":{"constant":false,"name":"_b","scope":34,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"287:7:0"}],"id":5,"name":"VariableDeclaration","src":"287:10:0"}],"id":6,"name":"ParameterList","src":"274:24:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":34,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"322:7:0"}],"id":8,"name":"VariableDeclaration","src":"322:9:0"}],"id":9,"name":"ParameterList","src":"321:11:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"_a"},"id":10,"name":"Identifier","src":"548:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":11,"name":"Literal","src":"554:1:0"}],"id":12,"name":"BinaryOperation","src":"548:7:0"},{"children":[{"attributes":{"functionReturnParameters":9},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":13,"name":"Literal","src":"572:1:0"}],"id":14,"name":"Return","src":"565:8:0"}],"id":15,"name":"Block","src":"557:23:0"}],"id":16,"name":"IfStatement","src":"544:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"c"},"id":17,"name":"Identifier","src":"586:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"_a"},"id":18,"name":"Identifier","src":"590:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"uint256","value":"_b"},"id":19,"name":"Identifier","src":"595:2:0"}],"id":20,"name":"BinaryOperation","src":"590:7:0"}],"id":21,"name":"Assignment","src":"586:11:0"}],"id":22,"name":"ExpressionStatement","src":"586:11:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":489,"type":"function (bool) pure","value":"assert"},"id":23,"name":"Identifier","src":"603:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"c"},"id":24,"name":"Identifier","src":"610:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"_a"},"id":25,"name":"Identifier","src":"614:2:0"}],"id":26,"name":"BinaryOperation","src":"610:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"uint256","value":"_b"},"id":27,"name":"Identifier","src":"620:2:0"}],"id":28,"name":"BinaryOperation","src":"610:12:0"}],"id":29,"name":"FunctionCall","src":"603:20:0"}],"id":30,"name":"ExpressionStatement","src":"603:20:0"},{"attributes":{"functionReturnParameters":9},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"c"},"id":31,"name":"Identifier","src":"636:1:0"}],"id":32,"name":"Return","src":"629:8:0"}],"id":33,"name":"Block","src":"333:309:0"}],"id":34,"name":"FunctionDefinition","src":"262:380:0"},{"attributes":{"constant":true,"documentation":"@dev Integer division of two numbers, truncating the quotient.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"div","payable":false,"scope":93,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_a","scope":48,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":35,"name":"ElementaryTypeName","src":"737:7:0"}],"id":36,"name":"VariableDeclaration","src":"737:10:0"},{"attributes":{"constant":false,"name":"_b","scope":48,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":37,"name":"ElementaryTypeName","src":"749:7:0"}],"id":38,"name":"VariableDeclaration","src":"749:10:0"}],"id":39,"name":"ParameterList","src":"736:24:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":48,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":40,"name":"ElementaryTypeName","src":"784:7:0"}],"id":41,"name":"VariableDeclaration","src":"784:7:0"}],"id":42,"name":"ParameterList","src":"783:9:0"},{"children":[{"attributes":{"functionReturnParameters":42},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"uint256","value":"_a"},"id":43,"name":"Identifier","src":"995:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":38,"type":"uint256","value":"_b"},"id":44,"name":"Identifier","src":"1000:2:0"}],"id":45,"name":"BinaryOperation","src":"995:7:0"}],"id":46,"name":"Return","src":"988:14:0"}],"id":47,"name":"Block","src":"793:214:0"}],"id":48,"name":"FunctionDefinition","src":"724:283:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).","implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":93,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_a","scope":68,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":49,"name":"ElementaryTypeName","src":"1132:7:0"}],"id":50,"name":"VariableDeclaration","src":"1132:10:0"},{"attributes":{"constant":false,"name":"_b","scope":68,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":51,"name":"ElementaryTypeName","src":"1144:7:0"}],"id":52,"name":"VariableDeclaration","src":"1144:10:0"}],"id":53,"name":"ParameterList","src":"1131:24:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":68,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":54,"name":"ElementaryTypeName","src":"1179:7:0"}],"id":55,"name":"VariableDeclaration","src":"1179:7:0"}],"id":56,"name":"ParameterList","src":"1178:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":489,"type":"function (bool) pure","value":"assert"},"id":57,"name":"Identifier","src":"1194:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"uint256","value":"_b"},"id":58,"name":"Identifier","src":"1201:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":50,"type":"uint256","value":"_a"},"id":59,"name":"Identifier","src":"1207:2:0"}],"id":60,"name":"BinaryOperation","src":"1201:8:0"}],"id":61,"name":"FunctionCall","src":"1194:16:0"}],"id":62,"name":"ExpressionStatement","src":"1194:16:0"},{"attributes":{"functionReturnParameters":56},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":50,"type":"uint256","value":"_a"},"id":63,"name":"Identifier","src":"1223:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"uint256","value":"_b"},"id":64,"name":"Identifier","src":"1228:2:0"}],"id":65,"name":"BinaryOperation","src":"1223:7:0"}],"id":66,"name":"Return","src":"1216:14:0"}],"id":67,"name":"Block","src":"1188:47:0"}],"id":68,"name":"FunctionDefinition","src":"1119:116:0"},{"attributes":{"constant":true,"documentation":"@dev Adds two numbers, throws on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":93,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_a","scope":92,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":69,"name":"ElementaryTypeName","src":"1310:7:0"}],"id":70,"name":"VariableDeclaration","src":"1310:10:0"},{"attributes":{"constant":false,"name":"_b","scope":92,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":71,"name":"ElementaryTypeName","src":"1322:7:0"}],"id":72,"name":"VariableDeclaration","src":"1322:10:0"}],"id":73,"name":"ParameterList","src":"1309:24:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":92,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":74,"name":"ElementaryTypeName","src":"1357:7:0"}],"id":75,"name":"VariableDeclaration","src":"1357:9:0"}],"id":76,"name":"ParameterList","src":"1356:11:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"c"},"id":77,"name":"Identifier","src":"1374:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":70,"type":"uint256","value":"_a"},"id":78,"name":"Identifier","src":"1378:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":72,"type":"uint256","value":"_b"},"id":79,"name":"Identifier","src":"1383:2:0"}],"id":80,"name":"BinaryOperation","src":"1378:7:0"}],"id":81,"name":"Assignment","src":"1374:11:0"}],"id":82,"name":"ExpressionStatement","src":"1374:11:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":489,"type":"function (bool) pure","value":"assert"},"id":83,"name":"Identifier","src":"1391:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"c"},"id":84,"name":"Identifier","src":"1398:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":70,"type":"uint256","value":"_a"},"id":85,"name":"Identifier","src":"1403:2:0"}],"id":86,"name":"BinaryOperation","src":"1398:7:0"}],"id":87,"name":"FunctionCall","src":"1391:15:0"}],"id":88,"name":"ExpressionStatement","src":"1391:15:0"},{"attributes":{"functionReturnParameters":76},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":75,"type":"uint256","value":"c"},"id":89,"name":"Identifier","src":"1419:1:0"}],"id":90,"name":"Return","src":"1412:8:0"}],"id":91,"name":"Block","src":"1368:57:0"}],"id":92,"name":"FunctionDefinition","src":"1297:128:0"}],"id":93,"name":"ContractDefinition","src":"176:1251:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Roles\n@author Francisco Giordano (@frangio)\n@dev Library for managing addresses assigned to a Role.\nSee RBAC.sol for example usage.","fullyImplemented":true,"linearizedBaseContracts":[161],"name":"Roles","scope":486},"children":[{"attributes":{"canonicalName":"Roles.Role","name":"Role","scope":161,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"bearer","scope":98,"stateVariable":false,"storageLocation":"default","type":"mapping(address => bool)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => bool)"},"children":[{"attributes":{"name":"address","type":"address"},"id":94,"name":"ElementaryTypeName","src":"1697:7:0"},{"attributes":{"name":"bool","type":"bool"},"id":95,"name":"ElementaryTypeName","src":"1708:4:0"}],"id":96,"name":"Mapping","src":"1688:25:0"}],"id":97,"name":"VariableDeclaration","src":"1688:32:0"}],"id":98,"name":"StructDefinition","src":"1670:55:0"},{"attributes":{"constant":false,"documentation":"@dev give an address access to this role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":161,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_role","scope":114,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":98,"type":"struct Roles.Role"},"id":99,"name":"UserDefinedTypeName","src":"1800:4:0"}],"id":100,"name":"VariableDeclaration","src":"1800:18:0"},{"attributes":{"constant":false,"name":"_addr","scope":114,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":101,"name":"ElementaryTypeName","src":"1820:7:0"}],"id":102,"name":"VariableDeclaration","src":"1820:13:0"}],"id":103,"name":"ParameterList","src":"1799:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":104,"name":"ParameterList","src":"1850:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bearer","referencedDeclaration":97,"type":"mapping(address => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"struct Roles.Role storage pointer","value":"_role"},"id":105,"name":"Identifier","src":"1856:5:0"}],"id":108,"name":"MemberAccess","src":"1856:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":102,"type":"address","value":"_addr"},"id":107,"name":"Identifier","src":"1869:5:0"}],"id":109,"name":"IndexAccess","src":"1856:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":110,"name":"Literal","src":"1878:4:0"}],"id":111,"name":"Assignment","src":"1856:26:0"}],"id":112,"name":"ExpressionStatement","src":"1856:26:0"}],"id":113,"name":"Block","src":"1850:37:0"}],"id":114,"name":"FunctionDefinition","src":"1787:100:0"},{"attributes":{"constant":false,"documentation":"@dev remove an address' access to this role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"remove","payable":false,"scope":161,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_role","scope":130,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":98,"type":"struct Roles.Role"},"id":115,"name":"UserDefinedTypeName","src":"1968:4:0"}],"id":116,"name":"VariableDeclaration","src":"1968:18:0"},{"attributes":{"constant":false,"name":"_addr","scope":130,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":117,"name":"ElementaryTypeName","src":"1988:7:0"}],"id":118,"name":"VariableDeclaration","src":"1988:13:0"}],"id":119,"name":"ParameterList","src":"1967:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":120,"name":"ParameterList","src":"2018:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bearer","referencedDeclaration":97,"type":"mapping(address => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"struct Roles.Role storage pointer","value":"_role"},"id":121,"name":"Identifier","src":"2024:5:0"}],"id":124,"name":"MemberAccess","src":"2024:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":118,"type":"address","value":"_addr"},"id":123,"name":"Identifier","src":"2037:5:0"}],"id":125,"name":"IndexAccess","src":"2024:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":126,"name":"Literal","src":"2046:5:0"}],"id":127,"name":"Assignment","src":"2024:27:0"}],"id":128,"name":"ExpressionStatement","src":"2024:27:0"}],"id":129,"name":"Block","src":"2018:38:0"}],"id":130,"name":"FunctionDefinition","src":"1952:104:0"},{"attributes":{"constant":true,"documentation":"@dev check if an address has this role\n// reverts","implemented":true,"isConstructor":false,"modifiers":[null],"name":"check","payable":false,"scope":161,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_role","scope":145,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":98,"type":"struct Roles.Role"},"id":131,"name":"UserDefinedTypeName","src":"2147:4:0"}],"id":132,"name":"VariableDeclaration","src":"2147:18:0"},{"attributes":{"constant":false,"name":"_addr","scope":145,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":133,"name":"ElementaryTypeName","src":"2167:7:0"}],"id":134,"name":"VariableDeclaration","src":"2167:13:0"}],"id":135,"name":"ParameterList","src":"2146:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":136,"name":"ParameterList","src":"2206:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[503,504],"referencedDeclaration":503,"type":"function (bool) pure","value":"require"},"id":137,"name":"Identifier","src":"2212:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Role_$98_storage_ptr","typeString":"struct Roles.Role storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":160,"type":"function (struct Roles.Role storage pointer,address) view returns (bool)","value":"has"},"id":138,"name":"Identifier","src":"2220:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":132,"type":"struct Roles.Role storage pointer","value":"_role"},"id":139,"name":"Identifier","src":"2224:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":134,"type":"address","value":"_addr"},"id":140,"name":"Identifier","src":"2231:5:0"}],"id":141,"name":"FunctionCall","src":"2220:17:0"}],"id":142,"name":"FunctionCall","src":"2212:26:0"}],"id":143,"name":"ExpressionStatement","src":"2212:26:0"}],"id":144,"name":"Block","src":"2206:37:0"}],"id":145,"name":"FunctionDefinition","src":"2132:111:0"},{"attributes":{"constant":true,"documentation":"@dev check if an address has this role\n@return bool","implemented":true,"isConstructor":false,"modifiers":[null],"name":"has","payable":false,"scope":161,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_role","scope":160,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":98,"type":"struct Roles.Role"},"id":146,"name":"UserDefinedTypeName","src":"2334:4:0"}],"id":147,"name":"VariableDeclaration","src":"2334:18:0"},{"attributes":{"constant":false,"name":"_addr","scope":160,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":148,"name":"ElementaryTypeName","src":"2354:7:0"}],"id":149,"name":"VariableDeclaration","src":"2354:13:0"}],"id":150,"name":"ParameterList","src":"2333:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":160,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":151,"name":"ElementaryTypeName","src":"2404:4:0"}],"id":152,"name":"VariableDeclaration","src":"2404:4:0"}],"id":153,"name":"ParameterList","src":"2403:6:0"},{"children":[{"attributes":{"functionReturnParameters":153},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bearer","referencedDeclaration":97,"type":"mapping(address => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":147,"type":"struct Roles.Role storage pointer","value":"_role"},"id":154,"name":"Identifier","src":"2425:5:0"}],"id":155,"name":"MemberAccess","src":"2425:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":149,"type":"address","value":"_addr"},"id":156,"name":"Identifier","src":"2438:5:0"}],"id":157,"name":"IndexAccess","src":"2425:19:0"}],"id":158,"name":"Return","src":"2418:26:0"}],"id":159,"name":"Block","src":"2412:37:0"}],"id":160,"name":"FunctionDefinition","src":"2321:128:0"}],"id":161,"name":"ContractDefinition","src":"1652:799:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title RBAC (Role-Based Access Control)\n@author Matt Condon (@Shrugs)\n@dev Stores and provides setters and getters for roles and addresses.\nSupports unlimited numbers of roles and addresses.\nSee //contracts/mocks/RBACMock.sol for an example of usage.\nThis RBAC method uses strings to key roles. It may be beneficial\nfor you to write your own implementation of this interface using Enums or similar.","fullyImplemented":true,"linearizedBaseContracts":[265],"name":"RBAC","scope":486},"children":[{"children":[{"attributes":{"contractScope":null,"name":"Roles","referencedDeclaration":161,"type":"library Roles"},"id":162,"name":"UserDefinedTypeName","src":"2968:5:0"},{"attributes":{"contractScope":null,"name":"Roles.Role","referencedDeclaration":98,"type":"struct Roles.Role"},"id":163,"name":"UserDefinedTypeName","src":"2978:10:0"}],"id":164,"name":"UsingForDirective","src":"2962:27:0"},{"attributes":{"constant":false,"name":"roles","scope":265,"stateVariable":true,"storageLocation":"default","type":"mapping(string => struct Roles.Role)","value":null,"visibility":"private"},"children":[{"attributes":{"type":"mapping(string => struct Roles.Role)"},"children":[{"attributes":{"name":"string","type":"string"},"id":165,"name":"ElementaryTypeName","src":"3002:6:0"},{"attributes":{"contractScope":null,"name":"Roles.Role","referencedDeclaration":98,"type":"struct Roles.Role"},"id":166,"name":"UserDefinedTypeName","src":"3012:10:0"}],"id":167,"name":"Mapping","src":"2993:30:0"}],"id":168,"name":"VariableDeclaration","src":"2993:44:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"RoleAdded"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"operator","scope":174,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":169,"name":"ElementaryTypeName","src":"3058:7:0"}],"id":170,"name":"VariableDeclaration","src":"3058:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"role","scope":174,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":171,"name":"ElementaryTypeName","src":"3084:6:0"}],"id":172,"name":"VariableDeclaration","src":"3084:11:0"}],"id":173,"name":"ParameterList","src":"3057:39:0"}],"id":174,"name":"EventDefinition","src":"3042:55:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"RoleRemoved"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"operator","scope":180,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":175,"name":"ElementaryTypeName","src":"3118:7:0"}],"id":176,"name":"VariableDeclaration","src":"3118:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"role","scope":180,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":177,"name":"ElementaryTypeName","src":"3144:6:0"}],"id":178,"name":"VariableDeclaration","src":"3144:11:0"}],"id":179,"name":"ParameterList","src":"3117:39:0"}],"id":180,"name":"EventDefinition","src":"3100:57:0"},{"attributes":{"constant":true,"documentation":"@dev reverts if addr does not have role\n@param _operator address\n@param _role the name of the role\n// reverts","implemented":true,"isConstructor":false,"modifiers":[null],"name":"checkRole","payable":false,"scope":265,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":195,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":181,"name":"ElementaryTypeName","src":"3322:7:0"}],"id":182,"name":"VariableDeclaration","src":"3322:17:0"},{"attributes":{"constant":false,"name":"_role","scope":195,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":183,"name":"ElementaryTypeName","src":"3341:6:0"}],"id":184,"name":"VariableDeclaration","src":"3341:12:0"}],"id":185,"name":"ParameterList","src":"3321:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":186,"name":"ParameterList","src":"3377:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"check","referencedDeclaration":145,"type":"function (struct Roles.Role storage pointer,address) view"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":187,"name":"Identifier","src":"3383:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":184,"type":"string memory","value":"_role"},"id":188,"name":"Identifier","src":"3389:5:0"}],"id":189,"name":"IndexAccess","src":"3383:12:0"}],"id":190,"name":"MemberAccess","src":"3383:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":182,"type":"address","value":"_operator"},"id":191,"name":"Identifier","src":"3402:9:0"}],"id":192,"name":"FunctionCall","src":"3383:29:0"}],"id":193,"name":"ExpressionStatement","src":"3383:29:0"}],"id":194,"name":"Block","src":"3377:40:0"}],"id":195,"name":"FunctionDefinition","src":"3303:114:0"},{"attributes":{"constant":true,"documentation":"@dev determine if addr has role\n@param _operator address\n@param _role the name of the role\n@return bool","implemented":true,"isConstructor":false,"modifiers":[null],"name":"hasRole","payable":false,"scope":265,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":212,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":196,"name":"ElementaryTypeName","src":"3574:7:0"}],"id":197,"name":"VariableDeclaration","src":"3574:17:0"},{"attributes":{"constant":false,"name":"_role","scope":212,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":198,"name":"ElementaryTypeName","src":"3593:6:0"}],"id":199,"name":"VariableDeclaration","src":"3593:12:0"}],"id":200,"name":"ParameterList","src":"3573:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":212,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":201,"name":"ElementaryTypeName","src":"3640:4:0"}],"id":202,"name":"VariableDeclaration","src":"3640:4:0"}],"id":203,"name":"ParameterList","src":"3639:6:0"},{"children":[{"attributes":{"functionReturnParameters":203},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"has","referencedDeclaration":160,"type":"function (struct Roles.Role storage pointer,address) view returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":204,"name":"Identifier","src":"3661:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":199,"type":"string memory","value":"_role"},"id":205,"name":"Identifier","src":"3667:5:0"}],"id":206,"name":"IndexAccess","src":"3661:12:0"}],"id":207,"name":"MemberAccess","src":"3661:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":197,"type":"address","value":"_operator"},"id":208,"name":"Identifier","src":"3678:9:0"}],"id":209,"name":"FunctionCall","src":"3661:27:0"}],"id":210,"name":"Return","src":"3654:34:0"}],"id":211,"name":"Block","src":"3648:45:0"}],"id":212,"name":"FunctionDefinition","src":"3557:136:0"},{"attributes":{"constant":false,"documentation":"@dev add a role to an address\n@param _operator address\n@param _role the name of the role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"addRole","payable":false,"scope":265,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":232,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":213,"name":"ElementaryTypeName","src":"3830:7:0"}],"id":214,"name":"VariableDeclaration","src":"3830:17:0"},{"attributes":{"constant":false,"name":"_role","scope":232,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":215,"name":"ElementaryTypeName","src":"3849:6:0"}],"id":216,"name":"VariableDeclaration","src":"3849:12:0"}],"id":217,"name":"ParameterList","src":"3829:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":218,"name":"ParameterList","src":"3878:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":114,"type":"function (struct Roles.Role storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":219,"name":"Identifier","src":"3884:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"string memory","value":"_role"},"id":220,"name":"Identifier","src":"3890:5:0"}],"id":221,"name":"IndexAccess","src":"3884:12:0"}],"id":222,"name":"MemberAccess","src":"3884:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":214,"type":"address","value":"_operator"},"id":223,"name":"Identifier","src":"3901:9:0"}],"id":224,"name":"FunctionCall","src":"3884:27:0"}],"id":225,"name":"ExpressionStatement","src":"3884:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":174,"type":"function (address,string memory)","value":"RoleAdded"},"id":226,"name":"Identifier","src":"3922:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":214,"type":"address","value":"_operator"},"id":227,"name":"Identifier","src":"3932:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"string memory","value":"_role"},"id":228,"name":"Identifier","src":"3943:5:0"}],"id":229,"name":"FunctionCall","src":"3922:27:0"}],"id":230,"name":"EmitStatement","src":"3917:32:0"}],"id":231,"name":"Block","src":"3878:76:0"}],"id":232,"name":"FunctionDefinition","src":"3813:141:0"},{"attributes":{"constant":false,"documentation":"@dev remove a role from an address\n@param _operator address\n@param _role the name of the role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"removeRole","payable":false,"scope":265,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":252,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":233,"name":"ElementaryTypeName","src":"4099:7:0"}],"id":234,"name":"VariableDeclaration","src":"4099:17:0"},{"attributes":{"constant":false,"name":"_role","scope":252,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":235,"name":"ElementaryTypeName","src":"4118:6:0"}],"id":236,"name":"VariableDeclaration","src":"4118:12:0"}],"id":237,"name":"ParameterList","src":"4098:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":238,"name":"ParameterList","src":"4147:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"remove","referencedDeclaration":130,"type":"function (struct Roles.Role storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":239,"name":"Identifier","src":"4153:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":236,"type":"string memory","value":"_role"},"id":240,"name":"Identifier","src":"4159:5:0"}],"id":241,"name":"IndexAccess","src":"4153:12:0"}],"id":242,"name":"MemberAccess","src":"4153:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":234,"type":"address","value":"_operator"},"id":243,"name":"Identifier","src":"4173:9:0"}],"id":244,"name":"FunctionCall","src":"4153:30:0"}],"id":245,"name":"ExpressionStatement","src":"4153:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":180,"type":"function (address,string memory)","value":"RoleRemoved"},"id":246,"name":"Identifier","src":"4194:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":234,"type":"address","value":"_operator"},"id":247,"name":"Identifier","src":"4206:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":236,"type":"string memory","value":"_role"},"id":248,"name":"Identifier","src":"4217:5:0"}],"id":249,"name":"FunctionCall","src":"4194:29:0"}],"id":250,"name":"EmitStatement","src":"4189:34:0"}],"id":251,"name":"Block","src":"4147:81:0"}],"id":252,"name":"FunctionDefinition","src":"4079:149:0"},{"attributes":{"documentation":"@dev modifier to scope access to a single role (uses msg.sender as addr)\n@param _role the name of the role\n// reverts","name":"onlyRole","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_role","scope":264,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":253,"name":"ElementaryTypeName","src":"4395:6:0"}],"id":254,"name":"VariableDeclaration","src":"4395:12:0"}],"id":255,"name":"ParameterList","src":"4394:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":195,"type":"function (address,string memory) view","value":"checkRole"},"id":256,"name":"Identifier","src":"4417:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":500,"type":"msg","value":"msg"},"id":257,"name":"Identifier","src":"4427:3:0"}],"id":258,"name":"MemberAccess","src":"4427:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":254,"type":"string memory","value":"_role"},"id":259,"name":"Identifier","src":"4439:5:0"}],"id":260,"name":"FunctionCall","src":"4417:28:0"}],"id":261,"name":"ExpressionStatement","src":"4417:28:0"},{"id":262,"name":"PlaceholderStatement","src":"4451:1:0"}],"id":263,"name":"Block","src":"4411:46:0"}],"id":264,"name":"ModifierDefinition","src":"4377:80:0"}],"id":265,"name":"ContractDefinition","src":"2944:2158:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".","fullyImplemented":true,"linearizedBaseContracts":[349],"name":"Ownable","scope":486},"children":[{"attributes":{"constant":false,"name":"owner","scope":349,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":266,"name":"ElementaryTypeName","src":"5379:7:0"}],"id":267,"name":"VariableDeclaration","src":"5379:20:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipRenounced"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":271,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":268,"name":"ElementaryTypeName","src":"5430:7:0"}],"id":269,"name":"VariableDeclaration","src":"5430:29:0"}],"id":270,"name":"ParameterList","src":"5429:31:0"}],"id":271,"name":"EventDefinition","src":"5405:56:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipTransferred"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":277,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":272,"name":"ElementaryTypeName","src":"5496:7:0"}],"id":273,"name":"VariableDeclaration","src":"5496:29:0"},{"attributes":{"constant":false,"indexed":true,"name":"newOwner","scope":277,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":274,"name":"ElementaryTypeName","src":"5531:7:0"}],"id":275,"name":"VariableDeclaration","src":"5531:24:0"}],"id":276,"name":"ParameterList","src":"5490:69:0"}],"id":277,"name":"EventDefinition","src":"5464:96:0"},{"attributes":{"constant":false,"documentation":"@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":349,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":278,"name":"ParameterList","src":"5692:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":279,"name":"ParameterList","src":"5702:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":267,"type":"address","value":"owner"},"id":280,"name":"Identifier","src":"5708:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":500,"type":"msg","value":"msg"},"id":281,"name":"Identifier","src":"5716:3:0"}],"id":282,"name":"MemberAccess","src":"5716:10:0"}],"id":283,"name":"Assignment","src":"5708:18:0"}],"id":284,"name":"ExpressionStatement","src":"5708:18:0"}],"id":285,"name":"Block","src":"5702:29:0"}],"id":286,"name":"FunctionDefinition","src":"5681:50:0"},{"attributes":{"documentation":"@dev Throws if called by any account other than the owner.","name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":287,"name":"ParameterList","src":"5829:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[503,504],"referencedDeclaration":503,"type":"function (bool) pure","value":"require"},"id":288,"name":"Identifier","src":"5838:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":500,"type":"msg","value":"msg"},"id":289,"name":"Identifier","src":"5846:3:0"}],"id":290,"name":"MemberAccess","src":"5846:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":267,"type":"address","value":"owner"},"id":291,"name":"Identifier","src":"5860:5:0"}],"id":292,"name":"BinaryOperation","src":"5846:19:0"}],"id":293,"name":"FunctionCall","src":"5838:28:0"}],"id":294,"name":"ExpressionStatement","src":"5838:28:0"},{"id":295,"name":"PlaceholderStatement","src":"5872:1:0"}],"id":296,"name":"Block","src":"5832:46:0"}],"id":297,"name":"ModifierDefinition","src":"5811:67:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.","implemented":true,"isConstructor":false,"name":"renounceOwnership","payable":false,"scope":349,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":298,"name":"ParameterList","src":"6168:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":301,"name":"ParameterList","src":"6188:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"modifier ()","value":"onlyOwner"},"id":299,"name":"Identifier","src":"6178:9:0"}],"id":300,"name":"ModifierInvocation","src":"6178:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":271,"type":"function (address)","value":"OwnershipRenounced"},"id":302,"name":"Identifier","src":"6199:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":267,"type":"address","value":"owner"},"id":303,"name":"Identifier","src":"6218:5:0"}],"id":304,"name":"FunctionCall","src":"6199:25:0"}],"id":305,"name":"EmitStatement","src":"6194:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":267,"type":"address","value":"owner"},"id":306,"name":"Identifier","src":"6230:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":307,"name":"ElementaryTypeNameExpression","src":"6238:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":308,"name":"Literal","src":"6246:1:0"}],"id":309,"name":"FunctionCall","src":"6238:10:0"}],"id":310,"name":"Assignment","src":"6230:18:0"}],"id":311,"name":"ExpressionStatement","src":"6230:18:0"}],"id":312,"name":"Block","src":"6188:65:0"}],"id":313,"name":"FunctionDefinition","src":"6142:111:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":349,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":325,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":314,"name":"ElementaryTypeName","src":"6442:7:0"}],"id":315,"name":"VariableDeclaration","src":"6442:17:0"}],"id":316,"name":"ParameterList","src":"6441:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":319,"name":"ParameterList","src":"6478:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"modifier ()","value":"onlyOwner"},"id":317,"name":"Identifier","src":"6468:9:0"}],"id":318,"name":"ModifierInvocation","src":"6468:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (address)","value":"_transferOwnership"},"id":320,"name":"Identifier","src":"6484:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":315,"type":"address","value":"_newOwner"},"id":321,"name":"Identifier","src":"6503:9:0"}],"id":322,"name":"FunctionCall","src":"6484:29:0"}],"id":323,"name":"ExpressionStatement","src":"6484:29:0"}],"id":324,"name":"Block","src":"6478:40:0"}],"id":325,"name":"FunctionDefinition","src":"6415:103:0"},{"attributes":{"constant":false,"documentation":"@dev Transfers control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"_transferOwnership","payable":false,"scope":349,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":348,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":326,"name":"ElementaryTypeName","src":"6681:7:0"}],"id":327,"name":"VariableDeclaration","src":"6681:17:0"}],"id":328,"name":"ParameterList","src":"6680:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":329,"name":"ParameterList","src":"6709:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[503,504],"referencedDeclaration":503,"type":"function (bool) pure","value":"require"},"id":330,"name":"Identifier","src":"6715:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":327,"type":"address","value":"_newOwner"},"id":331,"name":"Identifier","src":"6723:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":332,"name":"ElementaryTypeNameExpression","src":"6736:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":333,"name":"Literal","src":"6744:1:0"}],"id":334,"name":"FunctionCall","src":"6736:10:0"}],"id":335,"name":"BinaryOperation","src":"6723:23:0"}],"id":336,"name":"FunctionCall","src":"6715:32:0"}],"id":337,"name":"ExpressionStatement","src":"6715:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"function (address,address)","value":"OwnershipTransferred"},"id":338,"name":"Identifier","src":"6758:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":267,"type":"address","value":"owner"},"id":339,"name":"Identifier","src":"6779:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":327,"type":"address","value":"_newOwner"},"id":340,"name":"Identifier","src":"6786:9:0"}],"id":341,"name":"FunctionCall","src":"6758:38:0"}],"id":342,"name":"EmitStatement","src":"6753:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":267,"type":"address","value":"owner"},"id":343,"name":"Identifier","src":"6802:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":327,"type":"address","value":"_newOwner"},"id":344,"name":"Identifier","src":"6810:9:0"}],"id":345,"name":"Assignment","src":"6802:17:0"}],"id":346,"name":"ExpressionStatement","src":"6802:17:0"}],"id":347,"name":"Block","src":"6709:115:0"}],"id":348,"name":"FunctionDefinition","src":"6653:171:0"}],"id":349,"name":"ContractDefinition","src":"5358:1468:0"},{"attributes":{"contractDependencies":[265,349],"contractKind":"contract","documentation":"@title Contributions\n@author Vittorio Minacori (https://github.com/vittominacori)\n@dev Utility contract where to save any information about Crowdsale contributions","fullyImplemented":true,"linearizedBaseContracts":[485,349,265],"name":"Contributions","scope":486},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"RBAC","referencedDeclaration":265,"type":"contract RBAC"},"id":350,"name":"UserDefinedTypeName","src":"7089:4:0"}],"id":351,"name":"InheritanceSpecifier","src":"7089:4:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":349,"type":"contract Ownable"},"id":352,"name":"UserDefinedTypeName","src":"7095:7:0"}],"id":353,"name":"InheritanceSpecifier","src":"7095:7:0"},{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":93,"type":"library SafeMath"},"id":354,"name":"UserDefinedTypeName","src":"7114:8:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":355,"name":"ElementaryTypeName","src":"7127:7:0"}],"id":356,"name":"UsingForDirective","src":"7108:27:0"},{"attributes":{"constant":true,"name":"ROLE_OPERATOR","scope":485,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":357,"name":"ElementaryTypeName","src":"7139:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6f70657261746f72","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"operator\"","value":"operator"},"id":358,"name":"Literal","src":"7178:10:0"}],"id":359,"name":"VariableDeclaration","src":"7139:49:0"},{"attributes":{"documentation":null,"name":"onlyOperator","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":360,"name":"ParameterList","src":"7215:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":195,"type":"function (address,string memory) view","value":"checkRole"},"id":361,"name":"Identifier","src":"7224:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":500,"type":"msg","value":"msg"},"id":362,"name":"Identifier","src":"7234:3:0"}],"id":363,"name":"MemberAccess","src":"7234:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":359,"type":"string memory","value":"ROLE_OPERATOR"},"id":364,"name":"Identifier","src":"7246:13:0"}],"id":365,"name":"FunctionCall","src":"7224:36:0"}],"id":366,"name":"ExpressionStatement","src":"7224:36:0"},{"id":367,"name":"PlaceholderStatement","src":"7266:1:0"}],"id":368,"name":"Block","src":"7218:54:0"}],"id":369,"name":"ModifierDefinition","src":"7193:79:0"},{"attributes":{"constant":false,"name":"totalSoldTokens","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":370,"name":"ElementaryTypeName","src":"7276:7:0"}],"id":371,"name":"VariableDeclaration","src":"7276:30:0"},{"attributes":{"constant":false,"name":"totalWeiRaised","scope":485,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":372,"name":"ElementaryTypeName","src":"7310:7:0"}],"id":373,"name":"VariableDeclaration","src":"7310:29:0"},{"attributes":{"constant":false,"name":"tokenBalances","scope":485,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":374,"name":"ElementaryTypeName","src":"7351:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":375,"name":"ElementaryTypeName","src":"7362:7:0"}],"id":376,"name":"Mapping","src":"7343:27:0"}],"id":377,"name":"VariableDeclaration","src":"7343:48:0"},{"attributes":{"constant":false,"name":"weiContributions","scope":485,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":378,"name":"ElementaryTypeName","src":"7403:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":379,"name":"ElementaryTypeName","src":"7414:7:0"}],"id":380,"name":"Mapping","src":"7395:27:0"}],"id":381,"name":"VariableDeclaration","src":"7395:51:0"},{"attributes":{"constant":false,"name":"addresses","scope":485,"stateVariable":true,"storageLocation":"default","type":"address[]","value":null,"visibility":"public"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":382,"name":"ElementaryTypeName","src":"7450:7:0"}],"id":383,"name":"ArrayTypeName","src":"7450:9:0"}],"id":384,"name":"VariableDeclaration","src":"7450:26:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":385,"name":"ParameterList","src":"7492:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":386,"name":"ParameterList","src":"7502:0:0"},{"attributes":{"statements":[null]},"children":[],"id":387,"name":"Block","src":"7502:2:0"}],"id":388,"name":"FunctionDefinition","src":"7481:23:0"},{"attributes":{"constant":false,"documentation":"@dev add contribution into the contributions array\n@param _address address\n@param _weiAmount uint256\n@param _tokenAmount uint256","implemented":true,"isConstructor":false,"name":"addBalance","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_address","scope":449,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":389,"name":"ElementaryTypeName","src":"7694:7:0"}],"id":390,"name":"VariableDeclaration","src":"7694:16:0"},{"attributes":{"constant":false,"name":"_weiAmount","scope":449,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":391,"name":"ElementaryTypeName","src":"7716:7:0"}],"id":392,"name":"VariableDeclaration","src":"7716:18:0"},{"attributes":{"constant":false,"name":"_tokenAmount","scope":449,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":393,"name":"ElementaryTypeName","src":"7740:7:0"}],"id":394,"name":"VariableDeclaration","src":"7740:20:0"}],"id":395,"name":"ParameterList","src":"7688:76:0"},{"attributes":{"parameters":[null]},"children":[],"id":398,"name":"ParameterList","src":"7791:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":369,"type":"modifier ()","value":"onlyOperator"},"id":396,"name":"Identifier","src":"7776:12:0"}],"id":397,"name":"ModifierInvocation","src":"7776:12:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":381,"type":"mapping(address => uint256)","value":"weiContributions"},"id":399,"name":"Identifier","src":"7801:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":390,"type":"address","value":"_address"},"id":400,"name":"Identifier","src":"7818:8:0"}],"id":401,"name":"IndexAccess","src":"7801:26:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":402,"name":"Literal","src":"7831:1:0"}],"id":403,"name":"BinaryOperation","src":"7801:31:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (address) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":384,"type":"address[] storage ref","value":"addresses"},"id":404,"name":"Identifier","src":"7842:9:0"}],"id":406,"name":"MemberAccess","src":"7842:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":390,"type":"address","value":"_address"},"id":407,"name":"Identifier","src":"7857:8:0"}],"id":408,"name":"FunctionCall","src":"7842:24:0"}],"id":409,"name":"ExpressionStatement","src":"7842:24:0"}],"id":410,"name":"Block","src":"7834:39:0"}],"id":411,"name":"IfStatement","src":"7797:76:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":381,"type":"mapping(address => uint256)","value":"weiContributions"},"id":412,"name":"Identifier","src":"7878:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":390,"type":"address","value":"_address"},"id":413,"name":"Identifier","src":"7895:8:0"}],"id":414,"name":"IndexAccess","src":"7878:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":92,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":381,"type":"mapping(address => uint256)","value":"weiContributions"},"id":415,"name":"Identifier","src":"7907:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":390,"type":"address","value":"_address"},"id":416,"name":"Identifier","src":"7924:8:0"}],"id":417,"name":"IndexAccess","src":"7907:26:0"}],"id":418,"name":"MemberAccess","src":"7907:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":392,"type":"uint256","value":"_weiAmount"},"id":419,"name":"Identifier","src":"7938:10:0"}],"id":420,"name":"FunctionCall","src":"7907:42:0"}],"id":421,"name":"Assignment","src":"7878:71:0"}],"id":422,"name":"ExpressionStatement","src":"7878:71:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":373,"type":"uint256","value":"totalWeiRaised"},"id":423,"name":"Identifier","src":"7955:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":92,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":373,"type":"uint256","value":"totalWeiRaised"},"id":424,"name":"Identifier","src":"7972:14:0"}],"id":425,"name":"MemberAccess","src":"7972:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":392,"type":"uint256","value":"_weiAmount"},"id":426,"name":"Identifier","src":"7991:10:0"}],"id":427,"name":"FunctionCall","src":"7972:30:0"}],"id":428,"name":"Assignment","src":"7955:47:0"}],"id":429,"name":"ExpressionStatement","src":"7955:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":377,"type":"mapping(address => uint256)","value":"tokenBalances"},"id":430,"name":"Identifier","src":"8009:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":390,"type":"address","value":"_address"},"id":431,"name":"Identifier","src":"8023:8:0"}],"id":432,"name":"IndexAccess","src":"8009:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":92,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":377,"type":"mapping(address => uint256)","value":"tokenBalances"},"id":433,"name":"Identifier","src":"8035:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":390,"type":"address","value":"_address"},"id":434,"name":"Identifier","src":"8049:8:0"}],"id":435,"name":"IndexAccess","src":"8035:23:0"}],"id":436,"name":"MemberAccess","src":"8035:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":394,"type":"uint256","value":"_tokenAmount"},"id":437,"name":"Identifier","src":"8063:12:0"}],"id":438,"name":"FunctionCall","src":"8035:41:0"}],"id":439,"name":"Assignment","src":"8009:67:0"}],"id":440,"name":"ExpressionStatement","src":"8009:67:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":371,"type":"uint256","value":"totalSoldTokens"},"id":441,"name":"Identifier","src":"8082:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":92,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":371,"type":"uint256","value":"totalSoldTokens"},"id":442,"name":"Identifier","src":"8100:15:0"}],"id":443,"name":"MemberAccess","src":"8100:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":394,"type":"uint256","value":"_tokenAmount"},"id":444,"name":"Identifier","src":"8120:12:0"}],"id":445,"name":"FunctionCall","src":"8100:33:0"}],"id":446,"name":"Assignment","src":"8082:51:0"}],"id":447,"name":"ExpressionStatement","src":"8082:51:0"}],"id":448,"name":"Block","src":"7791:347:0"}],"id":449,"name":"FunctionDefinition","src":"7669:469:0"},{"attributes":{"constant":false,"documentation":"@dev add a operator role to an address\n@param _operator address","implemented":true,"isConstructor":false,"name":"addOperator","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":462,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":450,"name":"ElementaryTypeName","src":"8249:7:0"}],"id":451,"name":"VariableDeclaration","src":"8249:17:0"}],"id":452,"name":"ParameterList","src":"8248:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":455,"name":"ParameterList","src":"8285:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"modifier ()","value":"onlyOwner"},"id":453,"name":"Identifier","src":"8275:9:0"}],"id":454,"name":"ModifierInvocation","src":"8275:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":232,"type":"function (address,string memory)","value":"addRole"},"id":456,"name":"Identifier","src":"8291:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":451,"type":"address","value":"_operator"},"id":457,"name":"Identifier","src":"8299:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":359,"type":"string memory","value":"ROLE_OPERATOR"},"id":458,"name":"Identifier","src":"8310:13:0"}],"id":459,"name":"FunctionCall","src":"8291:33:0"}],"id":460,"name":"ExpressionStatement","src":"8291:33:0"}],"id":461,"name":"Block","src":"8285:44:0"}],"id":462,"name":"FunctionDefinition","src":"8228:101:0"},{"attributes":{"constant":false,"documentation":"@dev remove a operator role from an address\n@param _operator address","implemented":true,"isConstructor":false,"name":"removeOperator","payable":false,"scope":485,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":475,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":463,"name":"ElementaryTypeName","src":"8448:7:0"}],"id":464,"name":"VariableDeclaration","src":"8448:17:0"}],"id":465,"name":"ParameterList","src":"8447:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":468,"name":"ParameterList","src":"8484:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"modifier ()","value":"onlyOwner"},"id":466,"name":"Identifier","src":"8474:9:0"}],"id":467,"name":"ModifierInvocation","src":"8474:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"function (address,string memory)","value":"removeRole"},"id":469,"name":"Identifier","src":"8490:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":464,"type":"address","value":"_operator"},"id":470,"name":"Identifier","src":"8501:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":359,"type":"string memory","value":"ROLE_OPERATOR"},"id":471,"name":"Identifier","src":"8512:13:0"}],"id":472,"name":"FunctionCall","src":"8490:36:0"}],"id":473,"name":"ExpressionStatement","src":"8490:36:0"}],"id":474,"name":"Block","src":"8484:47:0"}],"id":475,"name":"FunctionDefinition","src":"8424:107:0"},{"attributes":{"constant":true,"documentation":"@dev return the contributions length\n@return uint256","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getContributorsLength","payable":false,"scope":485,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":476,"name":"ParameterList","src":"8640:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":477,"name":"ElementaryTypeName","src":"8664:4:0"}],"id":478,"name":"VariableDeclaration","src":"8664:4:0"}],"id":479,"name":"ParameterList","src":"8663:6:0"},{"children":[{"attributes":{"functionReturnParameters":479},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":384,"type":"address[] storage ref","value":"addresses"},"id":480,"name":"Identifier","src":"8683:9:0"}],"id":481,"name":"MemberAccess","src":"8683:16:0"}],"id":482,"name":"Return","src":"8676:23:0"}],"id":483,"name":"Block","src":"8670:34:0"}],"id":484,"name":"FunctionDefinition","src":"8610:94:0"}],"id":485,"name":"ContractDefinition","src":"7063:1643:0"}],"id":486,"name":"SourceUnit","src":"0:8706:0"}}