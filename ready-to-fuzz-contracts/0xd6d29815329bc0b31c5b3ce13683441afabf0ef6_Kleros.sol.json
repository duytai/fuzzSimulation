{"name":"Kleros","address":"0xd6d29815329bc0b31c5b3ce13683441afabf0ef6","source":"/**\n *  @title Kleros\n *  @author Clément Lesaege - <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"adcec1c8c0c8c3d9edc1c8deccc8cac883cec2c0\">[email protected]</a>>\n *  This code implements a simple version of Kleros.\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\n */\n\npragma solidity ^0.4.24;\n\n\ncontract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\n}\n\n/// @dev The token controller contract must implement these functions\ncontract TokenController {\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\n    /// @param _owner The address that sent the ether to create tokens\n    /// @return True if the ether is accepted, false if it throws\n    function proxyPayment(address _owner) public payable returns(bool);\n\n    /// @notice Notifies the controller about a token transfer allowing the\n    ///  controller to react if desired\n    /// @param _from The origin of the transfer\n    /// @param _to The destination of the transfer\n    /// @param _amount The amount of the transfer\n    /// @return False if the controller does not authorize the transfer\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\n\n    /// @notice Notifies the controller about an approval allowing the\n    ///  controller to react if desired\n    /// @param _owner The address that calls `approve()`\n    /// @param _spender The spender in the `approve()` call\n    /// @param _amount The amount in the `approve()` call\n    /// @return False if the controller does not authorize the approval\n    function onApprove(address _owner, address _spender, uint _amount) public\n        returns(bool);\n}\n\ncontract Controlled {\n    /// @notice The address of the controller is the only address that can call\n    ///  a function with this modifier\n    modifier onlyController { require(msg.sender == controller); _; }\n\n    address public controller;\n\n    function Controlled() public { controller = msg.sender;}\n\n    /// @notice Changes the controller of the contract\n    /// @param _newController The new controller of the contract\n    function changeController(address _newController) public onlyController {\n        controller = _newController;\n    }\n}\n\n/// @dev The actual token contract, the default controller is the msg.sender\n///  that deploys the contract, so usually this token will be deployed by a\n///  token controller contract, which Giveth will call a \"Campaign\"\ncontract Pinakion is Controlled {\n\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\n    uint8 public decimals;             //Number of decimals of the smallest unit\n    string public symbol;              //An identifier: e.g. REP\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\n\n\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\n    ///  given value, the block number attached is the one that last changed the\n    ///  value\n    struct  Checkpoint {\n\n        // `fromBlock` is the block number that the value was generated from\n        uint128 fromBlock;\n\n        // `value` is the amount of tokens at a specific block number\n        uint128 value;\n    }\n\n    // `parentToken` is the Token address that was cloned to produce this token;\n    //  it will be 0x0 for a token that was not cloned\n    Pinakion public parentToken;\n\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\n    //  used to determine the initial distribution of the Clone Token\n    uint public parentSnapShotBlock;\n\n    // `creationBlock` is the block number that the Clone Token was created\n    uint public creationBlock;\n\n    // `balances` is the map that tracks the balance of each address, in this\n    //  contract when the balance changes the block number that the change\n    //  occurred is also included in the map\n    mapping (address => Checkpoint[]) balances;\n\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\n    mapping (address => mapping (address => uint256)) allowed;\n\n    // Tracks the history of the `totalSupply` of the token\n    Checkpoint[] totalSupplyHistory;\n\n    // Flag that determines if the token is transferable or not.\n    bool public transfersEnabled;\n\n    // The factory used to create new clone tokens\n    MiniMeTokenFactory public tokenFactory;\n\n////////////////\n// Constructor\n////////////////\n\n    /// @notice Constructor to create a Pinakion\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\n    ///  will create the Clone token contracts, the token factory needs to be\n    ///  deployed first\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\n    ///  new token\n    /// @param _parentSnapShotBlock Block of the parent token that will\n    ///  determine the initial distribution of the clone token, set to 0 if it\n    ///  is a new token\n    /// @param _tokenName Name of the new token\n    /// @param _decimalUnits Number of decimals of the new token\n    /// @param _tokenSymbol Token Symbol for the new token\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\n    function Pinakion(\n        address _tokenFactory,\n        address _parentToken,\n        uint _parentSnapShotBlock,\n        string _tokenName,\n        uint8 _decimalUnits,\n        string _tokenSymbol,\n        bool _transfersEnabled\n    ) public {\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\n        name = _tokenName;                                 // Set the name\n        decimals = _decimalUnits;                          // Set the decimals\n        symbol = _tokenSymbol;                             // Set the symbol\n        parentToken = Pinakion(_parentToken);\n        parentSnapShotBlock = _parentSnapShotBlock;\n        transfersEnabled = _transfersEnabled;\n        creationBlock = block.number;\n    }\n\n\n///////////////////\n// ERC20 Methods\n///////////////////\n\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\n        require(transfersEnabled);\n        doTransfer(msg.sender, _to, _amount);\n        return true;\n    }\n\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\n    ///  is approved by `_from`\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function transferFrom(address _from, address _to, uint256 _amount\n    ) public returns (bool success) {\n\n        // The controller of this contract can move tokens around at will,\n        //  this is important to recognize! Confirm that you trust the\n        //  controller of this contract, which in most situations should be\n        //  another open source smart contract or 0x0\n        if (msg.sender != controller) {\n            require(transfersEnabled);\n\n            // The standard ERC 20 transferFrom functionality\n            require(allowed[_from][msg.sender] >= _amount);\n            allowed[_from][msg.sender] -= _amount;\n        }\n        doTransfer(_from, _to, _amount);\n        return true;\n    }\n\n    /// @dev This is the actual transfer function in the token contract, it can\n    ///  only be called by other functions in this contract.\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function doTransfer(address _from, address _to, uint _amount\n    ) internal {\n\n           if (_amount == 0) {\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\n               return;\n           }\n\n           require(parentSnapShotBlock < block.number);\n\n           // Do not allow transfer to 0x0 or the token contract itself\n           require((_to != 0) && (_to != address(this)));\n\n           // If the amount being transfered is more than the balance of the\n           //  account the transfer throws\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\n\n           require(previousBalanceFrom >= _amount);\n\n           // Alerts the token controller of the transfer\n           if (isContract(controller)) {\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\n           }\n\n           // First update the balance array with the new value for the address\n           //  sending the tokens\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\n\n           // Then update the balance array with the new value for the address\n           //  receiving the tokens\n           var previousBalanceTo = balanceOfAt(_to, block.number);\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\n\n           // An event to make the transfer easy to find on the blockchain\n           Transfer(_from, _to, _amount);\n\n    }\n\n    /// @param _owner The address that's balance is being requested\n    /// @return The balance of `_owner` at the current block\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balanceOfAt(_owner, block.number);\n    }\n\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n    ///  its behalf. This is the standard version to allow backward compatibility.\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the approval was successful\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\n        require(transfersEnabled);\n\n        // Alerts the token controller of the approve function call\n        if (isContract(controller)) {\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\n        }\n\n        allowed[msg.sender][_spender] = _amount;\n        Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    /// @dev This function makes it easy to read the `allowed[]` map\n    /// @param _owner The address of the account that owns the token\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\n    ///  to spend\n    function allowance(address _owner, address _spender\n    ) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\n    ///  its behalf, and then a function is triggered in the contract that is\n    ///  being approved, `_spender`. This allows users to use their tokens to\n    ///  interact with contracts in one function call instead of two\n    /// @param _spender The address of the contract able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the function call was successful\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\n    ) public returns (bool success) {\n        require(approve(_spender, _amount));\n\n        ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        );\n\n        return true;\n    }\n\n    /// @dev This function makes it easy to get the total number of tokens\n    /// @return The total number of tokens\n    function totalSupply() public constant returns (uint) {\n        return totalSupplyAt(block.number);\n    }\n\n\n////////////////\n// Query balance and totalSupply in History\n////////////////\n\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\n    /// @param _owner The address from which the balance will be retrieved\n    /// @param _blockNumber The block number when the balance is queried\n    /// @return The balance at `_blockNumber`\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\n        returns (uint) {\n\n        // These next few lines are used when the balance of the token is\n        //  requested before a check point was ever created for this token, it\n        //  requires that the `parentToken.balanceOfAt` be queried at the\n        //  genesis block for that token as this contains initial balance of\n        //  this token\n        if ((balances[_owner].length == 0)\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\n            if (address(parentToken) != 0) {\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\n            } else {\n                // Has no parent\n                return 0;\n            }\n\n        // This will return the expected balance during normal situations\n        } else {\n            return getValueAt(balances[_owner], _blockNumber);\n        }\n    }\n\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\n    /// @param _blockNumber The block number when the totalSupply is queried\n    /// @return The total amount of tokens at `_blockNumber`\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\n\n        // These next few lines are used when the totalSupply of the token is\n        //  requested before a check point was ever created for this token, it\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\n        //  genesis block for this token as that contains totalSupply of this\n        //  token at this block number.\n        if ((totalSupplyHistory.length == 0)\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\n            if (address(parentToken) != 0) {\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\n            } else {\n                return 0;\n            }\n\n        // This will return the expected totalSupply during normal situations\n        } else {\n            return getValueAt(totalSupplyHistory, _blockNumber);\n        }\n    }\n\n////////////////\n// Clone Token Method\n////////////////\n\n    /// @notice Creates a new clone token with the initial distribution being\n    ///  this token at `_snapshotBlock`\n    /// @param _cloneTokenName Name of the clone token\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\n    /// @param _cloneTokenSymbol Symbol of the clone token\n    /// @param _snapshotBlock Block when the distribution of the parent token is\n    ///  copied to set the initial distribution of the new clone token;\n    ///  if the block is zero than the actual block, the current block is used\n    /// @param _transfersEnabled True if transfers are allowed in the clone\n    /// @return The address of the new MiniMeToken Contract\n    function createCloneToken(\n        string _cloneTokenName,\n        uint8 _cloneDecimalUnits,\n        string _cloneTokenSymbol,\n        uint _snapshotBlock,\n        bool _transfersEnabled\n        ) public returns(address) {\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\n        Pinakion cloneToken = tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            );\n\n        cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function generateTokens(address _owner, uint _amount\n    ) public onlyController returns (bool) {\n        uint curTotalSupply = totalSupply();\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\n        uint previousBalanceTo = balanceOf(_owner);\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\n        Transfer(0, _owner, _amount);\n        return true;\n    }\n\n\n    /// @notice Burns `_amount` tokens from `_owner`\n    /// @param _owner The address that will lose the tokens\n    /// @param _amount The quantity of tokens to burn\n    /// @return True if the tokens are burned correctly\n    function destroyTokens(address _owner, uint _amount\n    ) onlyController public returns (bool) {\n        uint curTotalSupply = totalSupply();\n        require(curTotalSupply >= _amount);\n        uint previousBalanceFrom = balanceOf(_owner);\n        require(previousBalanceFrom >= _amount);\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\n        Transfer(_owner, 0, _amount);\n        return true;\n    }\n\n////////////////\n// Enable tokens transfers\n////////////////\n\n\n    /// @notice Enables token holders to transfer their tokens freely if true\n    /// @param _transfersEnabled True if transfers are allowed in the clone\n    function enableTransfers(bool _transfersEnabled) public onlyController {\n        transfersEnabled = _transfersEnabled;\n    }\n\n////////////////\n// Internal helper functions to query and set a value in a snapshot array\n////////////////\n\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\n    /// @param checkpoints The history of values being queried\n    /// @param _block The block number to retrieve the value at\n    /// @return The number of tokens being queried\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\n    ) constant internal returns (uint) {\n        if (checkpoints.length == 0) return 0;\n\n        // Shortcut for the actual value\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\n            return checkpoints[checkpoints.length-1].value;\n        if (_block < checkpoints[0].fromBlock) return 0;\n\n        // Binary search of the value in the array\n        uint min = 0;\n        uint max = checkpoints.length-1;\n        while (max > min) {\n            uint mid = (max + min + 1)/ 2;\n            if (checkpoints[mid].fromBlock<=_block) {\n                min = mid;\n            } else {\n                max = mid-1;\n            }\n        }\n        return checkpoints[min].value;\n    }\n\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\n    ///  `totalSupplyHistory`\n    /// @param checkpoints The history of data being updated\n    /// @param _value The new number of tokens\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\n    ) internal  {\n        if ((checkpoints.length == 0)\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\n               newCheckPoint.fromBlock =  uint128(block.number);\n               newCheckPoint.value = uint128(_value);\n           } else {\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\n               oldCheckPoint.value = uint128(_value);\n           }\n    }\n\n    /// @dev Internal function to determine if an address is a contract\n    /// @param _addr The address being queried\n    /// @return True if `_addr` is a contract\n    function isContract(address _addr) constant internal returns(bool) {\n        uint size;\n        if (_addr == 0) return false;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        return size>0;\n    }\n\n    /// @dev Helper function to return a min betwen the two uints\n    function min(uint a, uint b) pure internal returns (uint) {\n        return a < b ? a : b;\n    }\n\n    /// @notice The fallback function: If the contract's controller has not been\n    ///  set to 0, then the `proxyPayment` method is called which relays the\n    ///  ether and creates tokens as described in the token controller contract\n    function () public payable {\n        require(isContract(controller));\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\n    }\n\n//////////\n// Safety Methods\n//////////\n\n    /// @notice This method can be used by the controller to extract mistakenly\n    ///  sent tokens to this contract.\n    /// @param _token The address of the token contract that you want to recover\n    ///  set to 0 in case you want to extract ether.\n    function claimTokens(address _token) public onlyController {\n        if (_token == 0x0) {\n            controller.transfer(this.balance);\n            return;\n        }\n\n        Pinakion token = Pinakion(_token);\n        uint balance = token.balanceOf(this);\n        token.transfer(controller, balance);\n        ClaimedTokens(_token, controller, balance);\n    }\n\n////////////////\n// Events\n////////////////\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _amount\n        );\n\n}\n\n\n////////////////\n// MiniMeTokenFactory\n////////////////\n\n/// @dev This contract is used to generate clone contracts from a contract.\n///  In solidity this is the way to create a contract from a contract of the\n///  same class\ncontract MiniMeTokenFactory {\n\n    /// @notice Update the DApp by creating a new token with new functionalities\n    ///  the msg.sender becomes the controller of this clone token\n    /// @param _parentToken Address of the token being cloned\n    /// @param _snapshotBlock Block of the parent token that will\n    ///  determine the initial distribution of the clone token\n    /// @param _tokenName Name of the new token\n    /// @param _decimalUnits Number of decimals of the new token\n    /// @param _tokenSymbol Token Symbol for the new token\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\n    /// @return The address of the new token contract\n    function createCloneToken(\n        address _parentToken,\n        uint _snapshotBlock,\n        string _tokenName,\n        uint8 _decimalUnits,\n        string _tokenSymbol,\n        bool _transfersEnabled\n    ) public returns (Pinakion) {\n        Pinakion newToken = new Pinakion(\n            this,\n            _parentToken,\n            _snapshotBlock,\n            _tokenName,\n            _decimalUnits,\n            _tokenSymbol,\n            _transfersEnabled\n            );\n\n        newToken.changeController(msg.sender);\n        return newToken;\n    }\n}\n\ncontract RNG{\n\n    /** @dev Contribute to the reward of a random number.\n     *  @param _block Block the random number is linked to.\n     */\n    function contribute(uint _block) public payable;\n\n    /** @dev Request a random number.\n     *  @param _block Block linked to the request.\n     */\n    function requestRN(uint _block) public payable {\n        contribute(_block);\n    }\n\n    /** @dev Get the random number.\n     *  @param _block Block the random number is linked to.\n     *  @return RN Random Number. If the number is not ready or has not been required 0 instead.\n     */\n    function getRN(uint _block) public returns (uint RN);\n\n    /** @dev Get a uncorrelated random number. Act like getRN but give a different number for each sender.\n     *  This is to prevent users from getting correlated numbers.\n     *  @param _block Block the random number is linked to.\n     *  @return RN Random Number. If the number is not ready or has not been required 0 instead.\n     */\n    function getUncorrelatedRN(uint _block) public returns (uint RN) {\n        uint baseRN=getRN(_block);\n        if (baseRN==0)\n            return 0;\n        else\n            return uint(keccak256(msg.sender,baseRN));\n    }\n\n }\n\n/** Simple Random Number Generator returning the blockhash.\n *  Allows saving the random number for use in the future.\n *  It allows the contract to still access the blockhash even after 256 blocks.\n *  The first party to call the save function gets the reward.\n */\ncontract BlockHashRNG is RNG {\n\n    mapping (uint => uint) public randomNumber; // randomNumber[block] is the random number for this block, 0 otherwise.\n    mapping (uint => uint) public reward; // reward[block] is the amount to be paid to the party w.\n\n\n\n    /** @dev Contribute to the reward of a random number.\n     *  @param _block Block the random number is linked to.\n     */\n    function contribute(uint _block) public payable { reward[_block]+=msg.value; }\n\n\n    /** @dev Return the random number. If it has not been saved and is still computable compute it.\n     *  @param _block Block the random number is linked to.\n     *  @return RN Random Number. If the number is not ready or has not been requested 0 instead.\n     */\n    function getRN(uint _block) public returns (uint RN) {\n        RN=randomNumber[_block];\n        if (RN==0){\n            saveRN(_block);\n            return randomNumber[_block];\n        }\n        else\n            return RN;\n    }\n\n    /** @dev Save the random number for this blockhash and give the reward to the caller.\n     *  @param _block Block the random number is linked to.\n     */\n    function saveRN(uint _block) public {\n        if (blockhash(_block) != 0x0)\n            randomNumber[_block] = uint(blockhash(_block));\n        if (randomNumber[_block] != 0) { // If the number is set.\n            uint rewardToSend = reward[_block];\n            reward[_block] = 0;\n            msg.sender.send(rewardToSend); // Note that the use of send is on purpose as we don't want to block in case msg.sender has a fallback issue.\n        }\n    }\n\n}\n\n\n/** Random Number Generator returning the blockhash with a backup behaviour.\n *  Allows saving the random number for use in the future. \n *  It allows the contract to still access the blockhash even after 256 blocks.\n *  The first party to call the save function gets the reward.\n *  If no one calls the contract within 256 blocks, the contract fallback in returning the blockhash of the previous block.\n */\ncontract BlockHashRNGFallback is BlockHashRNG {\n    \n    /** @dev Save the random number for this blockhash and give the reward to the caller.\n     *  @param _block Block the random number is linked to.\n     */\n    function saveRN(uint _block) public {\n        if (_block<block.number && randomNumber[_block]==0) {// If the random number is not already set and can be.\n            if (blockhash(_block)!=0x0) // Normal case.\n                randomNumber[_block]=uint(blockhash(_block));\n            else // The contract was not called in time. Fallback to returning previous blockhash.\n                randomNumber[_block]=uint(blockhash(block.number-1));\n        }\n        if (randomNumber[_block] != 0) { // If the random number is set.\n            uint rewardToSend=reward[_block];\n            reward[_block]=0;\n            msg.sender.send(rewardToSend); // Note that the use of send is on purpose as we don't want to block in case the msg.sender has a fallback issue.\n        }\n    }\n    \n}\n\n/** @title Arbitrable\n *  Arbitrable abstract contract.\n *  When developing arbitrable contracts, we need to:\n *  -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\n *  -Allow dispute creation. For this a function must:\n *      -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\n *      -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);\n */\ncontract Arbitrable{\n    Arbitrator public arbitrator;\n    bytes public arbitratorExtraData; // Extra data to require particular dispute and appeal behaviour.\n\n    modifier onlyArbitrator {require(msg.sender==address(arbitrator)); _;}\n\n    /** @dev To be raised when a ruling is given.\n     *  @param _arbitrator The arbitrator giving the ruling.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling The ruling which was given.\n     */\n    event Ruling(Arbitrator indexed _arbitrator, uint indexed _disputeID, uint _ruling);\n\n    /** @dev To be emmited when meta-evidence is submitted.\n     *  @param _metaEvidenceID Unique identifier of meta-evidence.\n     *  @param _evidence A link to the meta-evidence JSON.\n     */\n    event MetaEvidence(uint indexed _metaEvidenceID, string _evidence);\n\n    /** @dev To be emmited when a dispute is created to link the correct meta-evidence to the disputeID\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _metaEvidenceID Unique identifier of meta-evidence.\n     */\n    event Dispute(Arbitrator indexed _arbitrator, uint indexed _disputeID, uint _metaEvidenceID);\n\n    /** @dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due to gas considerations).\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n     *  @param _evidence A URI to the evidence JSON file whose name should be its keccak256 hash followed by .json.\n     */\n    event Evidence(Arbitrator indexed _arbitrator, uint indexed _disputeID, address _party, string _evidence);\n\n    /** @dev Constructor. Choose the arbitrator.\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\n     */\n    constructor(Arbitrator _arbitrator, bytes _arbitratorExtraData) public {\n        arbitrator = _arbitrator;\n        arbitratorExtraData = _arbitratorExtraData;\n    }\n\n    /** @dev Give a ruling for a dispute. Must be called by the arbitrator.\n     *  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\n     */\n    function rule(uint _disputeID, uint _ruling) public onlyArbitrator {\n        emit Ruling(Arbitrator(msg.sender),_disputeID,_ruling);\n\n        executeRuling(_disputeID,_ruling);\n    }\n\n\n    /** @dev Execute a ruling of a dispute.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\n     */\n    function executeRuling(uint _disputeID, uint _ruling) internal;\n}\n\n/** @title Arbitrator\n *  Arbitrator abstract contract.\n *  When developing arbitrator contracts we need to:\n *  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n *  -Define the functions for cost display (arbitrationCost and appealCost).\n *  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).\n */\ncontract Arbitrator{\n\n    enum DisputeStatus {Waiting, Appealable, Solved}\n\n    modifier requireArbitrationFee(bytes _extraData) {require(msg.value>=arbitrationCost(_extraData)); _;}\n    modifier requireAppealFee(uint _disputeID, bytes _extraData) {require(msg.value>=appealCost(_disputeID, _extraData)); _;}\n\n    /** @dev To be raised when a dispute can be appealed.\n     *  @param _disputeID ID of the dispute.\n     */\n    event AppealPossible(uint _disputeID);\n\n    /** @dev To be raised when a dispute is created.\n     *  @param _disputeID ID of the dispute.\n     *  @param _arbitrable The contract which created the dispute.\n     */\n    event DisputeCreation(uint indexed _disputeID, Arbitrable _arbitrable);\n\n    /** @dev To be raised when the current ruling is appealed.\n     *  @param _disputeID ID of the dispute.\n     *  @param _arbitrable The contract which created the dispute.\n     */\n    event AppealDecision(uint indexed _disputeID, Arbitrable _arbitrable);\n\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\n     *  Must be paid at least arbitrationCost(_extraData).\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return disputeID ID of the dispute created.\n     */\n    function createDispute(uint _choices, bytes _extraData) public requireArbitrationFee(_extraData) payable returns(uint disputeID)  {}\n\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return fee Amount to be paid.\n     */\n    function arbitrationCost(bytes _extraData) public constant returns(uint fee);\n\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Can be used to give extra info on the appeal.\n     */\n    function appeal(uint _disputeID, bytes _extraData) public requireAppealFee(_disputeID,_extraData) payable {\n        emit AppealDecision(_disputeID, Arbitrable(msg.sender));\n    }\n\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\n     *  @return fee Amount to be paid.\n     */\n    function appealCost(uint _disputeID, bytes _extraData) public constant returns(uint fee);\n\n    /** @dev Return the status of a dispute.\n     *  @param _disputeID ID of the dispute to rule.\n     *  @return status The status of the dispute.\n     */\n    function disputeStatus(uint _disputeID) public constant returns(DisputeStatus status);\n\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n     *  @param _disputeID ID of the dispute.\n     *  @return ruling The ruling which has been given or the one which will be given if there is no appeal.\n     */\n    function currentRuling(uint _disputeID) public constant returns(uint ruling);\n\n}\n\n\n\ncontract Kleros is Arbitrator, ApproveAndCallFallBack {\n\n    // **************************** //\n    // *    Contract variables    * //\n    // **************************** //\n\n    // Variables which should not change after initialization.\n    Pinakion public pinakion;\n    uint public constant NON_PAYABLE_AMOUNT = (2**256 - 2) / 2; // An astronomic amount, practically can't be paid.\n\n    // Variables which will subject to the governance mechanism.\n    // Note they will only be able to be changed during the activation period (because a session assumes they don't change after it).\n    RNG public rng; // Random Number Generator used to draw jurors.\n    uint public arbitrationFeePerJuror = 0.05 ether; // The fee which will be paid to each juror.\n    uint16 public defaultNumberJuror = 3; // Number of drawn jurors unless specified otherwise.\n    uint public minActivatedToken = 0.1 * 1e18; // Minimum of tokens to be activated (in basic units).\n    uint[5] public timePerPeriod; // The minimum time each period lasts (seconds).\n    uint public alpha = 2000; // alpha in ‱ (1 / 10 000).\n    uint constant ALPHA_DIVISOR = 1e4; // Amount we need to divided alpha in ‱ to get the float value of alpha.\n    uint public maxAppeals = 5; // Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.\n    // Initially, the governor will be an address controlled by the Kleros team. At a later stage,\n    // the governor will be switched to a governance contract with liquid voting.\n    address public governor; // Address of the governor contract.\n\n    // Variables changing during day to day interaction.\n    uint public session = 1;      // Current session of the court.\n    uint public lastPeriodChange; // The last time we changed of period (seconds).\n    uint public segmentSize;      // Size of the segment of activated tokens.\n    uint public rnBlock;          // The block linked with the RN which is requested.\n    uint public randomNumber;     // Random number of the session.\n\n    enum Period {\n        Activation, // When juror can deposit their tokens and parties give evidences.\n        Draw,       // When jurors are drawn at random, note that this period is fast.\n        Vote,       // Where jurors can vote on disputes.\n        Appeal,     // When parties can appeal the rulings.\n        Execution   // When where token redistribution occurs and Kleros call the arbitrated contracts.\n    }\n\n    Period public period;\n\n    struct Juror {\n        uint balance;      // The amount of tokens the contract holds for this juror.\n        uint atStake;      // Total number of tokens the jurors can loose in disputes they are drawn in. Those tokens are locked. Note that we can have atStake > balance but it should be statistically unlikely and does not pose issues.\n        uint lastSession;  // Last session the tokens were activated.\n        uint segmentStart; // Start of the segment of activated tokens.\n        uint segmentEnd;   // End of the segment of activated tokens.\n    }\n\n    mapping (address => Juror) public jurors;\n\n    struct Vote {\n        address account; // The juror who casted the vote.\n        uint ruling;     // The ruling which was given.\n    }\n\n    struct VoteCounter {\n        uint winningChoice; // The choice which currently has the highest amount of votes. Is 0 in case of a tie.\n        uint winningCount;  // The number of votes for winningChoice. Or for the choices which are tied.\n        mapping (uint => uint) voteCount; // voteCount[choice] is the number of votes for choice.\n    }\n\n    enum DisputeState {\n        Open,       // The dispute is opened but the outcome is not available yet (this include when jurors voted but appeal is still possible).\n        Resolving,  // The token repartition has started. Note that if it's done in just one call, this state is skipped.\n        Executable, // The arbitrated contract can be called to enforce the decision.\n        Executed    // Everything has been done and the dispute can't be interacted with anymore.\n    }\n\n    struct Dispute {\n        Arbitrable arbitrated;       // Contract to be arbitrated.\n        uint session;                // First session the dispute was schedule.\n        uint appeals;                // Number of appeals.\n        uint choices;                // The number of choices available to the jurors.\n        uint16 initialNumberJurors;  // The initial number of jurors.\n        uint arbitrationFeePerJuror; // The fee which will be paid to each juror.\n        DisputeState state;          // The state of the dispute.\n        Vote[][] votes;              // The votes in the form vote[appeals][voteID].\n        VoteCounter[] voteCounter;   // The vote counters in the form voteCounter[appeals].\n        mapping (address => uint) lastSessionVote; // Last session a juror has voted on this dispute. Is 0 if he never did.\n        uint currentAppealToRepartition; // The current appeal we are repartitioning.\n        AppealsRepartitioned[] appealsRepartitioned; // Track a partially repartitioned appeal in the form AppealsRepartitioned[appeal].\n    }\n\n    enum RepartitionStage { // State of the token repartition if oneShotTokenRepartition would throw because there are too many votes.\n        Incoherent,\n        Coherent,\n        AtStake,\n        Complete\n    }\n\n    struct AppealsRepartitioned {\n        uint totalToRedistribute;   // Total amount of tokens we have to redistribute.\n        uint nbCoherent;            // Number of coherent jurors for session.\n        uint currentIncoherentVote; // Current vote for the incoherent loop.\n        uint currentCoherentVote;   // Current vote we need to count.\n        uint currentAtStakeVote;    // Current vote we need to count.\n        RepartitionStage stage;     // Use with multipleShotTokenRepartition if oneShotTokenRepartition would throw.\n    }\n\n    Dispute[] public disputes;\n\n    // **************************** //\n    // *          Events          * //\n    // **************************** //\n\n    /** @dev Emitted when we pass to a new period.\n     *  @param _period The new period.\n     *  @param _session The current session.\n     */\n    event NewPeriod(Period _period, uint indexed _session);\n\n    /** @dev Emitted when a juror wins or loses tokens.\n      * @param _account The juror affected.\n      * @param _disputeID The ID of the dispute.\n      * @param _amount The amount of parts of token which was won. Can be negative for lost amounts.\n      */\n    event TokenShift(address indexed _account, uint _disputeID, int _amount);\n\n    /** @dev Emited when a juror wins arbitration fees.\n      * @param _account The account affected.\n      * @param _disputeID The ID of the dispute.\n      * @param _amount The amount of weis which was won.\n      */\n    event ArbitrationReward(address indexed _account, uint _disputeID, uint _amount);\n\n    // **************************** //\n    // *         Modifiers        * //\n    // **************************** //\n    modifier onlyBy(address _account) {require(msg.sender == _account); _;}\n    modifier onlyDuring(Period _period) {require(period == _period); _;}\n    modifier onlyGovernor() {require(msg.sender == governor); _;}\n\n\n    /** @dev Constructor.\n     *  @param _pinakion The address of the pinakion contract.\n     *  @param _rng The random number generator which will be used.\n     *  @param _timePerPeriod The minimal time for each period (seconds).\n     *  @param _governor Address of the governor contract.\n     */\n    constructor(Pinakion _pinakion, RNG _rng, uint[5] _timePerPeriod, address _governor) public {\n        pinakion = _pinakion;\n        rng = _rng;\n        lastPeriodChange = now;\n        timePerPeriod = _timePerPeriod;\n        governor = _governor;\n    }\n\n    // **************************** //\n    // *  Functions interacting   * //\n    // *  with Pinakion contract  * //\n    // **************************** //\n\n    /** @dev Callback of approveAndCall - transfer pinakions of a juror in the contract. Should be called by the pinakion contract. TRUSTED.\n     *  @param _from The address making the transfer.\n     *  @param _amount Amount of tokens to transfer to Kleros (in basic units).\n     */\n    function receiveApproval(address _from, uint _amount, address, bytes) public onlyBy(pinakion) {\n        require(pinakion.transferFrom(_from, this, _amount));\n\n        jurors[_from].balance += _amount;\n    }\n\n    /** @dev Withdraw tokens. Note that we can't withdraw the tokens which are still atStake. \n     *  Jurors can't withdraw their tokens if they have deposited some during this session.\n     *  This is to prevent jurors from withdrawing tokens they could loose.\n     *  @param _value The amount to withdraw.\n     */\n    function withdraw(uint _value) public {\n        Juror storage juror = jurors[msg.sender];\n        require(juror.atStake <= juror.balance); // Make sure that there is no more at stake than owned to avoid overflow.\n        require(_value <= juror.balance-juror.atStake);\n        require(juror.lastSession != session);\n\n        juror.balance -= _value;\n        require(pinakion.transfer(msg.sender,_value));\n    }\n\n    // **************************** //\n    // *      Court functions     * //\n    // *    Modifying the state   * //\n    // **************************** //\n\n    /** @dev To call to go to a new period. TRUSTED.\n     */\n    function passPeriod() public {\n        require(now-lastPeriodChange >= timePerPeriod[uint8(period)]);\n\n        if (period == Period.Activation) {\n            rnBlock = block.number + 1;\n            rng.requestRN(rnBlock);\n            period = Period.Draw;\n        } else if (period == Period.Draw) {\n            randomNumber = rng.getUncorrelatedRN(rnBlock);\n            require(randomNumber != 0);\n            period = Period.Vote;\n        } else if (period == Period.Vote) {\n            period = Period.Appeal;\n        } else if (period == Period.Appeal) {\n            period = Period.Execution;\n        } else if (period == Period.Execution) {\n            period = Period.Activation;\n            ++session;\n            segmentSize = 0;\n            rnBlock = 0;\n            randomNumber = 0;\n        }\n\n\n        lastPeriodChange = now;\n        NewPeriod(period, session);\n    }\n\n\n    /** @dev Deposit tokens in order to have chances of being drawn. Note that once tokens are deposited, \n     *  there is no possibility of depositing more.\n     *  @param _value Amount of tokens (in basic units) to deposit.\n     */\n    function activateTokens(uint _value) public onlyDuring(Period.Activation) {\n        Juror storage juror = jurors[msg.sender];\n        require(_value <= juror.balance);\n        require(_value >= minActivatedToken);\n        require(juror.lastSession != session); // Verify that tokens were not already activated for this session.\n\n        juror.lastSession = session;\n        juror.segmentStart = segmentSize;\n        segmentSize += _value;\n        juror.segmentEnd = segmentSize;\n\n    }\n\n    /** @dev Vote a ruling. Juror must input the draw ID he was drawn.\n     *  Note that the complexity is O(d), where d is amount of times the juror was drawn.\n     *  Since being drawn multiple time is a rare occurrence and that a juror can always vote with less weight than it has, it is not a problem.\n     *  But note that it can lead to arbitration fees being kept by the contract and never distributed.\n     *  @param _disputeID The ID of the dispute the juror was drawn.\n     *  @param _ruling The ruling given.\n     *  @param _draws The list of draws the juror was drawn. Draw numbering starts at 1 and the numbers should be increasing.\n     */\n    function voteRuling(uint _disputeID, uint _ruling, uint[] _draws) public onlyDuring(Period.Vote) {\n        Dispute storage dispute = disputes[_disputeID];\n        Juror storage juror = jurors[msg.sender];\n        VoteCounter storage voteCounter = dispute.voteCounter[dispute.appeals];\n        require(dispute.lastSessionVote[msg.sender] != session); // Make sure juror hasn't voted yet.\n        require(_ruling <= dispute.choices);\n        // Note that it throws if the draws are incorrect.\n        require(validDraws(msg.sender, _disputeID, _draws));\n\n        dispute.lastSessionVote[msg.sender] = session;\n        voteCounter.voteCount[_ruling] += _draws.length;\n        if (voteCounter.winningCount < voteCounter.voteCount[_ruling]) {\n            voteCounter.winningCount = voteCounter.voteCount[_ruling];\n            voteCounter.winningChoice = _ruling;\n        } else if (voteCounter.winningCount==voteCounter.voteCount[_ruling] && _draws.length!=0) { // Verify draw length to be non-zero to avoid the possibility of setting tie by casting 0 votes.\n            voteCounter.winningChoice = 0; // It's currently a tie.\n        }\n        for (uint i = 0; i < _draws.length; ++i) {\n            dispute.votes[dispute.appeals].push(Vote({\n                account: msg.sender,\n                ruling: _ruling\n            }));\n        }\n\n        juror.atStake += _draws.length * getStakePerDraw();\n        uint feeToPay = _draws.length * dispute.arbitrationFeePerJuror;\n        msg.sender.transfer(feeToPay);\n        ArbitrationReward(msg.sender, _disputeID, feeToPay);\n    }\n\n    /** @dev Steal part of the tokens and the arbitration fee of a juror who failed to vote.\n     *  Note that a juror who voted but without all his weight can't be penalized.\n     *  It is possible to not penalize with the maximum weight.\n     *  But note that it can lead to arbitration fees being kept by the contract and never distributed.\n     *  @param _jurorAddress Address of the juror to steal tokens from.\n     *  @param _disputeID The ID of the dispute the juror was drawn.\n     *  @param _draws The list of draws the juror was drawn. Numbering starts at 1 and the numbers should be increasing.\n     */\n    function penalizeInactiveJuror(address _jurorAddress, uint _disputeID, uint[] _draws) public {\n        Dispute storage dispute = disputes[_disputeID];\n        Juror storage inactiveJuror = jurors[_jurorAddress];\n        require(period > Period.Vote);\n        require(dispute.lastSessionVote[_jurorAddress] != session); // Verify the juror hasn't voted.\n        dispute.lastSessionVote[_jurorAddress] = session; // Update last session to avoid penalizing multiple times.\n        require(validDraws(_jurorAddress, _disputeID, _draws));\n        uint penality = _draws.length * minActivatedToken * 2 * alpha / ALPHA_DIVISOR;\n        penality = (penality < inactiveJuror.balance) ? penality : inactiveJuror.balance; // Make sure the penality is not higher than the balance.\n        inactiveJuror.balance -= penality;\n        TokenShift(_jurorAddress, _disputeID, -int(penality));\n        jurors[msg.sender].balance += penality / 2; // Give half of the penalty to the caller.\n        TokenShift(msg.sender, _disputeID, int(penality / 2));\n        jurors[governor].balance += penality / 2; // The other half to the governor.\n        TokenShift(governor, _disputeID, int(penality / 2));\n        msg.sender.transfer(_draws.length*dispute.arbitrationFeePerJuror); // Give the arbitration fees to the caller.\n    }\n\n    /** @dev Execute all the token repartition.\n     *  Note that this function could consume to much gas if there is too much votes. \n     *  It is O(v), where v is the number of votes for this dispute.\n     *  In the next version, there will also be a function to execute it in multiple calls \n     *  (but note that one shot execution, if possible, is less expensive).\n     *  @param _disputeID ID of the dispute.\n     */\n    function oneShotTokenRepartition(uint _disputeID) public onlyDuring(Period.Execution) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(dispute.state == DisputeState.Open);\n        require(dispute.session+dispute.appeals <= session);\n\n        uint winningChoice = dispute.voteCounter[dispute.appeals].winningChoice;\n        uint amountShift = getStakePerDraw();\n        for (uint i = 0; i <= dispute.appeals; ++i) {\n            // If the result is not a tie, some parties are incoherent. Note that 0 (refuse to arbitrate) winning is not a tie.\n            // Result is a tie if the winningChoice is 0 (refuse to arbitrate) and the choice 0 is not the most voted choice.\n            // Note that in case of a \"tie\" among some choices including 0, parties who did not vote 0 are considered incoherent.\n            if (winningChoice!=0 || (dispute.voteCounter[dispute.appeals].voteCount[0] == dispute.voteCounter[dispute.appeals].winningCount)) {\n                uint totalToRedistribute = 0;\n                uint nbCoherent = 0;\n                // First loop to penalize the incoherent votes.\n                for (uint j = 0; j < dispute.votes[i].length; ++j) {\n                    Vote storage vote = dispute.votes[i][j];\n                    if (vote.ruling != winningChoice) {\n                        Juror storage juror = jurors[vote.account];\n                        uint penalty = amountShift<juror.balance ? amountShift : juror.balance;\n                        juror.balance -= penalty;\n                        TokenShift(vote.account, _disputeID, int(-penalty));\n                        totalToRedistribute += penalty;\n                    } else {\n                        ++nbCoherent;\n                    }\n                }\n                if (nbCoherent == 0) { // No one was coherent at this stage. Give the tokens to the governor.\n                    jurors[governor].balance += totalToRedistribute;\n                    TokenShift(governor, _disputeID, int(totalToRedistribute));\n                } else { // otherwise, redistribute them.\n                    uint toRedistribute = totalToRedistribute / nbCoherent; // Note that few fractions of tokens can be lost but due to the high amount of decimals we don't care.\n                    // Second loop to redistribute.\n                    for (j = 0; j < dispute.votes[i].length; ++j) {\n                        vote = dispute.votes[i][j];\n                        if (vote.ruling == winningChoice) {\n                            juror = jurors[vote.account];\n                            juror.balance += toRedistribute;\n                            TokenShift(vote.account, _disputeID, int(toRedistribute));\n                        }\n                    }\n                }\n            }\n            // Third loop to lower the atStake in order to unlock tokens.\n            for (j = 0; j < dispute.votes[i].length; ++j) {\n                vote = dispute.votes[i][j];\n                juror = jurors[vote.account];\n                juror.atStake -= amountShift; // Note that it can't underflow due to amountShift not changing between vote and redistribution.\n            }\n        }\n        dispute.state = DisputeState.Executable; // Since it was solved in one shot, go directly to the executable step.\n    }\n\n    /** @dev Execute token repartition on a dispute for a specific number of votes.\n     *  This should only be called if oneShotTokenRepartition will throw because there are too many votes (will use too much gas).\n     *  Note that There are 3 iterations per vote. e.g. A dispute with 1 appeal (2 sessions) and 3 votes per session will have 18 iterations\n     *  @param _disputeID ID of the dispute.\n     *  @param _maxIterations the maxium number of votes to repartition in this iteration\n     */\n    function multipleShotTokenRepartition(uint _disputeID, uint _maxIterations) public onlyDuring(Period.Execution) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(dispute.state <= DisputeState.Resolving);\n        require(dispute.session+dispute.appeals <= session);\n        dispute.state = DisputeState.Resolving; // Mark as resolving so oneShotTokenRepartition cannot be called on dispute.\n\n        uint winningChoice = dispute.voteCounter[dispute.appeals].winningChoice;\n        uint amountShift = getStakePerDraw();\n        uint currentIterations = 0; // Total votes we have repartitioned this iteration.\n        for (uint i = dispute.currentAppealToRepartition; i <= dispute.appeals; ++i) {\n            // Allocate space for new AppealsRepartitioned.\n            if (dispute.appealsRepartitioned.length < i+1) {\n                dispute.appealsRepartitioned.length++;\n            }\n\n            // If the result is a tie, no parties are incoherent and no need to move tokens. Note that 0 (refuse to arbitrate) winning is not a tie.\n            if (winningChoice==0 && (dispute.voteCounter[dispute.appeals].voteCount[0] != dispute.voteCounter[dispute.appeals].winningCount)) {\n                // If ruling is a tie we can skip to at stake.\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\n            }\n\n            // First loop to penalize the incoherent votes.\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Incoherent) {\n                for (uint j = dispute.appealsRepartitioned[i].currentIncoherentVote; j < dispute.votes[i].length; ++j) {\n                    if (currentIterations >= _maxIterations) {\n                        return;\n                    }\n                    Vote storage vote = dispute.votes[i][j];\n                    if (vote.ruling != winningChoice) {\n                        Juror storage juror = jurors[vote.account];\n                        uint penalty = amountShift<juror.balance ? amountShift : juror.balance;\n                        juror.balance -= penalty;\n                        TokenShift(vote.account, _disputeID, int(-penalty));\n                        dispute.appealsRepartitioned[i].totalToRedistribute += penalty;\n                    } else {\n                        ++dispute.appealsRepartitioned[i].nbCoherent;\n                    }\n\n                    ++dispute.appealsRepartitioned[i].currentIncoherentVote;\n                    ++currentIterations;\n                }\n\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.Coherent;\n            }\n\n            // Second loop to reward coherent voters\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Coherent) {\n                if (dispute.appealsRepartitioned[i].nbCoherent == 0) { // No one was coherent at this stage. Give the tokens to the governor.\n                    jurors[governor].balance += dispute.appealsRepartitioned[i].totalToRedistribute;\n                    TokenShift(governor, _disputeID, int(dispute.appealsRepartitioned[i].totalToRedistribute));\n                    dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\n                } else { // Otherwise, redistribute them.\n                    uint toRedistribute = dispute.appealsRepartitioned[i].totalToRedistribute / dispute.appealsRepartitioned[i].nbCoherent; // Note that few fractions of tokens can be lost but due to the high amount of decimals we don't care.\n                    // Second loop to redistribute.\n                    for (j = dispute.appealsRepartitioned[i].currentCoherentVote; j < dispute.votes[i].length; ++j) {\n                        if (currentIterations >= _maxIterations) {\n                            return;\n                        }\n                        vote = dispute.votes[i][j];\n                        if (vote.ruling == winningChoice) {\n                            juror = jurors[vote.account];\n                            juror.balance += toRedistribute;\n                            TokenShift(vote.account, _disputeID, int(toRedistribute));\n                        }\n\n                        ++currentIterations;\n                        ++dispute.appealsRepartitioned[i].currentCoherentVote;\n                    }\n\n                    dispute.appealsRepartitioned[i].stage = RepartitionStage.AtStake;\n                }\n            }\n\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.AtStake) {\n                // Third loop to lower the atStake in order to unlock tokens.\n                for (j = dispute.appealsRepartitioned[i].currentAtStakeVote; j < dispute.votes[i].length; ++j) {\n                    if (currentIterations >= _maxIterations) {\n                        return;\n                    }\n                    vote = dispute.votes[i][j];\n                    juror = jurors[vote.account];\n                    juror.atStake -= amountShift; // Note that it can't underflow due to amountShift not changing between vote and redistribution.\n\n                    ++currentIterations;\n                    ++dispute.appealsRepartitioned[i].currentAtStakeVote;\n                }\n\n                dispute.appealsRepartitioned[i].stage = RepartitionStage.Complete;\n            }\n\n            if (dispute.appealsRepartitioned[i].stage == RepartitionStage.Complete) {\n                ++dispute.currentAppealToRepartition;\n            }\n        }\n\n        dispute.state = DisputeState.Executable;\n    }\n\n    // **************************** //\n    // *      Court functions     * //\n    // *     Constant and Pure    * //\n    // **************************** //\n\n    /** @dev Return the amount of jurors which are or will be drawn in the dispute.\n     *  The number of jurors is doubled and 1 is added at each appeal. We have proven the formula by recurrence.\n     *  This avoid having a variable number of jurors which would be updated in order to save gas.\n     *  @param _disputeID The ID of the dispute we compute the amount of jurors.\n     *  @return nbJurors The number of jurors which are drawn.\n     */\n    function amountJurors(uint _disputeID) public view returns (uint nbJurors) {\n        Dispute storage dispute = disputes[_disputeID];\n        return (dispute.initialNumberJurors + 1) * 2**dispute.appeals - 1;\n    }\n\n    /** @dev Must be used to verify that a juror has been draw at least _draws.length times.\n     *  We have to require the user to specify the draws that lead the juror to be drawn.\n     *  Because doing otherwise (looping through all draws) could consume too much gas.\n     *  @param _jurorAddress Address of the juror we want to verify draws.\n     *  @param _disputeID The ID of the dispute the juror was drawn.\n     *  @param _draws The list of draws the juror was drawn. It draw numbering starts at 1 and the numbers should be increasing.\n     *  Note that in most cases this list will just contain 1 number.\n     *  @param valid true if the draws are valid.\n     */\n    function validDraws(address _jurorAddress, uint _disputeID, uint[] _draws) public view returns (bool valid) {\n        uint draw = 0;\n        Juror storage juror = jurors[_jurorAddress];\n        Dispute storage dispute = disputes[_disputeID];\n        uint nbJurors = amountJurors(_disputeID);\n\n        if (juror.lastSession != session) return false; // Make sure that the tokens were deposited for this session.\n        if (dispute.session+dispute.appeals != session) return false; // Make sure there is currently a dispute.\n        if (period <= Period.Draw) return false; // Make sure that jurors are already drawn.\n        for (uint i = 0; i < _draws.length; ++i) {\n            if (_draws[i] <= draw) return false; // Make sure that draws are always increasing to avoid someone inputing the same multiple times.\n            draw = _draws[i];\n            if (draw > nbJurors) return false;\n            uint position = uint(keccak256(randomNumber, _disputeID, draw)) % segmentSize; // Random position on the segment for draw.\n            require(position >= juror.segmentStart);\n            require(position < juror.segmentEnd);\n        }\n\n        return true;\n    }\n\n    // **************************** //\n    // *   Arbitrator functions   * //\n    // *   Modifying the state    * //\n    // **************************** //\n\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\n     *  Must be paid at least arbitrationCost().\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\n     *  @param _extraData Null for the default number. Otherwise, first 16 bytes will be used to return the number of jurors.\n     *  @return disputeID ID of the dispute created.\n     */\n    function createDispute(uint _choices, bytes _extraData) public payable returns (uint disputeID) {\n        uint16 nbJurors = extraDataToNbJurors(_extraData);\n        require(msg.value >= arbitrationCost(_extraData));\n\n        disputeID = disputes.length++;\n        Dispute storage dispute = disputes[disputeID];\n        dispute.arbitrated = Arbitrable(msg.sender);\n        if (period < Period.Draw) // If drawing did not start schedule it for the current session.\n            dispute.session = session;\n        else // Otherwise schedule it for the next one.\n            dispute.session = session+1;\n        dispute.choices = _choices;\n        dispute.initialNumberJurors = nbJurors;\n        dispute.arbitrationFeePerJuror = arbitrationFeePerJuror; // We store it as the general fee can be changed through the governance mechanism.\n        dispute.votes.length++;\n        dispute.voteCounter.length++;\n\n        DisputeCreation(disputeID, Arbitrable(msg.sender));\n        return disputeID;\n    }\n\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Standard but not used by this contract.\n     */\n    function appeal(uint _disputeID, bytes _extraData) public payable onlyDuring(Period.Appeal) {\n        super.appeal(_disputeID,_extraData);\n        Dispute storage dispute = disputes[_disputeID];\n        require(msg.value >= appealCost(_disputeID, _extraData));\n        require(dispute.session+dispute.appeals == session); // Dispute of the current session.\n        require(dispute.arbitrated == msg.sender);\n        \n        dispute.appeals++;\n        dispute.votes.length++;\n        dispute.voteCounter.length++;\n    }\n\n    /** @dev Execute the ruling of a dispute which is in the state executable. UNTRUSTED.\n     *  @param disputeID ID of the dispute to execute the ruling.\n     */\n    function executeRuling(uint disputeID) public {\n        Dispute storage dispute = disputes[disputeID];\n        require(dispute.state == DisputeState.Executable);\n\n        dispute.state = DisputeState.Executed;\n        dispute.arbitrated.rule(disputeID, dispute.voteCounter[dispute.appeals].winningChoice);\n    }\n\n    // **************************** //\n    // *   Arbitrator functions   * //\n    // *    Constant and pure     * //\n    // **************************** //\n\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, \n     *  as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n     *  @return fee Amount to be paid.\n     */\n    function arbitrationCost(bytes _extraData) public view returns (uint fee) {\n        return extraDataToNbJurors(_extraData) * arbitrationFeePerJuror;\n    }\n\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, \n     *  as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n     *  @param _disputeID ID of the dispute to be appealed.\n     *  @param _extraData Is not used there.\n     *  @return fee Amount to be paid.\n     */\n    function appealCost(uint _disputeID, bytes _extraData) public view returns (uint fee) {\n        Dispute storage dispute = disputes[_disputeID];\n\n        if(dispute.appeals >= maxAppeals) return NON_PAYABLE_AMOUNT;\n\n        return (2*amountJurors(_disputeID) + 1) * dispute.arbitrationFeePerJuror;\n    }\n\n    /** @dev Compute the amount of jurors to be drawn.\n     *  @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n     *  Note that it does not check that the number of jurors is odd, but users are advised to choose a odd number of jurors.\n     */\n    function extraDataToNbJurors(bytes _extraData) internal view returns (uint16 nbJurors) {\n        if (_extraData.length < 2)\n            return defaultNumberJuror;\n        else\n            return (uint16(_extraData[0]) << 8) + uint16(_extraData[1]);\n    }\n\n    /** @dev Compute the minimum activated pinakions in alpha.\n     *  Note there may be multiple draws for a single user on a single dispute.\n     */\n    function getStakePerDraw() public view returns (uint minActivatedTokenInAlpha) {\n        return (alpha * minActivatedToken) / ALPHA_DIVISOR;\n    }\n\n\n    // **************************** //\n    // *     Constant getters     * //\n    // **************************** //\n\n    /** @dev Getter for account in Vote.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @param _voteID The ID of the vote for this appeal (or initial session).\n     *  @return account The address of the voter.\n     */\n    function getVoteAccount(uint _disputeID, uint _appeals, uint _voteID) public view returns (address account) {\n        return disputes[_disputeID].votes[_appeals][_voteID].account;\n    }\n\n    /** @dev Getter for ruling in Vote.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @param _voteID The ID of the vote for this appeal (or initial session).\n     *  @return ruling The ruling given by the voter.\n     */\n    function getVoteRuling(uint _disputeID, uint _appeals, uint _voteID) public view returns (uint ruling) {\n        return disputes[_disputeID].votes[_appeals][_voteID].ruling;\n    }\n\n    /** @dev Getter for winningChoice in VoteCounter.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @return winningChoice The currently winning choice (or 0 if it's tied). Note that 0 can also be return if the majority refuses to arbitrate.\n     */\n    function getWinningChoice(uint _disputeID, uint _appeals) public view returns (uint winningChoice) {\n        return disputes[_disputeID].voteCounter[_appeals].winningChoice;\n    }\n\n    /** @dev Getter for winningCount in VoteCounter.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @return winningCount The amount of votes the winning choice (or those who are tied) has.\n     */\n    function getWinningCount(uint _disputeID, uint _appeals) public view returns (uint winningCount) {\n        return disputes[_disputeID].voteCounter[_appeals].winningCount;\n    }\n\n    /** @dev Getter for voteCount in VoteCounter.\n     *  @param _disputeID ID of the dispute.\n     *  @param _appeals Which appeal (or 0 for the initial session).\n     *  @param _choice The choice.\n     *  @return voteCount The amount of votes the winning choice (or those who are tied) has.\n     */\n    function getVoteCount(uint _disputeID, uint _appeals, uint _choice) public view returns (uint voteCount) {\n        return disputes[_disputeID].voteCounter[_appeals].voteCount[_choice];\n    }\n\n    /** @dev Getter for lastSessionVote in Dispute.\n     *  @param _disputeID ID of the dispute.\n     *  @param _juror The juror we want to get the last session he voted.\n     *  @return lastSessionVote The last session the juror voted.\n     */\n    function getLastSessionVote(uint _disputeID, address _juror) public view returns (uint lastSessionVote) {\n        return disputes[_disputeID].lastSessionVote[_juror];\n    }\n\n    /** @dev Is the juror drawn in the draw of the dispute.\n     *  @param _disputeID ID of the dispute.\n     *  @param _juror The juror.\n     *  @param _draw The draw. Note that it starts at 1.\n     *  @return drawn True if the juror is drawn, false otherwise.\n     */\n    function isDrawn(uint _disputeID, address _juror, uint _draw) public view returns (bool drawn) {\n        Dispute storage dispute = disputes[_disputeID];\n        Juror storage juror = jurors[_juror];\n        if (juror.lastSession != session\n        || (dispute.session+dispute.appeals != session)\n        || period<=Period.Draw\n        || _draw>amountJurors(_disputeID)\n        || _draw==0\n        || segmentSize==0\n        ) {\n            return false;\n        } else {\n            uint position = uint(keccak256(randomNumber,_disputeID,_draw)) % segmentSize;\n            return (position >= juror.segmentStart) && (position < juror.segmentEnd);\n        }\n\n    }\n\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n     *  @param _disputeID ID of the dispute.\n     *  @return ruling The current ruling which will be given if there is no appeal. If it is not available, return 0.\n     */\n    function currentRuling(uint _disputeID) public view returns (uint ruling) {\n        Dispute storage dispute = disputes[_disputeID];\n        return dispute.voteCounter[dispute.appeals].winningChoice;\n    }\n\n    /** @dev Return the status of a dispute.\n     *  @param _disputeID ID of the dispute to rule.\n     *  @return status The status of the dispute.\n     */\n    function disputeStatus(uint _disputeID) public view returns (DisputeStatus status) {\n        Dispute storage dispute = disputes[_disputeID];\n        if (dispute.session+dispute.appeals < session) // Dispute of past session.\n            return DisputeStatus.Solved;\n        else if(dispute.session+dispute.appeals == session) { // Dispute of current session.\n            if (dispute.state == DisputeState.Open) {\n                if (period < Period.Appeal)\n                    return DisputeStatus.Waiting;\n                else if (period == Period.Appeal)\n                    return DisputeStatus.Appealable;\n                else return DisputeStatus.Solved;\n            } else return DisputeStatus.Solved;\n        } else return DisputeStatus.Waiting; // Dispute for future session.\n    }\n\n    // **************************** //\n    // *     Governor Functions   * //\n    // **************************** //\n\n    /** @dev General call function where the contract execute an arbitrary call with data and ETH following governor orders.\n     *  @param _data Transaction data.\n     *  @param _value Transaction value.\n     *  @param _target Transaction target.\n     */\n    function executeOrder(bytes32 _data, uint _value, address _target) public onlyGovernor {\n        _target.call.value(_value)(_data);\n    }\n\n    /** @dev Setter for rng.\n     *  @param _rng An instance of RNG.\n     */\n    function setRng(RNG _rng) public onlyGovernor {\n        rng = _rng;\n    }\n\n    /** @dev Setter for arbitrationFeePerJuror.\n     *  @param _arbitrationFeePerJuror The fee which will be paid to each juror.\n     */\n    function setArbitrationFeePerJuror(uint _arbitrationFeePerJuror) public onlyGovernor {\n        arbitrationFeePerJuror = _arbitrationFeePerJuror;\n    }\n\n    /** @dev Setter for defaultNumberJuror.\n     *  @param _defaultNumberJuror Number of drawn jurors unless specified otherwise.\n     */\n    function setDefaultNumberJuror(uint16 _defaultNumberJuror) public onlyGovernor {\n        defaultNumberJuror = _defaultNumberJuror;\n    }\n\n    /** @dev Setter for minActivatedToken.\n     *  @param _minActivatedToken Minimum of tokens to be activated (in basic units).\n     */\n    function setMinActivatedToken(uint _minActivatedToken) public onlyGovernor {\n        minActivatedToken = _minActivatedToken;\n    }\n\n    /** @dev Setter for timePerPeriod.\n     *  @param _timePerPeriod The minimum time each period lasts (seconds).\n     */\n    function setTimePerPeriod(uint[5] _timePerPeriod) public onlyGovernor {\n        timePerPeriod = _timePerPeriod;\n    }\n\n    /** @dev Setter for alpha.\n     *  @param _alpha Alpha in ‱.\n     */\n    function setAlpha(uint _alpha) public onlyGovernor {\n        alpha = _alpha;\n    }\n\n    /** @dev Setter for maxAppeals.\n     *  @param _maxAppeals Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.\n     */\n    function setMaxAppeals(uint _maxAppeals) public onlyGovernor {\n        maxAppeals = _maxAppeals;\n    }\n\n    /** @dev Setter for governor.\n     *  @param _governor Address of the governor contract.\n     */\n    function setGovernor(address _governor) public onlyGovernor {\n        governor = _governor;\n    }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[],\"name\":\"lastPeriodChange\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"executeOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_arbitrationFeePerJuror\",\"type\":\"uint256\"}],\"name\":\"setArbitrationFeePerJuror\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_alpha\",\"type\":\"uint256\"}],\"name\":\"setAlpha\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxAppeals\",\"type\":\"uint256\"}],\"name\":\"setMaxAppeals\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"name\":\"ruling\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rnBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"activateTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"amountJurors\",\"outputs\":[{\"name\":\"nbJurors\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"segmentSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_ruling\",\"type\":\"uint256\"},{\"name\":\"_draws\",\"type\":\"uint256[]\"}],\"name\":\"voteRuling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"name\":\"arbitrated\",\"type\":\"address\"},{\"name\":\"session\",\"type\":\"uint256\"},{\"name\":\"appeals\",\"type\":\"uint256\"},{\"name\":\"choices\",\"type\":\"uint256\"},{\"name\":\"initialNumberJurors\",\"type\":\"uint16\"},{\"name\":\"arbitrationFeePerJuror\",\"type\":\"uint256\"},{\"name\":\"state\",\"type\":\"uint8\"},{\"name\":\"currentAppealToRepartition\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_defaultNumberJuror\",\"type\":\"uint16\"}],\"name\":\"setDefaultNumberJuror\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"session\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_appeals\",\"type\":\"uint256\"},{\"name\":\"_choice\",\"type\":\"uint256\"}],\"name\":\"getVoteCount\",\"outputs\":[{\"name\":\"voteCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timePerPeriod\",\"type\":\"uint256[5]\"}],\"name\":\"setTimePerPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_juror\",\"type\":\"address\"},{\"name\":\"_draw\",\"type\":\"uint256\"}],\"name\":\"isDrawn\",\"outputs\":[{\"name\":\"drawn\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minActivatedToken\",\"type\":\"uint256\"}],\"name\":\"setMinActivatedToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_appeals\",\"type\":\"uint256\"},{\"name\":\"_voteID\",\"type\":\"uint256\"}],\"name\":\"getVoteAccount\",\"outputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NON_PAYABLE_AMOUNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"disputeID\",\"type\":\"uint256\"}],\"name\":\"executeRuling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_maxIterations\",\"type\":\"uint256\"}],\"name\":\"multipleShotTokenRepartition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"arbitrationFeePerJuror\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultNumberJuror\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"passPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_appeals\",\"type\":\"uint256\"},{\"name\":\"_voteID\",\"type\":\"uint256\"}],\"name\":\"getVoteRuling\",\"outputs\":[{\"name\":\"ruling\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_juror\",\"type\":\"address\"}],\"name\":\"getLastSessionVote\",\"outputs\":[{\"name\":\"lastSessionVote\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timePerPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rng\",\"type\":\"address\"}],\"name\":\"setRng\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_choices\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"name\":\"disputeID\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"oneShotTokenRepartition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"setGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_appeals\",\"type\":\"uint256\"}],\"name\":\"getWinningChoice\",\"outputs\":[{\"name\":\"winningChoice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rng\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAppeals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"alpha\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"jurors\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"atStake\",\"type\":\"uint256\"},{\"name\":\"lastSession\",\"type\":\"uint256\"},{\"name\":\"segmentStart\",\"type\":\"uint256\"},{\"name\":\"segmentEnd\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_appeals\",\"type\":\"uint256\"}],\"name\":\"getWinningCount\",\"outputs\":[{\"name\":\"winningCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStakePerDraw\",\"outputs\":[{\"name\":\"minActivatedTokenInAlpha\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"name\":\"fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_jurorAddress\",\"type\":\"address\"},{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_draws\",\"type\":\"uint256[]\"}],\"name\":\"penalizeInactiveJuror\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"name\":\"fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minActivatedToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pinakion\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_jurorAddress\",\"type\":\"address\"},{\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"name\":\"_draws\",\"type\":\"uint256[]\"}],\"name\":\"validDraws\",\"outputs\":[{\"name\":\"valid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_pinakion\",\"type\":\"address\"},{\"name\":\"_rng\",\"type\":\"address\"},{\"name\":\"_timePerPeriod\",\"type\":\"uint256[5]\"},{\"name\":\"_governor\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_period\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"_session\",\"type\":\"uint256\"}],\"name\":\"NewPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"int256\"}],\"name\":\"TokenShift\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ArbitrationReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"}]","bin":"608060405266b1a2bc2ec5000060025560038060006101000a81548161ffff021916908361ffff16021790555067016345785d8a00006004556107d0600a556005600b556001600d553480156200005557600080fd5b506040516101008062004e56833981018060405281019080805190602001909291908051906020019092919091908260a00180519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600e819055508160059060056200012f9291906200017b565b5080600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620001e8565b8260058101928215620001ad579160200282015b82811115620001ac5782518255916020019190600101906200018f565b5b509050620001bc9190620001c0565b5090565b620001e591905b80821115620001e1576000816000905550600101620001c7565b5090565b90565b614c5e80620001f86000396000f300608060405260043610610272576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d2f349146102775780630563324c146102a257806306ea1c02146102fd5780630c17d42c1461032a5780630c340a241461035757806310400446146103ae57806310f169e8146103db5780631c3db16d1461042a57806328764b441461046b57806329c8d3ce146104965780632dd40301146104c35780632e1a7d4d146105045780633cec9309146105315780633f58f8c01461055c57806349912f88146105d6578063564a565d1461063c57806359f568b9146106f05780635e3568b8146107215780636c9732481461074c5780636cd2f731146107a157806370d17adb146107f357806370dd2e0614610862578063824956261461088f578063840bc19c146109105780638bb048751461093b5780638f4ffcb1146109685780639313919a14610a1b578063a10e6d2814610a52578063ac74bcde14610a7d578063b241ff0314610ab0578063b3c7618e14610ac7578063b5040f0a14610b1c578063baaaaad214610b7d578063bb2e804714610bbe578063c13517e114610c01578063c15a679114610c7b578063c42cf53514610ca8578063c8860f4114610ceb578063ccbac9f514610d36578063d605787b14610d61578063da93f93814610db8578063db1d0fd514610de3578063dca5f6b014610e0e578063e07a31c714610e81578063e59a29a614610ecc578063ef78d4fd14610ef7578063f23f16e614610f30578063f55ab98714610fb7578063f7434ea914611047578063f9715458146110c4578063fbf405b0146110ef578063fe69dacd14611146575b600080fd5b34801561028357600080fd5b5061028c6111ee565b6040518082815260200191505060405180910390f35b3480156102ae57600080fd5b506102fb600480360381019080803560001916906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f4565b005b34801561030957600080fd5b5061032860048036038101908080359060200190929190505050611295565b005b34801561033657600080fd5b50610355600480360381019080803590602001909291905050506112fb565b005b34801561036357600080fd5b5061036c611361565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ba57600080fd5b506103d960048036038101908080359060200190929190505050611387565b005b3480156103e757600080fd5b50610406600480360381019080803590602001909291905050506113ed565b6040518082600281111561041657fe5b60ff16815260200191505060405180910390f35b34801561043657600080fd5b50610455600480360381019080803590602001909291905050506114fb565b6040518082815260200191505060405180910390f35b34801561047757600080fd5b5061048061154c565b6040518082815260200191505060405180910390f35b3480156104a257600080fd5b506104c160048036038101908080359060200190929190505050611552565b005b3480156104cf57600080fd5b506104ee60048036038101908080359060200190929190505050611638565b6040518082815260200191505060405180910390f35b34801561051057600080fd5b5061052f60048036038101908080359060200190929190505050611688565b005b34801561053d57600080fd5b50610546611830565b6040518082815260200191505060405180910390f35b34801561056857600080fd5b506105d4600480360381019080803590602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611836565b005b61063a60048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611c17565b005b34801561064857600080fd5b5061066760048036038101908080359060200190929190505050611d4f565b604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018561ffff1661ffff1681526020018481526020018360038111156106cf57fe5b60ff1681526020018281526020019850505050505050505060405180910390f35b3480156106fc57600080fd5b5061071f600480360381019080803561ffff169060200190929190505050611de1565b005b34801561072d57600080fd5b50610736611e5d565b6040518082815260200191505060405180910390f35b34801561075857600080fd5b5061078b600480360381019080803590602001909291908035906020019092919080359060200190929190505050611e63565b6040518082815260200191505060405180910390f35b3480156107ad57600080fd5b506107f16004803603810190808060a00190600580602002604051908101604052809291908260056020028082843782019150505050509192919290505050611ebe565b005b3480156107ff57600080fd5b5061084860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f2f565b604051808215151515815260200191505060405180910390f35b34801561086e57600080fd5b5061088d6004803603810190808035906020019092919050505061207e565b005b34801561089b57600080fd5b506108ce6004803603810190808035906020019092919080359060200190929190803590602001909291905050506120e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561091c57600080fd5b50610925612165565b6040518082815260200191505060405180910390f35b34801561094757600080fd5b5061096660048036038101908080359060200190929190505050612189565b005b34801561097457600080fd5b50610a19600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506122e3565b005b348015610a2757600080fd5b50610a5060048036038101908080359060200190929190803590602001909291905050506124d4565b005b348015610a5e57600080fd5b50610a67613099565b6040518082815260200191505060405180910390f35b348015610a8957600080fd5b50610a9261309f565b604051808261ffff1661ffff16815260200191505060405180910390f35b348015610abc57600080fd5b50610ac56130b3565b005b348015610ad357600080fd5b50610b066004803603810190808035906020019092919080359060200190929190803590602001909291905050506134c8565b6040518082815260200191505060405180910390f35b348015610b2857600080fd5b50610b6760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613529565b6040518082815260200191505060405180910390f35b348015610b8957600080fd5b50610ba860048036038101908080359060200190929190505050613591565b6040518082815260200191505060405180910390f35b348015610bca57600080fd5b50610bff600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135ab565b005b610c6560048036038101908080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061364b565b6040518082815260200191505060405180910390f35b348015610c8757600080fd5b50610ca660048036038101908080359060200190929190505050613807565b005b348015610cb457600080fd5b50610ce9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ead565b005b348015610cf757600080fd5b50610d206004803603810190808035906020019092919080359060200190929190505050613f4d565b6040518082815260200191505060405180910390f35b348015610d4257600080fd5b50610d4b613f96565b6040518082815260200191505060405180910390f35b348015610d6d57600080fd5b50610d76613f9c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610dc457600080fd5b50610dcd613fc2565b6040518082815260200191505060405180910390f35b348015610def57600080fd5b50610df8613fc8565b6040518082815260200191505060405180910390f35b348015610e1a57600080fd5b50610e4f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613fce565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b348015610e8d57600080fd5b50610eb66004803603810190808035906020019092919080359060200190929190505050614004565b6040518082815260200191505060405180910390f35b348015610ed857600080fd5b50610ee161404d565b6040518082815260200191505060405180910390f35b348015610f0357600080fd5b50610f0c614068565b60405180826004811115610f1c57fe5b60ff16815260200191505060405180910390f35b348015610f3c57600080fd5b50610fa160048036038101908080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061407b565b6040518082815260200191505060405180910390f35b348015610fc357600080fd5b50611045600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506140f3565b005b34801561105357600080fd5b506110ae600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506144f2565b6040518082815260200191505060405180910390f35b3480156110d057600080fd5b506110d961450c565b6040518082815260200191505060405180910390f35b3480156110fb57600080fd5b50611104614512565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561115257600080fd5b506111d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050614537565b604051808215151515815260200191505060405180910390f35b600e5481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561125057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16828460405180826000191660001916815260200191505060006040518083038185875af19250505050505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112f157600080fd5b8060028190555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135757600080fd5b80600a8190555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113e357600080fd5b80600b8190555050565b6000806014838154811015156113ff57fe5b90600052602060002090600c02019050600d548160020154826001015401101561142c57600291506114f5565b600d54816002015482600101540114156114f0576000600381111561144d57fe5b8160060160009054906101000a900460ff16600381111561146a57fe5b14156114e7576003600481111561147d57fe5b601260009054906101000a900460ff16600481111561149857fe5b10156114a757600091506114f5565b600360048111156114b457fe5b601260009054906101000a900460ff1660048111156114cf57fe5b14156114de57600191506114f5565b600291506114f5565b600291506114f5565b600091505b50919050565b60008060148381548110151561150d57fe5b90600052602060002090600c0201905080600801816002015481548110151561153257fe5b906000526020600020906003020160000154915050919050565b60105481565b60008080600481111561156157fe5b601260009054906101000a900460ff16600481111561157c57fe5b14151561158857600080fd5b601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150816000015483111515156115dc57600080fd5b60045483101515156115ed57600080fd5b600d5482600201541415151561160257600080fd5b600d548260020181905550600f54826003018190555082600f60008282540192505081905550600f548260040181905550505050565b60008060148381548110151561164a57fe5b90600052602060002090600c020190506001816002015460020a60018360040160009054906101000a900461ffff160161ffff160203915050919050565b6000601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600001548160010154111515156116e257600080fd5b806001015481600001540382111515156116fb57600080fd5b600d5481600201541415151561171057600080fd5b8181600001600082825403925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156117e657600080fd5b505af11580156117fa573d6000803e3d6000fd5b505050506040513d602081101561181057600080fd5b8101908080519060200190929190505050151561182c57600080fd5b5050565b600f5481565b6000806000806000600280600481111561184c57fe5b601260009054906101000a900460ff16600481111561186757fe5b14151561187357600080fd5b60148981548110151561188257fe5b90600052602060002090600c02019550601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002094508560080186600201548154811015156118e857fe5b90600052602060002090600302019350600d548660090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415151561194a57600080fd5b8560030154881115151561195d57600080fd5b611968338a89614537565b151561197357600080fd5b600d548660090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555086518460020160008a8152602001908152602001600020600082825401925050819055508360020160008981526020019081526020016000205484600101541015611a2c57836002016000898152602001908152602001600020548460010181905550878460000181905550611a67565b836002016000898152602001908152602001600020548460010154148015611a5657506000875114155b15611a6657600084600001819055505b5b600092505b8651831015611b4957856007018660020154815481101515611a8a57fe5b9060005260206000200160408051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a8152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505050826001019250611a6c565b611b5161404d565b8751028560010160008282540192505081905550856005015487510291503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611bb5573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f6aabe3309b819a2115cccbcff8b8284764a6a4db2ff85b12d8cc696b945192cb8a84604051808381526020018281526020019250505060405180910390a2505050505050505050565b60006003806004811115611c2757fe5b601260009054906101000a900460ff166004811115611c4257fe5b141515611c4e57600080fd5b611c5884846146fd565b601484815481101515611c6757fe5b90600052602060002090600c02019150611c81848461407b565b3410151515611c8f57600080fd5b600d548260020154836001015401141515611ca957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d0757600080fd5b8160020160008154809291906001019190505550816007018054809190600101611d3191906148b3565b50816008018054809190600101611d4891906148df565b5050505050565b601481815481101515611d5e57fe5b90600052602060002090600c02016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900461ffff16908060050154908060060160009054906101000a900460ff169080600a0154905088565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e3d57600080fd5b80600360006101000a81548161ffff021916908361ffff16021790555050565b600d5481565b6000601484815481101515611e7457fe5b90600052602060002090600c020160080183815481101515611e9257fe5b906000526020600020906003020160020160008381526020019081526020016000205490509392505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f1a57600080fd5b806005906005611f2b929190614911565b5050565b600080600080601487815481101515611f4457fe5b90600052602060002090600c02019250601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150600d548260020154141580611fb65750600d54836002015484600101540114155b80611fe7575060016004811115611fc957fe5b601260009054906101000a900460ff166004811115611fe457fe5b11155b80611ff95750611ff687611638565b85115b806120045750600085145b8061201157506000600f54145b1561201f5760009350612074565b600f54601154888760405180848152602001838152602001828152602001935050505060405180910390206001900481151561205757fe5b069050816003015481101580156120715750816004015481105b93505b5050509392505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120da57600080fd5b8060048190555050565b60006014848154811015156120f557fe5b90600052602060002090600c02016007018381548110151561211357fe5b906000526020600020018281548110151561212a57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509392505050565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b600060148281548110151561219a57fe5b90600052602060002090600c02019050600260038111156121b757fe5b8160060160009054906101000a900460ff1660038111156121d457fe5b1415156121e057600080fd5b60038160060160006101000a81548160ff0219169083600381111561220157fe5b02179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663311a6c568383600801846002015481548110151561225c57fe5b9060005260206000209060030201600001546040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b1580156122c757600080fd5b505af11580156122db573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561233f57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561243757600080fd5b505af115801561244b573d6000803e3d6000fd5b505050506040513d602081101561246157600080fd5b8101908080519060200190929190505050151561247d57600080fd5b83601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055505050505050565b60008060008060008060008060008060048060048111156124f157fe5b601260009054906101000a900460ff16600481111561250c57fe5b14151561251857600080fd5b60148d81548110151561252757fe5b90600052602060002090600c02019a506001600381111561254457fe5b8b60060160009054906101000a900460ff16600381111561256157fe5b1115151561256e57600080fd5b600d548b600201548c60010154011115151561258957600080fd5b60018b60060160006101000a81548160ff021916908360038111156125aa57fe5b02179055508a6008018b600201548154811015156125c457fe5b90600052602060002090600302016000015499506125e061404d565b9850600097508a600a015496505b8a600201548711151561306357600187018b600b01805490501015612625578a600b0180548091906001016126239190614951565b505b60008a14801561269257508a6008018b6002015481548110151561264557fe5b9060005260206000209060030201600101548b6008018c6002015481548110151561266c57fe5b906000526020600020906003020160020160008081526020019081526020016000205414155b156126dc5760028b600b01888154811015156126aa57fe5b906000526020600020906006020160050160006101000a81548160ff021916908360038111156126d657fe5b02179055505b600060038111156126e957fe5b8b600b01888154811015156126fa57fe5b906000526020600020906006020160050160009054906101000a900460ff16600381111561272457fe5b14156129c2578a600b018781548110151561273b57fe5b90600052602060002090600602016002015495505b8a6007018781548110151561276157fe5b906000526020600020018054905086101561297d578b881015156127845761308a565b8a6007018781548110151561279557fe5b90600052602060002001868154811015156127ac57fe5b9060005260206000209060020201945089856001015414151561290b57601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020935083600001548910612843578360000154612845565b885b92508284600001600082825403925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e85600003604051808381526020018281526020019250505060405180910390a2828b600b01888154811015156128e857fe5b90600052602060002090600602016000016000828254019250508190555061293c565b8a600b018781548110151561291c57fe5b906000526020600020906006020160010160008154600101919050819055505b8a600b018781548110151561294d57fe5b90600052602060002090600602016002016000815460010191905081905550876001019750856001019550612750565b60018b600b018881548110151561299057fe5b906000526020600020906006020160050160006101000a81548160ff021916908360038111156129bc57fe5b02179055505b600160038111156129cf57fe5b8b600b01888154811015156129e057fe5b906000526020600020906006020160050160009054906101000a900460ff166003811115612a0a57fe5b1415612e1b5760008b600b0188815481101515612a2357fe5b9060005260206000209060060201600101541415612bb2578a600b0187815481101515612a4c57fe5b90600052602060002090600602016000015460136000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e8d600b018a815481101515612b3b57fe5b906000526020600020906006020160000154604051808381526020018281526020019250505060405180910390a260028b600b0188815481101515612b7c57fe5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115612ba857fe5b0217905550612e1a565b8a600b0187815481101515612bc357fe5b9060005260206000209060060201600101548b600b0188815481101515612be657fe5b906000526020600020906006020160000154811515612c0157fe5b0491508a600b0187815481101515612c1557fe5b90600052602060002090600602016003015495505b8a60070187815481101515612c3b57fe5b9060005260206000200180549050861015612dd5578b88101515612c5e5761308a565b8a60070187815481101515612c6f57fe5b9060005260206000200186815481101515612c8657fe5b906000526020600020906002020194508985600101541415612d9457601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093508184600001600082825401925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e84604051808381526020018281526020019250505060405180910390a25b8760010197508a600b0187815481101515612dab57fe5b90600052602060002090600602016003016000815460010191905081905550856001019550612c2a565b60028b600b0188815481101515612de857fe5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115612e1457fe5b02179055505b5b60026003811115612e2857fe5b8b600b0188815481101515612e3957fe5b906000526020600020906006020160050160009054906101000a900460ff166003811115612e6357fe5b1415612ff8578a600b0187815481101515612e7a57fe5b90600052602060002090600602016004015495505b8a60070187815481101515612ea057fe5b9060005260206000200180549050861015612fb3578b88101515612ec35761308a565b8a60070187815481101515612ed457fe5b9060005260206000200186815481101515612eeb57fe5b90600052602060002090600202019450601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093508884600101600082825403925050819055508760010197508a600b0187815481101515612f8957fe5b90600052602060002090600602016004016000815460010191905081905550856001019550612e8f565b60038b600b0188815481101515612fc657fe5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115612ff257fe5b02179055505b60038081111561300457fe5b8b600b018881548110151561301557fe5b906000526020600020906006020160050160009054906101000a900460ff16600381111561303f57fe5b1415613058578a600a0160008154600101919050819055505b8660010196506125ee565b60028b60060160006101000a81548160ff0219169083600381111561308457fe5b02179055505b50505050505050505050505050565b60025481565b600360009054906101000a900461ffff1681565b6005601260009054906101000a900460ff1660048111156130d057fe5b60ff166005811015156130df57fe5b0154600e544203101515156130f357600080fd5b6000600481111561310057fe5b601260009054906101000a900460ff16600481111561311b57fe5b14156131ff5760014301601081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b9c34e06010546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156131be57600080fd5b505af11580156131d2573d6000803e3d6000fd5b505050506001601260006101000a81548160ff021916908360048111156131f557fe5b0217905550613468565b6001600481111561320c57fe5b601260009054906101000a900460ff16600481111561322757fe5b141561333c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c73601e6010546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156132c057600080fd5b505af11580156132d4573d6000803e3d6000fd5b505050506040513d60208110156132ea57600080fd5b810190808051906020019092919050505060118190555060006011541415151561331357600080fd5b6002601260006101000a81548160ff0219169083600481111561333257fe5b0217905550613467565b6002600481111561334957fe5b601260009054906101000a900460ff16600481111561336457fe5b1415613393576003601260006101000a81548160ff0219169083600481111561338957fe5b0217905550613466565b600360048111156133a057fe5b601260009054906101000a900460ff1660048111156133bb57fe5b14156133ea576004601260006101000a81548160ff021916908360048111156133e057fe5b0217905550613465565b6004808111156133f657fe5b601260009054906101000a900460ff16600481111561341157fe5b1415613464576000601260006101000a81548160ff0219169083600481111561343657fe5b0217905550600d60008154600101919050819055506000600f81905550600060108190555060006011819055505b5b5b5b5b42600e81905550600d547f68c618b4722a30adfd435aefec043781d40a8a871689115e91a2257ca097fab5601260009054906101000a900460ff16604051808260048111156134b357fe5b60ff16815260200191505060405180910390a2565b60006014848154811015156134d957fe5b90600052602060002090600c0201600701838154811015156134f757fe5b906000526020600020018281548110151561350e57fe5b90600052602060002090600202016001015490509392505050565b600060148381548110151561353a57fe5b90600052602060002090600c020160090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6005816005811015156135a057fe5b016000915090505481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561360757600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600061365984614781565b9150613664846144f2565b341015151561367257600080fd5b601480548091906001016136869190614983565b925060148381548110151561369757fe5b90600052602060002090600c02019050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160048111156136f757fe5b601260009054906101000a900460ff16600481111561371257fe5b101561372857600d548160010181905550613737565b6001600d540181600101819055505b848160030181905550818160040160006101000a81548161ffff021916908361ffff160217905550600254816005018190555080600701805480919060010161378091906148b3565b5080600801805480919060010161379791906148df565b50827f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99533604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2829250505092915050565b6000806000806000806000806000806000600480600481111561382657fe5b601260009054906101000a900460ff16600481111561384157fe5b14151561384d57600080fd5b60148d81548110151561385c57fe5b90600052602060002090600c02019b506000600381111561387957fe5b8c60060160009054906101000a900460ff16600381111561389657fe5b1415156138a257600080fd5b600d548c600201548d6001015401111515156138bd57600080fd5b8b6008018c600201548154811015156138d257fe5b9060005260206000209060030201600001549a506138ee61404d565b9950600098505b8b6002015489111515613e785760008b14158061396e57508b6008018c6002015481548110151561392257fe5b9060005260206000209060030201600101548c6008018d6002015481548110151561394957fe5b9060005260206000209060030201600201600080815260200190815260200160002054145b15613d88576000975060009650600095505b8b6007018981548110151561399157fe5b9060005260206000200180549050861015613b14578b600701898154811015156139b757fe5b90600052602060002001868154811015156139ce57fe5b906000526020600020906002020194508a8560010154141515613b0257601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020935083600001548a10613a65578360000154613a67565b895b92508284600001600082825403925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e85600003604051808381526020018281526020019250505060405180910390a28288019750613b09565b8660010196505b856001019550613980565b6000871415613c0c578760136000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e8a604051808381526020018281526020019250505060405180910390a2613d87565b8688811515613c1757fe5b049150600095505b8b60070189815481101515613c3057fe5b9060005260206000200180549050861015613d86578b60070189815481101515613c5657fe5b9060005260206000200186815481101515613c6d57fe5b906000526020600020906002020194508a85600101541415613d7b57601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093508184600001600082825401925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e84604051808381526020018281526020019250505060405180910390a25b856001019550613c1f565b5b5b600095505b8b60070189815481101515613d9e57fe5b9060005260206000200180549050861015613e6d578b60070189815481101515613dc457fe5b9060005260206000200186815481101515613ddb57fe5b90600052602060002090600202019450601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209350898460010160008282540392505081905550856001019550613d8d565b8860010198506138f5565b60028c60060160006101000a81548160ff02191690836003811115613e9957fe5b021790555050505050505050505050505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613f0957600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000601483815481101515613f5e57fe5b90600052602060002090600c020160080182815481101515613f7c57fe5b906000526020600020906003020160000154905092915050565b60115481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b600a5481565b60136020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b600060148381548110151561401557fe5b90600052602060002090600c02016008018281548110151561403357fe5b906000526020600020906003020160010154905092915050565b6000612710600454600a540281151561406257fe5b04905090565b601260009054906101000a900460ff1681565b60008060148481548110151561408d57fe5b90600052602060002090600c02019050600b5481600201541015156140d4577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91506140ec565b806005015460016140e486611638565b600202010291505b5092915050565b600080600060148581548110151561410757fe5b90600052602060002090600c02019250601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091506002600481111561416557fe5b601260009054906101000a900460ff16600481111561418057fe5b11151561418c57600080fd5b600d548360090160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156141de57600080fd5b600d548360090160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614231868686614537565b151561423c57600080fd5b612710600a546002600454875102020281151561425557fe5b0490508160000154811061426d57816000015461426f565b805b90508082600001600082825403925050819055508573ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8683600003604051808381526020018281526020019250505060405180910390a26002818115156142e857fe5b04601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8660028481151561437d57fe5b04604051808381526020018281526020019250505060405180910390a26002818115156143a657fe5b0460136000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8660028481151561447f57fe5b04604051808381526020018281526020019250505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc84600501548651029081150290604051600060405180830381858888f193505050501580156144e9573d6000803e3d6000fd5b50505050505050565b600060025461450083614781565b61ffff16029050919050565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000806000806000809550601360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020945060148981548110151561459557fe5b90600052602060002090600c020193506145ae89611638565b9250600d5485600201541415156145c857600096506146f0565b600d5484600201548560010154011415156145e657600096506146f0565b600160048111156145f357fe5b601260009054906101000a900460ff16600481111561460e57fe5b11151561461e57600096506146f0565b600091505b87518210156146eb5785888381518110151561463b57fe5b9060200190602002015111151561465557600096506146f0565b878281518110151561466357fe5b9060200190602002015195508286111561468057600096506146f0565b600f546011548a886040518084815260200183815260200182815260200193505050506040518091039020600190048115156146b857fe5b069050846003015481101515156146ce57600080fd5b8460040154811015156146e057600080fd5b816001019150614623565b600196505b5050505050509392505050565b8181614709828261407b565b341015151561471757600080fd5b837f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a250505050565b60006002825110156147a557600360009054906101000a900461ffff1690506148ae565b8160018151811015156147b457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004600883600081518110151561483357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900461ffff169060020a020190505b919050565b8154818355818111156148da578183600052602060002091820191016148d991906149b5565b5b505050565b81548183558181111561490c5760030281600302836000526020600020918201910161490b91906149e1565b5b505050565b8260058101928215614940579160200282015b8281111561493f578251825591602001919060010190614924565b5b50905061494d9190614a10565b5090565b81548183558181111561497e5760060281600602836000526020600020918201910161497d9190614a35565b5b505050565b8154818355818111156149b057600c0281600c0283600052602060002091820191016149af9190614a90565b5b505050565b6149de91905b808211156149da57600081816149d19190614b57565b506001016149bb565b5090565b90565b614a0d91905b80821115614a09576000808201600090556001820160009055506003016149e7565b5090565b90565b614a3291905b80821115614a2e576000816000905550600101614a16565b5090565b90565b614a8d91905b80821115614a895760008082016000905560018201600090556002820160009055600382016000905560048201600090556005820160006101000a81549060ff021916905550600601614a3b565b5090565b90565b614b5491905b80821115614b5057600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905560038201600090556004820160006101000a81549061ffff021916905560058201600090556006820160006101000a81549060ff0219169055600782016000614b1f9190614b7b565b600882016000614b2f9190614b9c565b600a820160009055600b82016000614b479190614bc0565b50600c01614a96565b5090565b90565b5080546000825560020290600052602060002090810190614b789190614be4565b50565b5080546000825590600052602060002090810190614b9991906149b5565b50565b5080546000825560030290600052602060002090810190614bbd91906149e1565b50565b5080546000825560060290600052602060002090810190614be19190614a35565b50565b614c2f91905b80821115614c2b57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201614bea565b5090565b905600a165627a7a72305820275c02766a077b4e5518aa473feb7dfa316189dcc7b7505fe185c83651f0a45f0029","bin-runtime":"608060405260043610610272576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d2f349146102775780630563324c146102a257806306ea1c02146102fd5780630c17d42c1461032a5780630c340a241461035757806310400446146103ae57806310f169e8146103db5780631c3db16d1461042a57806328764b441461046b57806329c8d3ce146104965780632dd40301146104c35780632e1a7d4d146105045780633cec9309146105315780633f58f8c01461055c57806349912f88146105d6578063564a565d1461063c57806359f568b9146106f05780635e3568b8146107215780636c9732481461074c5780636cd2f731146107a157806370d17adb146107f357806370dd2e0614610862578063824956261461088f578063840bc19c146109105780638bb048751461093b5780638f4ffcb1146109685780639313919a14610a1b578063a10e6d2814610a52578063ac74bcde14610a7d578063b241ff0314610ab0578063b3c7618e14610ac7578063b5040f0a14610b1c578063baaaaad214610b7d578063bb2e804714610bbe578063c13517e114610c01578063c15a679114610c7b578063c42cf53514610ca8578063c8860f4114610ceb578063ccbac9f514610d36578063d605787b14610d61578063da93f93814610db8578063db1d0fd514610de3578063dca5f6b014610e0e578063e07a31c714610e81578063e59a29a614610ecc578063ef78d4fd14610ef7578063f23f16e614610f30578063f55ab98714610fb7578063f7434ea914611047578063f9715458146110c4578063fbf405b0146110ef578063fe69dacd14611146575b600080fd5b34801561028357600080fd5b5061028c6111ee565b6040518082815260200191505060405180910390f35b3480156102ae57600080fd5b506102fb600480360381019080803560001916906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f4565b005b34801561030957600080fd5b5061032860048036038101908080359060200190929190505050611295565b005b34801561033657600080fd5b50610355600480360381019080803590602001909291905050506112fb565b005b34801561036357600080fd5b5061036c611361565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ba57600080fd5b506103d960048036038101908080359060200190929190505050611387565b005b3480156103e757600080fd5b50610406600480360381019080803590602001909291905050506113ed565b6040518082600281111561041657fe5b60ff16815260200191505060405180910390f35b34801561043657600080fd5b50610455600480360381019080803590602001909291905050506114fb565b6040518082815260200191505060405180910390f35b34801561047757600080fd5b5061048061154c565b6040518082815260200191505060405180910390f35b3480156104a257600080fd5b506104c160048036038101908080359060200190929190505050611552565b005b3480156104cf57600080fd5b506104ee60048036038101908080359060200190929190505050611638565b6040518082815260200191505060405180910390f35b34801561051057600080fd5b5061052f60048036038101908080359060200190929190505050611688565b005b34801561053d57600080fd5b50610546611830565b6040518082815260200191505060405180910390f35b34801561056857600080fd5b506105d4600480360381019080803590602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611836565b005b61063a60048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611c17565b005b34801561064857600080fd5b5061066760048036038101908080359060200190929190505050611d4f565b604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018561ffff1661ffff1681526020018481526020018360038111156106cf57fe5b60ff1681526020018281526020019850505050505050505060405180910390f35b3480156106fc57600080fd5b5061071f600480360381019080803561ffff169060200190929190505050611de1565b005b34801561072d57600080fd5b50610736611e5d565b6040518082815260200191505060405180910390f35b34801561075857600080fd5b5061078b600480360381019080803590602001909291908035906020019092919080359060200190929190505050611e63565b6040518082815260200191505060405180910390f35b3480156107ad57600080fd5b506107f16004803603810190808060a00190600580602002604051908101604052809291908260056020028082843782019150505050509192919290505050611ebe565b005b3480156107ff57600080fd5b5061084860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f2f565b604051808215151515815260200191505060405180910390f35b34801561086e57600080fd5b5061088d6004803603810190808035906020019092919050505061207e565b005b34801561089b57600080fd5b506108ce6004803603810190808035906020019092919080359060200190929190803590602001909291905050506120e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561091c57600080fd5b50610925612165565b6040518082815260200191505060405180910390f35b34801561094757600080fd5b5061096660048036038101908080359060200190929190505050612189565b005b34801561097457600080fd5b50610a19600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506122e3565b005b348015610a2757600080fd5b50610a5060048036038101908080359060200190929190803590602001909291905050506124d4565b005b348015610a5e57600080fd5b50610a67613099565b6040518082815260200191505060405180910390f35b348015610a8957600080fd5b50610a9261309f565b604051808261ffff1661ffff16815260200191505060405180910390f35b348015610abc57600080fd5b50610ac56130b3565b005b348015610ad357600080fd5b50610b066004803603810190808035906020019092919080359060200190929190803590602001909291905050506134c8565b6040518082815260200191505060405180910390f35b348015610b2857600080fd5b50610b6760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613529565b6040518082815260200191505060405180910390f35b348015610b8957600080fd5b50610ba860048036038101908080359060200190929190505050613591565b6040518082815260200191505060405180910390f35b348015610bca57600080fd5b50610bff600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135ab565b005b610c6560048036038101908080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061364b565b6040518082815260200191505060405180910390f35b348015610c8757600080fd5b50610ca660048036038101908080359060200190929190505050613807565b005b348015610cb457600080fd5b50610ce9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ead565b005b348015610cf757600080fd5b50610d206004803603810190808035906020019092919080359060200190929190505050613f4d565b6040518082815260200191505060405180910390f35b348015610d4257600080fd5b50610d4b613f96565b6040518082815260200191505060405180910390f35b348015610d6d57600080fd5b50610d76613f9c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610dc457600080fd5b50610dcd613fc2565b6040518082815260200191505060405180910390f35b348015610def57600080fd5b50610df8613fc8565b6040518082815260200191505060405180910390f35b348015610e1a57600080fd5b50610e4f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613fce565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b348015610e8d57600080fd5b50610eb66004803603810190808035906020019092919080359060200190929190505050614004565b6040518082815260200191505060405180910390f35b348015610ed857600080fd5b50610ee161404d565b6040518082815260200191505060405180910390f35b348015610f0357600080fd5b50610f0c614068565b60405180826004811115610f1c57fe5b60ff16815260200191505060405180910390f35b348015610f3c57600080fd5b50610fa160048036038101908080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061407b565b6040518082815260200191505060405180910390f35b348015610fc357600080fd5b50611045600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506140f3565b005b34801561105357600080fd5b506110ae600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506144f2565b6040518082815260200191505060405180910390f35b3480156110d057600080fd5b506110d961450c565b6040518082815260200191505060405180910390f35b3480156110fb57600080fd5b50611104614512565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561115257600080fd5b506111d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050614537565b604051808215151515815260200191505060405180910390f35b600e5481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561125057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16828460405180826000191660001916815260200191505060006040518083038185875af19250505050505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112f157600080fd5b8060028190555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561135757600080fd5b80600a8190555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113e357600080fd5b80600b8190555050565b6000806014838154811015156113ff57fe5b90600052602060002090600c02019050600d548160020154826001015401101561142c57600291506114f5565b600d54816002015482600101540114156114f0576000600381111561144d57fe5b8160060160009054906101000a900460ff16600381111561146a57fe5b14156114e7576003600481111561147d57fe5b601260009054906101000a900460ff16600481111561149857fe5b10156114a757600091506114f5565b600360048111156114b457fe5b601260009054906101000a900460ff1660048111156114cf57fe5b14156114de57600191506114f5565b600291506114f5565b600291506114f5565b600091505b50919050565b60008060148381548110151561150d57fe5b90600052602060002090600c0201905080600801816002015481548110151561153257fe5b906000526020600020906003020160000154915050919050565b60105481565b60008080600481111561156157fe5b601260009054906101000a900460ff16600481111561157c57fe5b14151561158857600080fd5b601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150816000015483111515156115dc57600080fd5b60045483101515156115ed57600080fd5b600d5482600201541415151561160257600080fd5b600d548260020181905550600f54826003018190555082600f60008282540192505081905550600f548260040181905550505050565b60008060148381548110151561164a57fe5b90600052602060002090600c020190506001816002015460020a60018360040160009054906101000a900461ffff160161ffff160203915050919050565b6000601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600001548160010154111515156116e257600080fd5b806001015481600001540382111515156116fb57600080fd5b600d5481600201541415151561171057600080fd5b8181600001600082825403925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156117e657600080fd5b505af11580156117fa573d6000803e3d6000fd5b505050506040513d602081101561181057600080fd5b8101908080519060200190929190505050151561182c57600080fd5b5050565b600f5481565b6000806000806000600280600481111561184c57fe5b601260009054906101000a900460ff16600481111561186757fe5b14151561187357600080fd5b60148981548110151561188257fe5b90600052602060002090600c02019550601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002094508560080186600201548154811015156118e857fe5b90600052602060002090600302019350600d548660090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415151561194a57600080fd5b8560030154881115151561195d57600080fd5b611968338a89614537565b151561197357600080fd5b600d548660090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555086518460020160008a8152602001908152602001600020600082825401925050819055508360020160008981526020019081526020016000205484600101541015611a2c57836002016000898152602001908152602001600020548460010181905550878460000181905550611a67565b836002016000898152602001908152602001600020548460010154148015611a5657506000875114155b15611a6657600084600001819055505b5b600092505b8651831015611b4957856007018660020154815481101515611a8a57fe5b9060005260206000200160408051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a8152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505050826001019250611a6c565b611b5161404d565b8751028560010160008282540192505081905550856005015487510291503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611bb5573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f6aabe3309b819a2115cccbcff8b8284764a6a4db2ff85b12d8cc696b945192cb8a84604051808381526020018281526020019250505060405180910390a2505050505050505050565b60006003806004811115611c2757fe5b601260009054906101000a900460ff166004811115611c4257fe5b141515611c4e57600080fd5b611c5884846146fd565b601484815481101515611c6757fe5b90600052602060002090600c02019150611c81848461407b565b3410151515611c8f57600080fd5b600d548260020154836001015401141515611ca957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d0757600080fd5b8160020160008154809291906001019190505550816007018054809190600101611d3191906148b3565b50816008018054809190600101611d4891906148df565b5050505050565b601481815481101515611d5e57fe5b90600052602060002090600c02016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900461ffff16908060050154908060060160009054906101000a900460ff169080600a0154905088565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e3d57600080fd5b80600360006101000a81548161ffff021916908361ffff16021790555050565b600d5481565b6000601484815481101515611e7457fe5b90600052602060002090600c020160080183815481101515611e9257fe5b906000526020600020906003020160020160008381526020019081526020016000205490509392505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f1a57600080fd5b806005906005611f2b929190614911565b5050565b600080600080601487815481101515611f4457fe5b90600052602060002090600c02019250601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150600d548260020154141580611fb65750600d54836002015484600101540114155b80611fe7575060016004811115611fc957fe5b601260009054906101000a900460ff166004811115611fe457fe5b11155b80611ff95750611ff687611638565b85115b806120045750600085145b8061201157506000600f54145b1561201f5760009350612074565b600f54601154888760405180848152602001838152602001828152602001935050505060405180910390206001900481151561205757fe5b069050816003015481101580156120715750816004015481105b93505b5050509392505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120da57600080fd5b8060048190555050565b60006014848154811015156120f557fe5b90600052602060002090600c02016007018381548110151561211357fe5b906000526020600020018281548110151561212a57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509392505050565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b600060148281548110151561219a57fe5b90600052602060002090600c02019050600260038111156121b757fe5b8160060160009054906101000a900460ff1660038111156121d457fe5b1415156121e057600080fd5b60038160060160006101000a81548160ff0219169083600381111561220157fe5b02179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663311a6c568383600801846002015481548110151561225c57fe5b9060005260206000209060030201600001546040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b1580156122c757600080fd5b505af11580156122db573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561233f57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561243757600080fd5b505af115801561244b573d6000803e3d6000fd5b505050506040513d602081101561246157600080fd5b8101908080519060200190929190505050151561247d57600080fd5b83601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055505050505050565b60008060008060008060008060008060048060048111156124f157fe5b601260009054906101000a900460ff16600481111561250c57fe5b14151561251857600080fd5b60148d81548110151561252757fe5b90600052602060002090600c02019a506001600381111561254457fe5b8b60060160009054906101000a900460ff16600381111561256157fe5b1115151561256e57600080fd5b600d548b600201548c60010154011115151561258957600080fd5b60018b60060160006101000a81548160ff021916908360038111156125aa57fe5b02179055508a6008018b600201548154811015156125c457fe5b90600052602060002090600302016000015499506125e061404d565b9850600097508a600a015496505b8a600201548711151561306357600187018b600b01805490501015612625578a600b0180548091906001016126239190614951565b505b60008a14801561269257508a6008018b6002015481548110151561264557fe5b9060005260206000209060030201600101548b6008018c6002015481548110151561266c57fe5b906000526020600020906003020160020160008081526020019081526020016000205414155b156126dc5760028b600b01888154811015156126aa57fe5b906000526020600020906006020160050160006101000a81548160ff021916908360038111156126d657fe5b02179055505b600060038111156126e957fe5b8b600b01888154811015156126fa57fe5b906000526020600020906006020160050160009054906101000a900460ff16600381111561272457fe5b14156129c2578a600b018781548110151561273b57fe5b90600052602060002090600602016002015495505b8a6007018781548110151561276157fe5b906000526020600020018054905086101561297d578b881015156127845761308a565b8a6007018781548110151561279557fe5b90600052602060002001868154811015156127ac57fe5b9060005260206000209060020201945089856001015414151561290b57601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020935083600001548910612843578360000154612845565b885b92508284600001600082825403925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e85600003604051808381526020018281526020019250505060405180910390a2828b600b01888154811015156128e857fe5b90600052602060002090600602016000016000828254019250508190555061293c565b8a600b018781548110151561291c57fe5b906000526020600020906006020160010160008154600101919050819055505b8a600b018781548110151561294d57fe5b90600052602060002090600602016002016000815460010191905081905550876001019750856001019550612750565b60018b600b018881548110151561299057fe5b906000526020600020906006020160050160006101000a81548160ff021916908360038111156129bc57fe5b02179055505b600160038111156129cf57fe5b8b600b01888154811015156129e057fe5b906000526020600020906006020160050160009054906101000a900460ff166003811115612a0a57fe5b1415612e1b5760008b600b0188815481101515612a2357fe5b9060005260206000209060060201600101541415612bb2578a600b0187815481101515612a4c57fe5b90600052602060002090600602016000015460136000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e8d600b018a815481101515612b3b57fe5b906000526020600020906006020160000154604051808381526020018281526020019250505060405180910390a260028b600b0188815481101515612b7c57fe5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115612ba857fe5b0217905550612e1a565b8a600b0187815481101515612bc357fe5b9060005260206000209060060201600101548b600b0188815481101515612be657fe5b906000526020600020906006020160000154811515612c0157fe5b0491508a600b0187815481101515612c1557fe5b90600052602060002090600602016003015495505b8a60070187815481101515612c3b57fe5b9060005260206000200180549050861015612dd5578b88101515612c5e5761308a565b8a60070187815481101515612c6f57fe5b9060005260206000200186815481101515612c8657fe5b906000526020600020906002020194508985600101541415612d9457601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093508184600001600082825401925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e84604051808381526020018281526020019250505060405180910390a25b8760010197508a600b0187815481101515612dab57fe5b90600052602060002090600602016003016000815460010191905081905550856001019550612c2a565b60028b600b0188815481101515612de857fe5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115612e1457fe5b02179055505b5b60026003811115612e2857fe5b8b600b0188815481101515612e3957fe5b906000526020600020906006020160050160009054906101000a900460ff166003811115612e6357fe5b1415612ff8578a600b0187815481101515612e7a57fe5b90600052602060002090600602016004015495505b8a60070187815481101515612ea057fe5b9060005260206000200180549050861015612fb3578b88101515612ec35761308a565b8a60070187815481101515612ed457fe5b9060005260206000200186815481101515612eeb57fe5b90600052602060002090600202019450601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093508884600101600082825403925050819055508760010197508a600b0187815481101515612f8957fe5b90600052602060002090600602016004016000815460010191905081905550856001019550612e8f565b60038b600b0188815481101515612fc657fe5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115612ff257fe5b02179055505b60038081111561300457fe5b8b600b018881548110151561301557fe5b906000526020600020906006020160050160009054906101000a900460ff16600381111561303f57fe5b1415613058578a600a0160008154600101919050819055505b8660010196506125ee565b60028b60060160006101000a81548160ff0219169083600381111561308457fe5b02179055505b50505050505050505050505050565b60025481565b600360009054906101000a900461ffff1681565b6005601260009054906101000a900460ff1660048111156130d057fe5b60ff166005811015156130df57fe5b0154600e544203101515156130f357600080fd5b6000600481111561310057fe5b601260009054906101000a900460ff16600481111561311b57fe5b14156131ff5760014301601081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637b9c34e06010546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1580156131be57600080fd5b505af11580156131d2573d6000803e3d6000fd5b505050506001601260006101000a81548160ff021916908360048111156131f557fe5b0217905550613468565b6001600481111561320c57fe5b601260009054906101000a900460ff16600481111561322757fe5b141561333c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c73601e6010546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156132c057600080fd5b505af11580156132d4573d6000803e3d6000fd5b505050506040513d60208110156132ea57600080fd5b810190808051906020019092919050505060118190555060006011541415151561331357600080fd5b6002601260006101000a81548160ff0219169083600481111561333257fe5b0217905550613467565b6002600481111561334957fe5b601260009054906101000a900460ff16600481111561336457fe5b1415613393576003601260006101000a81548160ff0219169083600481111561338957fe5b0217905550613466565b600360048111156133a057fe5b601260009054906101000a900460ff1660048111156133bb57fe5b14156133ea576004601260006101000a81548160ff021916908360048111156133e057fe5b0217905550613465565b6004808111156133f657fe5b601260009054906101000a900460ff16600481111561341157fe5b1415613464576000601260006101000a81548160ff0219169083600481111561343657fe5b0217905550600d60008154600101919050819055506000600f81905550600060108190555060006011819055505b5b5b5b5b42600e81905550600d547f68c618b4722a30adfd435aefec043781d40a8a871689115e91a2257ca097fab5601260009054906101000a900460ff16604051808260048111156134b357fe5b60ff16815260200191505060405180910390a2565b60006014848154811015156134d957fe5b90600052602060002090600c0201600701838154811015156134f757fe5b906000526020600020018281548110151561350e57fe5b90600052602060002090600202016001015490509392505050565b600060148381548110151561353a57fe5b90600052602060002090600c020160090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6005816005811015156135a057fe5b016000915090505481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561360757600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600061365984614781565b9150613664846144f2565b341015151561367257600080fd5b601480548091906001016136869190614983565b925060148381548110151561369757fe5b90600052602060002090600c02019050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160048111156136f757fe5b601260009054906101000a900460ff16600481111561371257fe5b101561372857600d548160010181905550613737565b6001600d540181600101819055505b848160030181905550818160040160006101000a81548161ffff021916908361ffff160217905550600254816005018190555080600701805480919060010161378091906148b3565b5080600801805480919060010161379791906148df565b50827f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99533604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2829250505092915050565b6000806000806000806000806000806000600480600481111561382657fe5b601260009054906101000a900460ff16600481111561384157fe5b14151561384d57600080fd5b60148d81548110151561385c57fe5b90600052602060002090600c02019b506000600381111561387957fe5b8c60060160009054906101000a900460ff16600381111561389657fe5b1415156138a257600080fd5b600d548c600201548d6001015401111515156138bd57600080fd5b8b6008018c600201548154811015156138d257fe5b9060005260206000209060030201600001549a506138ee61404d565b9950600098505b8b6002015489111515613e785760008b14158061396e57508b6008018c6002015481548110151561392257fe5b9060005260206000209060030201600101548c6008018d6002015481548110151561394957fe5b9060005260206000209060030201600201600080815260200190815260200160002054145b15613d88576000975060009650600095505b8b6007018981548110151561399157fe5b9060005260206000200180549050861015613b14578b600701898154811015156139b757fe5b90600052602060002001868154811015156139ce57fe5b906000526020600020906002020194508a8560010154141515613b0257601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020935083600001548a10613a65578360000154613a67565b895b92508284600001600082825403925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e85600003604051808381526020018281526020019250505060405180910390a28288019750613b09565b8660010196505b856001019550613980565b6000871415613c0c578760136000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e8a604051808381526020018281526020019250505060405180910390a2613d87565b8688811515613c1757fe5b049150600095505b8b60070189815481101515613c3057fe5b9060005260206000200180549050861015613d86578b60070189815481101515613c5657fe5b9060005260206000200186815481101515613c6d57fe5b906000526020600020906002020194508a85600101541415613d7b57601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093508184600001600082825401925050819055508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8e84604051808381526020018281526020019250505060405180910390a25b856001019550613c1f565b5b5b600095505b8b60070189815481101515613d9e57fe5b9060005260206000200180549050861015613e6d578b60070189815481101515613dc457fe5b9060005260206000200186815481101515613ddb57fe5b90600052602060002090600202019450601360008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209350898460010160008282540392505081905550856001019550613d8d565b8860010198506138f5565b60028c60060160006101000a81548160ff02191690836003811115613e9957fe5b021790555050505050505050505050505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613f0957600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000601483815481101515613f5e57fe5b90600052602060002090600c020160080182815481101515613f7c57fe5b906000526020600020906003020160000154905092915050565b60115481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b600a5481565b60136020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b600060148381548110151561401557fe5b90600052602060002090600c02016008018281548110151561403357fe5b906000526020600020906003020160010154905092915050565b6000612710600454600a540281151561406257fe5b04905090565b601260009054906101000a900460ff1681565b60008060148481548110151561408d57fe5b90600052602060002090600c02019050600b5481600201541015156140d4577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91506140ec565b806005015460016140e486611638565b600202010291505b5092915050565b600080600060148581548110151561410757fe5b90600052602060002090600c02019250601360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091506002600481111561416557fe5b601260009054906101000a900460ff16600481111561418057fe5b11151561418c57600080fd5b600d548360090160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156141de57600080fd5b600d548360090160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550614231868686614537565b151561423c57600080fd5b612710600a546002600454875102020281151561425557fe5b0490508160000154811061426d57816000015461426f565b805b90508082600001600082825403925050819055508573ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8683600003604051808381526020018281526020019250505060405180910390a26002818115156142e857fe5b04601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8660028481151561437d57fe5b04604051808381526020018281526020019250505060405180910390a26002818115156143a657fe5b0460136000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282540192505081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f72f86a9d9fab69e4814ca24b54076a6e59b7463230974d7b72bed55777fbcf6c8660028481151561447f57fe5b04604051808381526020018281526020019250505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc84600501548651029081150290604051600060405180830381858888f193505050501580156144e9573d6000803e3d6000fd5b50505050505050565b600060025461450083614781565b61ffff16029050919050565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000806000806000809550601360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020945060148981548110151561459557fe5b90600052602060002090600c020193506145ae89611638565b9250600d5485600201541415156145c857600096506146f0565b600d5484600201548560010154011415156145e657600096506146f0565b600160048111156145f357fe5b601260009054906101000a900460ff16600481111561460e57fe5b11151561461e57600096506146f0565b600091505b87518210156146eb5785888381518110151561463b57fe5b9060200190602002015111151561465557600096506146f0565b878281518110151561466357fe5b9060200190602002015195508286111561468057600096506146f0565b600f546011548a886040518084815260200183815260200182815260200193505050506040518091039020600190048115156146b857fe5b069050846003015481101515156146ce57600080fd5b8460040154811015156146e057600080fd5b816001019150614623565b600196505b5050505050509392505050565b8181614709828261407b565b341015151561471757600080fd5b837f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a250505050565b60006002825110156147a557600360009054906101000a900461ffff1690506148ae565b8160018151811015156147b457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004600883600081518110151561483357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900461ffff169060020a020190505b919050565b8154818355818111156148da578183600052602060002091820191016148d991906149b5565b5b505050565b81548183558181111561490c5760030281600302836000526020600020918201910161490b91906149e1565b5b505050565b8260058101928215614940579160200282015b8281111561493f578251825591602001919060010190614924565b5b50905061494d9190614a10565b5090565b81548183558181111561497e5760060281600602836000526020600020918201910161497d9190614a35565b5b505050565b8154818355818111156149b057600c0281600c0283600052602060002091820191016149af9190614a90565b5b505050565b6149de91905b808211156149da57600081816149d19190614b57565b506001016149bb565b5090565b90565b614a0d91905b80821115614a09576000808201600090556001820160009055506003016149e7565b5090565b90565b614a3291905b80821115614a2e576000816000905550600101614a16565b5090565b90565b614a8d91905b80821115614a895760008082016000905560018201600090556002820160009055600382016000905560048201600090556005820160006101000a81549060ff021916905550600601614a3b565b5090565b90565b614b5491905b80821115614b5057600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905560038201600090556004820160006101000a81549061ffff021916905560058201600090556006820160006101000a81549060ff0219169055600782016000614b1f9190614b7b565b600882016000614b2f9190614b9c565b600a820160009055600b82016000614b479190614bc0565b50600c01614a96565b5090565b90565b5080546000825560020290600052602060002090810190614b789190614be4565b50565b5080546000825590600052602060002090810190614b9991906149b5565b50565b5080546000825560030290600052602060002090810190614bbd91906149e1565b50565b5080546000825560060290600052602060002090810190614be19190614a35565b50565b614c2f91905b80821115614c2b57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201614bea565b5090565b905600a165627a7a72305820275c02766a077b4e5518aa473feb7dfa316189dcc7b7505fe185c83651f0a45f0029","srcmap":"35322:40259:0:-;;;36015:10;35978:47;;36111:1;36076:36;;;;;;;;;;;;;;;;;;;;36204:10;36172:42;;36378:4;36358:24;;36557:1;36532:26;;36991:1;36969:23;;42822:251;8:9:-1;5:2;;;30:1;27;20:12;5:2;42822:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42935:9;42924:8;;:20;;;;;;;;;;;;;;;;;;42960:4;42954:3;;:10;;;;;;;;;;;;;;;;;;42993:3;42974:16;:22;;;;43022:14;43006:13;:30;;;;;;;:::i;:::-;;43057:9;43046:8;;:20;;;;;;;;;;;;;;;;;;42822:251;;;;35322:40259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","srcmap-runtime":"35322:40259:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37036:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37036:28:0;;;;;;;;;;;;;;;;;;;;;;;73551:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73551:137:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73987:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73987:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;75017:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;75017:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;36845:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36845:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;75273:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;75273:102:0;;;;;;;;;;;;;;;;;;;;;;;;;;72383:788;;8:9:-1;5:2;;;30:1;27;20:12;5:2;72383:788:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;72017:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;72017:204:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37197:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37197:19:0;;;;;;;;;;;;;;;;;;;;;;;45803:485;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45803:485:0;;;;;;;;;;;;;;;;;;;;;;;;;;60758:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60758:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44048:410;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44048:410:0;;;;;;;;;;;;;;;;;;;;;;;;;;37119:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37119:23:0;;;;;;;;;;;;;;;;;;;;;;;46948:1572;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46948:1572:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64607:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41194:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41194:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74281:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;74281:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;36969:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36969:23:0;;;;;;;;;;;;;;;;;;;;;;;70177:190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;70177:190:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74819:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;74819:117:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;71066:662;;8:9:-1;5:2;;;30:1;27;20:12;5:2;71066:662:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74560:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;74560:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;68240:185;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68240:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35594:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35594:58:0;;;;;;;;;;;;;;;;;;;;;;;65296:311;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65296:311:0;;;;;;;;;;;;;;;;;;;;;;;;;;43519:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43519:206:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54665:5482;;8:9:-1;5:2;;;30:1;27;20:12;5:2;54665:5482:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35978:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35978:47:0;;;;;;;;;;;;;;;;;;;;;;;36076:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36076:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;44682:879;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44682:879:0;;;;;;68727:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68727:179:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;70618:172;;8:9:-1;5:2;;;30:1;27;20:12;5:2;70618:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36275:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36275:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73771:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73771:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;63371:993;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50874:3286;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50874:3286:0;;;;;;;;;;;;;;;;;;;;;;;;;;75482:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;75482:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;69237:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69237:179:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37283:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37283:24:0;;;;;;;;;;;;;;;;;;;;;;;35910:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35910:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;36532:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36532:26:0;;;;;;;;;;;;;;;;;;;;;;;36358:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36358:24:0;;;;;;;;;;;;;;;;;;;;;;;38359:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38359:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;69694:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69694:176:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67676:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67676:146:0;;;;;;;;;;;;;;;;;;;;;;;37772:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37772:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66648:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66648:302:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49140:1303;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49140:1303:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66139:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66139:154:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36172:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36172:42:0;;;;;;;;;;;;;;;;;;;;;;;35564:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35564:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;61649:1166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;61649:1166:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37036:28;;;;:::o;73551:137::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;73648:7;:12;;73667:6;73675:5;73648:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73551:137;;;:::o;73987:150::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;74107:23;74082:22;:48;;;;73987:150;:::o;75017:82::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;75086:6;75078:5;:14;;;;75017:82;:::o;36845:23::-;;;;;;;;;;;;;:::o;75273:102::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;75357:11;75344:10;:24;;;;75273:102;:::o;72383:788::-;72444:20;72476:23;72502:8;72511:10;72502:20;;;;;;;;;;;;;;;;;;;;72476:46;;72570:7;;72552;:15;;;72536:7;:15;;;:31;:41;72532:601;;;72626:20;72619:27;;;;72532:601;72699:7;;72680;:15;;;72664:7;:15;;;:31;:42;72661:472;;;72774:17;72757:34;;;;;;;;:7;:13;;;;;;;;;;;;:34;;;;;;;;;72753:335;;;72824:13;72815:22;;;;;;;;:6;;;;;;;;;;;:22;;;;;;;;;72811:229;;;72866:21;72859:28;;;;72811:229;72924:13;72914:23;;;;;;;;:6;;;;;;;;;;;:23;;;;;;;;;72910:130;;;72966:24;72959:31;;;;72910:130;73020:20;73013:27;;;;72753:335;73068:20;73061:27;;;;72661:472;73112:21;73105:28;;72383:788;;;;;:::o;72017:204::-;72078:11;72101:23;72127:8;72136:10;72127:20;;;;;;;;;;;;;;;;;;;;72101:46;;72164:7;:19;;72184:7;:15;;;72164:36;;;;;;;;;;;;;;;;;;;;:50;;;72157:57;;72017:204;;;;:::o;37197:19::-;;;;:::o;45803:485::-;45887:19;45858:17;42438:7;42428:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;42420:26;;;;;;;;45909:6;:18;45916:10;45909:18;;;;;;;;;;;;;;;45887:40;;45955:5;:13;;;45945:6;:23;;45937:32;;;;;;;;45997:17;;45987:6;:27;;45979:36;;;;;;;;46054:7;;46033:5;:17;;;:28;;46025:37;;;;;;;;46160:7;;46140:5;:17;;:27;;;;46198:11;;46177:5;:18;;:32;;;;46234:6;46219:11;;:21;;;;;;;;;;;46269:11;;46250:5;:16;;:30;;;;45803:485;;;:::o;60758:213::-;60818:13;60843:23;60869:8;60878:10;60869:20;;;;;;;;;;;;;;;;;;;;60843:46;;60963:1;60945:7;:15;;;60942:1;:18;60937:1;60907:7;:27;;;;;;;;;;;;:31;60906:54;;;:58;60899:65;;60758:213;;;;:::o;44048:410::-;44096:19;44118:6;:18;44125:10;44118:18;;;;;;;;;;;;;;;44096:40;;44171:5;:13;;;44154:5;:13;;;:30;;44146:39;;;;;;;;44301:5;:13;;;44287:5;:13;;;:27;44277:6;:37;;44269:46;;;;;;;;44354:7;;44333:5;:17;;;:28;;44325:37;;;;;;;;44390:6;44373:5;:13;;;:23;;;;;;;;;;;44414:8;;;;;;;;;;;:17;;;44432:10;44443:6;44414:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44414:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44414:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44414:36:0;;;;;;;;;;;;;;;;44406:45;;;;;;;;44048:410;;:::o;37119:23::-;;;;:::o;46948:1572::-;47055:23;47111:19;47161:31;48093:6;48351:13;47032:11;42438:7;42428:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;42420:26;;;;;;;;47081:8;47090:10;47081:20;;;;;;;;;;;;;;;;;;;;47055:46;;47133:6;:18;47140:10;47133:18;;;;;;;;;;;;;;;47111:40;;47195:7;:19;;47215:7;:15;;;47195:36;;;;;;;;;;;;;;;;;;;;47161:70;;47288:7;;47249;:23;;:35;47273:10;47249:35;;;;;;;;;;;;;;;;:46;;47241:55;;;;;;;;47362:7;:15;;;47351:7;:26;;47343:35;;;;;;;;47455:42;47466:10;47478;47490:6;47455:10;:42::i;:::-;47447:51;;;;;;;;47547:7;;47509;:23;;:35;47533:10;47509:35;;;;;;;;;;;;;;;:45;;;;47598:6;:13;47564:11;:21;;:30;47586:7;47564:30;;;;;;;;;;;;:47;;;;;;;;;;;47652:11;:21;;:30;47674:7;47652:30;;;;;;;;;;;;47625:11;:24;;;:57;47621:458;;;47725:11;:21;;:30;47747:7;47725:30;;;;;;;;;;;;47698:11;:24;;:57;;;;47797:7;47769:11;:25;;:35;;;;47621:458;;;47851:11;:21;;:30;47873:7;47851:30;;;;;;;;;;;;47825:11;:24;;;:56;:76;;;;;47900:1;47885:6;:13;:16;;47825:76;47821:258;;;48042:1;48014:11;:25;;:29;;;;47821:258;47621:458;48102:1;48093:10;;48088:193;48109:6;:13;48105:1;:17;48088:193;;;48143:7;:13;;48157:7;:15;;;48143:30;;;;;;;;;;;;;;;;;48179:90;;;;;;;;;48211:10;48179:90;;;;;;48247:7;48179:90;;;48143:127;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;48143:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48124:3;;;;;48088:193;;;48324:17;:15;:17::i;:::-;48308:6;:13;:33;48291:5;:13;;;:50;;;;;;;;;;;48383:7;:30;;;48367:6;:13;:46;48351:62;;48423:10;:19;;:29;48443:8;48423:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48423:29:0;48480:10;48462:51;;;48492:10;48504:8;48462:51;;;;;;;;;;;;;;;;;;;;;;;;46948:1572;;;;;;;;;:::o;64607:519::-;64754:23;64684:13;42438:7;42428:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;42420:26;;;;;;;;64709:35;64722:10;64733;64709:12;:35::i;:::-;64780:8;64789:10;64780:20;;;;;;;;;;;;;;;;;;;;64754:46;;64831:34;64842:10;64854;64831;:34::i;:::-;64818:9;:47;;64810:56;;;;;;;;64919:7;;64900;:15;;;64884:7;:15;;;:31;:42;64876:51;;;;;;;;65002:10;64980:32;;:7;:18;;;;;;;;;;;;:32;;;64972:41;;;;;;;;65032:7;:15;;;:17;;;;;;;;;;;;;65059:7;:13;;:22;;;;;;;;;;;:::i;:::-;;65091:7;:19;;:28;;;;;;;;;;;:::i;:::-;;64607:519;;;;:::o;41194:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;74281:136::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;74391:19;74370:18;;:40;;;;;;;;;;;;;;;;;;74281:136;:::o;36969:23::-;;;;:::o;70177:190::-;70266:14;70299:8;70308:10;70299:20;;;;;;;;;;;;;;;;;;;;:32;;70332:8;70299:42;;;;;;;;;;;;;;;;;;;;:52;;:61;70352:7;70299:61;;;;;;;;;;;;70292:68;;70177:190;;;;;:::o;74819:117::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;74915:14;74899:13;:30;;;;;;;:::i;:::-;;74819:117;:::o;71066:662::-;71149:10;71171:23;71227:19;71548:13;71197:8;71206:10;71197:20;;;;;;;;;;;;;;;;;;;;71171:46;;71249:6;:14;71256:6;71249:14;;;;;;;;;;;;;;;71227:36;;71298:7;;71277:5;:17;;;:28;;:84;;;;71353:7;;71334;:15;;;71318:7;:15;;;:31;:42;;71277:84;:115;;;;71381:11;71373:19;;;;;;;;:6;;;;;;;;;;;:19;;;;;;;;;;71277:115;:157;;;;71410:24;71423:10;71410:12;:24::i;:::-;71404:5;:30;71277:157;:177;;;;71453:1;71446:5;:8;71277:177;:203;;;;71479:1;71466:11;;:14;71277:203;71273:448;;;71512:5;71505:12;;;;71273:448;71613:11;;71579:12;;71592:10;71603:5;71569:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;71564:46;;;:60;;;;;;;;71548:76;;71658:5;:18;;;71646:8;:30;;71645:65;;;;;71693:5;:16;;;71682:8;:27;71645:65;71638:72;;71066:662;;;;;;;;;:::o;74560:130::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;74665:18;74645:17;:38;;;;74560:130;:::o;68240:185::-;68331:15;68365:8;68374:10;68365:20;;;;;;;;;;;;;;;;;;;;:26;;68392:8;68365:36;;;;;;;;;;;;;;;;;68402:7;68365:45;;;;;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;68358:60;;68240:185;;;;;:::o;35594:58::-;35636:16;35594:58;:::o;65296:311::-;65352:23;65378:8;65387:9;65378:19;;;;;;;;;;;;;;;;;;;;65352:45;;65432:23;65415:40;;;;;;;;:7;:13;;;;;;;;;;;;:40;;;;;;;;;65407:49;;;;;;;;65483:21;65467:7;:13;;;:37;;;;;;;;;;;;;;;;;;;;;;;;65514:7;:18;;;;;;;;;;;;:23;;;65538:9;65549:7;:19;;65569:7;:15;;;65549:36;;;;;;;;;;;;;;;;;;;;:50;;;65514:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65514:86:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;65514:86:0;;;;65296:311;;:::o;43519:206::-;43603:8;;;;;;;;;;;42364;42350:22;;:10;:22;;;42342:31;;;;;;;;43631:8;;;;;;;;;;;:21;;;43653:5;43660:4;43666:7;43631:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43631:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43631:43:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;43631:43:0;;;;;;;;;;;;;;;;43623:52;;;;;;;;43711:7;43686:6;:13;43693:5;43686:13;;;;;;;;;;;;;;;:21;;;:32;;;;;;;;;;;43519:206;;;;;:::o;54665:5482::-;54787:23;55088:18;55169:16;55215:22;55309:6;56196;56433:17;56554:19;56622:12;57924:19;54759:16;42438:7;42428:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;42420:26;;;;;;;;54813:8;54822:10;54813:20;;;;;;;;;;;;;;;;;;;;54787:46;;54868:22;54851:39;;;;;;;;:7;:13;;;;;;;;;;;;:39;;;;;;;;;;54843:48;;;;;;;;54944:7;;54925;:15;;;54909:7;:15;;;:31;:42;;54901:51;;;;;;;;54978:22;54962:7;:13;;;:38;;;;;;;;;;;;;;;;;;;;;;;;55109:7;:19;;55129:7;:15;;;55109:36;;;;;;;;;;;;;;;;;;;;:50;;;55088:71;;55188:17;:15;:17::i;:::-;55169:36;;55240:1;55215:26;;55318:7;:34;;;55309:43;;55304:4787;55359:7;:15;;;55354:1;:20;;55304:4787;;;55499:1;55497;:3;55459:7;:28;;:35;;;;:41;55455:117;;;55520:7;:28;;:37;;;;;;;;;;;:::i;:::-;;55455:117;55754:1;55739:13;:16;:124;;;;;55813:7;:19;;55833:7;:15;;;55813:36;;;;;;;;;;;;;;;;;;;;:49;;;55760:7;:19;;55780:7;:15;;;55760:36;;;;;;;;;;;;;;;;;;;;:46;;:49;55807:1;55760:49;;;;;;;;;;;;:102;;55739:124;55735:290;;;55986:24;55946:7;:28;;55975:1;55946:31;;;;;;;;;;;;;;;;;;;;:37;;;:64;;;;;;;;;;;;;;;;;;;;;;;;55735:290;56144:27;56103:68;;;;;;;;:7;:28;;56132:1;56103:31;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:68;;;;;;;;;56099:1165;;;56205:7;:28;;56234:1;56205:31;;;;;;;;;;;;;;;;;;;;:53;;;56196:62;;56191:975;56264:7;:13;;56278:1;56264:16;;;;;;;;;;;;;;;;;:23;;;;56260:1;:27;56191:975;;;56341:14;56320:17;:35;;56316:96;;;56383:7;;56316:96;56453:7;:13;;56467:1;56453:16;;;;;;;;;;;;;;;;;56470:1;56453:19;;;;;;;;;;;;;;;;;;;;56433:39;;56513:13;56498:4;:11;;;:28;;56494:535;;;56576:6;:20;56583:4;:12;;;;;;;;;;;;56576:20;;;;;;;;;;;;;;;56554:42;;56649:5;:13;;;56637:11;:25;:55;;56679:5;:13;;;56637:55;;;56665:11;56637:55;56622:70;;56735:7;56718:5;:13;;;:24;;;;;;;;;;;56779:4;:12;;;;;;;;;;;;56768:51;;;56793:10;56810:7;56809:8;;56768:51;;;;;;;;;;;;;;;;;;;;;;;;56900:7;56845;:28;;56874:1;56845:31;;;;;;;;;;;;;;;;;;;;:51;;;:62;;;;;;;;;;;56494:535;;;56964:7;:28;;56993:1;56964:31;;;;;;;;;;;;;;;;;;;;:42;;;56962:44;;;;;;;;;;;56494:535;57053:7;:28;;57082:1;57053:31;;;;;;;;;;;;;;;;;;;;:53;;;57051:55;;;;;;;;;;;57128:19;;;;;56289:3;;;;;56191:975;;;57224:25;57184:7;:28;;57213:1;57184:31;;;;;;;;;;;;;;;;;;;;:37;;;:65;;;;;;;;;;;;;;;;;;;;;;;;56099:1165;57376:25;57335:66;;;;;;;;:7;:28;;57364:1;57335:31;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:66;;;;;;;;;57331:1724;;;57471:1;57425:7;:28;;57454:1;57425:31;;;;;;;;;;;;;;;;;;;;:42;;;:47;57421:1620;;;57595:7;:28;;57624:1;57595:31;;;;;;;;;;;;;;;;;;;;:51;;;57567:6;:16;57574:8;;;;;;;;;;;57567:16;;;;;;;;;;;;;;;:24;;;:79;;;;;;;;;;;57679:8;;;;;;;;;;;57668:90;;;57689:10;57705:7;:28;;57734:1;57705:31;;;;;;;;;;;;;;;;;;;;:51;;;57668:90;;;;;;;;;;;;;;;;;;;;;;;;57820:24;57780:7;:28;;57809:1;57780:31;;;;;;;;;;;;;;;;;;;;:37;;;:64;;;;;;;;;;;;;;;;;;;;;;;;57421:1620;;;58000:7;:28;;58029:1;58000:31;;;;;;;;;;;;;;;;;;;;:42;;;57946:7;:28;;57975:1;57946:31;;;;;;;;;;;;;;;;;;;;:51;;;:96;;;;;;;;57924:118;;58228:7;:28;;58257:1;58228:31;;;;;;;;;;;;;;;;;;;;:51;;;58224:55;;58219:717;58285:7;:13;;58299:1;58285:16;;;;;;;;;;;;;;;;;:23;;;;58281:1;:27;58219:717;;;58366:14;58345:17;:35;;58341:104;;;58412:7;;58341:104;58477:7;:13;;58491:1;58477:16;;;;;;;;;;;;;;;;;58494:1;58477:19;;;;;;;;;;;;;;;;;;;;58470:26;;58541:13;58526:4;:11;;;:28;58522:267;;;58594:6;:20;58601:4;:12;;;;;;;;;;;;58594:20;;;;;;;;;;;;;;;58586:28;;58661:14;58644:5;:13;;;:31;;;;;;;;;;;58716:4;:12;;;;;;;;;;;;58705:57;;;58730:10;58746:14;58705:57;;;;;;;;;;;;;;;;;;;;;;;;58522:267;58815:19;;;;;58862:7;:28;;58891:1;58862:31;;;;;;;;;;;;;;;;;;;;:51;;;58860:53;;;;;;;;;;;58310:3;;;;;58219:717;;;58998:24;58958:7;:28;;58987:1;58958:31;;;;;;;;;;;;;;;;;;;;:37;;;:64;;;;;;;;;;;;;;;;;;;;;;;;57421:1620;57331:1724;59114:24;59073:65;;;;;;;;:7;:28;;59102:1;59073:31;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:65;;;;;;;;;59069:857;;;59245:7;:28;;59274:1;59245:31;;;;;;;;;;;;;;;;;;;;:50;;;59241:54;;59236:592;59301:7;:13;;59315:1;59301:16;;;;;;;;;;;;;;;;;:23;;;;59297:1;:27;59236:592;;;59378:14;59357:17;:35;;59353:96;;;59420:7;;59353:96;59477:7;:13;;59491:1;59477:16;;;;;;;;;;;;;;;;;59494:1;59477:19;;;;;;;;;;;;;;;;;;;;59470:26;;59526:6;:20;59533:4;:12;;;;;;;;;;;;59526:20;;;;;;;;;;;;;;;59518:28;;59585:11;59568:5;:13;;;:28;;;;;;;;;;;59716:19;;;;;59759:7;:28;;59788:1;59759:31;;;;;;;;;;;;;;;;;;;;:50;;;59757:52;;;;;;;;;;;59326:3;;;;;59236:592;;;59886:25;59846:7;:28;;59875:1;59846:31;;;;;;;;;;;;;;;;;;;;:37;;;:65;;;;;;;;;;;;;;;;;;;;;;;;59069:857;59985:25;59944:66;;;;;;;;:7;:28;;59973:1;59944:31;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:66;;;;;;;;;59940:141;;;60032:7;:34;;;60030:36;;;;;;;;;;;59940:141;55376:3;;;;;55304:4787;;;60117:23;60101:7;:13;;;:39;;;;;;;;;;;;;;;;;;;;;;;;42448:1;54665:5482;;;;;;;;;;;;;:::o;35978:47::-;;;;:::o;36076:36::-;;;;;;;;;;;;;:::o;44682:879::-;44753:13;44773:6;;;;;;;;;;;44767:13;;;;;;;;44753:28;;;;;;;;;;;;;44733:16;;44729:3;:20;:52;;44721:61;;;;;;;;44807:17;44797:27;;;;;;;;:6;;;;;;;;;;;:27;;;;;;;;;44793:692;;;44865:1;44850:12;:16;44840:7;:26;;;;44880:3;;;;;;;;;;;:13;;;44894:7;;44880:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44880:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44880:22:0;;;;44925:11;44916:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;44793:692;;;44967:11;44957:21;;;;;;;;:6;;;;;;;;;;;:21;;;;;;;;;44953:532;;;45009:3;;;;;;;;;;;:21;;;45031:7;;45009:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45009:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45009:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;45009:30:0;;;;;;;;;;;;;;;;44994:12;:45;;;;45077:1;45061:12;;:17;;45053:26;;;;;;;;45102:11;45093:6;;:20;;;;;;;;;;;;;;;;;;;;;;;;44953:532;;;45144:11;45134:21;;;;;;;;:6;;;;;;;;;;;:21;;;;;;;;;45130:355;;;45180:13;45171:6;;:22;;;;;;;;;;;;;;;;;;;;;;;;45130:355;;;45224:13;45214:23;;;;;;;;:6;;;;;;;;;;;:23;;;;;;;;;45210:275;;;45262:16;45253:6;;:25;;;;;;;;;;;;;;;;;;;;;;;;45210:275;;;45309:16;45299:26;;;;;;;;:6;;;;;;;;;;;:26;;;;;;;;;45295:190;;;45350:17;45341:6;;:26;;;;;;;;;;;;;;;;;;;;;;;;45383:7;;45381:9;;;;;;;;;;;45418:1;45404:11;:15;;;;45443:1;45433:7;:11;;;;45473:1;45458:12;:16;;;;45295:190;45210:275;45130:355;44953:532;44793:692;45515:3;45496:16;:22;;;;45546:7;;45528:26;45538:6;;;;;;;;;;;45528:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;44682:879::o;68727:179::-;68817:11;68847:8;68856:10;68847:20;;;;;;;;;;;;;;;;;;;;:26;;68874:8;68847:36;;;;;;;;;;;;;;;;;68884:7;68847:45;;;;;;;;;;;;;;;;;;;;:52;;;68840:59;;68727:179;;;;;:::o;70618:172::-;70700:20;70739:8;70748:10;70739:20;;;;;;;;;;;;;;;;;;;;:36;;:44;70776:6;70739:44;;;;;;;;;;;;;;;;70732:51;;70618:172;;;;:::o;36275:28::-;;;;;;;;;;;;;;;;;;;;:::o;73771:73::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;73833:4;73827:3;;:10;;;;;;;;;;;;;;;;;;73771:73;:::o;63371:993::-;63451:14;63477:15;63635:23;63495:31;63515:10;63495:19;:31::i;:::-;63477:49;;63557:27;63573:10;63557:15;:27::i;:::-;63544:9;:40;;63536:49;;;;;;;;63608:8;:17;;;;;;;;;;;:::i;:::-;63596:29;;63661:8;63670:9;63661:19;;;;;;;;;;;;;;;;;;;;63635:45;;63722:10;63690:7;:18;;;:43;;;;;;;;;;;;;;;;;;63756:11;63747:20;;;;;;;;:6;;;;;;;;;;;:20;;;;;;;;;63743:225;;;63864:7;;63846;:15;;:25;;;;63743:225;;;63967:1;63959:7;;:9;63941:7;:15;;:27;;;;63743:225;63996:8;63978:7;:15;;:26;;;;64044:8;64014:7;:27;;;:38;;;;;;;;;;;;;;;;;;64095:22;;64062:7;:30;;:55;;;;64210:7;:13;;:22;;;;;;;;;;;:::i;:::-;;64242:7;:19;;:28;;;;;;;;;;;:::i;:::-;;64297:9;64281:50;64319:10;64281:50;;;;;;;;;;;;;;;;;;;;;;64348:9;64341:16;;63371:993;;;;;;:::o;50874:3286::-;50970:23;51141:18;51222:16;51273:6;51858:24;51904:15;52010:6;52078:17;52199:19;52267:12;52966:19;50942:16;42438:7;42428:17;;;;;;;;:6;;;;;;;;;;;:17;;;;;;;;;42420:26;;;;;;;;50996:8;51005:10;50996:20;;;;;;;;;;;;;;;;;;;;50970:46;;51051:17;51034:34;;;;;;;;:7;:13;;;;;;;;;;;;:34;;;;;;;;;51026:43;;;;;;;;51122:7;;51103;:15;;;51087:7;:15;;;:31;:42;;51079:51;;;;;;;;51162:7;:19;;51182:7;:15;;;51162:36;;;;;;;;;;;;;;;;;;;;:50;;;51141:71;;51241:17;:15;:17::i;:::-;51222:36;;51282:1;51273:10;;51268:2765;51290:7;:15;;;51285:1;:20;;51268:2765;;;51729:1;51714:13;:16;;:124;;;;51788:7;:19;;51808:7;:15;;;51788:36;;;;;;;;;;;;;;;;;;;;:49;;;51735:7;:19;;51755:7;:15;;;51735:36;;;;;;;;;;;;;;;;;;;;:46;;:49;51782:1;51735:49;;;;;;;;;;;;:102;51714:124;51710:1932;;;51885:1;51858:28;;51922:1;51904:19;;52019:1;52010:10;;52005:623;52026:7;:13;;52040:1;52026:16;;;;;;;;;;;;;;;;;:23;;;;52022:1;:27;52005:623;;;52098:7;:13;;52112:1;52098:16;;;;;;;;;;;;;;;;;52115:1;52098:19;;;;;;;;;;;;;;;;;;;;52078:39;;52158:13;52143:4;:11;;;:28;;52139:471;;;52221:6;:20;52228:4;:12;;;;;;;;;;;;52221:20;;;;;;;;;;;;;;;52199:42;;52294:5;:13;;;52282:11;:25;:55;;52324:5;:13;;;52282:55;;;52310:11;52282:55;52267:70;;52380:7;52363:5;:13;;;:24;;;;;;;;;;;52424:4;:12;;;;;;;;;;;;52413:51;;;52438:10;52455:7;52454:8;;52413:51;;;;;;;;;;;;;;;;;;;;;;;;52513:7;52490:30;;;;52139:471;;;52575:12;;;;;52139:471;52051:3;;;;;52005:623;;;52663:1;52649:10;:15;52645:983;;;52787:19;52759:6;:16;52766:8;;;;;;;;;;;52759:16;;;;;;;;;;;;;;;:24;;;:47;;;;;;;;;;;52839:8;;;;;;;;;;;52828:58;;;52849:10;52865:19;52828:58;;;;;;;;;;;;;;;;;;;;;;;;52645:983;;;53010:10;52988:19;:32;;;;;;;;52966:54;;53206:1;53202:5;;53197:413;53213:7;:13;;53227:1;53213:16;;;;;;;;;;;;;;;;;:23;;;;53209:1;:27;53197:413;;;53276:7;:13;;53290:1;53276:16;;;;;;;;;;;;;;;;;53293:1;53276:19;;;;;;;;;;;;;;;;;;;;53269:26;;53340:13;53325:4;:11;;;:28;53321:267;;;53393:6;:20;53400:4;:12;;;;;;;;;;;;53393:20;;;;;;;;;;;;;;;53385:28;;53460:14;53443:5;:13;;;:31;;;;;;;;;;;53515:4;:12;;;;;;;;;;;;53504:57;;;53529:10;53545:14;53504:57;;;;;;;;;;;;;;;;;;;;;;;;53321:267;53238:3;;;;;53197:413;;;52645:983;51710:1932;53738:1;53734:5;;53729:294;53745:7;:13;;53759:1;53745:16;;;;;;;;;;;;;;;;;:23;;;;53741:1;:27;53729:294;;;53800:7;:13;;53814:1;53800:16;;;;;;;;;;;;;;;;;53817:1;53800:19;;;;;;;;;;;;;;;;;;;;53793:26;;53845:6;:20;53852:4;:12;;;;;;;;;;;;53845:20;;;;;;;;;;;;;;;53837:28;;53900:11;53883:5;:13;;;:28;;;;;;;;;;;53770:3;;;;;53729:294;;;51307:3;;;;;51268:2765;;;54058:23;54042:7;:13;;;:39;;;;;;;;;;;;;;;;;;;;;;;;50874:3286;;;;;;;;;;;;;:::o;75482:97::-;42503:8;;;;;;;;;;;42489:22;;:10;:22;;;42481:31;;;;;;;;75563:9;75552:8;;:20;;;;;;;;;;;;;;;;;;75482:97;:::o;69237:179::-;69316:18;69353:8;69362:10;69353:20;;;;;;;;;;;;;;;;;;;;:32;;69386:8;69353:42;;;;;;;;;;;;;;;;;;;;:56;;;69346:63;;69237:179;;;;:::o;37283:24::-;;;;:::o;35910:14::-;;;;;;;;;;;;;:::o;36532:26::-;;;;:::o;36358:24::-;;;;:::o;38359:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;69694:176::-;69772:17;69808:8;69817:10;69808:20;;;;;;;;;;;;;;;;;;;;:32;;69841:8;69808:42;;;;;;;;;;;;;;;;;;;;:55;;;69801:62;;69694:176;;;;:::o;67676:146::-;67724:29;36448:3;67781:17;;67773:5;;:25;67772:43;;;;;;;;67765:50;;67676:146;:::o;37772:20::-;;;;;;;;;;;;;:::o;66648:302::-;66724:8;66744:23;66770:8;66779:10;66770:20;;;;;;;;;;;;;;;;;;;;66744:46;;66823:10;;66804:7;:15;;;:29;;66801:59;;;35636:16;66835:25;;;;66801:59;66913:7;:30;;;66908:1;66881:24;66894:10;66881:12;:24::i;:::-;66879:1;:26;:30;66878:65;66871:72;;66648:302;;;;;;:::o;49140:1303::-;49243:23;49299:27;49682:13;49269:8;49278:10;49269:20;;;;;;;;;;;;;;;;;;;;49243:46;;49329:6;:21;49336:13;49329:21;;;;;;;;;;;;;;;49299:51;;49377:11;49368:20;;;;;;;;:6;;;;;;;;;;;:20;;;;;;;;;49360:29;;;;;;;;49449:7;;49407;:23;;:38;49431:13;49407:38;;;;;;;;;;;;;;;;:49;;49399:58;;;;;;;;49542:7;;49501;:23;;:38;49525:13;49501:38;;;;;;;;;;;;;;;:48;;;;49626:45;49637:13;49652:10;49664:6;49626:10;:45::i;:::-;49618:54;;;;;;;;36448:3;49738:5;;49734:1;49714:17;;49698:6;:13;:33;:37;:45;:61;;;;;;;;49682:77;;49792:13;:21;;;49781:8;:32;49780:69;;49828:13;:21;;;49780:69;;;49817:8;49780:69;49769:80;;49942:8;49917:13;:21;;;:33;;;;;;;;;;;49971:13;49960:53;;;49986:10;50003:8;49998:14;;49960:53;;;;;;;;;;;;;;;;;;;;;;;;50064:1;50053:8;:12;;;;;;;;50023:6;:18;50030:10;50023:18;;;;;;;;;;;;;;;:26;;;:42;;;;;;;;;;;50129:10;50118:53;;;50141:10;50168:1;50157:8;:12;;;;;;;;50118:53;;;;;;;;;;;;;;;;;;;;;;;;50220:1;50209:8;:12;;;;;;;;50181:6;:16;50188:8;;;;;;;;;;;50181:16;;;;;;;;;;;;;;;:24;;;:40;;;;;;;;;;;50277:8;;;;;;;;;;;50266:51;;;50287:10;50314:1;50303:8;:12;;;;;;;;50266:51;;;;;;;;;;;;;;;;;;;;;;;;50327:10;:19;;:65;50361:7;:30;;;50347:6;:13;:44;50327:65;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50327:65:0;49140:1303;;;;;;:::o;66139:154::-;66203:8;66264:22;;66230:31;66250:10;66230:19;:31::i;:::-;:56;;;66223:63;;66139:154;;;:::o;36172:42::-;;;;:::o;35564:24::-;;;;;;;;;;;;;:::o;61649:1166::-;61745:10;61767:9;61790:19;61843:23;61899:13;62279:6;62552:13;61779:1;61767:13;;61812:6;:21;61819:13;61812:21;;;;;;;;;;;;;;;61790:43;;61869:8;61878:10;61869:20;;;;;;;;;;;;;;;;;;;;61843:46;;61915:24;61928:10;61915:12;:24::i;:::-;61899:40;;61975:7;;61954:5;:17;;;:28;;61950:46;;;61991:5;61984:12;;;;61950:46;62107:7;;62088;:15;;;62072:7;:15;;;:31;:42;;62068:60;;;62123:5;62116:12;;;;62068:60;62195:11;62185:21;;;;;;;;:6;;;;;;;;;;;:21;;;;;;;;;;62181:39;;;62215:5;62208:12;;;;62181:39;62288:1;62279:10;;62274:513;62295:6;:13;62291:1;:17;62274:513;;;62346:4;62333:6;62340:1;62333:9;;;;;;;;;;;;;;;;;;:17;;62329:35;;;62359:5;62352:12;;;;62329:35;62482:6;62489:1;62482:9;;;;;;;;;;;;;;;;;;62475:16;;62516:8;62509:4;:15;62505:33;;;62533:5;62526:12;;;;62505:33;62618:11;;62583:12;;62597:10;62609:4;62573:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;62568:47;;;:61;;;;;;;;62552:77;;62707:5;:18;;;62695:8;:30;;62687:39;;;;;;;;62759:5;:16;;;62748:8;:27;62740:36;;;;;;;;62310:3;;;;;62274:513;;;62804:4;62797:11;;61649:1166;;;;;;;;;;;;:::o;34052:178::-;34127:10;34138;32177:34;32188:10;32200;32177;:34::i;:::-;32166:9;:45;;32158:54;;;;;;;;34188:10;34173:50;34211:10;34173:50;;;;;;;;;;;;;;;;;;;;;;34052:178;;;;:::o;67265:254::-;67335:15;67386:1;67366:10;:17;:21;67362:150;;;67408:18;;;;;;;;;;;67401:25;;;;67362:150;67498:10;67509:1;67498:13;;;;;;;;;;;;;;;;;;;;67491:21;;;67486:1;67468:10;67479:1;67468:13;;;;;;;;;;;;;;;;;;;;67461:21;;;:26;;;;;;67460:52;67453:59;;67265:254;;;;:::o;35322:40259::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0xd6d29815329bc0b31c5b3ce13683441afabf0ef6_Kleros.sol","exportedSymbols":{"ApproveAndCallFallBack":[13],"Arbitrable":[1447],"Arbitrator":[1564],"BlockHashRNG":[1273],"BlockHashRNGFallback":[1350],"Controlled":[78],"Kleros":[4054],"MiniMeTokenFactory":[1120],"Pinakion":[1079],"RNG":[1171],"TokenController":[43]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"323:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[13],"name":"ApproveAndCallFallBack","scope":4055},"children":[{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"receiveApproval","payable":false,"scope":13,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":12,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2,"name":"ElementaryTypeName","src":"413:7:0"}],"id":3,"name":"VariableDeclaration","src":"413:12:0"},{"attributes":{"constant":false,"name":"_amount","scope":12,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"427:7:0"}],"id":5,"name":"VariableDeclaration","src":"427:15:0"},{"attributes":{"constant":false,"name":"_token","scope":12,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":6,"name":"ElementaryTypeName","src":"444:7:0"}],"id":7,"name":"VariableDeclaration","src":"444:14:0"},{"attributes":{"constant":false,"name":"_data","scope":12,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":8,"name":"ElementaryTypeName","src":"460:5:0"}],"id":9,"name":"VariableDeclaration","src":"460:11:0"}],"id":10,"name":"ParameterList","src":"412:60:0"},{"attributes":{"parameters":[null]},"children":[],"id":11,"name":"ParameterList","src":"479:0:0"}],"id":12,"name":"FunctionDefinition","src":"388:92:0"}],"id":13,"name":"ContractDefinition","src":"350:132:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@dev The token controller contract must implement these functions","fullyImplemented":false,"linearizedBaseContracts":[43],"name":"TokenController","scope":4055},"children":[{"attributes":{"body":null,"constant":false,"documentation":"@notice Called when `_owner` sends ether to the MiniMe Token contract\n @param _owner The address that sent the ether to create tokens\n @return True if the ether is accepted, false if it throws","implemented":false,"isConstructor":false,"modifiers":[null],"name":"proxyPayment","payable":true,"scope":43,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":20,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":14,"name":"ElementaryTypeName","src":"822:7:0"}],"id":15,"name":"VariableDeclaration","src":"822:14:0"}],"id":16,"name":"ParameterList","src":"821:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":20,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":17,"name":"ElementaryTypeName","src":"861:4:0"}],"id":18,"name":"VariableDeclaration","src":"861:4:0"}],"id":19,"name":"ParameterList","src":"860:6:0"}],"id":20,"name":"FunctionDefinition","src":"800:67:0"},{"attributes":{"body":null,"constant":false,"documentation":"@notice Notifies the controller about a token transfer allowing the\n  controller to react if desired\n @param _from The origin of the transfer\n @param _to The destination of the transfer\n @param _amount The amount of the transfer\n @return False if the controller does not authorize the transfer","implemented":false,"isConstructor":false,"modifiers":[null],"name":"onTransfer","payable":false,"scope":43,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":31,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":21,"name":"ElementaryTypeName","src":"1230:7:0"}],"id":22,"name":"VariableDeclaration","src":"1230:13:0"},{"attributes":{"constant":false,"name":"_to","scope":31,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":23,"name":"ElementaryTypeName","src":"1245:7:0"}],"id":24,"name":"VariableDeclaration","src":"1245:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":31,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":25,"name":"ElementaryTypeName","src":"1258:4:0"}],"id":26,"name":"VariableDeclaration","src":"1258:12:0"}],"id":27,"name":"ParameterList","src":"1229:42:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":31,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":28,"name":"ElementaryTypeName","src":"1287:4:0"}],"id":29,"name":"VariableDeclaration","src":"1287:4:0"}],"id":30,"name":"ParameterList","src":"1286:6:0"}],"id":31,"name":"FunctionDefinition","src":"1210:83:0"},{"attributes":{"body":null,"constant":false,"documentation":"@notice Notifies the controller about an approval allowing the\n  controller to react if desired\n @param _owner The address that calls `approve()`\n @param _spender The spender in the `approve()` call\n @param _amount The amount in the `approve()` call\n @return False if the controller does not authorize the approval","implemented":false,"isConstructor":false,"modifiers":[null],"name":"onApprove","payable":false,"scope":43,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":42,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":32,"name":"ElementaryTypeName","src":"1676:7:0"}],"id":33,"name":"VariableDeclaration","src":"1676:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":42,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":34,"name":"ElementaryTypeName","src":"1692:7:0"}],"id":35,"name":"VariableDeclaration","src":"1692:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":42,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":36,"name":"ElementaryTypeName","src":"1710:4:0"}],"id":37,"name":"VariableDeclaration","src":"1710:12:0"}],"id":38,"name":"ParameterList","src":"1675:48:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":42,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":39,"name":"ElementaryTypeName","src":"1747:4:0"}],"id":40,"name":"VariableDeclaration","src":"1747:4:0"}],"id":41,"name":"ParameterList","src":"1746:6:0"}],"id":42,"name":"FunctionDefinition","src":"1657:96:0"}],"id":43,"name":"ContractDefinition","src":"554:1201:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[78],"name":"Controlled","scope":4055},"children":[{"attributes":{"documentation":"@notice The address of the controller is the only address that can call\n  a function with this modifier","name":"onlyController","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":44,"name":"ParameterList","src":"1926:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":45,"name":"Identifier","src":"1928:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":46,"name":"Identifier","src":"1936:3:0"}],"id":47,"name":"MemberAccess","src":"1936:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":48,"name":"Identifier","src":"1950:10:0"}],"id":49,"name":"BinaryOperation","src":"1936:24:0"}],"id":50,"name":"FunctionCall","src":"1928:33:0"}],"id":51,"name":"ExpressionStatement","src":"1928:33:0"},{"id":52,"name":"PlaceholderStatement","src":"1963:1:0"}],"id":53,"name":"Block","src":"1926:41:0"}],"id":54,"name":"ModifierDefinition","src":"1902:65:0"},{"attributes":{"constant":false,"name":"controller","scope":78,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":55,"name":"ElementaryTypeName","src":"1973:7:0"}],"id":56,"name":"VariableDeclaration","src":"1973:25:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":true,"modifiers":[null],"name":"Controlled","payable":false,"scope":78,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":57,"name":"ParameterList","src":"2024:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":58,"name":"ParameterList","src":"2034:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":59,"name":"Identifier","src":"2036:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":60,"name":"Identifier","src":"2049:3:0"}],"id":61,"name":"MemberAccess","src":"2049:10:0"}],"id":62,"name":"Assignment","src":"2036:23:0"}],"id":63,"name":"ExpressionStatement","src":"2036:23:0"}],"id":64,"name":"Block","src":"2034:27:0"}],"id":65,"name":"FunctionDefinition","src":"2005:56:0"},{"attributes":{"constant":false,"documentation":"@notice Changes the controller of the contract\n @param _newController The new controller of the contract","implemented":true,"isConstructor":false,"name":"changeController","payable":false,"scope":78,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newController","scope":77,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":66,"name":"ElementaryTypeName","src":"2213:7:0"}],"id":67,"name":"VariableDeclaration","src":"2213:22:0"}],"id":68,"name":"ParameterList","src":"2212:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":71,"name":"ParameterList","src":"2259:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"modifier ()","value":"onlyController"},"id":69,"name":"Identifier","src":"2244:14:0"}],"id":70,"name":"ModifierInvocation","src":"2244:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":72,"name":"Identifier","src":"2269:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":67,"type":"address","value":"_newController"},"id":73,"name":"Identifier","src":"2282:14:0"}],"id":74,"name":"Assignment","src":"2269:27:0"}],"id":75,"name":"ExpressionStatement","src":"2269:27:0"}],"id":76,"name":"Block","src":"2259:44:0"}],"id":77,"name":"FunctionDefinition","src":"2187:116:0"}],"id":78,"name":"ContractDefinition","src":"1757:548:0"},{"attributes":{"contractDependencies":[78],"contractKind":"contract","documentation":"@dev The actual token contract, the default controller is the msg.sender\n  that deploys the contract, so usually this token will be deployed by a\n  token controller contract, which Giveth will call a \"Campaign\"","fullyImplemented":true,"linearizedBaseContracts":[1079,78],"name":"Pinakion","scope":4055},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Controlled","referencedDeclaration":78,"type":"contract Controlled"},"id":79,"name":"UserDefinedTypeName","src":"2549:10:0"}],"id":80,"name":"InheritanceSpecifier","src":"2549:10:0"},{"attributes":{"constant":false,"name":"name","scope":1079,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":81,"name":"ElementaryTypeName","src":"2567:6:0"}],"id":82,"name":"VariableDeclaration","src":"2567:18:0"},{"attributes":{"constant":false,"name":"decimals","scope":1079,"stateVariable":true,"storageLocation":"default","type":"uint8","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":83,"name":"ElementaryTypeName","src":"2647:5:0"}],"id":84,"name":"VariableDeclaration","src":"2647:21:0"},{"attributes":{"constant":false,"name":"symbol","scope":1079,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":85,"name":"ElementaryTypeName","src":"2728:6:0"}],"id":86,"name":"VariableDeclaration","src":"2728:20:0"},{"attributes":{"constant":false,"name":"version","scope":1079,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":87,"name":"ElementaryTypeName","src":"2793:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"4d4d545f302e32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"MMT_0.2\"","value":"MMT_0.2"},"id":88,"name":"Literal","src":"2817:9:0"}],"id":89,"name":"VariableDeclaration","src":"2793:33:0"},{"attributes":{"canonicalName":"Pinakion.Checkpoint","name":"Checkpoint","scope":1079,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"fromBlock","scope":94,"stateVariable":false,"storageLocation":"default","type":"uint128","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint128","type":"uint128"},"id":90,"name":"ElementaryTypeName","src":"3147:7:0"}],"id":91,"name":"VariableDeclaration","src":"3147:17:0"},{"attributes":{"constant":false,"name":"value","scope":94,"stateVariable":false,"storageLocation":"default","type":"uint128","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint128","type":"uint128"},"id":92,"name":"ElementaryTypeName","src":"3245:7:0"}],"id":93,"name":"VariableDeclaration","src":"3245:13:0"}],"id":94,"name":"StructDefinition","src":"3040:225:0"},{"attributes":{"constant":false,"name":"parentToken","scope":1079,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":95,"name":"UserDefinedTypeName","src":"3407:8:0"}],"id":96,"name":"VariableDeclaration","src":"3407:27:0"},{"attributes":{"constant":false,"name":"parentSnapShotBlock","scope":1079,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":97,"name":"ElementaryTypeName","src":"3591:4:0"}],"id":98,"name":"VariableDeclaration","src":"3591:31:0"},{"attributes":{"constant":false,"name":"creationBlock","scope":1079,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":99,"name":"ElementaryTypeName","src":"3705:4:0"}],"id":100,"name":"VariableDeclaration","src":"3705:25:0"},{"attributes":{"constant":false,"name":"balances","scope":1079,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct Pinakion.Checkpoint[])","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => struct Pinakion.Checkpoint[])"},"children":[{"attributes":{"name":"address","type":"address"},"id":101,"name":"ElementaryTypeName","src":"3944:7:0"},{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":94,"type":"struct Pinakion.Checkpoint"},"id":102,"name":"UserDefinedTypeName","src":"3955:10:0"}],"id":103,"name":"ArrayTypeName","src":"3955:12:0"}],"id":104,"name":"Mapping","src":"3935:33:0"}],"id":105,"name":"VariableDeclaration","src":"3935:42:0"},{"attributes":{"constant":false,"name":"allowed","scope":1079,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":106,"name":"ElementaryTypeName","src":"4066:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":107,"name":"ElementaryTypeName","src":"4086:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":108,"name":"ElementaryTypeName","src":"4097:7:0"}],"id":109,"name":"Mapping","src":"4077:28:0"}],"id":110,"name":"Mapping","src":"4057:49:0"}],"id":111,"name":"VariableDeclaration","src":"4057:57:0"},{"attributes":{"constant":false,"name":"totalSupplyHistory","scope":1079,"stateVariable":true,"storageLocation":"default","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":94,"type":"struct Pinakion.Checkpoint"},"id":112,"name":"UserDefinedTypeName","src":"4181:10:0"}],"id":113,"name":"ArrayTypeName","src":"4181:12:0"}],"id":114,"name":"VariableDeclaration","src":"4181:31:0"},{"attributes":{"constant":false,"name":"transfersEnabled","scope":1079,"stateVariable":true,"storageLocation":"default","type":"bool","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":115,"name":"ElementaryTypeName","src":"4284:4:0"}],"id":116,"name":"VariableDeclaration","src":"4284:28:0"},{"attributes":{"constant":false,"name":"tokenFactory","scope":1079,"stateVariable":true,"storageLocation":"default","type":"contract MiniMeTokenFactory","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"MiniMeTokenFactory","referencedDeclaration":1120,"type":"contract MiniMeTokenFactory"},"id":117,"name":"UserDefinedTypeName","src":"4370:18:0"}],"id":118,"name":"VariableDeclaration","src":"4370:38:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Constructor to create a Pinakion\n @param _tokenFactory The address of the MiniMeTokenFactory contract that\n  will create the Clone token contracts, the token factory needs to be\n  deployed first\n @param _parentToken Address of the parent token, set to 0x0 if it is a\n  new token\n @param _parentSnapShotBlock Block of the parent token that will\n  determine the initial distribution of the clone token, set to 0 if it\n  is a new token\n @param _tokenName Name of the new token\n @param _decimalUnits Number of decimals of the new token\n @param _tokenSymbol Token Symbol for the new token\n @param _transfersEnabled If true, tokens will be able to be transferred","implemented":true,"isConstructor":true,"modifiers":[null],"name":"Pinakion","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_tokenFactory","scope":173,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":119,"name":"ElementaryTypeName","src":"5249:7:0"}],"id":120,"name":"VariableDeclaration","src":"5249:21:0"},{"attributes":{"constant":false,"name":"_parentToken","scope":173,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":121,"name":"ElementaryTypeName","src":"5280:7:0"}],"id":122,"name":"VariableDeclaration","src":"5280:20:0"},{"attributes":{"constant":false,"name":"_parentSnapShotBlock","scope":173,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":123,"name":"ElementaryTypeName","src":"5310:4:0"}],"id":124,"name":"VariableDeclaration","src":"5310:25:0"},{"attributes":{"constant":false,"name":"_tokenName","scope":173,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":125,"name":"ElementaryTypeName","src":"5345:6:0"}],"id":126,"name":"VariableDeclaration","src":"5345:17:0"},{"attributes":{"constant":false,"name":"_decimalUnits","scope":173,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":127,"name":"ElementaryTypeName","src":"5372:5:0"}],"id":128,"name":"VariableDeclaration","src":"5372:19:0"},{"attributes":{"constant":false,"name":"_tokenSymbol","scope":173,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":129,"name":"ElementaryTypeName","src":"5401:6:0"}],"id":130,"name":"VariableDeclaration","src":"5401:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":173,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":131,"name":"ElementaryTypeName","src":"5430:4:0"}],"id":132,"name":"VariableDeclaration","src":"5430:22:0"}],"id":133,"name":"ParameterList","src":"5239:219:0"},{"attributes":{"parameters":[null]},"children":[],"id":134,"name":"ParameterList","src":"5466:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract MiniMeTokenFactory"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":118,"type":"contract MiniMeTokenFactory","value":"tokenFactory"},"id":135,"name":"Identifier","src":"5476:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract MiniMeTokenFactory","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1120,"type":"type(contract MiniMeTokenFactory)","value":"MiniMeTokenFactory"},"id":136,"name":"Identifier","src":"5491:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":120,"type":"address","value":"_tokenFactory"},"id":137,"name":"Identifier","src":"5510:13:0"}],"id":138,"name":"FunctionCall","src":"5491:33:0"}],"id":139,"name":"Assignment","src":"5476:48:0"}],"id":140,"name":"ExpressionStatement","src":"5476:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":82,"type":"string storage ref","value":"name"},"id":141,"name":"Identifier","src":"5534:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":126,"type":"string memory","value":"_tokenName"},"id":142,"name":"Identifier","src":"5541:10:0"}],"id":143,"name":"Assignment","src":"5534:17:0"}],"id":144,"name":"ExpressionStatement","src":"5534:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":84,"type":"uint8","value":"decimals"},"id":145,"name":"Identifier","src":"5609:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint8","value":"_decimalUnits"},"id":146,"name":"Identifier","src":"5620:13:0"}],"id":147,"name":"Assignment","src":"5609:24:0"}],"id":148,"name":"ExpressionStatement","src":"5609:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":86,"type":"string storage ref","value":"symbol"},"id":149,"name":"Identifier","src":"5688:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":130,"type":"string memory","value":"_tokenSymbol"},"id":150,"name":"Identifier","src":"5697:12:0"}],"id":151,"name":"Assignment","src":"5688:21:0"}],"id":152,"name":"ExpressionStatement","src":"5688:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":96,"type":"contract Pinakion","value":"parentToken"},"id":153,"name":"Identifier","src":"5765:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1079,"type":"type(contract Pinakion)","value":"Pinakion"},"id":154,"name":"Identifier","src":"5779:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":122,"type":"address","value":"_parentToken"},"id":155,"name":"Identifier","src":"5788:12:0"}],"id":156,"name":"FunctionCall","src":"5779:22:0"}],"id":157,"name":"Assignment","src":"5765:36:0"}],"id":158,"name":"ExpressionStatement","src":"5765:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":98,"type":"uint256","value":"parentSnapShotBlock"},"id":159,"name":"Identifier","src":"5811:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":124,"type":"uint256","value":"_parentSnapShotBlock"},"id":160,"name":"Identifier","src":"5833:20:0"}],"id":161,"name":"Assignment","src":"5811:42:0"}],"id":162,"name":"ExpressionStatement","src":"5811:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"bool","value":"transfersEnabled"},"id":163,"name":"Identifier","src":"5863:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":132,"type":"bool","value":"_transfersEnabled"},"id":164,"name":"Identifier","src":"5882:17:0"}],"id":165,"name":"Assignment","src":"5863:36:0"}],"id":166,"name":"ExpressionStatement","src":"5863:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"uint256","value":"creationBlock"},"id":167,"name":"Identifier","src":"5909:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":168,"name":"Identifier","src":"5925:5:0"}],"id":169,"name":"MemberAccess","src":"5925:12:0"}],"id":170,"name":"Assignment","src":"5909:28:0"}],"id":171,"name":"ExpressionStatement","src":"5909:28:0"}],"id":172,"name":"Block","src":"5466:478:0"}],"id":173,"name":"FunctionDefinition","src":"5222:722:0"},{"attributes":{"constant":false,"documentation":"////////////////\n @notice Send `_amount` tokens to `_to` from `msg.sender`\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return Whether the transfer was successful or not","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":196,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":174,"name":"ElementaryTypeName","src":"6261:7:0"}],"id":175,"name":"VariableDeclaration","src":"6261:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":196,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":176,"name":"ElementaryTypeName","src":"6274:7:0"}],"id":177,"name":"VariableDeclaration","src":"6274:15:0"}],"id":178,"name":"ParameterList","src":"6260:30:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":196,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":179,"name":"ElementaryTypeName","src":"6307:4:0"}],"id":180,"name":"VariableDeclaration","src":"6307:12:0"}],"id":181,"name":"ParameterList","src":"6306:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":182,"name":"Identifier","src":"6331:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"bool","value":"transfersEnabled"},"id":183,"name":"Identifier","src":"6339:16:0"}],"id":184,"name":"FunctionCall","src":"6331:25:0"}],"id":185,"name":"ExpressionStatement","src":"6331:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":357,"type":"function (address,address,uint256)","value":"doTransfer"},"id":186,"name":"Identifier","src":"6366:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":187,"name":"Identifier","src":"6377:3:0"}],"id":188,"name":"MemberAccess","src":"6377:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"_to"},"id":189,"name":"Identifier","src":"6389:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":177,"type":"uint256","value":"_amount"},"id":190,"name":"Identifier","src":"6394:7:0"}],"id":191,"name":"FunctionCall","src":"6366:36:0"}],"id":192,"name":"ExpressionStatement","src":"6366:36:0"},{"attributes":{"functionReturnParameters":181},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":193,"name":"Literal","src":"6419:4:0"}],"id":194,"name":"Return","src":"6412:11:0"}],"id":195,"name":"Block","src":"6321:109:0"}],"id":196,"name":"FunctionDefinition","src":"6243:187:0"},{"attributes":{"constant":false,"documentation":"@notice Send `_amount` tokens to `_to` from `_from` on the condition it\n  is approved by `_from`\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":246,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":197,"name":"ElementaryTypeName","src":"6802:7:0"}],"id":198,"name":"VariableDeclaration","src":"6802:13:0"},{"attributes":{"constant":false,"name":"_to","scope":246,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":199,"name":"ElementaryTypeName","src":"6817:7:0"}],"id":200,"name":"VariableDeclaration","src":"6817:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":201,"name":"ElementaryTypeName","src":"6830:7:0"}],"id":202,"name":"VariableDeclaration","src":"6830:15:0"}],"id":203,"name":"ParameterList","src":"6801:50:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":246,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":204,"name":"ElementaryTypeName","src":"6868:4:0"}],"id":205,"name":"VariableDeclaration","src":"6868:12:0"}],"id":206,"name":"ParameterList","src":"6867:14:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":207,"name":"Identifier","src":"7173:3:0"}],"id":208,"name":"MemberAccess","src":"7173:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":209,"name":"Identifier","src":"7187:10:0"}],"id":210,"name":"BinaryOperation","src":"7173:24:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":211,"name":"Identifier","src":"7213:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"bool","value":"transfersEnabled"},"id":212,"name":"Identifier","src":"7221:16:0"}],"id":213,"name":"FunctionCall","src":"7213:25:0"}],"id":214,"name":"ExpressionStatement","src":"7213:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":215,"name":"Identifier","src":"7315:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":111,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":216,"name":"Identifier","src":"7323:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":198,"type":"address","value":"_from"},"id":217,"name":"Identifier","src":"7331:5:0"}],"id":218,"name":"IndexAccess","src":"7323:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":219,"name":"Identifier","src":"7338:3:0"}],"id":220,"name":"MemberAccess","src":"7338:10:0"}],"id":221,"name":"IndexAccess","src":"7323:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":202,"type":"uint256","value":"_amount"},"id":222,"name":"Identifier","src":"7353:7:0"}],"id":223,"name":"BinaryOperation","src":"7323:37:0"}],"id":224,"name":"FunctionCall","src":"7315:46:0"}],"id":225,"name":"ExpressionStatement","src":"7315:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":111,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":226,"name":"Identifier","src":"7375:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":198,"type":"address","value":"_from"},"id":227,"name":"Identifier","src":"7383:5:0"}],"id":230,"name":"IndexAccess","src":"7375:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":228,"name":"Identifier","src":"7390:3:0"}],"id":229,"name":"MemberAccess","src":"7390:10:0"}],"id":231,"name":"IndexAccess","src":"7375:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":202,"type":"uint256","value":"_amount"},"id":232,"name":"Identifier","src":"7405:7:0"}],"id":233,"name":"Assignment","src":"7375:37:0"}],"id":234,"name":"ExpressionStatement","src":"7375:37:0"}],"id":235,"name":"Block","src":"7199:224:0"}],"id":236,"name":"IfStatement","src":"7169:254:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":357,"type":"function (address,address,uint256)","value":"doTransfer"},"id":237,"name":"Identifier","src":"7432:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":198,"type":"address","value":"_from"},"id":238,"name":"Identifier","src":"7443:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":200,"type":"address","value":"_to"},"id":239,"name":"Identifier","src":"7450:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":202,"type":"uint256","value":"_amount"},"id":240,"name":"Identifier","src":"7455:7:0"}],"id":241,"name":"FunctionCall","src":"7432:31:0"}],"id":242,"name":"ExpressionStatement","src":"7432:31:0"},{"attributes":{"functionReturnParameters":206},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":243,"name":"Literal","src":"7480:4:0"}],"id":244,"name":"Return","src":"7473:11:0"}],"id":245,"name":"Block","src":"6882:609:0"}],"id":246,"name":"FunctionDefinition","src":"6780:711:0"},{"attributes":{"constant":false,"documentation":"@dev This is the actual transfer function in the token contract, it can\n  only be called by other functions in this contract.\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"doTransfer","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":357,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":247,"name":"ElementaryTypeName","src":"7890:7:0"}],"id":248,"name":"VariableDeclaration","src":"7890:13:0"},{"attributes":{"constant":false,"name":"_to","scope":357,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":249,"name":"ElementaryTypeName","src":"7905:7:0"}],"id":250,"name":"VariableDeclaration","src":"7905:11:0"},{"attributes":{"constant":false,"name":"_amount","scope":357,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":251,"name":"ElementaryTypeName","src":"7918:4:0"}],"id":252,"name":"VariableDeclaration","src":"7918:12:0"}],"id":253,"name":"ParameterList","src":"7889:47:0"},{"attributes":{"parameters":[null]},"children":[],"id":254,"name":"ParameterList","src":"7946:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":255,"name":"Identifier","src":"7964:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":256,"name":"Literal","src":"7975:1:0"}],"id":257,"name":"BinaryOperation","src":"7964:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1064,"type":"function (address,address,uint256)","value":"Transfer"},"id":258,"name":"Identifier","src":"7995:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":248,"type":"address","value":"_from"},"id":259,"name":"Identifier","src":"8004:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"address","value":"_to"},"id":260,"name":"Identifier","src":"8011:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":261,"name":"Identifier","src":"8016:7:0"}],"id":262,"name":"FunctionCall","src":"7995:29:0"}],"id":263,"name":"ExpressionStatement","src":"7995:29:0"},{"attributes":{"expression":null,"functionReturnParameters":254},"id":264,"name":"Return","src":"8098:7:0"}],"id":265,"name":"Block","src":"7978:140:0"}],"id":266,"name":"IfStatement","src":"7960:158:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":267,"name":"Identifier","src":"8131:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":98,"type":"uint256","value":"parentSnapShotBlock"},"id":268,"name":"Identifier","src":"8139:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":269,"name":"Identifier","src":"8161:5:0"}],"id":270,"name":"MemberAccess","src":"8161:12:0"}],"id":271,"name":"BinaryOperation","src":"8139:34:0"}],"id":272,"name":"FunctionCall","src":"8131:43:0"}],"id":273,"name":"ExpressionStatement","src":"8131:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":274,"name":"Identifier","src":"8260:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"address","value":"_to"},"id":275,"name":"Identifier","src":"8269:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":276,"name":"Literal","src":"8276:1:0"}],"id":277,"name":"BinaryOperation","src":"8269:8:0"}],"id":278,"name":"TupleExpression","src":"8268:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"address","value":"_to"},"id":279,"name":"Identifier","src":"8283:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":280,"name":"ElementaryTypeNameExpression","src":"8290:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4088,"type":"contract Pinakion","value":"this"},"id":281,"name":"Identifier","src":"8298:4:0"}],"id":282,"name":"FunctionCall","src":"8290:13:0"}],"id":283,"name":"BinaryOperation","src":"8283:20:0"}],"id":284,"name":"TupleExpression","src":"8282:22:0"}],"id":285,"name":"BinaryOperation","src":"8268:36:0"}],"id":286,"name":"FunctionCall","src":"8260:45:0"}],"id":287,"name":"ExpressionStatement","src":"8260:45:0"},{"attributes":{"assignments":[288]},"children":[{"attributes":{"constant":false,"name":"previousBalanceFrom","scope":357,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":288,"name":"VariableDeclaration","src":"8439:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":535,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":289,"name":"Identifier","src":"8465:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":248,"type":"address","value":"_from"},"id":290,"name":"Identifier","src":"8477:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":291,"name":"Identifier","src":"8484:5:0"}],"id":292,"name":"MemberAccess","src":"8484:12:0"}],"id":293,"name":"FunctionCall","src":"8465:32:0"}],"id":294,"name":"VariableDeclarationStatement","src":"8439:58:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":295,"name":"Identifier","src":"8511:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"previousBalanceFrom"},"id":296,"name":"Identifier","src":"8519:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":297,"name":"Identifier","src":"8542:7:0"}],"id":298,"name":"BinaryOperation","src":"8519:30:0"}],"id":299,"name":"FunctionCall","src":"8511:39:0"}],"id":300,"name":"ExpressionStatement","src":"8511:39:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":960,"type":"function (address) view returns (bool)","value":"isContract"},"id":301,"name":"Identifier","src":"8626:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":302,"name":"Identifier","src":"8637:10:0"}],"id":303,"name":"FunctionCall","src":"8626:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":304,"name":"Identifier","src":"8667:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"onTransfer","referencedDeclaration":31,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":43,"type":"type(contract TokenController)","value":"TokenController"},"id":305,"name":"Identifier","src":"8675:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":306,"name":"Identifier","src":"8691:10:0"}],"id":307,"name":"FunctionCall","src":"8675:27:0"}],"id":308,"name":"MemberAccess","src":"8675:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":248,"type":"address","value":"_from"},"id":309,"name":"Identifier","src":"8714:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"address","value":"_to"},"id":310,"name":"Identifier","src":"8721:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":311,"name":"Identifier","src":"8726:7:0"}],"id":312,"name":"FunctionCall","src":"8675:59:0"}],"id":313,"name":"FunctionCall","src":"8667:68:0"}],"id":314,"name":"ExpressionStatement","src":"8667:68:0"}],"id":315,"name":"Block","src":"8650:99:0"}],"id":316,"name":"IfStatement","src":"8622:127:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":938,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":317,"name":"Identifier","src":"8876:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":318,"name":"Identifier","src":"8893:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":248,"type":"address","value":"_from"},"id":319,"name":"Identifier","src":"8902:5:0"}],"id":320,"name":"IndexAccess","src":"8893:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"previousBalanceFrom"},"id":321,"name":"Identifier","src":"8910:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":322,"name":"Identifier","src":"8932:7:0"}],"id":323,"name":"BinaryOperation","src":"8910:29:0"}],"id":324,"name":"FunctionCall","src":"8876:64:0"}],"id":325,"name":"ExpressionStatement","src":"8876:64:0"},{"attributes":{"assignments":[326]},"children":[{"attributes":{"constant":false,"name":"previousBalanceTo","scope":357,"stateVariable":false,"storageLocation":"default","type":"uint256","typeName":null,"value":null,"visibility":"internal"},"children":[],"id":326,"name":"VariableDeclaration","src":"9069:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":535,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":327,"name":"Identifier","src":"9093:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"address","value":"_to"},"id":328,"name":"Identifier","src":"9105:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":329,"name":"Identifier","src":"9110:5:0"}],"id":330,"name":"MemberAccess","src":"9110:12:0"}],"id":331,"name":"FunctionCall","src":"9093:30:0"}],"id":332,"name":"VariableDeclarationStatement","src":"9069:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":333,"name":"Identifier","src":"9136:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":326,"type":"uint256","value":"previousBalanceTo"},"id":334,"name":"Identifier","src":"9144:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":335,"name":"Identifier","src":"9164:7:0"}],"id":336,"name":"BinaryOperation","src":"9144:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":326,"type":"uint256","value":"previousBalanceTo"},"id":337,"name":"Identifier","src":"9175:17:0"}],"id":338,"name":"BinaryOperation","src":"9144:48:0"}],"id":339,"name":"FunctionCall","src":"9136:57:0"}],"id":340,"name":"ExpressionStatement","src":"9136:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":938,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":341,"name":"Identifier","src":"9228:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":342,"name":"Identifier","src":"9245:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"address","value":"_to"},"id":343,"name":"Identifier","src":"9254:3:0"}],"id":344,"name":"IndexAccess","src":"9245:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":326,"type":"uint256","value":"previousBalanceTo"},"id":345,"name":"Identifier","src":"9260:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":346,"name":"Identifier","src":"9280:7:0"}],"id":347,"name":"BinaryOperation","src":"9260:27:0"}],"id":348,"name":"FunctionCall","src":"9228:60:0"}],"id":349,"name":"ExpressionStatement","src":"9228:60:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1064,"type":"function (address,address,uint256)","value":"Transfer"},"id":350,"name":"Identifier","src":"9377:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":248,"type":"address","value":"_from"},"id":351,"name":"Identifier","src":"9386:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"address","value":"_to"},"id":352,"name":"Identifier","src":"9393:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"uint256","value":"_amount"},"id":353,"name":"Identifier","src":"9398:7:0"}],"id":354,"name":"FunctionCall","src":"9377:29:0"}],"id":355,"name":"ExpressionStatement","src":"9377:29:0"}],"id":356,"name":"Block","src":"7946:1468:0"}],"id":357,"name":"FunctionDefinition","src":"7870:1544:0"},{"attributes":{"constant":true,"documentation":"@param _owner The address that's balance is being requested\n @return The balance of `_owner` at the current block","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":1079,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":371,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":358,"name":"ElementaryTypeName","src":"9568:7:0"}],"id":359,"name":"VariableDeclaration","src":"9568:14:0"}],"id":360,"name":"ParameterList","src":"9567:16:0"},{"children":[{"attributes":{"constant":false,"name":"balance","scope":371,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":361,"name":"ElementaryTypeName","src":"9609:7:0"}],"id":362,"name":"VariableDeclaration","src":"9609:15:0"}],"id":363,"name":"ParameterList","src":"9608:17:0"},{"children":[{"attributes":{"functionReturnParameters":363},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":535,"type":"function (address,uint256) view returns (uint256)","value":"balanceOfAt"},"id":364,"name":"Identifier","src":"9643:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":359,"type":"address","value":"_owner"},"id":365,"name":"Identifier","src":"9655:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":366,"name":"Identifier","src":"9663:5:0"}],"id":367,"name":"MemberAccess","src":"9663:12:0"}],"id":368,"name":"FunctionCall","src":"9643:33:0"}],"id":369,"name":"Return","src":"9636:40:0"}],"id":370,"name":"Block","src":"9626:57:0"}],"id":371,"name":"FunctionDefinition","src":"9549:134:0"},{"attributes":{"constant":false,"documentation":"@notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n  its behalf. This is the standard version to allow backward compatibility.\n @param _spender The address of the account able to transfer the tokens\n @param _amount The amount of tokens to be approved for transfer\n @return True if the approval was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":420,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":372,"name":"ElementaryTypeName","src":"10070:7:0"}],"id":373,"name":"VariableDeclaration","src":"10070:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":420,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":374,"name":"ElementaryTypeName","src":"10088:7:0"}],"id":375,"name":"VariableDeclaration","src":"10088:15:0"}],"id":376,"name":"ParameterList","src":"10069:35:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":420,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":377,"name":"ElementaryTypeName","src":"10121:4:0"}],"id":378,"name":"VariableDeclaration","src":"10121:12:0"}],"id":379,"name":"ParameterList","src":"10120:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":380,"name":"Identifier","src":"10145:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"bool","value":"transfersEnabled"},"id":381,"name":"Identifier","src":"10153:16:0"}],"id":382,"name":"FunctionCall","src":"10145:25:0"}],"id":383,"name":"ExpressionStatement","src":"10145:25:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":960,"type":"function (address) view returns (bool)","value":"isContract"},"id":384,"name":"Identifier","src":"10253:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":385,"name":"Identifier","src":"10264:10:0"}],"id":386,"name":"FunctionCall","src":"10253:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":387,"name":"Identifier","src":"10291:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"onApprove","referencedDeclaration":42,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":43,"type":"type(contract TokenController)","value":"TokenController"},"id":388,"name":"Identifier","src":"10299:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":389,"name":"Identifier","src":"10315:10:0"}],"id":390,"name":"FunctionCall","src":"10299:27:0"}],"id":391,"name":"MemberAccess","src":"10299:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":392,"name":"Identifier","src":"10337:3:0"}],"id":393,"name":"MemberAccess","src":"10337:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":373,"type":"address","value":"_spender"},"id":394,"name":"Identifier","src":"10349:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":375,"type":"uint256","value":"_amount"},"id":395,"name":"Identifier","src":"10359:7:0"}],"id":396,"name":"FunctionCall","src":"10299:68:0"}],"id":397,"name":"FunctionCall","src":"10291:77:0"}],"id":398,"name":"ExpressionStatement","src":"10291:77:0"}],"id":399,"name":"Block","src":"10277:102:0"}],"id":400,"name":"IfStatement","src":"10249:130:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":111,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":401,"name":"Identifier","src":"10389:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":402,"name":"Identifier","src":"10397:3:0"}],"id":403,"name":"MemberAccess","src":"10397:10:0"}],"id":405,"name":"IndexAccess","src":"10389:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":373,"type":"address","value":"_spender"},"id":404,"name":"Identifier","src":"10409:8:0"}],"id":406,"name":"IndexAccess","src":"10389:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":375,"type":"uint256","value":"_amount"},"id":407,"name":"Identifier","src":"10421:7:0"}],"id":408,"name":"Assignment","src":"10389:39:0"}],"id":409,"name":"ExpressionStatement","src":"10389:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"function (address,address,uint256)","value":"Approval"},"id":410,"name":"Identifier","src":"10438:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":411,"name":"Identifier","src":"10447:3:0"}],"id":412,"name":"MemberAccess","src":"10447:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":373,"type":"address","value":"_spender"},"id":413,"name":"Identifier","src":"10459:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":375,"type":"uint256","value":"_amount"},"id":414,"name":"Identifier","src":"10469:7:0"}],"id":415,"name":"FunctionCall","src":"10438:39:0"}],"id":416,"name":"ExpressionStatement","src":"10438:39:0"},{"attributes":{"functionReturnParameters":379},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":417,"name":"Literal","src":"10494:4:0"}],"id":418,"name":"Return","src":"10487:11:0"}],"id":419,"name":"Block","src":"10135:370:0"}],"id":420,"name":"FunctionDefinition","src":"10053:452:0"},{"attributes":{"constant":true,"documentation":"@dev This function makes it easy to read the `allowed[]` map\n @param _owner The address of the account that owns the token\n @param _spender The address of the account able to transfer the tokens\n @return Amount of remaining tokens of _owner that _spender is allowed\n  to spend","implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":1079,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":436,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":421,"name":"ElementaryTypeName","src":"10843:7:0"}],"id":422,"name":"VariableDeclaration","src":"10843:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":436,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":423,"name":"ElementaryTypeName","src":"10859:7:0"}],"id":424,"name":"VariableDeclaration","src":"10859:16:0"}],"id":425,"name":"ParameterList","src":"10842:39:0"},{"children":[{"attributes":{"constant":false,"name":"remaining","scope":436,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":426,"name":"ElementaryTypeName","src":"10907:7:0"}],"id":427,"name":"VariableDeclaration","src":"10907:17:0"}],"id":428,"name":"ParameterList","src":"10906:19:0"},{"children":[{"attributes":{"functionReturnParameters":428},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":111,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":429,"name":"Identifier","src":"10943:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":422,"type":"address","value":"_owner"},"id":430,"name":"Identifier","src":"10951:6:0"}],"id":431,"name":"IndexAccess","src":"10943:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":424,"type":"address","value":"_spender"},"id":432,"name":"Identifier","src":"10959:8:0"}],"id":433,"name":"IndexAccess","src":"10943:25:0"}],"id":434,"name":"Return","src":"10936:32:0"}],"id":435,"name":"Block","src":"10926:49:0"}],"id":436,"name":"FunctionDefinition","src":"10824:151:0"},{"attributes":{"constant":false,"documentation":"@notice `msg.sender` approves `_spender` to send `_amount` tokens on\n  its behalf, and then a function is triggered in the contract that is\n  being approved, `_spender`. This allows users to use their tokens to\n  interact with contracts in one function call instead of two\n @param _spender The address of the contract able to transfer the tokens\n @param _amount The amount of tokens to be approved for transfer\n @return True if the function call was successful","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approveAndCall","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":468,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":437,"name":"ElementaryTypeName","src":"11516:7:0"}],"id":438,"name":"VariableDeclaration","src":"11516:16:0"},{"attributes":{"constant":false,"name":"_amount","scope":468,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":439,"name":"ElementaryTypeName","src":"11534:7:0"}],"id":440,"name":"VariableDeclaration","src":"11534:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":468,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":441,"name":"ElementaryTypeName","src":"11551:5:0"}],"id":442,"name":"VariableDeclaration","src":"11551:16:0"}],"id":443,"name":"ParameterList","src":"11515:58:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":468,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":444,"name":"ElementaryTypeName","src":"11590:4:0"}],"id":445,"name":"VariableDeclaration","src":"11590:12:0"}],"id":446,"name":"ParameterList","src":"11589:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":447,"name":"Identifier","src":"11614:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":420,"type":"function (address,uint256) returns (bool)","value":"approve"},"id":448,"name":"Identifier","src":"11622:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":438,"type":"address","value":"_spender"},"id":449,"name":"Identifier","src":"11630:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":440,"type":"uint256","value":"_amount"},"id":450,"name":"Identifier","src":"11640:7:0"}],"id":451,"name":"FunctionCall","src":"11622:26:0"}],"id":452,"name":"FunctionCall","src":"11614:35:0"}],"id":453,"name":"ExpressionStatement","src":"11614:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"receiveApproval","referencedDeclaration":12,"type":"function (address,uint256,address,bytes memory) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract ApproveAndCallFallBack","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"type(contract ApproveAndCallFallBack)","value":"ApproveAndCallFallBack"},"id":454,"name":"Identifier","src":"11660:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":438,"type":"address","value":"_spender"},"id":455,"name":"Identifier","src":"11683:8:0"}],"id":456,"name":"FunctionCall","src":"11660:32:0"}],"id":457,"name":"MemberAccess","src":"11660:48:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":458,"name":"Identifier","src":"11722:3:0"}],"id":459,"name":"MemberAccess","src":"11722:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":440,"type":"uint256","value":"_amount"},"id":460,"name":"Identifier","src":"11746:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4088,"type":"contract Pinakion","value":"this"},"id":461,"name":"Identifier","src":"11767:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":442,"type":"bytes memory","value":"_extraData"},"id":462,"name":"Identifier","src":"11785:10:0"}],"id":463,"name":"FunctionCall","src":"11660:145:0"}],"id":464,"name":"ExpressionStatement","src":"11660:145:0"},{"attributes":{"functionReturnParameters":446},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":465,"name":"Literal","src":"11823:4:0"}],"id":466,"name":"Return","src":"11816:11:0"}],"id":467,"name":"Block","src":"11604:230:0"}],"id":468,"name":"FunctionDefinition","src":"11492:342:0"},{"attributes":{"constant":true,"documentation":"@dev This function makes it easy to get the total number of tokens\n @return The total number of tokens","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":1079,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":469,"name":"ParameterList","src":"11978:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":479,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":470,"name":"ElementaryTypeName","src":"12006:4:0"}],"id":471,"name":"VariableDeclaration","src":"12006:4:0"}],"id":472,"name":"ParameterList","src":"12005:6:0"},{"children":[{"attributes":{"functionReturnParameters":472},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":582,"type":"function (uint256) view returns (uint256)","value":"totalSupplyAt"},"id":473,"name":"Identifier","src":"12029:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":474,"name":"Identifier","src":"12043:5:0"}],"id":475,"name":"MemberAccess","src":"12043:12:0"}],"id":476,"name":"FunctionCall","src":"12029:27:0"}],"id":477,"name":"Return","src":"12022:34:0"}],"id":478,"name":"Block","src":"12012:51:0"}],"id":479,"name":"FunctionDefinition","src":"11958:105:0"},{"attributes":{"constant":true,"documentation":"/////////////\n @dev Queries the balance of `_owner` at a specific `_blockNumber`\n @param _owner The address from which the balance will be retrieved\n @param _blockNumber The block number when the balance is queried\n @return The balance at `_blockNumber`","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOfAt","payable":false,"scope":1079,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":535,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":480,"name":"ElementaryTypeName","src":"12438:7:0"}],"id":481,"name":"VariableDeclaration","src":"12438:14:0"},{"attributes":{"constant":false,"name":"_blockNumber","scope":535,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":482,"name":"ElementaryTypeName","src":"12454:4:0"}],"id":483,"name":"VariableDeclaration","src":"12454:17:0"}],"id":484,"name":"ParameterList","src":"12437:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":535,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":485,"name":"ElementaryTypeName","src":"12506:4:0"}],"id":486,"name":"VariableDeclaration","src":"12506:4:0"}],"id":487,"name":"ParameterList","src":"12505:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":488,"name":"Identifier","src":"12855:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_owner"},"id":489,"name":"Identifier","src":"12864:6:0"}],"id":490,"name":"IndexAccess","src":"12855:16:0"}],"id":491,"name":"MemberAccess","src":"12855:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":492,"name":"Literal","src":"12882:1:0"}],"id":493,"name":"BinaryOperation","src":"12855:28:0"}],"id":494,"name":"TupleExpression","src":"12854:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":91,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":495,"name":"Identifier","src":"12901:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_owner"},"id":496,"name":"Identifier","src":"12910:6:0"}],"id":497,"name":"IndexAccess","src":"12901:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":498,"name":"Literal","src":"12918:1:0"}],"id":499,"name":"IndexAccess","src":"12901:19:0"}],"id":500,"name":"MemberAccess","src":"12901:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"uint256","value":"_blockNumber"},"id":501,"name":"Identifier","src":"12933:12:0"}],"id":502,"name":"BinaryOperation","src":"12901:44:0"}],"id":503,"name":"TupleExpression","src":"12900:46:0"}],"id":504,"name":"BinaryOperation","src":"12854:92:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":505,"name":"ElementaryTypeNameExpression","src":"12966:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":96,"type":"contract Pinakion","value":"parentToken"},"id":506,"name":"Identifier","src":"12974:11:0"}],"id":507,"name":"FunctionCall","src":"12966:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":508,"name":"Literal","src":"12990:1:0"}],"id":509,"name":"BinaryOperation","src":"12966:25:0"},{"children":[{"attributes":{"functionReturnParameters":487},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOfAt","referencedDeclaration":535,"type":"function (address,uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":96,"type":"contract Pinakion","value":"parentToken"},"id":510,"name":"Identifier","src":"13018:11:0"}],"id":511,"name":"MemberAccess","src":"13018:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_owner"},"id":512,"name":"Identifier","src":"13042:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":977,"type":"function (uint256,uint256) pure returns (uint256)","value":"min"},"id":513,"name":"Identifier","src":"13050:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"uint256","value":"_blockNumber"},"id":514,"name":"Identifier","src":"13054:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":98,"type":"uint256","value":"parentSnapShotBlock"},"id":515,"name":"Identifier","src":"13068:19:0"}],"id":516,"name":"FunctionCall","src":"13050:38:0"}],"id":517,"name":"FunctionCall","src":"13018:71:0"}],"id":518,"name":"Return","src":"13011:78:0"}],"id":519,"name":"Block","src":"12993:111:0"},{"children":[{"attributes":{"functionReturnParameters":487},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":520,"name":"Literal","src":"13168:1:0"}],"id":521,"name":"Return","src":"13161:8:0"}],"id":522,"name":"Block","src":"13110:74:0"}],"id":523,"name":"IfStatement","src":"12962:222:0"}],"id":524,"name":"Block","src":"12948:321:0"},{"children":[{"attributes":{"functionReturnParameters":487},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":867,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)","value":"getValueAt"},"id":525,"name":"Identifier","src":"13296:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":526,"name":"Identifier","src":"13307:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_owner"},"id":527,"name":"Identifier","src":"13316:6:0"}],"id":528,"name":"IndexAccess","src":"13307:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"uint256","value":"_blockNumber"},"id":529,"name":"Identifier","src":"13325:12:0"}],"id":530,"name":"FunctionCall","src":"13296:42:0"}],"id":531,"name":"Return","src":"13289:49:0"}],"id":532,"name":"Block","src":"13275:74:0"}],"id":533,"name":"IfStatement","src":"12850:499:0"}],"id":534,"name":"Block","src":"12512:843:0"}],"id":535,"name":"FunctionDefinition","src":"12417:938:0"},{"attributes":{"constant":true,"documentation":"@notice Total amount of tokens at a specific `_blockNumber`.\n @param _blockNumber The block number when the totalSupply is queried\n @return The total amount of tokens at `_blockNumber`","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupplyAt","payable":false,"scope":1079,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_blockNumber","scope":582,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":536,"name":"ElementaryTypeName","src":"13591:4:0"}],"id":537,"name":"VariableDeclaration","src":"13591:17:0"}],"id":538,"name":"ParameterList","src":"13590:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":582,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":539,"name":"ElementaryTypeName","src":"13634:4:0"}],"id":540,"name":"VariableDeclaration","src":"13634:4:0"}],"id":541,"name":"ParameterList","src":"13633:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":542,"name":"Identifier","src":"14007:18:0"}],"id":543,"name":"MemberAccess","src":"14007:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":544,"name":"Literal","src":"14036:1:0"}],"id":545,"name":"BinaryOperation","src":"14007:30:0"}],"id":546,"name":"TupleExpression","src":"14006:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":91,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":547,"name":"Identifier","src":"14055:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":548,"name":"Literal","src":"14074:1:0"}],"id":549,"name":"IndexAccess","src":"14055:21:0"}],"id":550,"name":"MemberAccess","src":"14055:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":537,"type":"uint256","value":"_blockNumber"},"id":551,"name":"Identifier","src":"14089:12:0"}],"id":552,"name":"BinaryOperation","src":"14055:46:0"}],"id":553,"name":"TupleExpression","src":"14054:48:0"}],"id":554,"name":"BinaryOperation","src":"14006:96:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":555,"name":"ElementaryTypeNameExpression","src":"14122:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":96,"type":"contract Pinakion","value":"parentToken"},"id":556,"name":"Identifier","src":"14130:11:0"}],"id":557,"name":"FunctionCall","src":"14122:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":558,"name":"Literal","src":"14146:1:0"}],"id":559,"name":"BinaryOperation","src":"14122:25:0"},{"children":[{"attributes":{"functionReturnParameters":541},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"totalSupplyAt","referencedDeclaration":582,"type":"function (uint256) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":96,"type":"contract Pinakion","value":"parentToken"},"id":560,"name":"Identifier","src":"14174:11:0"}],"id":561,"name":"MemberAccess","src":"14174:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":977,"type":"function (uint256,uint256) pure returns (uint256)","value":"min"},"id":562,"name":"Identifier","src":"14200:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":537,"type":"uint256","value":"_blockNumber"},"id":563,"name":"Identifier","src":"14204:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":98,"type":"uint256","value":"parentSnapShotBlock"},"id":564,"name":"Identifier","src":"14218:19:0"}],"id":565,"name":"FunctionCall","src":"14200:38:0"}],"id":566,"name":"FunctionCall","src":"14174:65:0"}],"id":567,"name":"Return","src":"14167:72:0"}],"id":568,"name":"Block","src":"14149:105:0"},{"children":[{"attributes":{"functionReturnParameters":541},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":569,"name":"Literal","src":"14285:1:0"}],"id":570,"name":"Return","src":"14278:8:0"}],"id":571,"name":"Block","src":"14260:41:0"}],"id":572,"name":"IfStatement","src":"14118:183:0"}],"id":573,"name":"Block","src":"14104:286:0"},{"children":[{"attributes":{"functionReturnParameters":541},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":867,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)","value":"getValueAt"},"id":574,"name":"Identifier","src":"14417:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":575,"name":"Identifier","src":"14428:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":537,"type":"uint256","value":"_blockNumber"},"id":576,"name":"Identifier","src":"14448:12:0"}],"id":577,"name":"FunctionCall","src":"14417:44:0"}],"id":578,"name":"Return","src":"14410:51:0"}],"id":579,"name":"Block","src":"14396:76:0"}],"id":580,"name":"IfStatement","src":"14002:470:0"}],"id":581,"name":"Block","src":"13640:838:0"}],"id":582,"name":"FunctionDefinition","src":"13568:910:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Creates a new clone token with the initial distribution being\n  this token at `_snapshotBlock`\n @param _cloneTokenName Name of the clone token\n @param _cloneDecimalUnits Number of decimals of the smallest unit\n @param _cloneTokenSymbol Symbol of the clone token\n @param _snapshotBlock Block when the distribution of the parent token is\n  copied to set the initial distribution of the new clone token;\n  if the block is zero than the actual block, the current block is used\n @param _transfersEnabled True if transfers are allowed in the clone\n @return The address of the new MiniMeToken Contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createCloneToken","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_cloneTokenName","scope":637,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":583,"name":"ElementaryTypeName","src":"15250:6:0"}],"id":584,"name":"VariableDeclaration","src":"15250:22:0"},{"attributes":{"constant":false,"name":"_cloneDecimalUnits","scope":637,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":585,"name":"ElementaryTypeName","src":"15282:5:0"}],"id":586,"name":"VariableDeclaration","src":"15282:24:0"},{"attributes":{"constant":false,"name":"_cloneTokenSymbol","scope":637,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":587,"name":"ElementaryTypeName","src":"15316:6:0"}],"id":588,"name":"VariableDeclaration","src":"15316:24:0"},{"attributes":{"constant":false,"name":"_snapshotBlock","scope":637,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":589,"name":"ElementaryTypeName","src":"15350:4:0"}],"id":590,"name":"VariableDeclaration","src":"15350:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":637,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":591,"name":"ElementaryTypeName","src":"15379:4:0"}],"id":592,"name":"VariableDeclaration","src":"15379:22:0"}],"id":593,"name":"ParameterList","src":"15240:171:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":637,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":594,"name":"ElementaryTypeName","src":"15427:7:0"}],"id":595,"name":"VariableDeclaration","src":"15427:7:0"}],"id":596,"name":"ParameterList","src":"15426:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"uint256","value":"_snapshotBlock"},"id":597,"name":"Identifier","src":"15450:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":598,"name":"Literal","src":"15468:1:0"}],"id":599,"name":"BinaryOperation","src":"15450:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"uint256","value":"_snapshotBlock"},"id":600,"name":"Identifier","src":"15471:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":601,"name":"Identifier","src":"15488:5:0"}],"id":602,"name":"MemberAccess","src":"15488:12:0"}],"id":603,"name":"Assignment","src":"15471:29:0"}],"id":604,"name":"ExpressionStatement","src":"15471:29:0"}],"id":605,"name":"IfStatement","src":"15446:54:0"},{"attributes":{"assignments":[607]},"children":[{"attributes":{"constant":false,"name":"cloneToken","scope":637,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":606,"name":"UserDefinedTypeName","src":"15510:8:0"}],"id":607,"name":"VariableDeclaration","src":"15510:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"createCloneToken","referencedDeclaration":1119,"type":"function (address,uint256,string memory,uint8,string memory,bool) external returns (contract Pinakion)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":118,"type":"contract MiniMeTokenFactory","value":"tokenFactory"},"id":608,"name":"Identifier","src":"15532:12:0"}],"id":609,"name":"MemberAccess","src":"15532:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4088,"type":"contract Pinakion","value":"this"},"id":610,"name":"Identifier","src":"15575:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"uint256","value":"_snapshotBlock"},"id":611,"name":"Identifier","src":"15593:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":584,"type":"string memory","value":"_cloneTokenName"},"id":612,"name":"Identifier","src":"15621:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"uint8","value":"_cloneDecimalUnits"},"id":613,"name":"Identifier","src":"15650:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":588,"type":"string memory","value":"_cloneTokenSymbol"},"id":614,"name":"Identifier","src":"15682:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":592,"type":"bool","value":"_transfersEnabled"},"id":615,"name":"Identifier","src":"15713:17:0"}],"id":616,"name":"FunctionCall","src":"15532:212:0"}],"id":617,"name":"VariableDeclarationStatement","src":"15510:234:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"changeController","referencedDeclaration":77,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":607,"type":"contract Pinakion","value":"cloneToken"},"id":618,"name":"Identifier","src":"15755:10:0"}],"id":620,"name":"MemberAccess","src":"15755:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":621,"name":"Identifier","src":"15783:3:0"}],"id":622,"name":"MemberAccess","src":"15783:10:0"}],"id":623,"name":"FunctionCall","src":"15755:39:0"}],"id":624,"name":"ExpressionStatement","src":"15755:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1070,"type":"function (address,uint256)","value":"NewCloneToken"},"id":625,"name":"Identifier","src":"15874:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":626,"name":"ElementaryTypeNameExpression","src":"15888:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":607,"type":"contract Pinakion","value":"cloneToken"},"id":627,"name":"Identifier","src":"15896:10:0"}],"id":628,"name":"FunctionCall","src":"15888:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":590,"type":"uint256","value":"_snapshotBlock"},"id":629,"name":"Identifier","src":"15909:14:0"}],"id":630,"name":"FunctionCall","src":"15874:50:0"}],"id":631,"name":"ExpressionStatement","src":"15874:50:0"},{"attributes":{"functionReturnParameters":596},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":632,"name":"ElementaryTypeNameExpression","src":"15941:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":607,"type":"contract Pinakion","value":"cloneToken"},"id":633,"name":"Identifier","src":"15949:10:0"}],"id":634,"name":"FunctionCall","src":"15941:19:0"}],"id":635,"name":"Return","src":"15934:26:0"}],"id":636,"name":"Block","src":"15436:531:0"}],"id":637,"name":"FunctionDefinition","src":"15215:752:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Generates `_amount` tokens that are assigned to `_owner`\n @param _owner The address that will be assigned the new tokens\n @param _amount The quantity of tokens generated\n @return True if the tokens are generated correctly","implemented":true,"isConstructor":false,"name":"generateTokens","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":700,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":638,"name":"ElementaryTypeName","src":"16322:7:0"}],"id":639,"name":"VariableDeclaration","src":"16322:14:0"},{"attributes":{"constant":false,"name":"_amount","scope":700,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":640,"name":"ElementaryTypeName","src":"16338:4:0"}],"id":641,"name":"VariableDeclaration","src":"16338:12:0"}],"id":642,"name":"ParameterList","src":"16321:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":700,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":645,"name":"ElementaryTypeName","src":"16388:4:0"}],"id":646,"name":"VariableDeclaration","src":"16388:4:0"}],"id":647,"name":"ParameterList","src":"16387:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"modifier ()","value":"onlyController"},"id":643,"name":"Identifier","src":"16364:14:0"}],"id":644,"name":"ModifierInvocation","src":"16364:14:0"},{"children":[{"attributes":{"assignments":[649]},"children":[{"attributes":{"constant":false,"name":"curTotalSupply","scope":700,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":648,"name":"ElementaryTypeName","src":"16404:4:0"}],"id":649,"name":"VariableDeclaration","src":"16404:19:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":479,"type":"function () view returns (uint256)","value":"totalSupply"},"id":650,"name":"Identifier","src":"16426:11:0"}],"id":651,"name":"FunctionCall","src":"16426:13:0"}],"id":652,"name":"VariableDeclarationStatement","src":"16404:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":653,"name":"Identifier","src":"16449:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":649,"type":"uint256","value":"curTotalSupply"},"id":654,"name":"Identifier","src":"16457:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":641,"type":"uint256","value":"_amount"},"id":655,"name":"Identifier","src":"16474:7:0"}],"id":656,"name":"BinaryOperation","src":"16457:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":649,"type":"uint256","value":"curTotalSupply"},"id":657,"name":"Identifier","src":"16485:14:0"}],"id":658,"name":"BinaryOperation","src":"16457:42:0"}],"id":659,"name":"FunctionCall","src":"16449:51:0"}],"id":660,"name":"ExpressionStatement","src":"16449:51:0"},{"attributes":{"assignments":[662]},"children":[{"attributes":{"constant":false,"name":"previousBalanceTo","scope":700,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":661,"name":"ElementaryTypeName","src":"16532:4:0"}],"id":662,"name":"VariableDeclaration","src":"16532:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":371,"type":"function (address) view returns (uint256)","value":"balanceOf"},"id":663,"name":"Identifier","src":"16557:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":639,"type":"address","value":"_owner"},"id":664,"name":"Identifier","src":"16567:6:0"}],"id":665,"name":"FunctionCall","src":"16557:17:0"}],"id":666,"name":"VariableDeclarationStatement","src":"16532:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":667,"name":"Identifier","src":"16584:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":662,"type":"uint256","value":"previousBalanceTo"},"id":668,"name":"Identifier","src":"16592:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":641,"type":"uint256","value":"_amount"},"id":669,"name":"Identifier","src":"16612:7:0"}],"id":670,"name":"BinaryOperation","src":"16592:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":662,"type":"uint256","value":"previousBalanceTo"},"id":671,"name":"Identifier","src":"16623:17:0"}],"id":672,"name":"BinaryOperation","src":"16592:48:0"}],"id":673,"name":"FunctionCall","src":"16584:57:0"}],"id":674,"name":"ExpressionStatement","src":"16584:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":938,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":675,"name":"Identifier","src":"16673:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":676,"name":"Identifier","src":"16690:18:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":649,"type":"uint256","value":"curTotalSupply"},"id":677,"name":"Identifier","src":"16710:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":641,"type":"uint256","value":"_amount"},"id":678,"name":"Identifier","src":"16727:7:0"}],"id":679,"name":"BinaryOperation","src":"16710:24:0"}],"id":680,"name":"FunctionCall","src":"16673:62:0"}],"id":681,"name":"ExpressionStatement","src":"16673:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":938,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":682,"name":"Identifier","src":"16745:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":683,"name":"Identifier","src":"16762:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":639,"type":"address","value":"_owner"},"id":684,"name":"Identifier","src":"16771:6:0"}],"id":685,"name":"IndexAccess","src":"16762:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":662,"type":"uint256","value":"previousBalanceTo"},"id":686,"name":"Identifier","src":"16780:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":641,"type":"uint256","value":"_amount"},"id":687,"name":"Identifier","src":"16800:7:0"}],"id":688,"name":"BinaryOperation","src":"16780:27:0"}],"id":689,"name":"FunctionCall","src":"16745:63:0"}],"id":690,"name":"ExpressionStatement","src":"16745:63:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1064,"type":"function (address,address,uint256)","value":"Transfer"},"id":691,"name":"Identifier","src":"16818:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":692,"name":"Literal","src":"16827:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":639,"type":"address","value":"_owner"},"id":693,"name":"Identifier","src":"16830:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":641,"type":"uint256","value":"_amount"},"id":694,"name":"Identifier","src":"16838:7:0"}],"id":695,"name":"FunctionCall","src":"16818:28:0"}],"id":696,"name":"ExpressionStatement","src":"16818:28:0"},{"attributes":{"functionReturnParameters":647},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":697,"name":"Literal","src":"16863:4:0"}],"id":698,"name":"Return","src":"16856:11:0"}],"id":699,"name":"Block","src":"16394:480:0"}],"id":700,"name":"FunctionDefinition","src":"16298:576:0"},{"attributes":{"constant":false,"documentation":"@notice Burns `_amount` tokens from `_owner`\n @param _owner The address that will lose the tokens\n @param _amount The quantity of tokens to burn\n @return True if the tokens are burned correctly","implemented":true,"isConstructor":false,"name":"destroyTokens","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":759,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":701,"name":"ElementaryTypeName","src":"17127:7:0"}],"id":702,"name":"VariableDeclaration","src":"17127:14:0"},{"attributes":{"constant":false,"name":"_amount","scope":759,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":703,"name":"ElementaryTypeName","src":"17143:4:0"}],"id":704,"name":"VariableDeclaration","src":"17143:12:0"}],"id":705,"name":"ParameterList","src":"17126:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":759,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":708,"name":"ElementaryTypeName","src":"17193:4:0"}],"id":709,"name":"VariableDeclaration","src":"17193:4:0"}],"id":710,"name":"ParameterList","src":"17192:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"modifier ()","value":"onlyController"},"id":706,"name":"Identifier","src":"17162:14:0"}],"id":707,"name":"ModifierInvocation","src":"17162:14:0"},{"children":[{"attributes":{"assignments":[712]},"children":[{"attributes":{"constant":false,"name":"curTotalSupply","scope":759,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":711,"name":"ElementaryTypeName","src":"17209:4:0"}],"id":712,"name":"VariableDeclaration","src":"17209:19:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":479,"type":"function () view returns (uint256)","value":"totalSupply"},"id":713,"name":"Identifier","src":"17231:11:0"}],"id":714,"name":"FunctionCall","src":"17231:13:0"}],"id":715,"name":"VariableDeclarationStatement","src":"17209:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":716,"name":"Identifier","src":"17254:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":712,"type":"uint256","value":"curTotalSupply"},"id":717,"name":"Identifier","src":"17262:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":704,"type":"uint256","value":"_amount"},"id":718,"name":"Identifier","src":"17280:7:0"}],"id":719,"name":"BinaryOperation","src":"17262:25:0"}],"id":720,"name":"FunctionCall","src":"17254:34:0"}],"id":721,"name":"ExpressionStatement","src":"17254:34:0"},{"attributes":{"assignments":[723]},"children":[{"attributes":{"constant":false,"name":"previousBalanceFrom","scope":759,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":722,"name":"ElementaryTypeName","src":"17298:4:0"}],"id":723,"name":"VariableDeclaration","src":"17298:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":371,"type":"function (address) view returns (uint256)","value":"balanceOf"},"id":724,"name":"Identifier","src":"17325:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":702,"type":"address","value":"_owner"},"id":725,"name":"Identifier","src":"17335:6:0"}],"id":726,"name":"FunctionCall","src":"17325:17:0"}],"id":727,"name":"VariableDeclarationStatement","src":"17298:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":728,"name":"Identifier","src":"17352:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":723,"type":"uint256","value":"previousBalanceFrom"},"id":729,"name":"Identifier","src":"17360:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":704,"type":"uint256","value":"_amount"},"id":730,"name":"Identifier","src":"17383:7:0"}],"id":731,"name":"BinaryOperation","src":"17360:30:0"}],"id":732,"name":"FunctionCall","src":"17352:39:0"}],"id":733,"name":"ExpressionStatement","src":"17352:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":938,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":734,"name":"Identifier","src":"17401:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"struct Pinakion.Checkpoint storage ref[] storage ref","value":"totalSupplyHistory"},"id":735,"name":"Identifier","src":"17418:18:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":712,"type":"uint256","value":"curTotalSupply"},"id":736,"name":"Identifier","src":"17438:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":704,"type":"uint256","value":"_amount"},"id":737,"name":"Identifier","src":"17455:7:0"}],"id":738,"name":"BinaryOperation","src":"17438:24:0"}],"id":739,"name":"FunctionCall","src":"17401:62:0"}],"id":740,"name":"ExpressionStatement","src":"17401:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$94_storage_$dyn_storage","typeString":"struct Pinakion.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":938,"type":"function (struct Pinakion.Checkpoint storage ref[] storage pointer,uint256)","value":"updateValueAtNow"},"id":741,"name":"Identifier","src":"17473:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"mapping(address => struct Pinakion.Checkpoint storage ref[] storage ref)","value":"balances"},"id":742,"name":"Identifier","src":"17490:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":702,"type":"address","value":"_owner"},"id":743,"name":"Identifier","src":"17499:6:0"}],"id":744,"name":"IndexAccess","src":"17490:16:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":723,"type":"uint256","value":"previousBalanceFrom"},"id":745,"name":"Identifier","src":"17508:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":704,"type":"uint256","value":"_amount"},"id":746,"name":"Identifier","src":"17530:7:0"}],"id":747,"name":"BinaryOperation","src":"17508:29:0"}],"id":748,"name":"FunctionCall","src":"17473:65:0"}],"id":749,"name":"ExpressionStatement","src":"17473:65:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1064,"type":"function (address,address,uint256)","value":"Transfer"},"id":750,"name":"Identifier","src":"17548:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":702,"type":"address","value":"_owner"},"id":751,"name":"Identifier","src":"17557:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":752,"name":"Literal","src":"17565:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":704,"type":"uint256","value":"_amount"},"id":753,"name":"Identifier","src":"17568:7:0"}],"id":754,"name":"FunctionCall","src":"17548:28:0"}],"id":755,"name":"ExpressionStatement","src":"17548:28:0"},{"attributes":{"functionReturnParameters":710},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":756,"name":"Literal","src":"17593:4:0"}],"id":757,"name":"Return","src":"17586:11:0"}],"id":758,"name":"Block","src":"17199:405:0"}],"id":759,"name":"FunctionDefinition","src":"17104:500:0"},{"attributes":{"constant":false,"documentation":"/////////////\n @notice Enables token holders to transfer their tokens freely if true\n @param _transfersEnabled True if transfers are allowed in the clone","implemented":true,"isConstructor":false,"name":"enableTransfers","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_transfersEnabled","scope":771,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":760,"name":"ElementaryTypeName","src":"17852:4:0"}],"id":761,"name":"VariableDeclaration","src":"17852:22:0"}],"id":762,"name":"ParameterList","src":"17851:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":765,"name":"ParameterList","src":"17898:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"modifier ()","value":"onlyController"},"id":763,"name":"Identifier","src":"17883:14:0"}],"id":764,"name":"ModifierInvocation","src":"17883:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"bool","value":"transfersEnabled"},"id":766,"name":"Identifier","src":"17908:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"bool","value":"_transfersEnabled"},"id":767,"name":"Identifier","src":"17927:17:0"}],"id":768,"name":"Assignment","src":"17908:36:0"}],"id":769,"name":"ExpressionStatement","src":"17908:36:0"}],"id":770,"name":"Block","src":"17898:53:0"}],"id":771,"name":"FunctionDefinition","src":"17827:124:0"},{"attributes":{"constant":true,"documentation":"/////////////\n @dev `getValueAt` retrieves the number of tokens at a given block number\n @param checkpoints The history of values being queried\n @param _block The block number to retrieve the value at\n @return The number of tokens being queried","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getValueAt","payable":false,"scope":1079,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"checkpoints","scope":867,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":94,"type":"struct Pinakion.Checkpoint"},"id":772,"name":"UserDefinedTypeName","src":"18345:10:0"}],"id":773,"name":"ArrayTypeName","src":"18345:12:0"}],"id":774,"name":"VariableDeclaration","src":"18345:32:0"},{"attributes":{"constant":false,"name":"_block","scope":867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":775,"name":"ElementaryTypeName","src":"18379:4:0"}],"id":776,"name":"VariableDeclaration","src":"18379:11:0"}],"id":777,"name":"ParameterList","src":"18344:52:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":778,"name":"ElementaryTypeName","src":"18424:4:0"}],"id":779,"name":"VariableDeclaration","src":"18424:4:0"}],"id":780,"name":"ParameterList","src":"18423:6:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":781,"name":"Identifier","src":"18444:11:0"}],"id":782,"name":"MemberAccess","src":"18444:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":783,"name":"Literal","src":"18466:1:0"}],"id":784,"name":"BinaryOperation","src":"18444:23:0"},{"attributes":{"functionReturnParameters":780},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":785,"name":"Literal","src":"18476:1:0"}],"id":786,"name":"Return","src":"18469:8:0"}],"id":787,"name":"IfStatement","src":"18440:37:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":776,"type":"uint256","value":"_block"},"id":788,"name":"Identifier","src":"18533:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":91,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":789,"name":"Identifier","src":"18543:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":790,"name":"Identifier","src":"18555:11:0"}],"id":791,"name":"MemberAccess","src":"18555:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":792,"name":"Literal","src":"18574:1:0"}],"id":793,"name":"BinaryOperation","src":"18555:20:0"}],"id":794,"name":"IndexAccess","src":"18543:33:0"}],"id":795,"name":"MemberAccess","src":"18543:43:0"}],"id":796,"name":"BinaryOperation","src":"18533:53:0"},{"attributes":{"functionReturnParameters":780},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":93,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":797,"name":"Identifier","src":"18607:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":798,"name":"Identifier","src":"18619:11:0"}],"id":799,"name":"MemberAccess","src":"18619:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":800,"name":"Literal","src":"18638:1:0"}],"id":801,"name":"BinaryOperation","src":"18619:20:0"}],"id":802,"name":"IndexAccess","src":"18607:33:0"}],"id":803,"name":"MemberAccess","src":"18607:39:0"}],"id":804,"name":"Return","src":"18600:46:0"}],"id":805,"name":"IfStatement","src":"18529:117:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":776,"type":"uint256","value":"_block"},"id":806,"name":"Identifier","src":"18660:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":91,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":807,"name":"Identifier","src":"18669:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":808,"name":"Literal","src":"18681:1:0"}],"id":809,"name":"IndexAccess","src":"18669:14:0"}],"id":810,"name":"MemberAccess","src":"18669:24:0"}],"id":811,"name":"BinaryOperation","src":"18660:33:0"},{"attributes":{"functionReturnParameters":780},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":812,"name":"Literal","src":"18702:1:0"}],"id":813,"name":"Return","src":"18695:8:0"}],"id":814,"name":"IfStatement","src":"18656:47:0"},{"attributes":{"assignments":[816]},"children":[{"attributes":{"constant":false,"name":"min","scope":867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":815,"name":"ElementaryTypeName","src":"18765:4:0"}],"id":816,"name":"VariableDeclaration","src":"18765:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":817,"name":"Literal","src":"18776:1:0"}],"id":818,"name":"VariableDeclarationStatement","src":"18765:12:0"},{"attributes":{"assignments":[820]},"children":[{"attributes":{"constant":false,"name":"max","scope":867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":819,"name":"ElementaryTypeName","src":"18787:4:0"}],"id":820,"name":"VariableDeclaration","src":"18787:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":821,"name":"Identifier","src":"18798:11:0"}],"id":822,"name":"MemberAccess","src":"18798:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":823,"name":"Literal","src":"18817:1:0"}],"id":824,"name":"BinaryOperation","src":"18798:20:0"}],"id":825,"name":"VariableDeclarationStatement","src":"18787:31:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":820,"type":"uint256","value":"max"},"id":826,"name":"Identifier","src":"18835:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":816,"type":"uint256","value":"min"},"id":827,"name":"Identifier","src":"18841:3:0"}],"id":828,"name":"BinaryOperation","src":"18835:9:0"},{"children":[{"attributes":{"assignments":[830]},"children":[{"attributes":{"constant":false,"name":"mid","scope":867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":829,"name":"ElementaryTypeName","src":"18860:4:0"}],"id":830,"name":"VariableDeclaration","src":"18860:8:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":820,"type":"uint256","value":"max"},"id":831,"name":"Identifier","src":"18872:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":816,"type":"uint256","value":"min"},"id":832,"name":"Identifier","src":"18878:3:0"}],"id":833,"name":"BinaryOperation","src":"18872:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":834,"name":"Literal","src":"18884:1:0"}],"id":835,"name":"BinaryOperation","src":"18872:13:0"}],"id":836,"name":"TupleExpression","src":"18871:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":837,"name":"Literal","src":"18888:1:0"}],"id":838,"name":"BinaryOperation","src":"18871:18:0"}],"id":839,"name":"VariableDeclarationStatement","src":"18860:29:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":91,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":840,"name":"Identifier","src":"18907:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":830,"type":"uint256","value":"mid"},"id":841,"name":"Identifier","src":"18919:3:0"}],"id":842,"name":"IndexAccess","src":"18907:16:0"}],"id":843,"name":"MemberAccess","src":"18907:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":776,"type":"uint256","value":"_block"},"id":844,"name":"Identifier","src":"18935:6:0"}],"id":845,"name":"BinaryOperation","src":"18907:34:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":816,"type":"uint256","value":"min"},"id":846,"name":"Identifier","src":"18961:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":830,"type":"uint256","value":"mid"},"id":847,"name":"Identifier","src":"18967:3:0"}],"id":848,"name":"Assignment","src":"18961:9:0"}],"id":849,"name":"ExpressionStatement","src":"18961:9:0"}],"id":850,"name":"Block","src":"18943:42:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":820,"type":"uint256","value":"max"},"id":851,"name":"Identifier","src":"19009:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":830,"type":"uint256","value":"mid"},"id":852,"name":"Identifier","src":"19015:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":853,"name":"Literal","src":"19019:1:0"}],"id":854,"name":"BinaryOperation","src":"19015:5:0"}],"id":855,"name":"Assignment","src":"19009:11:0"}],"id":856,"name":"ExpressionStatement","src":"19009:11:0"}],"id":857,"name":"Block","src":"18991:44:0"}],"id":858,"name":"IfStatement","src":"18903:132:0"}],"id":859,"name":"Block","src":"18846:199:0"}],"id":860,"name":"WhileStatement","src":"18828:217:0"},{"attributes":{"functionReturnParameters":780},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":93,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":774,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":861,"name":"Identifier","src":"19061:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":816,"type":"uint256","value":"min"},"id":862,"name":"Identifier","src":"19073:3:0"}],"id":863,"name":"IndexAccess","src":"19061:16:0"}],"id":864,"name":"MemberAccess","src":"19061:22:0"}],"id":865,"name":"Return","src":"19054:29:0"}],"id":866,"name":"Block","src":"18430:660:0"}],"id":867,"name":"FunctionDefinition","src":"18325:765:0"},{"attributes":{"constant":false,"documentation":"@dev `updateValueAtNow` used to update the `balances` map and the\n  `totalSupplyHistory`\n @param checkpoints The history of data being updated\n @param _value The new number of tokens","implemented":true,"isConstructor":false,"modifiers":[null],"name":"updateValueAtNow","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"checkpoints","scope":938,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Pinakion.Checkpoint[]"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":94,"type":"struct Pinakion.Checkpoint"},"id":868,"name":"UserDefinedTypeName","src":"19334:10:0"}],"id":869,"name":"ArrayTypeName","src":"19334:12:0"}],"id":870,"name":"VariableDeclaration","src":"19334:32:0"},{"attributes":{"constant":false,"name":"_value","scope":938,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":871,"name":"ElementaryTypeName","src":"19368:4:0"}],"id":872,"name":"VariableDeclaration","src":"19368:11:0"}],"id":873,"name":"ParameterList","src":"19333:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":874,"name":"ParameterList","src":"19396:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":870,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":875,"name":"Identifier","src":"19411:11:0"}],"id":876,"name":"MemberAccess","src":"19411:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":877,"name":"Literal","src":"19433:1:0"}],"id":878,"name":"BinaryOperation","src":"19411:23:0"}],"id":879,"name":"TupleExpression","src":"19410:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"fromBlock","referencedDeclaration":91,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":870,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":880,"name":"Identifier","src":"19448:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":870,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":881,"name":"Identifier","src":"19460:11:0"}],"id":882,"name":"MemberAccess","src":"19460:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":883,"name":"Literal","src":"19480:1:0"}],"id":884,"name":"BinaryOperation","src":"19460:21:0"}],"id":885,"name":"IndexAccess","src":"19448:34:0"}],"id":886,"name":"MemberAccess","src":"19448:44:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":887,"name":"Identifier","src":"19495:5:0"}],"id":888,"name":"MemberAccess","src":"19495:12:0"}],"id":889,"name":"BinaryOperation","src":"19448:59:0"}],"id":890,"name":"TupleExpression","src":"19447:61:0"}],"id":891,"name":"BinaryOperation","src":"19410:98:0"},{"children":[{"attributes":{"assignments":[893]},"children":[{"attributes":{"constant":false,"name":"newCheckPoint","scope":938,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":94,"type":"struct Pinakion.Checkpoint"},"id":892,"name":"UserDefinedTypeName","src":"19527:10:0"}],"id":893,"name":"VariableDeclaration","src":"19527:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":870,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":894,"name":"Identifier","src":"19562:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":870,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":895,"name":"Identifier","src":"19575:11:0"}],"id":896,"name":"MemberAccess","src":"19575:18:0"}],"id":897,"name":"UnaryOperation","src":"19575:20:0"}],"id":898,"name":"IndexAccess","src":"19562:35:0"}],"id":899,"name":"VariableDeclarationStatement","src":"19527:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"fromBlock","referencedDeclaration":91,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":893,"type":"struct Pinakion.Checkpoint storage pointer","value":"newCheckPoint"},"id":900,"name":"Identifier","src":"19614:13:0"}],"id":902,"name":"MemberAccess","src":"19614:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":903,"name":"ElementaryTypeNameExpression","src":"19641:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":904,"name":"Identifier","src":"19649:5:0"}],"id":905,"name":"MemberAccess","src":"19649:12:0"}],"id":906,"name":"FunctionCall","src":"19641:21:0"}],"id":907,"name":"Assignment","src":"19614:48:0"}],"id":908,"name":"ExpressionStatement","src":"19614:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"value","referencedDeclaration":93,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":893,"type":"struct Pinakion.Checkpoint storage pointer","value":"newCheckPoint"},"id":909,"name":"Identifier","src":"19679:13:0"}],"id":911,"name":"MemberAccess","src":"19679:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":912,"name":"ElementaryTypeNameExpression","src":"19701:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":872,"type":"uint256","value":"_value"},"id":913,"name":"Identifier","src":"19709:6:0"}],"id":914,"name":"FunctionCall","src":"19701:15:0"}],"id":915,"name":"Assignment","src":"19679:37:0"}],"id":916,"name":"ExpressionStatement","src":"19679:37:0"}],"id":917,"name":"Block","src":"19510:220:0"},{"children":[{"attributes":{"assignments":[919]},"children":[{"attributes":{"constant":false,"name":"oldCheckPoint","scope":938,"stateVariable":false,"storageLocation":"storage","type":"struct Pinakion.Checkpoint","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Checkpoint","referencedDeclaration":94,"type":"struct Pinakion.Checkpoint"},"id":918,"name":"UserDefinedTypeName","src":"19753:10:0"}],"id":919,"name":"VariableDeclaration","src":"19753:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Pinakion.Checkpoint storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":870,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":920,"name":"Identifier","src":"19788:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":870,"type":"struct Pinakion.Checkpoint storage ref[] storage pointer","value":"checkpoints"},"id":921,"name":"Identifier","src":"19800:11:0"}],"id":922,"name":"MemberAccess","src":"19800:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":923,"name":"Literal","src":"19819:1:0"}],"id":924,"name":"BinaryOperation","src":"19800:20:0"}],"id":925,"name":"IndexAccess","src":"19788:33:0"}],"id":926,"name":"VariableDeclarationStatement","src":"19753:68:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"value","referencedDeclaration":93,"type":"uint128"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":919,"type":"struct Pinakion.Checkpoint storage pointer","value":"oldCheckPoint"},"id":927,"name":"Identifier","src":"19838:13:0"}],"id":929,"name":"MemberAccess","src":"19838:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint128","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint128)","value":"uint128"},"id":930,"name":"ElementaryTypeNameExpression","src":"19860:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":872,"type":"uint256","value":"_value"},"id":931,"name":"Identifier","src":"19868:6:0"}],"id":932,"name":"FunctionCall","src":"19860:15:0"}],"id":933,"name":"Assignment","src":"19838:37:0"}],"id":934,"name":"ExpressionStatement","src":"19838:37:0"}],"id":935,"name":"Block","src":"19736:153:0"}],"id":936,"name":"IfStatement","src":"19406:483:0"}],"id":937,"name":"Block","src":"19396:499:0"}],"id":938,"name":"FunctionDefinition","src":"19308:587:0"},{"attributes":{"constant":true,"documentation":"@dev Internal function to determine if an address is a contract\n @param _addr The address being queried\n @return True if `_addr` is a contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isContract","payable":false,"scope":1079,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_addr","scope":960,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":939,"name":"ElementaryTypeName","src":"20086:7:0"}],"id":940,"name":"VariableDeclaration","src":"20086:13:0"}],"id":941,"name":"ParameterList","src":"20085:15:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":960,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":942,"name":"ElementaryTypeName","src":"20127:4:0"}],"id":943,"name":"VariableDeclaration","src":"20127:4:0"}],"id":944,"name":"ParameterList","src":"20126:6:0"},{"children":[{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"size","scope":960,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":945,"name":"ElementaryTypeName","src":"20143:4:0"}],"id":946,"name":"VariableDeclaration","src":"20143:9:0"}],"id":947,"name":"VariableDeclarationStatement","src":"20143:9:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":940,"type":"address","value":"_addr"},"id":948,"name":"Identifier","src":"20166:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":949,"name":"Literal","src":"20175:1:0"}],"id":950,"name":"BinaryOperation","src":"20166:10:0"},{"attributes":{"functionReturnParameters":944},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":951,"name":"Literal","src":"20185:5:0"}],"id":952,"name":"Return","src":"20178:12:0"}],"id":953,"name":"IfStatement","src":"20162:28:0"},{"attributes":{"externalReferences":[{"_addr":{"declaration":940,"isOffset":false,"isSlot":false,"src":"20243:5:0","valueSize":1}},{"size":{"declaration":946,"isOffset":false,"isSlot":false,"src":"20223:4:0","valueSize":1}}],"operations":"{\n    size := extcodesize(_addr)\n}"},"children":[],"id":954,"name":"InlineAssembly","src":"20200:74:0"},{"attributes":{"functionReturnParameters":944},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":946,"type":"uint256","value":"size"},"id":955,"name":"Identifier","src":"20275:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":956,"name":"Literal","src":"20280:1:0"}],"id":957,"name":"BinaryOperation","src":"20275:6:0"}],"id":958,"name":"Return","src":"20268:13:0"}],"id":959,"name":"Block","src":"20133:155:0"}],"id":960,"name":"FunctionDefinition","src":"20066:222:0"},{"attributes":{"constant":true,"documentation":"@dev Helper function to return a min betwen the two uints","implemented":true,"isConstructor":false,"modifiers":[null],"name":"min","payable":false,"scope":1079,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":977,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":961,"name":"ElementaryTypeName","src":"20373:4:0"}],"id":962,"name":"VariableDeclaration","src":"20373:6:0"},{"attributes":{"constant":false,"name":"b","scope":977,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":963,"name":"ElementaryTypeName","src":"20381:4:0"}],"id":964,"name":"VariableDeclaration","src":"20381:6:0"}],"id":965,"name":"ParameterList","src":"20372:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":977,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":966,"name":"ElementaryTypeName","src":"20412:4:0"}],"id":967,"name":"VariableDeclaration","src":"20412:4:0"}],"id":968,"name":"ParameterList","src":"20411:6:0"},{"children":[{"attributes":{"functionReturnParameters":968},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":962,"type":"uint256","value":"a"},"id":969,"name":"Identifier","src":"20435:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":964,"type":"uint256","value":"b"},"id":970,"name":"Identifier","src":"20439:1:0"}],"id":971,"name":"BinaryOperation","src":"20435:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":962,"type":"uint256","value":"a"},"id":972,"name":"Identifier","src":"20443:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":964,"type":"uint256","value":"b"},"id":973,"name":"Identifier","src":"20447:1:0"}],"id":974,"name":"Conditional","src":"20435:13:0"}],"id":975,"name":"Return","src":"20428:20:0"}],"id":976,"name":"Block","src":"20418:37:0"}],"id":977,"name":"FunctionDefinition","src":"20360:95:0"},{"attributes":{"constant":false,"documentation":"@notice The fallback function: If the contract's controller has not been\n  set to 0, then the `proxyPayment` method is called which relays the\n  ether and creates tokens as described in the token controller contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"","payable":true,"scope":1079,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":978,"name":"ParameterList","src":"20708:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":979,"name":"ParameterList","src":"20726:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":980,"name":"Identifier","src":"20736:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":960,"type":"function (address) view returns (bool)","value":"isContract"},"id":981,"name":"Identifier","src":"20744:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":982,"name":"Identifier","src":"20755:10:0"}],"id":983,"name":"FunctionCall","src":"20744:22:0"}],"id":984,"name":"FunctionCall","src":"20736:31:0"}],"id":985,"name":"ExpressionStatement","src":"20736:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":986,"name":"Identifier","src":"20777:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function (address) payable external returns (bool)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"function (uint256) returns (function (address) payable external returns (bool))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"proxyPayment","referencedDeclaration":20,"type":"function (address) payable external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract TokenController","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":43,"type":"type(contract TokenController)","value":"TokenController"},"id":987,"name":"Identifier","src":"20785:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":988,"name":"Identifier","src":"20801:10:0"}],"id":989,"name":"FunctionCall","src":"20785:27:0"}],"id":990,"name":"MemberAccess","src":"20785:40:0"}],"id":991,"name":"MemberAccess","src":"20785:46:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":992,"name":"Identifier","src":"20832:3:0"}],"id":993,"name":"MemberAccess","src":"20832:9:0"}],"id":994,"name":"FunctionCall","src":"20785:57:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":995,"name":"Identifier","src":"20843:3:0"}],"id":996,"name":"MemberAccess","src":"20843:10:0"}],"id":997,"name":"FunctionCall","src":"20785:69:0"}],"id":998,"name":"FunctionCall","src":"20777:78:0"}],"id":999,"name":"ExpressionStatement","src":"20777:78:0"}],"id":1000,"name":"Block","src":"20726:136:0"}],"id":1001,"name":"FunctionDefinition","src":"20699:163:0"},{"attributes":{"constant":false,"documentation":"///////\n @notice This method can be used by the controller to extract mistakenly\n  sent tokens to this contract.\n @param _token The address of the token contract that you want to recover\n  set to 0 in case you want to extract ether.","implemented":true,"isConstructor":false,"name":"claimTokens","payable":false,"scope":1079,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_token","scope":1048,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1002,"name":"ElementaryTypeName","src":"21183:7:0"}],"id":1003,"name":"VariableDeclaration","src":"21183:14:0"}],"id":1004,"name":"ParameterList","src":"21182:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":1007,"name":"ParameterList","src":"21221:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"modifier ()","value":"onlyController"},"id":1005,"name":"Identifier","src":"21206:14:0"}],"id":1006,"name":"ModifierInvocation","src":"21206:14:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1003,"type":"address","value":"_token"},"id":1008,"name":"Identifier","src":"21235:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1009,"name":"Literal","src":"21245:3:0"}],"id":1010,"name":"BinaryOperation","src":"21235:13:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":1011,"name":"Identifier","src":"21264:10:0"}],"id":1013,"name":"MemberAccess","src":"21264:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4088,"type":"contract Pinakion","value":"this"},"id":1014,"name":"Identifier","src":"21284:4:0"}],"id":1015,"name":"MemberAccess","src":"21284:12:0"}],"id":1016,"name":"FunctionCall","src":"21264:33:0"}],"id":1017,"name":"ExpressionStatement","src":"21264:33:0"},{"attributes":{"expression":null,"functionReturnParameters":1007},"id":1018,"name":"Return","src":"21311:7:0"}],"id":1019,"name":"Block","src":"21250:78:0"}],"id":1020,"name":"IfStatement","src":"21231:97:0"},{"attributes":{"assignments":[1022]},"children":[{"attributes":{"constant":false,"name":"token","scope":1048,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":1021,"name":"UserDefinedTypeName","src":"21338:8:0"}],"id":1022,"name":"VariableDeclaration","src":"21338:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1079,"type":"type(contract Pinakion)","value":"Pinakion"},"id":1023,"name":"Identifier","src":"21355:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1003,"type":"address","value":"_token"},"id":1024,"name":"Identifier","src":"21364:6:0"}],"id":1025,"name":"FunctionCall","src":"21355:16:0"}],"id":1026,"name":"VariableDeclarationStatement","src":"21338:33:0"},{"attributes":{"assignments":[1028]},"children":[{"attributes":{"constant":false,"name":"balance","scope":1048,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1027,"name":"ElementaryTypeName","src":"21381:4:0"}],"id":1028,"name":"VariableDeclaration","src":"21381:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pinakion_$1079","typeString":"contract Pinakion"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOf","referencedDeclaration":371,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1022,"type":"contract Pinakion","value":"token"},"id":1029,"name":"Identifier","src":"21396:5:0"}],"id":1030,"name":"MemberAccess","src":"21396:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4088,"type":"contract Pinakion","value":"this"},"id":1031,"name":"Identifier","src":"21412:4:0"}],"id":1032,"name":"FunctionCall","src":"21396:21:0"}],"id":1033,"name":"VariableDeclarationStatement","src":"21381:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":196,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1022,"type":"contract Pinakion","value":"token"},"id":1034,"name":"Identifier","src":"21427:5:0"}],"id":1036,"name":"MemberAccess","src":"21427:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":1037,"name":"Identifier","src":"21442:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1028,"type":"uint256","value":"balance"},"id":1038,"name":"Identifier","src":"21454:7:0"}],"id":1039,"name":"FunctionCall","src":"21427:35:0"}],"id":1040,"name":"ExpressionStatement","src":"21427:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1056,"type":"function (address,address,uint256)","value":"ClaimedTokens"},"id":1041,"name":"Identifier","src":"21472:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1003,"type":"address","value":"_token"},"id":1042,"name":"Identifier","src":"21486:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"address","value":"controller"},"id":1043,"name":"Identifier","src":"21494:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1028,"type":"uint256","value":"balance"},"id":1044,"name":"Identifier","src":"21506:7:0"}],"id":1045,"name":"FunctionCall","src":"21472:42:0"}],"id":1046,"name":"ExpressionStatement","src":"21472:42:0"}],"id":1047,"name":"Block","src":"21221:300:0"}],"id":1048,"name":"FunctionDefinition","src":"21162:359:0"},{"attributes":{"anonymous":false,"documentation":"/////////////","name":"ClaimedTokens"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_token","scope":1056,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1049,"name":"ElementaryTypeName","src":"21591:7:0"}],"id":1050,"name":"VariableDeclaration","src":"21591:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"_controller","scope":1056,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1051,"name":"ElementaryTypeName","src":"21615:7:0"}],"id":1052,"name":"VariableDeclaration","src":"21615:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1056,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1053,"name":"ElementaryTypeName","src":"21644:4:0"}],"id":1054,"name":"VariableDeclaration","src":"21644:12:0"}],"id":1055,"name":"ParameterList","src":"21590:67:0"}],"id":1056,"name":"EventDefinition","src":"21571:87:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_from","scope":1064,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1057,"name":"ElementaryTypeName","src":"21678:7:0"}],"id":1058,"name":"VariableDeclaration","src":"21678:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"_to","scope":1064,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1059,"name":"ElementaryTypeName","src":"21701:7:0"}],"id":1060,"name":"VariableDeclaration","src":"21701:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1064,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1061,"name":"ElementaryTypeName","src":"21722:7:0"}],"id":1062,"name":"VariableDeclaration","src":"21722:15:0"}],"id":1063,"name":"ParameterList","src":"21677:61:0"}],"id":1064,"name":"EventDefinition","src":"21663:76:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"NewCloneToken"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_cloneToken","scope":1070,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1065,"name":"ElementaryTypeName","src":"21764:7:0"}],"id":1066,"name":"VariableDeclaration","src":"21764:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"_snapshotBlock","scope":1070,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1067,"name":"ElementaryTypeName","src":"21793:4:0"}],"id":1068,"name":"VariableDeclaration","src":"21793:19:0"}],"id":1069,"name":"ParameterList","src":"21763:50:0"}],"id":1070,"name":"EventDefinition","src":"21744:70:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_owner","scope":1078,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1071,"name":"ElementaryTypeName","src":"21843:7:0"}],"id":1072,"name":"VariableDeclaration","src":"21843:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"_spender","scope":1078,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1073,"name":"ElementaryTypeName","src":"21875:7:0"}],"id":1074,"name":"VariableDeclaration","src":"21875:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1078,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1075,"name":"ElementaryTypeName","src":"21909:7:0"}],"id":1076,"name":"VariableDeclaration","src":"21909:15:0"}],"id":1077,"name":"ParameterList","src":"21833:101:0"}],"id":1078,"name":"EventDefinition","src":"21819:116:0"}],"id":1079,"name":"ContractDefinition","src":"2528:19410:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[1079],"contractKind":"contract","documentation":"/////////////\n @dev This contract is used to generate clone contracts from a contract.\n  In solidity this is the way to create a contract from a contract of the\n  same class","fullyImplemented":true,"linearizedBaseContracts":[1120],"name":"MiniMeTokenFactory","scope":4055},"children":[{"attributes":{"constant":false,"documentation":"@notice Update the DApp by creating a new token with new functionalities\n  the msg.sender becomes the controller of this clone token\n @param _parentToken Address of the token being cloned\n @param _snapshotBlock Block of the parent token that will\n  determine the initial distribution of the clone token\n @param _tokenName Name of the new token\n @param _decimalUnits Number of decimals of the new token\n @param _tokenSymbol Token Symbol for the new token\n @param _transfersEnabled If true, tokens will be able to be transferred\n @return The address of the new token contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createCloneToken","payable":false,"scope":1120,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_parentToken","scope":1119,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1080,"name":"ElementaryTypeName","src":"22882:7:0"}],"id":1081,"name":"VariableDeclaration","src":"22882:20:0"},{"attributes":{"constant":false,"name":"_snapshotBlock","scope":1119,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1082,"name":"ElementaryTypeName","src":"22912:4:0"}],"id":1083,"name":"VariableDeclaration","src":"22912:19:0"},{"attributes":{"constant":false,"name":"_tokenName","scope":1119,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1084,"name":"ElementaryTypeName","src":"22941:6:0"}],"id":1085,"name":"VariableDeclaration","src":"22941:17:0"},{"attributes":{"constant":false,"name":"_decimalUnits","scope":1119,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":1086,"name":"ElementaryTypeName","src":"22968:5:0"}],"id":1087,"name":"VariableDeclaration","src":"22968:19:0"},{"attributes":{"constant":false,"name":"_tokenSymbol","scope":1119,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1088,"name":"ElementaryTypeName","src":"22997:6:0"}],"id":1089,"name":"VariableDeclaration","src":"22997:19:0"},{"attributes":{"constant":false,"name":"_transfersEnabled","scope":1119,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1090,"name":"ElementaryTypeName","src":"23026:4:0"}],"id":1091,"name":"VariableDeclaration","src":"23026:22:0"}],"id":1092,"name":"ParameterList","src":"22872:182:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1119,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":1093,"name":"UserDefinedTypeName","src":"23071:8:0"}],"id":1094,"name":"VariableDeclaration","src":"23071:8:0"}],"id":1095,"name":"ParameterList","src":"23070:10:0"},{"children":[{"attributes":{"assignments":[1097]},"children":[{"attributes":{"constant":false,"name":"newToken","scope":1119,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":1096,"name":"UserDefinedTypeName","src":"23091:8:0"}],"id":1097,"name":"VariableDeclaration","src":"23091:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Pinakion","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_MiniMeTokenFactory_$1120","typeString":"contract MiniMeTokenFactory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"function (address,address,uint256,string memory,uint8,string memory,bool) returns (contract Pinakion)"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":1098,"name":"UserDefinedTypeName","src":"23115:8:0"}],"id":1099,"name":"NewExpression","src":"23111:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4090,"type":"contract MiniMeTokenFactory","value":"this"},"id":1100,"name":"Identifier","src":"23137:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1081,"type":"address","value":"_parentToken"},"id":1101,"name":"Identifier","src":"23155:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1083,"type":"uint256","value":"_snapshotBlock"},"id":1102,"name":"Identifier","src":"23181:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1085,"type":"string memory","value":"_tokenName"},"id":1103,"name":"Identifier","src":"23209:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1087,"type":"uint8","value":"_decimalUnits"},"id":1104,"name":"Identifier","src":"23233:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1089,"type":"string memory","value":"_tokenSymbol"},"id":1105,"name":"Identifier","src":"23260:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1091,"type":"bool","value":"_transfersEnabled"},"id":1106,"name":"Identifier","src":"23286:17:0"}],"id":1107,"name":"FunctionCall","src":"23111:206:0"}],"id":1108,"name":"VariableDeclarationStatement","src":"23091:226:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"changeController","referencedDeclaration":77,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1097,"type":"contract Pinakion","value":"newToken"},"id":1109,"name":"Identifier","src":"23328:8:0"}],"id":1111,"name":"MemberAccess","src":"23328:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1112,"name":"Identifier","src":"23354:3:0"}],"id":1113,"name":"MemberAccess","src":"23354:10:0"}],"id":1114,"name":"FunctionCall","src":"23328:37:0"}],"id":1115,"name":"ExpressionStatement","src":"23328:37:0"},{"attributes":{"functionReturnParameters":1095},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1097,"type":"contract Pinakion","value":"newToken"},"id":1116,"name":"Identifier","src":"23382:8:0"}],"id":1117,"name":"Return","src":"23375:15:0"}],"id":1118,"name":"Block","src":"23081:316:0"}],"id":1119,"name":"FunctionDefinition","src":"22847:550:0"}],"id":1120,"name":"ContractDefinition","src":"22167:1232:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[1171],"name":"RNG","scope":4055},"children":[{"attributes":{"body":null,"constant":false,"documentation":"@dev Contribute to the reward of a random number.\n @param _block Block the random number is linked to.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"contribute","payable":true,"scope":1171,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1125,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1121,"name":"ElementaryTypeName","src":"23566:4:0"}],"id":1122,"name":"VariableDeclaration","src":"23566:11:0"}],"id":1123,"name":"ParameterList","src":"23565:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1124,"name":"ParameterList","src":"23593:0:0"}],"id":1125,"name":"FunctionDefinition","src":"23546:48:0"},{"attributes":{"constant":false,"documentation":"@dev Request a random number.\n @param _block Block linked to the request.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"requestRN","payable":true,"scope":1171,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1135,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1126,"name":"ElementaryTypeName","src":"23716:4:0"}],"id":1127,"name":"VariableDeclaration","src":"23716:11:0"}],"id":1128,"name":"ParameterList","src":"23715:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1129,"name":"ParameterList","src":"23744:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1125,"type":"function (uint256)","value":"contribute"},"id":1130,"name":"Identifier","src":"23754:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1127,"type":"uint256","value":"_block"},"id":1131,"name":"Identifier","src":"23765:6:0"}],"id":1132,"name":"FunctionCall","src":"23754:18:0"}],"id":1133,"name":"ExpressionStatement","src":"23754:18:0"}],"id":1134,"name":"Block","src":"23744:35:0"}],"id":1135,"name":"FunctionDefinition","src":"23697:82:0"},{"attributes":{"body":null,"constant":false,"documentation":"@dev Get the random number.\n @param _block Block the random number is linked to.\n @return RN Random Number. If the number is not ready or has not been required 0 instead.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"getRN","payable":false,"scope":1171,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1142,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1136,"name":"ElementaryTypeName","src":"24001:4:0"}],"id":1137,"name":"VariableDeclaration","src":"24001:11:0"}],"id":1138,"name":"ParameterList","src":"24000:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1142,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1139,"name":"ElementaryTypeName","src":"24030:4:0"}],"id":1140,"name":"VariableDeclaration","src":"24030:7:0"}],"id":1141,"name":"ParameterList","src":"24029:9:0"}],"id":1142,"name":"FunctionDefinition","src":"23986:53:0"},{"attributes":{"constant":false,"documentation":"@dev Get a uncorrelated random number. Act like getRN but give a different number for each sender.\n This is to prevent users from getting correlated numbers.\n @param _block Block the random number is linked to.\n @return RN Random Number. If the number is not ready or has not been required 0 instead.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUncorrelatedRN","payable":false,"scope":1171,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1143,"name":"ElementaryTypeName","src":"24410:4:0"}],"id":1144,"name":"VariableDeclaration","src":"24410:11:0"}],"id":1145,"name":"ParameterList","src":"24409:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1146,"name":"ElementaryTypeName","src":"24439:4:0"}],"id":1147,"name":"VariableDeclaration","src":"24439:7:0"}],"id":1148,"name":"ParameterList","src":"24438:9:0"},{"children":[{"attributes":{"assignments":[1150]},"children":[{"attributes":{"constant":false,"name":"baseRN","scope":1170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1149,"name":"ElementaryTypeName","src":"24458:4:0"}],"id":1150,"name":"VariableDeclaration","src":"24458:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1142,"type":"function (uint256) returns (uint256)","value":"getRN"},"id":1151,"name":"Identifier","src":"24470:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1144,"type":"uint256","value":"_block"},"id":1152,"name":"Identifier","src":"24476:6:0"}],"id":1153,"name":"FunctionCall","src":"24470:13:0"}],"id":1154,"name":"VariableDeclarationStatement","src":"24458:25:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1150,"type":"uint256","value":"baseRN"},"id":1155,"name":"Identifier","src":"24497:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1156,"name":"Literal","src":"24505:1:0"}],"id":1157,"name":"BinaryOperation","src":"24497:9:0"},{"attributes":{"functionReturnParameters":1148},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1158,"name":"Literal","src":"24527:1:0"}],"id":1159,"name":"Return","src":"24520:8:0"},{"attributes":{"functionReturnParameters":1148},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1160,"name":"ElementaryTypeNameExpression","src":"24562:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4063,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":1161,"name":"Identifier","src":"24567:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1162,"name":"Identifier","src":"24577:3:0"}],"id":1163,"name":"MemberAccess","src":"24577:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1150,"type":"uint256","value":"baseRN"},"id":1164,"name":"Identifier","src":"24588:6:0"}],"id":1165,"name":"FunctionCall","src":"24567:28:0"}],"id":1166,"name":"FunctionCall","src":"24562:34:0"}],"id":1167,"name":"Return","src":"24555:41:0"}],"id":1168,"name":"IfStatement","src":"24493:103:0"}],"id":1169,"name":"Block","src":"24448:155:0"}],"id":1170,"name":"FunctionDefinition","src":"24383:220:0"}],"id":1171,"name":"ContractDefinition","src":"23401:1206:0"},{"attributes":{"contractDependencies":[1171],"contractKind":"contract","documentation":"Simple Random Number Generator returning the blockhash.\n Allows saving the random number for use in the future.\n It allows the contract to still access the blockhash even after 256 blocks.\n The first party to call the save function gets the reward.","fullyImplemented":true,"linearizedBaseContracts":[1273,1171],"name":"BlockHashRNG","scope":4055},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1171,"type":"contract RNG"},"id":1172,"name":"UserDefinedTypeName","src":"24900:3:0"}],"id":1173,"name":"InheritanceSpecifier","src":"24900:3:0"},{"attributes":{"constant":false,"name":"randomNumber","scope":1273,"stateVariable":true,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1174,"name":"ElementaryTypeName","src":"24920:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1175,"name":"ElementaryTypeName","src":"24928:4:0"}],"id":1176,"name":"Mapping","src":"24911:22:0"}],"id":1177,"name":"VariableDeclaration","src":"24911:42:0"},{"attributes":{"constant":false,"name":"reward","scope":1273,"stateVariable":true,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1178,"name":"ElementaryTypeName","src":"25041:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1179,"name":"ElementaryTypeName","src":"25049:4:0"}],"id":1180,"name":"Mapping","src":"25032:22:0"}],"id":1181,"name":"VariableDeclaration","src":"25032:36:0"},{"attributes":{"constant":false,"documentation":"@dev Contribute to the reward of a random number.\n @param _block Block the random number is linked to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"contribute","payable":true,"scope":1273,"stateMutability":"payable","superFunction":1125,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1194,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1182,"name":"ElementaryTypeName","src":"25281:4:0"}],"id":1183,"name":"VariableDeclaration","src":"25281:11:0"}],"id":1184,"name":"ParameterList","src":"25280:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1185,"name":"ParameterList","src":"25309:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1186,"name":"Identifier","src":"25311:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1183,"type":"uint256","value":"_block"},"id":1187,"name":"Identifier","src":"25318:6:0"}],"id":1188,"name":"IndexAccess","src":"25311:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1189,"name":"Identifier","src":"25327:3:0"}],"id":1190,"name":"MemberAccess","src":"25327:9:0"}],"id":1191,"name":"Assignment","src":"25311:25:0"}],"id":1192,"name":"ExpressionStatement","src":"25311:25:0"}],"id":1193,"name":"Block","src":"25309:30:0"}],"id":1194,"name":"FunctionDefinition","src":"25261:78:0"},{"attributes":{"constant":false,"documentation":"@dev Return the random number. If it has not been saved and is still computable compute it.\n @param _block Block the random number is linked to.\n @return RN Random Number. If the number is not ready or has not been requested 0 instead.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getRN","payable":false,"scope":1273,"stateMutability":"nonpayable","superFunction":1142,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1223,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1195,"name":"ElementaryTypeName","src":"25627:4:0"}],"id":1196,"name":"VariableDeclaration","src":"25627:11:0"}],"id":1197,"name":"ParameterList","src":"25626:13:0"},{"children":[{"attributes":{"constant":false,"name":"RN","scope":1223,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1198,"name":"ElementaryTypeName","src":"25656:4:0"}],"id":1199,"name":"VariableDeclaration","src":"25656:7:0"}],"id":1200,"name":"ParameterList","src":"25655:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1199,"type":"uint256","value":"RN"},"id":1201,"name":"Identifier","src":"25675:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1202,"name":"Identifier","src":"25678:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1196,"type":"uint256","value":"_block"},"id":1203,"name":"Identifier","src":"25691:6:0"}],"id":1204,"name":"IndexAccess","src":"25678:20:0"}],"id":1205,"name":"Assignment","src":"25675:23:0"}],"id":1206,"name":"ExpressionStatement","src":"25675:23:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1199,"type":"uint256","value":"RN"},"id":1207,"name":"Identifier","src":"25712:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1208,"name":"Literal","src":"25716:1:0"}],"id":1209,"name":"BinaryOperation","src":"25712:5:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1272,"type":"function (uint256)","value":"saveRN"},"id":1210,"name":"Identifier","src":"25732:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1196,"type":"uint256","value":"_block"},"id":1211,"name":"Identifier","src":"25739:6:0"}],"id":1212,"name":"FunctionCall","src":"25732:14:0"}],"id":1213,"name":"ExpressionStatement","src":"25732:14:0"},{"attributes":{"functionReturnParameters":1200},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1214,"name":"Identifier","src":"25767:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1196,"type":"uint256","value":"_block"},"id":1215,"name":"Identifier","src":"25780:6:0"}],"id":1216,"name":"IndexAccess","src":"25767:20:0"}],"id":1217,"name":"Return","src":"25760:27:0"}],"id":1218,"name":"Block","src":"25718:80:0"},{"attributes":{"functionReturnParameters":1200},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1199,"type":"uint256","value":"RN"},"id":1219,"name":"Identifier","src":"25831:2:0"}],"id":1220,"name":"Return","src":"25824:9:0"}],"id":1221,"name":"IfStatement","src":"25708:125:0"}],"id":1222,"name":"Block","src":"25665:175:0"}],"id":1223,"name":"FunctionDefinition","src":"25612:228:0"},{"attributes":{"constant":false,"documentation":"@dev Save the random number for this blockhash and give the reward to the caller.\n @param _block Block the random number is linked to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"saveRN","payable":false,"scope":1273,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1272,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1224,"name":"ElementaryTypeName","src":"26020:4:0"}],"id":1225,"name":"VariableDeclaration","src":"26020:11:0"}],"id":1226,"name":"ParameterList","src":"26019:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1227,"name":"ParameterList","src":"26040:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1228,"name":"Identifier","src":"26054:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1225,"type":"uint256","value":"_block"},"id":1229,"name":"Identifier","src":"26064:6:0"}],"id":1230,"name":"FunctionCall","src":"26054:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1231,"name":"Literal","src":"26075:3:0"}],"id":1232,"name":"BinaryOperation","src":"26054:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1233,"name":"Identifier","src":"26092:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1225,"type":"uint256","value":"_block"},"id":1234,"name":"Identifier","src":"26105:6:0"}],"id":1235,"name":"IndexAccess","src":"26092:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1236,"name":"ElementaryTypeNameExpression","src":"26115:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1237,"name":"Identifier","src":"26120:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1225,"type":"uint256","value":"_block"},"id":1238,"name":"Identifier","src":"26130:6:0"}],"id":1239,"name":"FunctionCall","src":"26120:17:0"}],"id":1240,"name":"FunctionCall","src":"26115:23:0"}],"id":1241,"name":"Assignment","src":"26092:46:0"}],"id":1242,"name":"ExpressionStatement","src":"26092:46:0"}],"id":1243,"name":"IfStatement","src":"26050:88:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1244,"name":"Identifier","src":"26152:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1225,"type":"uint256","value":"_block"},"id":1245,"name":"Identifier","src":"26165:6:0"}],"id":1246,"name":"IndexAccess","src":"26152:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1247,"name":"Literal","src":"26176:1:0"}],"id":1248,"name":"BinaryOperation","src":"26152:25:0"},{"children":[{"attributes":{"assignments":[1250]},"children":[{"attributes":{"constant":false,"name":"rewardToSend","scope":1272,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1249,"name":"ElementaryTypeName","src":"26218:4:0"}],"id":1250,"name":"VariableDeclaration","src":"26218:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1251,"name":"Identifier","src":"26238:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1225,"type":"uint256","value":"_block"},"id":1252,"name":"Identifier","src":"26245:6:0"}],"id":1253,"name":"IndexAccess","src":"26238:14:0"}],"id":1254,"name":"VariableDeclarationStatement","src":"26218:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1255,"name":"Identifier","src":"26266:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1225,"type":"uint256","value":"_block"},"id":1256,"name":"Identifier","src":"26273:6:0"}],"id":1257,"name":"IndexAccess","src":"26266:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1258,"name":"Literal","src":"26283:1:0"}],"id":1259,"name":"Assignment","src":"26266:18:0"}],"id":1260,"name":"ExpressionStatement","src":"26266:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"send","referencedDeclaration":null,"type":"function (uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1261,"name":"Identifier","src":"26298:3:0"}],"id":1264,"name":"MemberAccess","src":"26298:10:0"}],"id":1265,"name":"MemberAccess","src":"26298:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1250,"type":"uint256","value":"rewardToSend"},"id":1266,"name":"Identifier","src":"26314:12:0"}],"id":1267,"name":"FunctionCall","src":"26298:29:0"}],"id":1268,"name":"ExpressionStatement","src":"26298:29:0"}],"id":1269,"name":"Block","src":"26179:269:0"}],"id":1270,"name":"IfStatement","src":"26148:300:0"}],"id":1271,"name":"Block","src":"26040:414:0"}],"id":1272,"name":"FunctionDefinition","src":"26004:450:0"}],"id":1273,"name":"ContractDefinition","src":"24875:1582:0"},{"attributes":{"contractDependencies":[1171,1273],"contractKind":"contract","documentation":"Random Number Generator returning the blockhash with a backup behaviour.\n Allows saving the random number for use in the future. \n It allows the contract to still access the blockhash even after 256 blocks.\n The first party to call the save function gets the reward.\n If no one calls the contract within 256 blocks, the contract fallback in returning the blockhash of the previous block.","fullyImplemented":true,"linearizedBaseContracts":[1350,1273,1171],"name":"BlockHashRNGFallback","scope":4055},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BlockHashRNG","referencedDeclaration":1273,"type":"contract BlockHashRNG"},"id":1274,"name":"UserDefinedTypeName","src":"26901:12:0"}],"id":1275,"name":"InheritanceSpecifier","src":"26901:12:0"},{"attributes":{"constant":false,"documentation":"@dev Save the random number for this blockhash and give the reward to the caller.\n @param _block Block the random number is linked to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"saveRN","payable":false,"scope":1350,"stateMutability":"nonpayable","superFunction":1272,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_block","scope":1349,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1276,"name":"ElementaryTypeName","src":"27099:4:0"}],"id":1277,"name":"VariableDeclaration","src":"27099:11:0"}],"id":1278,"name":"ParameterList","src":"27098:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1279,"name":"ParameterList","src":"27119:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1280,"name":"Identifier","src":"27133:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":1281,"name":"Identifier","src":"27140:5:0"}],"id":1282,"name":"MemberAccess","src":"27140:12:0"}],"id":1283,"name":"BinaryOperation","src":"27133:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1284,"name":"Identifier","src":"27156:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1285,"name":"Identifier","src":"27169:6:0"}],"id":1286,"name":"IndexAccess","src":"27156:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1287,"name":"Literal","src":"27178:1:0"}],"id":1288,"name":"BinaryOperation","src":"27156:23:0"}],"id":1289,"name":"BinaryOperation","src":"27133:46:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1290,"name":"Identifier","src":"27253:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1291,"name":"Identifier","src":"27263:6:0"}],"id":1292,"name":"FunctionCall","src":"27253:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":1293,"name":"Literal","src":"27272:3:0"}],"id":1294,"name":"BinaryOperation","src":"27253:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1295,"name":"Identifier","src":"27309:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1296,"name":"Identifier","src":"27322:6:0"}],"id":1297,"name":"IndexAccess","src":"27309:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1298,"name":"ElementaryTypeNameExpression","src":"27330:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1299,"name":"Identifier","src":"27335:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1300,"name":"Identifier","src":"27345:6:0"}],"id":1301,"name":"FunctionCall","src":"27335:17:0"}],"id":1302,"name":"FunctionCall","src":"27330:23:0"}],"id":1303,"name":"Assignment","src":"27309:44:0"}],"id":1304,"name":"ExpressionStatement","src":"27309:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1305,"name":"Identifier","src":"27470:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1306,"name":"Identifier","src":"27483:6:0"}],"id":1307,"name":"IndexAccess","src":"27470:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1308,"name":"ElementaryTypeNameExpression","src":"27491:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1309,"name":"Identifier","src":"27496:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":1310,"name":"Identifier","src":"27506:5:0"}],"id":1311,"name":"MemberAccess","src":"27506:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1312,"name":"Literal","src":"27519:1:0"}],"id":1313,"name":"BinaryOperation","src":"27506:14:0"}],"id":1314,"name":"FunctionCall","src":"27496:25:0"}],"id":1315,"name":"FunctionCall","src":"27491:31:0"}],"id":1316,"name":"Assignment","src":"27470:52:0"}],"id":1317,"name":"ExpressionStatement","src":"27470:52:0"}],"id":1318,"name":"IfStatement","src":"27249:273:0"}],"id":1319,"name":"Block","src":"27181:352:0"}],"id":1320,"name":"IfStatement","src":"27129:404:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1177,"type":"mapping(uint256 => uint256)","value":"randomNumber"},"id":1321,"name":"Identifier","src":"27546:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1322,"name":"Identifier","src":"27559:6:0"}],"id":1323,"name":"IndexAccess","src":"27546:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1324,"name":"Literal","src":"27570:1:0"}],"id":1325,"name":"BinaryOperation","src":"27546:25:0"},{"children":[{"attributes":{"assignments":[1327]},"children":[{"attributes":{"constant":false,"name":"rewardToSend","scope":1349,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1326,"name":"ElementaryTypeName","src":"27619:4:0"}],"id":1327,"name":"VariableDeclaration","src":"27619:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1328,"name":"Identifier","src":"27637:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1329,"name":"Identifier","src":"27644:6:0"}],"id":1330,"name":"IndexAccess","src":"27637:14:0"}],"id":1331,"name":"VariableDeclarationStatement","src":"27619:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"mapping(uint256 => uint256)","value":"reward"},"id":1332,"name":"Identifier","src":"27665:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1277,"type":"uint256","value":"_block"},"id":1333,"name":"Identifier","src":"27672:6:0"}],"id":1334,"name":"IndexAccess","src":"27665:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1335,"name":"Literal","src":"27680:1:0"}],"id":1336,"name":"Assignment","src":"27665:16:0"}],"id":1337,"name":"ExpressionStatement","src":"27665:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"send","referencedDeclaration":null,"type":"function (uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1338,"name":"Identifier","src":"27695:3:0"}],"id":1341,"name":"MemberAccess","src":"27695:10:0"}],"id":1342,"name":"MemberAccess","src":"27695:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1327,"type":"uint256","value":"rewardToSend"},"id":1343,"name":"Identifier","src":"27711:12:0"}],"id":1344,"name":"FunctionCall","src":"27695:29:0"}],"id":1345,"name":"ExpressionStatement","src":"27695:29:0"}],"id":1346,"name":"Block","src":"27573:276:0"}],"id":1347,"name":"IfStatement","src":"27542:307:0"}],"id":1348,"name":"Block","src":"27119:736:0"}],"id":1349,"name":"FunctionDefinition","src":"27083:772:0"}],"id":1350,"name":"ContractDefinition","src":"26868:994:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Arbitrable\n Arbitrable abstract contract.\n When developing arbitrable contracts, we need to:\n -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\n -Allow dispute creation. For this a function must:\n     -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\n     -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);","fullyImplemented":false,"linearizedBaseContracts":[1447],"name":"Arbitrable","scope":4055},"children":[{"attributes":{"constant":false,"name":"arbitrator","scope":1447,"stateVariable":true,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":1564,"type":"contract Arbitrator"},"id":1351,"name":"UserDefinedTypeName","src":"28311:10:0"}],"id":1352,"name":"VariableDeclaration","src":"28311:28:0"},{"attributes":{"constant":false,"name":"arbitratorExtraData","scope":1447,"stateVariable":true,"storageLocation":"default","type":"bytes","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1353,"name":"ElementaryTypeName","src":"28345:5:0"}],"id":1354,"name":"VariableDeclaration","src":"28345:32:0"},{"attributes":{"documentation":null,"name":"onlyArbitrator","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1355,"name":"ParameterList","src":"28474:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1356,"name":"Identifier","src":"28475:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1357,"name":"Identifier","src":"28483:3:0"}],"id":1358,"name":"MemberAccess","src":"28483:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrator_$1564","typeString":"contract Arbitrator"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1359,"name":"ElementaryTypeNameExpression","src":"28495:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1352,"type":"contract Arbitrator","value":"arbitrator"},"id":1360,"name":"Identifier","src":"28503:10:0"}],"id":1361,"name":"FunctionCall","src":"28495:19:0"}],"id":1362,"name":"BinaryOperation","src":"28483:31:0"}],"id":1363,"name":"FunctionCall","src":"28475:40:0"}],"id":1364,"name":"ExpressionStatement","src":"28475:40:0"},{"id":1365,"name":"PlaceholderStatement","src":"28517:1:0"}],"id":1366,"name":"Block","src":"28474:46:0"}],"id":1367,"name":"ModifierDefinition","src":"28450:70:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a ruling is given.\n @param _arbitrator The arbitrator giving the ruling.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling The ruling which was given.","name":"Ruling"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1375,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":1564,"type":"contract Arbitrator"},"id":1368,"name":"UserDefinedTypeName","src":"28781:10:0"}],"id":1369,"name":"VariableDeclaration","src":"28781:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1375,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1370,"name":"ElementaryTypeName","src":"28813:4:0"}],"id":1371,"name":"VariableDeclaration","src":"28813:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_ruling","scope":1375,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1372,"name":"ElementaryTypeName","src":"28838:4:0"}],"id":1373,"name":"VariableDeclaration","src":"28838:12:0"}],"id":1374,"name":"ParameterList","src":"28780:71:0"}],"id":1375,"name":"EventDefinition","src":"28768:84:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be emmited when meta-evidence is submitted.\n @param _metaEvidenceID Unique identifier of meta-evidence.\n @param _evidence A link to the meta-evidence JSON.","name":"MetaEvidence"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_metaEvidenceID","scope":1381,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1376,"name":"ElementaryTypeName","src":"29071:4:0"}],"id":1377,"name":"VariableDeclaration","src":"29071:28:0"},{"attributes":{"constant":false,"indexed":false,"name":"_evidence","scope":1381,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1378,"name":"ElementaryTypeName","src":"29101:6:0"}],"id":1379,"name":"VariableDeclaration","src":"29101:16:0"}],"id":1380,"name":"ParameterList","src":"29070:48:0"}],"id":1381,"name":"EventDefinition","src":"29052:67:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be emmited when a dispute is created to link the correct meta-evidence to the disputeID\n @param _arbitrator The arbitrator of the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _metaEvidenceID Unique identifier of meta-evidence.","name":"Dispute"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1389,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":1564,"type":"contract Arbitrator"},"id":1382,"name":"UserDefinedTypeName","src":"29449:10:0"}],"id":1383,"name":"VariableDeclaration","src":"29449:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1389,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1384,"name":"ElementaryTypeName","src":"29481:4:0"}],"id":1385,"name":"VariableDeclaration","src":"29481:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_metaEvidenceID","scope":1389,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1386,"name":"ElementaryTypeName","src":"29506:4:0"}],"id":1387,"name":"VariableDeclaration","src":"29506:20:0"}],"id":1388,"name":"ParameterList","src":"29448:79:0"}],"id":1389,"name":"EventDefinition","src":"29435:93:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due to gas considerations).\n @param _arbitrator The arbitrator of the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _party The address of the party submiting the evidence. Note that 0x0 refers to evidence not submitted by any party.\n @param _evidence A URI to the evidence JSON file whose name should be its keccak256 hash followed by .json.","name":"Evidence"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_arbitrator","scope":1399,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":1564,"type":"contract Arbitrator"},"id":1390,"name":"UserDefinedTypeName","src":"30090:10:0"}],"id":1391,"name":"VariableDeclaration","src":"30090:30:0"},{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1399,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1392,"name":"ElementaryTypeName","src":"30122:4:0"}],"id":1393,"name":"VariableDeclaration","src":"30122:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_party","scope":1399,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1394,"name":"ElementaryTypeName","src":"30147:7:0"}],"id":1395,"name":"VariableDeclaration","src":"30147:14:0"},{"attributes":{"constant":false,"indexed":false,"name":"_evidence","scope":1399,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1396,"name":"ElementaryTypeName","src":"30163:6:0"}],"id":1397,"name":"VariableDeclaration","src":"30163:16:0"}],"id":1398,"name":"ParameterList","src":"30089:91:0"}],"id":1399,"name":"EventDefinition","src":"30075:106:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor. Choose the arbitrator.\n @param _arbitrator The arbitrator of the contract.\n @param _arbitratorExtraData Extra data for the arbitrator.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":1447,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_arbitrator","scope":1415,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrator","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":1564,"type":"contract Arbitrator"},"id":1400,"name":"UserDefinedTypeName","src":"30382:10:0"}],"id":1401,"name":"VariableDeclaration","src":"30382:22:0"},{"attributes":{"constant":false,"name":"_arbitratorExtraData","scope":1415,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1402,"name":"ElementaryTypeName","src":"30406:5:0"}],"id":1403,"name":"VariableDeclaration","src":"30406:26:0"}],"id":1404,"name":"ParameterList","src":"30381:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":1405,"name":"ParameterList","src":"30441:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Arbitrator"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1352,"type":"contract Arbitrator","value":"arbitrator"},"id":1406,"name":"Identifier","src":"30451:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1401,"type":"contract Arbitrator","value":"_arbitrator"},"id":1407,"name":"Identifier","src":"30464:11:0"}],"id":1408,"name":"Assignment","src":"30451:24:0"}],"id":1409,"name":"ExpressionStatement","src":"30451:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1354,"type":"bytes storage ref","value":"arbitratorExtraData"},"id":1410,"name":"Identifier","src":"30485:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1403,"type":"bytes memory","value":"_arbitratorExtraData"},"id":1411,"name":"Identifier","src":"30507:20:0"}],"id":1412,"name":"Assignment","src":"30485:42:0"}],"id":1413,"name":"ExpressionStatement","src":"30485:42:0"}],"id":1414,"name":"Block","src":"30441:93:0"}],"id":1415,"name":"FunctionDefinition","src":"30370:164:0"},{"attributes":{"constant":false,"documentation":"@dev Give a ruling for a dispute. Must be called by the arbitrator.\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".","implemented":true,"isConstructor":false,"name":"rule","payable":false,"scope":1447,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1439,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1416,"name":"ElementaryTypeName","src":"30949:4:0"}],"id":1417,"name":"VariableDeclaration","src":"30949:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":1439,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1418,"name":"ElementaryTypeName","src":"30966:4:0"}],"id":1419,"name":"VariableDeclaration","src":"30966:12:0"}],"id":1420,"name":"ParameterList","src":"30948:31:0"},{"attributes":{"parameters":[null]},"children":[],"id":1423,"name":"ParameterList","src":"31002:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1367,"type":"modifier ()","value":"onlyArbitrator"},"id":1421,"name":"Identifier","src":"30987:14:0"}],"id":1422,"name":"ModifierInvocation","src":"30987:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrator_$1564","typeString":"contract Arbitrator"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1375,"type":"function (contract Arbitrator,uint256,uint256)","value":"Ruling"},"id":1424,"name":"Identifier","src":"31017:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrator","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1564,"type":"type(contract Arbitrator)","value":"Arbitrator"},"id":1425,"name":"Identifier","src":"31024:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1426,"name":"Identifier","src":"31035:3:0"}],"id":1427,"name":"MemberAccess","src":"31035:10:0"}],"id":1428,"name":"FunctionCall","src":"31024:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1417,"type":"uint256","value":"_disputeID"},"id":1429,"name":"Identifier","src":"31047:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1419,"type":"uint256","value":"_ruling"},"id":1430,"name":"Identifier","src":"31058:7:0"}],"id":1431,"name":"FunctionCall","src":"31017:49:0"}],"id":1432,"name":"EmitStatement","src":"31012:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1446,"type":"function (uint256,uint256)","value":"executeRuling"},"id":1433,"name":"Identifier","src":"31077:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1417,"type":"uint256","value":"_disputeID"},"id":1434,"name":"Identifier","src":"31091:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1419,"type":"uint256","value":"_ruling"},"id":1435,"name":"Identifier","src":"31102:7:0"}],"id":1436,"name":"FunctionCall","src":"31077:33:0"}],"id":1437,"name":"ExpressionStatement","src":"31077:33:0"}],"id":1438,"name":"Block","src":"31002:115:0"}],"id":1439,"name":"FunctionDefinition","src":"30935:182:0"},{"attributes":{"body":null,"constant":false,"documentation":"@dev Execute a ruling of a dispute.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".","implemented":false,"isConstructor":false,"modifiers":[null],"name":"executeRuling","payable":false,"scope":1447,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1446,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1440,"name":"ElementaryTypeName","src":"31393:4:0"}],"id":1441,"name":"VariableDeclaration","src":"31393:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":1446,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1442,"name":"ElementaryTypeName","src":"31410:4:0"}],"id":1443,"name":"VariableDeclaration","src":"31410:12:0"}],"id":1444,"name":"ParameterList","src":"31392:31:0"},{"attributes":{"parameters":[null]},"children":[],"id":1445,"name":"ParameterList","src":"31432:0:0"}],"id":1446,"name":"FunctionDefinition","src":"31370:63:0"}],"id":1447,"name":"ContractDefinition","src":"28286:3149:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Arbitrator\n Arbitrator abstract contract.\n When developing arbitrator contracts we need to:\n -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n -Define the functions for cost display (arbitrationCost and appealCost).\n -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).","fullyImplemented":false,"linearizedBaseContracts":[1564],"name":"Arbitrator","scope":4055},"children":[{"attributes":{"canonicalName":"Arbitrator.DisputeStatus","name":"DisputeStatus"},"children":[{"attributes":{"name":"Waiting"},"id":1448,"name":"EnumValue","src":"31955:7:0"},{"attributes":{"name":"Appealable"},"id":1449,"name":"EnumValue","src":"31964:10:0"},{"attributes":{"name":"Solved"},"id":1450,"name":"EnumValue","src":"31976:6:0"}],"id":1451,"name":"EnumDefinition","src":"31935:48:0"},{"attributes":{"documentation":null,"name":"requireArbitrationFee","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":1466,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1452,"name":"ElementaryTypeName","src":"32020:5:0"}],"id":1453,"name":"VariableDeclaration","src":"32020:16:0"}],"id":1454,"name":"ParameterList","src":"32019:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1455,"name":"Identifier","src":"32039:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1456,"name":"Identifier","src":"32047:3:0"}],"id":1457,"name":"MemberAccess","src":"32047:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":1520,"type":"function (bytes memory) view returns (uint256)","value":"arbitrationCost"},"id":1458,"name":"Identifier","src":"32058:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1453,"type":"bytes memory","value":"_extraData"},"id":1459,"name":"Identifier","src":"32074:10:0"}],"id":1460,"name":"FunctionCall","src":"32058:27:0"}],"id":1461,"name":"BinaryOperation","src":"32047:38:0"}],"id":1462,"name":"FunctionCall","src":"32039:47:0"}],"id":1463,"name":"ExpressionStatement","src":"32039:47:0"},{"id":1464,"name":"PlaceholderStatement","src":"32088:1:0"}],"id":1465,"name":"Block","src":"32038:53:0"}],"id":1466,"name":"ModifierDefinition","src":"31989:102:0"},{"attributes":{"documentation":null,"name":"requireAppealFee","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1484,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1467,"name":"ElementaryTypeName","src":"32122:4:0"}],"id":1468,"name":"VariableDeclaration","src":"32122:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1484,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1469,"name":"ElementaryTypeName","src":"32139:5:0"}],"id":1470,"name":"VariableDeclaration","src":"32139:16:0"}],"id":1471,"name":"ParameterList","src":"32121:35:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1472,"name":"Identifier","src":"32158:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1473,"name":"Identifier","src":"32166:3:0"}],"id":1474,"name":"MemberAccess","src":"32166:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":1549,"type":"function (uint256,bytes memory) view returns (uint256)","value":"appealCost"},"id":1475,"name":"Identifier","src":"32177:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1468,"type":"uint256","value":"_disputeID"},"id":1476,"name":"Identifier","src":"32188:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1470,"type":"bytes memory","value":"_extraData"},"id":1477,"name":"Identifier","src":"32200:10:0"}],"id":1478,"name":"FunctionCall","src":"32177:34:0"}],"id":1479,"name":"BinaryOperation","src":"32166:45:0"}],"id":1480,"name":"FunctionCall","src":"32158:54:0"}],"id":1481,"name":"ExpressionStatement","src":"32158:54:0"},{"id":1482,"name":"PlaceholderStatement","src":"32214:1:0"}],"id":1483,"name":"Block","src":"32157:60:0"}],"id":1484,"name":"ModifierDefinition","src":"32096:121:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a dispute can be appealed.\n @param _disputeID ID of the dispute.","name":"AppealPossible"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":1488,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1485,"name":"ElementaryTypeName","src":"32355:4:0"}],"id":1486,"name":"VariableDeclaration","src":"32355:15:0"}],"id":1487,"name":"ParameterList","src":"32354:17:0"}],"id":1488,"name":"EventDefinition","src":"32334:38:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when a dispute is created.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute.","name":"DisputeCreation"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1494,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1489,"name":"ElementaryTypeName","src":"32573:4:0"}],"id":1490,"name":"VariableDeclaration","src":"32573:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_arbitrable","scope":1494,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1447,"type":"contract Arbitrable"},"id":1491,"name":"UserDefinedTypeName","src":"32598:10:0"}],"id":1492,"name":"VariableDeclaration","src":"32598:22:0"}],"id":1493,"name":"ParameterList","src":"32572:49:0"}],"id":1494,"name":"EventDefinition","src":"32551:71:0"},{"attributes":{"anonymous":false,"documentation":"@dev To be raised when the current ruling is appealed.\n @param _disputeID ID of the dispute.\n @param _arbitrable The contract which created the dispute.","name":"AppealDecision"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_disputeID","scope":1500,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1495,"name":"ElementaryTypeName","src":"32832:4:0"}],"id":1496,"name":"VariableDeclaration","src":"32832:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"_arbitrable","scope":1500,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1447,"type":"contract Arbitrable"},"id":1497,"name":"UserDefinedTypeName","src":"32857:10:0"}],"id":1498,"name":"VariableDeclaration","src":"32857:22:0"}],"id":1499,"name":"ParameterList","src":"32831:49:0"}],"id":1500,"name":"EventDefinition","src":"32811:70:0"},{"attributes":{"constant":false,"documentation":"@dev Create a dispute. Must be called by the arbitrable contract.\n Must be paid at least arbitrationCost(_extraData).\n @param _choices Amount of choices the arbitrator can make in this dispute.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return disputeID ID of the dispute created.","implemented":true,"isConstructor":false,"name":"createDispute","payable":true,"scope":1564,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_choices","scope":1513,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1501,"name":"ElementaryTypeName","src":"33279:4:0"}],"id":1502,"name":"VariableDeclaration","src":"33279:13:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1513,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1503,"name":"ElementaryTypeName","src":"33294:5:0"}],"id":1504,"name":"VariableDeclaration","src":"33294:16:0"}],"id":1505,"name":"ParameterList","src":"33278:33:0"},{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":1513,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1509,"name":"ElementaryTypeName","src":"33369:4:0"}],"id":1510,"name":"VariableDeclaration","src":"33369:14:0"}],"id":1511,"name":"ParameterList","src":"33368:16:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1466,"type":"modifier (bytes memory)","value":"requireArbitrationFee"},"id":1506,"name":"Identifier","src":"33319:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1504,"type":"bytes memory","value":"_extraData"},"id":1507,"name":"Identifier","src":"33341:10:0"}],"id":1508,"name":"ModifierInvocation","src":"33319:33:0"},{"attributes":{"statements":[null]},"children":[],"id":1512,"name":"Block","src":"33386:2:0"}],"id":1513,"name":"FunctionDefinition","src":"33256:132:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return fee Amount to be paid.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"arbitrationCost","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":1520,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1514,"name":"ElementaryTypeName","src":"33751:5:0"}],"id":1515,"name":"VariableDeclaration","src":"33751:16:0"}],"id":1516,"name":"ParameterList","src":"33750:18:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":1520,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1517,"name":"ElementaryTypeName","src":"33793:4:0"}],"id":1518,"name":"VariableDeclaration","src":"33793:8:0"}],"id":1519,"name":"ParameterList","src":"33792:10:0"}],"id":1520,"name":"FunctionDefinition","src":"33726:77:0"},{"attributes":{"constant":false,"documentation":"@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give extra info on the appeal.","implemented":true,"isConstructor":false,"name":"appeal","payable":true,"scope":1564,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1540,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1521,"name":"ElementaryTypeName","src":"34068:4:0"}],"id":1522,"name":"VariableDeclaration","src":"34068:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1540,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1523,"name":"ElementaryTypeName","src":"34085:5:0"}],"id":1524,"name":"VariableDeclaration","src":"34085:16:0"}],"id":1525,"name":"ParameterList","src":"34067:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":1530,"name":"ParameterList","src":"34158:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1484,"type":"modifier (uint256,bytes memory)","value":"requireAppealFee"},"id":1526,"name":"Identifier","src":"34110:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"uint256","value":"_disputeID"},"id":1527,"name":"Identifier","src":"34127:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1524,"type":"bytes memory","value":"_extraData"},"id":1528,"name":"Identifier","src":"34138:10:0"}],"id":1529,"name":"ModifierInvocation","src":"34110:39:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Arbitrable_$1447","typeString":"contract Arbitrable"}],"overloadedDeclarations":[null],"referencedDeclaration":1500,"type":"function (uint256,contract Arbitrable)","value":"AppealDecision"},"id":1531,"name":"Identifier","src":"34173:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1522,"type":"uint256","value":"_disputeID"},"id":1532,"name":"Identifier","src":"34188:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1447,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":1533,"name":"Identifier","src":"34200:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1534,"name":"Identifier","src":"34211:3:0"}],"id":1535,"name":"MemberAccess","src":"34211:10:0"}],"id":1536,"name":"FunctionCall","src":"34200:22:0"}],"id":1537,"name":"FunctionCall","src":"34173:50:0"}],"id":1538,"name":"EmitStatement","src":"34168:55:0"}],"id":1539,"name":"Block","src":"34158:72:0"}],"id":1540,"name":"FunctionDefinition","src":"34052:178:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Can be used to give additional info on the dispute to be created.\n @return fee Amount to be paid.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"appealCost","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1549,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1541,"name":"ElementaryTypeName","src":"34642:4:0"}],"id":1542,"name":"VariableDeclaration","src":"34642:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":1549,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1543,"name":"ElementaryTypeName","src":"34659:5:0"}],"id":1544,"name":"VariableDeclaration","src":"34659:16:0"}],"id":1545,"name":"ParameterList","src":"34641:35:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":1549,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1546,"name":"ElementaryTypeName","src":"34701:4:0"}],"id":1547,"name":"VariableDeclaration","src":"34701:8:0"}],"id":1548,"name":"ParameterList","src":"34700:10:0"}],"id":1549,"name":"FunctionDefinition","src":"34622:89:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Return the status of a dispute.\n @param _disputeID ID of the dispute to rule.\n @return status The status of the dispute.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"disputeStatus","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1556,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1550,"name":"ElementaryTypeName","src":"34896:4:0"}],"id":1551,"name":"VariableDeclaration","src":"34896:15:0"}],"id":1552,"name":"ParameterList","src":"34895:17:0"},{"children":[{"attributes":{"constant":false,"name":"status","scope":1556,"stateVariable":false,"storageLocation":"default","type":"enum Arbitrator.DisputeStatus","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeStatus","referencedDeclaration":1451,"type":"enum Arbitrator.DisputeStatus"},"id":1553,"name":"UserDefinedTypeName","src":"34937:13:0"}],"id":1554,"name":"VariableDeclaration","src":"34937:20:0"}],"id":1555,"name":"ParameterList","src":"34936:22:0"}],"id":1556,"name":"FunctionDefinition","src":"34873:86:0"},{"attributes":{"body":null,"constant":true,"documentation":"@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n @param _disputeID ID of the dispute.\n @return ruling The ruling which has been given or the one which will be given if there is no appeal.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"currentRuling","payable":false,"scope":1564,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":1563,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1557,"name":"ElementaryTypeName","src":"35261:4:0"}],"id":1558,"name":"VariableDeclaration","src":"35261:15:0"}],"id":1559,"name":"ParameterList","src":"35260:17:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":1563,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1560,"name":"ElementaryTypeName","src":"35302:4:0"}],"id":1561,"name":"VariableDeclaration","src":"35302:11:0"}],"id":1562,"name":"ParameterList","src":"35301:13:0"}],"id":1563,"name":"FunctionDefinition","src":"35238:77:0"}],"id":1564,"name":"ContractDefinition","src":"31909:3409:0"},{"attributes":{"contractDependencies":[13,1564],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[4054,13,1564],"name":"Kleros","scope":4055},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Arbitrator","referencedDeclaration":1564,"type":"contract Arbitrator"},"id":1565,"name":"UserDefinedTypeName","src":"35341:10:0"}],"id":1566,"name":"InheritanceSpecifier","src":"35341:10:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ApproveAndCallFallBack","referencedDeclaration":13,"type":"contract ApproveAndCallFallBack"},"id":1567,"name":"UserDefinedTypeName","src":"35353:22:0"}],"id":1568,"name":"InheritanceSpecifier","src":"35353:22:0"},{"attributes":{"constant":false,"name":"pinakion","scope":4054,"stateVariable":true,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":1569,"name":"UserDefinedTypeName","src":"35564:8:0"}],"id":1570,"name":"VariableDeclaration","src":"35564:24:0"},{"attributes":{"constant":true,"name":"NON_PAYABLE_AMOUNT","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1571,"name":"ElementaryTypeName","src":"35594:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"/","type":"int_const 5789...(69 digits omitted)...9967"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"int_const 1157...(70 digits omitted)...9934"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1","typeString":"int_const 1157...(70 digits omitted)...9934"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"-","type":"int_const 1157...(70 digits omitted)...9934"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1157...(70 digits omitted)...9936"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1572,"name":"Literal","src":"35637:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"323536","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 256","value":"256"},"id":1573,"name":"Literal","src":"35640:3:0"}],"id":1574,"name":"BinaryOperation","src":"35637:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1575,"name":"Literal","src":"35646:1:0"}],"id":1576,"name":"BinaryOperation","src":"35637:10:0"}],"id":1577,"name":"TupleExpression","src":"35636:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":1578,"name":"Literal","src":"35651:1:0"}],"id":1579,"name":"BinaryOperation","src":"35636:16:0"}],"id":1580,"name":"VariableDeclaration","src":"35594:58:0"},{"attributes":{"constant":false,"name":"rng","scope":4054,"stateVariable":true,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1171,"type":"contract RNG"},"id":1581,"name":"UserDefinedTypeName","src":"35910:3:0"}],"id":1582,"name":"VariableDeclaration","src":"35910:14:0"},{"attributes":{"constant":false,"name":"arbitrationFeePerJuror","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1583,"name":"ElementaryTypeName","src":"35978:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"302e3035","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":"ether","token":"number","type":"int_const 50000000000000000","value":"0.05"},"id":1584,"name":"Literal","src":"36015:10:0"}],"id":1585,"name":"VariableDeclaration","src":"35978:47:0"},{"attributes":{"constant":false,"name":"defaultNumberJuror","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint16","visibility":"public"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":1586,"name":"ElementaryTypeName","src":"36076:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"33","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 3","value":"3"},"id":1587,"name":"Literal","src":"36111:1:0"}],"id":1588,"name":"VariableDeclaration","src":"36076:36:0"},{"attributes":{"constant":false,"name":"minActivatedToken","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1589,"name":"ElementaryTypeName","src":"36172:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"int_const 100000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"302e31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"rational_const 1 / 10","value":"0.1"},"id":1590,"name":"Literal","src":"36204:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31653138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1000000000000000000","value":"1e18"},"id":1591,"name":"Literal","src":"36210:4:0"}],"id":1592,"name":"BinaryOperation","src":"36204:10:0"}],"id":1593,"name":"VariableDeclaration","src":"36172:42:0"},{"attributes":{"constant":false,"name":"timePerPeriod","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"public"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1594,"name":"ElementaryTypeName","src":"36275:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":1595,"name":"Literal","src":"36280:1:0"}],"id":1596,"name":"ArrayTypeName","src":"36275:7:0"}],"id":1597,"name":"VariableDeclaration","src":"36275:28:0"},{"attributes":{"constant":false,"name":"alpha","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1598,"name":"ElementaryTypeName","src":"36358:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2000","value":"2000"},"id":1599,"name":"Literal","src":"36378:4:0"}],"id":1600,"name":"VariableDeclaration","src":"36358:24:0"},{"attributes":{"constant":true,"name":"ALPHA_DIVISOR","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1601,"name":"ElementaryTypeName","src":"36418:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"316534","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10000","value":"1e4"},"id":1602,"name":"Literal","src":"36448:3:0"}],"id":1603,"name":"VariableDeclaration","src":"36418:33:0"},{"attributes":{"constant":false,"name":"maxAppeals","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1604,"name":"ElementaryTypeName","src":"36532:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":1605,"name":"Literal","src":"36557:1:0"}],"id":1606,"name":"VariableDeclaration","src":"36532:26:0"},{"attributes":{"constant":false,"name":"governor","scope":4054,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":1607,"name":"ElementaryTypeName","src":"36845:7:0"}],"id":1608,"name":"VariableDeclaration","src":"36845:23:0"},{"attributes":{"constant":false,"name":"session","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1609,"name":"ElementaryTypeName","src":"36969:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1610,"name":"Literal","src":"36991:1:0"}],"id":1611,"name":"VariableDeclaration","src":"36969:23:0"},{"attributes":{"constant":false,"name":"lastPeriodChange","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1612,"name":"ElementaryTypeName","src":"37036:4:0"}],"id":1613,"name":"VariableDeclaration","src":"37036:28:0"},{"attributes":{"constant":false,"name":"segmentSize","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1614,"name":"ElementaryTypeName","src":"37119:4:0"}],"id":1615,"name":"VariableDeclaration","src":"37119:23:0"},{"attributes":{"constant":false,"name":"rnBlock","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1616,"name":"ElementaryTypeName","src":"37197:4:0"}],"id":1617,"name":"VariableDeclaration","src":"37197:19:0"},{"attributes":{"constant":false,"name":"randomNumber","scope":4054,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1618,"name":"ElementaryTypeName","src":"37283:4:0"}],"id":1619,"name":"VariableDeclaration","src":"37283:24:0"},{"attributes":{"canonicalName":"Kleros.Period","name":"Period"},"children":[{"attributes":{"name":"Activation"},"id":1620,"name":"EnumValue","src":"37373:10:0"},{"attributes":{"name":"Draw"},"id":1621,"name":"EnumValue","src":"37460:4:0"},{"attributes":{"name":"Vote"},"id":1622,"name":"EnumValue","src":"37547:4:0"},{"attributes":{"name":"Appeal"},"id":1623,"name":"EnumValue","src":"37605:6:0"},{"attributes":{"name":"Execution"},"id":1624,"name":"EnumValue","src":"37665:9:0"}],"id":1625,"name":"EnumDefinition","src":"37351:415:0"},{"attributes":{"constant":false,"name":"period","scope":4054,"stateVariable":true,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":1625,"type":"enum Kleros.Period"},"id":1626,"name":"UserDefinedTypeName","src":"37772:6:0"}],"id":1627,"name":"VariableDeclaration","src":"37772:20:0"},{"attributes":{"canonicalName":"Kleros.Juror","name":"Juror","scope":4054,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"balance","scope":1638,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1628,"name":"ElementaryTypeName","src":"37822:4:0"}],"id":1629,"name":"VariableDeclaration","src":"37822:12:0"},{"attributes":{"constant":false,"name":"atStake","scope":1638,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1630,"name":"ElementaryTypeName","src":"37908:4:0"}],"id":1631,"name":"VariableDeclaration","src":"37908:12:0"},{"attributes":{"constant":false,"name":"lastSession","scope":1638,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1632,"name":"ElementaryTypeName","src":"38144:4:0"}],"id":1633,"name":"VariableDeclaration","src":"38144:16:0"},{"attributes":{"constant":false,"name":"segmentStart","scope":1638,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1634,"name":"ElementaryTypeName","src":"38214:4:0"}],"id":1635,"name":"VariableDeclaration","src":"38214:17:0"},{"attributes":{"constant":false,"name":"segmentEnd","scope":1638,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1636,"name":"ElementaryTypeName","src":"38286:4:0"}],"id":1637,"name":"VariableDeclaration","src":"38286:15:0"}],"id":1638,"name":"StructDefinition","src":"37799:554:0"},{"attributes":{"constant":false,"name":"jurors","scope":4054,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct Kleros.Juror)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => struct Kleros.Juror)"},"children":[{"attributes":{"name":"address","type":"address"},"id":1639,"name":"ElementaryTypeName","src":"38368:7:0"},{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":1640,"name":"UserDefinedTypeName","src":"38379:5:0"}],"id":1641,"name":"Mapping","src":"38359:26:0"}],"id":1642,"name":"VariableDeclaration","src":"38359:40:0"},{"attributes":{"canonicalName":"Kleros.Vote","name":"Vote","scope":4054,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"account","scope":1647,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1643,"name":"ElementaryTypeName","src":"38428:7:0"}],"id":1644,"name":"VariableDeclaration","src":"38428:15:0"},{"attributes":{"constant":false,"name":"ruling","scope":1647,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1645,"name":"ElementaryTypeName","src":"38487:4:0"}],"id":1646,"name":"VariableDeclaration","src":"38487:11:0"}],"id":1647,"name":"StructDefinition","src":"38406:134:0"},{"attributes":{"canonicalName":"Kleros.VoteCounter","name":"VoteCounter","scope":4054,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":1656,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1648,"name":"ElementaryTypeName","src":"38575:4:0"}],"id":1649,"name":"VariableDeclaration","src":"38575:18:0"},{"attributes":{"constant":false,"name":"winningCount","scope":1656,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1650,"name":"ElementaryTypeName","src":"38689:4:0"}],"id":1651,"name":"VariableDeclaration","src":"38689:17:0"},{"attributes":{"constant":false,"name":"voteCount","scope":1656,"stateVariable":false,"storageLocation":"default","type":"mapping(uint256 => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1652,"name":"ElementaryTypeName","src":"38803:4:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1653,"name":"ElementaryTypeName","src":"38811:4:0"}],"id":1654,"name":"Mapping","src":"38794:22:0"}],"id":1655,"name":"VariableDeclaration","src":"38794:32:0"}],"id":1656,"name":"StructDefinition","src":"38546:343:0"},{"attributes":{"canonicalName":"Kleros.DisputeState","name":"DisputeState"},"children":[{"attributes":{"name":"Open"},"id":1657,"name":"EnumValue","src":"38923:4:0"},{"attributes":{"name":"Resolving"},"id":1658,"name":"EnumValue","src":"39068:9:0"},{"attributes":{"name":"Executable"},"id":1659,"name":"EnumValue","src":"39190:10:0"},{"attributes":{"name":"Executed"},"id":1660,"name":"EnumValue","src":"39276:8:0"}],"id":1661,"name":"EnumDefinition","src":"38895:476:0"},{"attributes":{"canonicalName":"Kleros.Dispute","name":"Dispute","scope":4054,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"arbitrated","scope":1692,"stateVariable":false,"storageLocation":"default","type":"contract Arbitrable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Arbitrable","referencedDeclaration":1447,"type":"contract Arbitrable"},"id":1662,"name":"UserDefinedTypeName","src":"39402:10:0"}],"id":1663,"name":"VariableDeclaration","src":"39402:21:0"},{"attributes":{"constant":false,"name":"session","scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1664,"name":"ElementaryTypeName","src":"39469:4:0"}],"id":1665,"name":"VariableDeclaration","src":"39469:12:0"},{"attributes":{"constant":false,"name":"appeals","scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1666,"name":"ElementaryTypeName","src":"39549:4:0"}],"id":1667,"name":"VariableDeclaration","src":"39549:12:0"},{"attributes":{"constant":false,"name":"choices","scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1668,"name":"ElementaryTypeName","src":"39608:4:0"}],"id":1669,"name":"VariableDeclaration","src":"39608:12:0"},{"attributes":{"constant":false,"name":"initialNumberJurors","scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":1670,"name":"ElementaryTypeName","src":"39695:6:0"}],"id":1671,"name":"VariableDeclaration","src":"39695:26:0"},{"attributes":{"constant":false,"name":"arbitrationFeePerJuror","scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1672,"name":"ElementaryTypeName","src":"39765:4:0"}],"id":1673,"name":"VariableDeclaration","src":"39765:27:0"},{"attributes":{"constant":false,"name":"state","scope":1692,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.DisputeState","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeState","referencedDeclaration":1661,"type":"enum Kleros.DisputeState"},"id":1674,"name":"UserDefinedTypeName","src":"39847:12:0"}],"id":1675,"name":"VariableDeclaration","src":"39847:18:0"},{"attributes":{"constant":false,"name":"votes","scope":1692,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.Vote[][]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Vote[][]"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Vote[]"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":1647,"type":"struct Kleros.Vote"},"id":1676,"name":"UserDefinedTypeName","src":"39913:4:0"}],"id":1677,"name":"ArrayTypeName","src":"39913:6:0"}],"id":1678,"name":"ArrayTypeName","src":"39913:8:0"}],"id":1679,"name":"VariableDeclaration","src":"39913:14:0"},{"attributes":{"constant":false,"name":"voteCounter","scope":1692,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.VoteCounter[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.VoteCounter[]"},"children":[{"attributes":{"contractScope":null,"name":"VoteCounter","referencedDeclaration":1656,"type":"struct Kleros.VoteCounter"},"id":1680,"name":"UserDefinedTypeName","src":"39998:11:0"}],"id":1681,"name":"ArrayTypeName","src":"39998:13:0"}],"id":1682,"name":"VariableDeclaration","src":"39998:25:0"},{"attributes":{"constant":false,"name":"lastSessionVote","scope":1692,"stateVariable":false,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":1683,"name":"ElementaryTypeName","src":"40099:7:0"},{"attributes":{"name":"uint","type":"uint256"},"id":1684,"name":"ElementaryTypeName","src":"40110:4:0"}],"id":1685,"name":"Mapping","src":"40090:25:0"}],"id":1686,"name":"VariableDeclaration","src":"40090:41:0"},{"attributes":{"constant":false,"name":"currentAppealToRepartition","scope":1692,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1687,"name":"ElementaryTypeName","src":"40214:4:0"}],"id":1688,"name":"VariableDeclaration","src":"40214:31:0"},{"attributes":{"constant":false,"name":"appealsRepartitioned","scope":1692,"stateVariable":false,"storageLocation":"default","type":"struct Kleros.AppealsRepartitioned[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"struct Kleros.AppealsRepartitioned[]"},"children":[{"attributes":{"contractScope":null,"name":"AppealsRepartitioned","referencedDeclaration":1710,"type":"struct Kleros.AppealsRepartitioned"},"id":1689,"name":"UserDefinedTypeName","src":"40300:20:0"}],"id":1690,"name":"ArrayTypeName","src":"40300:22:0"}],"id":1691,"name":"VariableDeclaration","src":"40300:43:0"}],"id":1692,"name":"StructDefinition","src":"39377:1057:0"},{"attributes":{"canonicalName":"Kleros.RepartitionStage","name":"RepartitionStage"},"children":[{"attributes":{"name":"Incoherent"},"id":1693,"name":"EnumValue","src":"40579:10:0"},{"attributes":{"name":"Coherent"},"id":1694,"name":"EnumValue","src":"40599:8:0"},{"attributes":{"name":"AtStake"},"id":1695,"name":"EnumValue","src":"40617:7:0"},{"attributes":{"name":"Complete"},"id":1696,"name":"EnumValue","src":"40634:8:0"}],"id":1697,"name":"EnumDefinition","src":"40440:208:0"},{"attributes":{"canonicalName":"Kleros.AppealsRepartitioned","name":"AppealsRepartitioned","scope":4054,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":1710,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1698,"name":"ElementaryTypeName","src":"40692:4:0"}],"id":1699,"name":"VariableDeclaration","src":"40692:24:0"},{"attributes":{"constant":false,"name":"nbCoherent","scope":1710,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1700,"name":"ElementaryTypeName","src":"40779:4:0"}],"id":1701,"name":"VariableDeclaration","src":"40779:15:0"},{"attributes":{"constant":false,"name":"currentIncoherentVote","scope":1710,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1702,"name":"ElementaryTypeName","src":"40857:4:0"}],"id":1703,"name":"VariableDeclaration","src":"40857:26:0"},{"attributes":{"constant":false,"name":"currentCoherentVote","scope":1710,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1704,"name":"ElementaryTypeName","src":"40934:4:0"}],"id":1705,"name":"VariableDeclaration","src":"40934:24:0"},{"attributes":{"constant":false,"name":"currentAtStakeVote","scope":1710,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1706,"name":"ElementaryTypeName","src":"41004:4:0"}],"id":1707,"name":"VariableDeclaration","src":"41004:23:0"},{"attributes":{"constant":false,"name":"stage","scope":1710,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.RepartitionStage","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepartitionStage","referencedDeclaration":1697,"type":"enum Kleros.RepartitionStage"},"id":1708,"name":"UserDefinedTypeName","src":"41074:16:0"}],"id":1709,"name":"VariableDeclaration","src":"41074:22:0"}],"id":1710,"name":"StructDefinition","src":"40654:534:0"},{"attributes":{"constant":false,"name":"disputes","scope":4054,"stateVariable":true,"storageLocation":"default","type":"struct Kleros.Dispute[]","value":null,"visibility":"public"},"children":[{"attributes":{"length":null,"type":"struct Kleros.Dispute[]"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":1711,"name":"UserDefinedTypeName","src":"41194:7:0"}],"id":1712,"name":"ArrayTypeName","src":"41194:9:0"}],"id":1713,"name":"VariableDeclaration","src":"41194:25:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when we pass to a new period.\n @param _period The new period.\n @param _session The current session.","name":"NewPeriod"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_period","scope":1719,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":1625,"type":"enum Kleros.Period"},"id":1714,"name":"UserDefinedTypeName","src":"41503:6:0"}],"id":1715,"name":"VariableDeclaration","src":"41503:14:0"},{"attributes":{"constant":false,"indexed":true,"name":"_session","scope":1719,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1716,"name":"ElementaryTypeName","src":"41519:4:0"}],"id":1717,"name":"VariableDeclaration","src":"41519:21:0"}],"id":1718,"name":"ParameterList","src":"41502:39:0"}],"id":1719,"name":"EventDefinition","src":"41487:55:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when a juror wins or loses tokens.\n@param _account The juror affected.\n@param _disputeID The ID of the dispute.\n@param _amount The amount of parts of token which was won. Can be negative for lost amounts.","name":"TokenShift"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_account","scope":1727,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1720,"name":"ElementaryTypeName","src":"41824:7:0"}],"id":1721,"name":"VariableDeclaration","src":"41824:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":1727,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1722,"name":"ElementaryTypeName","src":"41850:4:0"}],"id":1723,"name":"VariableDeclaration","src":"41850:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1727,"stateVariable":false,"storageLocation":"default","type":"int256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"int","type":"int256"},"id":1724,"name":"ElementaryTypeName","src":"41867:3:0"}],"id":1725,"name":"VariableDeclaration","src":"41867:11:0"}],"id":1726,"name":"ParameterList","src":"41823:56:0"}],"id":1727,"name":"EventDefinition","src":"41807:73:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emited when a juror wins arbitration fees.\n@param _account The account affected.\n@param _disputeID The ID of the dispute.\n@param _amount The amount of weis which was won.","name":"ArbitrationReward"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"_account","scope":1735,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1728,"name":"ElementaryTypeName","src":"42127:7:0"}],"id":1729,"name":"VariableDeclaration","src":"42127:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"_disputeID","scope":1735,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1730,"name":"ElementaryTypeName","src":"42153:4:0"}],"id":1731,"name":"VariableDeclaration","src":"42153:15:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1735,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1732,"name":"ElementaryTypeName","src":"42170:4:0"}],"id":1733,"name":"VariableDeclaration","src":"42170:12:0"}],"id":1734,"name":"ParameterList","src":"42126:57:0"}],"id":1735,"name":"EventDefinition","src":"42103:81:0"},{"attributes":{"documentation":null,"name":"onlyBy","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_account","scope":1748,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1736,"name":"ElementaryTypeName","src":"42323:7:0"}],"id":1737,"name":"VariableDeclaration","src":"42323:16:0"}],"id":1738,"name":"ParameterList","src":"42322:18:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1739,"name":"Identifier","src":"42342:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1740,"name":"Identifier","src":"42350:3:0"}],"id":1741,"name":"MemberAccess","src":"42350:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1737,"type":"address","value":"_account"},"id":1742,"name":"Identifier","src":"42364:8:0"}],"id":1743,"name":"BinaryOperation","src":"42350:22:0"}],"id":1744,"name":"FunctionCall","src":"42342:31:0"}],"id":1745,"name":"ExpressionStatement","src":"42342:31:0"},{"id":1746,"name":"PlaceholderStatement","src":"42375:1:0"}],"id":1747,"name":"Block","src":"42341:37:0"}],"id":1748,"name":"ModifierDefinition","src":"42307:71:0"},{"attributes":{"documentation":null,"name":"onlyDuring","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_period","scope":1760,"stateVariable":false,"storageLocation":"default","type":"enum Kleros.Period","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Period","referencedDeclaration":1625,"type":"enum Kleros.Period"},"id":1749,"name":"UserDefinedTypeName","src":"42403:6:0"}],"id":1750,"name":"VariableDeclaration","src":"42403:14:0"}],"id":1751,"name":"ParameterList","src":"42402:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1752,"name":"Identifier","src":"42420:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1753,"name":"Identifier","src":"42428:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1750,"type":"enum Kleros.Period","value":"_period"},"id":1754,"name":"Identifier","src":"42438:7:0"}],"id":1755,"name":"BinaryOperation","src":"42428:17:0"}],"id":1756,"name":"FunctionCall","src":"42420:26:0"}],"id":1757,"name":"ExpressionStatement","src":"42420:26:0"},{"id":1758,"name":"PlaceholderStatement","src":"42448:1:0"}],"id":1759,"name":"Block","src":"42419:32:0"}],"id":1760,"name":"ModifierDefinition","src":"42383:68:0"},{"attributes":{"documentation":null,"name":"onlyGovernor","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1761,"name":"ParameterList","src":"42477:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1762,"name":"Identifier","src":"42481:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1763,"name":"Identifier","src":"42489:3:0"}],"id":1764,"name":"MemberAccess","src":"42489:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":1765,"name":"Identifier","src":"42503:8:0"}],"id":1766,"name":"BinaryOperation","src":"42489:22:0"}],"id":1767,"name":"FunctionCall","src":"42481:31:0"}],"id":1768,"name":"ExpressionStatement","src":"42481:31:0"},{"id":1769,"name":"PlaceholderStatement","src":"42514:1:0"}],"id":1770,"name":"Block","src":"42480:37:0"}],"id":1771,"name":"ModifierDefinition","src":"42456:61:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor.\n @param _pinakion The address of the pinakion contract.\n @param _rng The random number generator which will be used.\n @param _timePerPeriod The minimal time for each period (seconds).\n @param _governor Address of the governor contract.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_pinakion","scope":1805,"stateVariable":false,"storageLocation":"default","type":"contract Pinakion","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Pinakion","referencedDeclaration":1079,"type":"contract Pinakion"},"id":1772,"name":"UserDefinedTypeName","src":"42834:8:0"}],"id":1773,"name":"VariableDeclaration","src":"42834:18:0"},{"attributes":{"constant":false,"name":"_rng","scope":1805,"stateVariable":false,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1171,"type":"contract RNG"},"id":1774,"name":"UserDefinedTypeName","src":"42854:3:0"}],"id":1775,"name":"VariableDeclaration","src":"42854:8:0"},{"attributes":{"constant":false,"name":"_timePerPeriod","scope":1805,"stateVariable":false,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1776,"name":"ElementaryTypeName","src":"42864:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":1777,"name":"Literal","src":"42869:1:0"}],"id":1778,"name":"ArrayTypeName","src":"42864:7:0"}],"id":1779,"name":"VariableDeclaration","src":"42864:22:0"},{"attributes":{"constant":false,"name":"_governor","scope":1805,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1780,"name":"ElementaryTypeName","src":"42888:7:0"}],"id":1781,"name":"VariableDeclaration","src":"42888:17:0"}],"id":1782,"name":"ParameterList","src":"42833:73:0"},{"attributes":{"parameters":[null]},"children":[],"id":1783,"name":"ParameterList","src":"42914:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Pinakion"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1570,"type":"contract Pinakion","value":"pinakion"},"id":1784,"name":"Identifier","src":"42924:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1773,"type":"contract Pinakion","value":"_pinakion"},"id":1785,"name":"Identifier","src":"42935:9:0"}],"id":1786,"name":"Assignment","src":"42924:20:0"}],"id":1787,"name":"ExpressionStatement","src":"42924:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RNG"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1582,"type":"contract RNG","value":"rng"},"id":1788,"name":"Identifier","src":"42954:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1775,"type":"contract RNG","value":"_rng"},"id":1789,"name":"Identifier","src":"42960:4:0"}],"id":1790,"name":"Assignment","src":"42954:10:0"}],"id":1791,"name":"ExpressionStatement","src":"42954:10:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"lastPeriodChange"},"id":1792,"name":"Identifier","src":"42974:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4071,"type":"uint256","value":"now"},"id":1793,"name":"Identifier","src":"42993:3:0"}],"id":1794,"name":"Assignment","src":"42974:22:0"}],"id":1795,"name":"ExpressionStatement","src":"42974:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[5] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1597,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":1796,"name":"Identifier","src":"43006:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1779,"type":"uint256[5] memory","value":"_timePerPeriod"},"id":1797,"name":"Identifier","src":"43022:14:0"}],"id":1798,"name":"Assignment","src":"43006:30:0"}],"id":1799,"name":"ExpressionStatement","src":"43006:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":1800,"name":"Identifier","src":"43046:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1781,"type":"address","value":"_governor"},"id":1801,"name":"Identifier","src":"43057:9:0"}],"id":1802,"name":"Assignment","src":"43046:20:0"}],"id":1803,"name":"ExpressionStatement","src":"43046:20:0"}],"id":1804,"name":"Block","src":"42914:159:0"}],"id":1805,"name":"FunctionDefinition","src":"42822:251:0"},{"attributes":{"constant":false,"documentation":"@dev Callback of approveAndCall - transfer pinakions of a juror in the contract. Should be called by the pinakion contract. TRUSTED.\n @param _from The address making the transfer.\n @param _amount Amount of tokens to transfer to Kleros (in basic units).","implemented":true,"isConstructor":false,"name":"receiveApproval","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":12,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":1836,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1806,"name":"ElementaryTypeName","src":"43544:7:0"}],"id":1807,"name":"VariableDeclaration","src":"43544:13:0"},{"attributes":{"constant":false,"name":"_amount","scope":1836,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1808,"name":"ElementaryTypeName","src":"43559:4:0"}],"id":1809,"name":"VariableDeclaration","src":"43559:12:0"},{"attributes":{"constant":false,"name":"","scope":1836,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1810,"name":"ElementaryTypeName","src":"43573:7:0"}],"id":1811,"name":"VariableDeclaration","src":"43573:7:0"},{"attributes":{"constant":false,"name":"","scope":1836,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1812,"name":"ElementaryTypeName","src":"43582:5:0"}],"id":1813,"name":"VariableDeclaration","src":"43582:5:0"}],"id":1814,"name":"ParameterList","src":"43543:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":1818,"name":"ParameterList","src":"43613:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1748,"type":"modifier (address)","value":"onlyBy"},"id":1815,"name":"Identifier","src":"43596:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1570,"type":"contract Pinakion","value":"pinakion"},"id":1816,"name":"Identifier","src":"43603:8:0"}],"id":1817,"name":"ModifierInvocation","src":"43596:16:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1819,"name":"Identifier","src":"43623:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_Kleros_$4054","typeString":"contract Kleros"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":246,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1570,"type":"contract Pinakion","value":"pinakion"},"id":1820,"name":"Identifier","src":"43631:8:0"}],"id":1821,"name":"MemberAccess","src":"43631:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"address","value":"_from"},"id":1822,"name":"Identifier","src":"43653:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4102,"type":"contract Kleros","value":"this"},"id":1823,"name":"Identifier","src":"43660:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1809,"type":"uint256","value":"_amount"},"id":1824,"name":"Identifier","src":"43666:7:0"}],"id":1825,"name":"FunctionCall","src":"43631:43:0"}],"id":1826,"name":"FunctionCall","src":"43623:52:0"}],"id":1827,"name":"ExpressionStatement","src":"43623:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":1828,"name":"Identifier","src":"43686:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1807,"type":"address","value":"_from"},"id":1829,"name":"Identifier","src":"43693:5:0"}],"id":1830,"name":"IndexAccess","src":"43686:13:0"}],"id":1831,"name":"MemberAccess","src":"43686:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1809,"type":"uint256","value":"_amount"},"id":1832,"name":"Identifier","src":"43711:7:0"}],"id":1833,"name":"Assignment","src":"43686:32:0"}],"id":1834,"name":"ExpressionStatement","src":"43686:32:0"}],"id":1835,"name":"Block","src":"43613:112:0"}],"id":1836,"name":"FunctionDefinition","src":"43519:206:0"},{"attributes":{"constant":false,"documentation":"@dev Withdraw tokens. Note that we can't withdraw the tokens which are still atStake. \n Jurors can't withdraw their tokens if they have deposited some during this session.\n This is to prevent jurors from withdrawing tokens they could loose.\n @param _value The amount to withdraw.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdraw","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":1889,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1837,"name":"ElementaryTypeName","src":"44066:4:0"}],"id":1838,"name":"VariableDeclaration","src":"44066:11:0"}],"id":1839,"name":"ParameterList","src":"44065:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":1840,"name":"ParameterList","src":"44086:0:0"},{"children":[{"attributes":{"assignments":[1842]},"children":[{"attributes":{"constant":false,"name":"juror","scope":1889,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":1841,"name":"UserDefinedTypeName","src":"44096:5:0"}],"id":1842,"name":"VariableDeclaration","src":"44096:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":1843,"name":"Identifier","src":"44118:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1844,"name":"Identifier","src":"44125:3:0"}],"id":1845,"name":"MemberAccess","src":"44125:10:0"}],"id":1846,"name":"IndexAccess","src":"44118:18:0"}],"id":1847,"name":"VariableDeclarationStatement","src":"44096:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1848,"name":"Identifier","src":"44146:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"atStake","referencedDeclaration":1631,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1842,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":1849,"name":"Identifier","src":"44154:5:0"}],"id":1850,"name":"MemberAccess","src":"44154:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1842,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":1851,"name":"Identifier","src":"44171:5:0"}],"id":1852,"name":"MemberAccess","src":"44171:13:0"}],"id":1853,"name":"BinaryOperation","src":"44154:30:0"}],"id":1854,"name":"FunctionCall","src":"44146:39:0"}],"id":1855,"name":"ExpressionStatement","src":"44146:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1856,"name":"Identifier","src":"44269:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1838,"type":"uint256","value":"_value"},"id":1857,"name":"Identifier","src":"44277:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1842,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":1858,"name":"Identifier","src":"44287:5:0"}],"id":1859,"name":"MemberAccess","src":"44287:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"atStake","referencedDeclaration":1631,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1842,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":1860,"name":"Identifier","src":"44301:5:0"}],"id":1861,"name":"MemberAccess","src":"44301:13:0"}],"id":1862,"name":"BinaryOperation","src":"44287:27:0"}],"id":1863,"name":"BinaryOperation","src":"44277:37:0"}],"id":1864,"name":"FunctionCall","src":"44269:46:0"}],"id":1865,"name":"ExpressionStatement","src":"44269:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1866,"name":"Identifier","src":"44325:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":1633,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1842,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":1867,"name":"Identifier","src":"44333:5:0"}],"id":1868,"name":"MemberAccess","src":"44333:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":1869,"name":"Identifier","src":"44354:7:0"}],"id":1870,"name":"BinaryOperation","src":"44333:28:0"}],"id":1871,"name":"FunctionCall","src":"44325:37:0"}],"id":1872,"name":"ExpressionStatement","src":"44325:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1842,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":1873,"name":"Identifier","src":"44373:5:0"}],"id":1875,"name":"MemberAccess","src":"44373:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1838,"type":"uint256","value":"_value"},"id":1876,"name":"Identifier","src":"44390:6:0"}],"id":1877,"name":"Assignment","src":"44373:23:0"}],"id":1878,"name":"ExpressionStatement","src":"44373:23:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1879,"name":"Identifier","src":"44406:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":196,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1570,"type":"contract Pinakion","value":"pinakion"},"id":1880,"name":"Identifier","src":"44414:8:0"}],"id":1881,"name":"MemberAccess","src":"44414:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":1882,"name":"Identifier","src":"44432:3:0"}],"id":1883,"name":"MemberAccess","src":"44432:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1838,"type":"uint256","value":"_value"},"id":1884,"name":"Identifier","src":"44443:6:0"}],"id":1885,"name":"FunctionCall","src":"44414:36:0"}],"id":1886,"name":"FunctionCall","src":"44406:45:0"}],"id":1887,"name":"ExpressionStatement","src":"44406:45:0"}],"id":1888,"name":"Block","src":"44086:372:0"}],"id":1889,"name":"FunctionDefinition","src":"44048:410:0"},{"attributes":{"constant":false,"documentation":"@dev To call to go to a new period. TRUSTED.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"passPeriod","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1890,"name":"ParameterList","src":"44701:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":1891,"name":"ParameterList","src":"44711:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1892,"name":"Identifier","src":"44721:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4071,"type":"uint256","value":"now"},"id":1893,"name":"Identifier","src":"44729:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"lastPeriodChange"},"id":1894,"name":"Identifier","src":"44733:16:0"}],"id":1895,"name":"BinaryOperation","src":"44729:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1597,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":1896,"name":"Identifier","src":"44753:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":1897,"name":"ElementaryTypeNameExpression","src":"44767:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1898,"name":"Identifier","src":"44773:6:0"}],"id":1899,"name":"FunctionCall","src":"44767:13:0"}],"id":1900,"name":"IndexAccess","src":"44753:28:0"}],"id":1901,"name":"BinaryOperation","src":"44729:52:0"}],"id":1902,"name":"FunctionCall","src":"44721:61:0"}],"id":1903,"name":"ExpressionStatement","src":"44721:61:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1904,"name":"Identifier","src":"44797:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1905,"name":"Identifier","src":"44807:6:0"}],"id":1906,"name":"MemberAccess","src":"44807:17:0"}],"id":1907,"name":"BinaryOperation","src":"44797:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"rnBlock"},"id":1908,"name":"Identifier","src":"44840:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4059,"type":"block","value":"block"},"id":1909,"name":"Identifier","src":"44850:5:0"}],"id":1910,"name":"MemberAccess","src":"44850:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1911,"name":"Literal","src":"44865:1:0"}],"id":1912,"name":"BinaryOperation","src":"44850:16:0"}],"id":1913,"name":"Assignment","src":"44840:26:0"}],"id":1914,"name":"ExpressionStatement","src":"44840:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"requestRN","referencedDeclaration":1135,"type":"function (uint256) payable external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1582,"type":"contract RNG","value":"rng"},"id":1915,"name":"Identifier","src":"44880:3:0"}],"id":1917,"name":"MemberAccess","src":"44880:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"rnBlock"},"id":1918,"name":"Identifier","src":"44894:7:0"}],"id":1919,"name":"FunctionCall","src":"44880:22:0"}],"id":1920,"name":"ExpressionStatement","src":"44880:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1921,"name":"Identifier","src":"44916:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1922,"name":"Identifier","src":"44925:6:0"}],"id":1923,"name":"MemberAccess","src":"44925:11:0"}],"id":1924,"name":"Assignment","src":"44916:20:0"}],"id":1925,"name":"ExpressionStatement","src":"44916:20:0"}],"id":1926,"name":"Block","src":"44826:121:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1927,"name":"Identifier","src":"44957:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1928,"name":"Identifier","src":"44967:6:0"}],"id":1929,"name":"MemberAccess","src":"44967:11:0"}],"id":1930,"name":"BinaryOperation","src":"44957:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"uint256","value":"randomNumber"},"id":1931,"name":"Identifier","src":"44994:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getUncorrelatedRN","referencedDeclaration":1170,"type":"function (uint256) external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1582,"type":"contract RNG","value":"rng"},"id":1932,"name":"Identifier","src":"45009:3:0"}],"id":1933,"name":"MemberAccess","src":"45009:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"rnBlock"},"id":1934,"name":"Identifier","src":"45031:7:0"}],"id":1935,"name":"FunctionCall","src":"45009:30:0"}],"id":1936,"name":"Assignment","src":"44994:45:0"}],"id":1937,"name":"ExpressionStatement","src":"44994:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":1938,"name":"Identifier","src":"45053:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"uint256","value":"randomNumber"},"id":1939,"name":"Identifier","src":"45061:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1940,"name":"Literal","src":"45077:1:0"}],"id":1941,"name":"BinaryOperation","src":"45061:17:0"}],"id":1942,"name":"FunctionCall","src":"45053:26:0"}],"id":1943,"name":"ExpressionStatement","src":"45053:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1944,"name":"Identifier","src":"45093:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1945,"name":"Identifier","src":"45102:6:0"}],"id":1946,"name":"MemberAccess","src":"45102:11:0"}],"id":1947,"name":"Assignment","src":"45093:20:0"}],"id":1948,"name":"ExpressionStatement","src":"45093:20:0"}],"id":1949,"name":"Block","src":"44980:144:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1950,"name":"Identifier","src":"45134:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1951,"name":"Identifier","src":"45144:6:0"}],"id":1952,"name":"MemberAccess","src":"45144:11:0"}],"id":1953,"name":"BinaryOperation","src":"45134:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1954,"name":"Identifier","src":"45171:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1955,"name":"Identifier","src":"45180:6:0"}],"id":1956,"name":"MemberAccess","src":"45180:13:0"}],"id":1957,"name":"Assignment","src":"45171:22:0"}],"id":1958,"name":"ExpressionStatement","src":"45171:22:0"}],"id":1959,"name":"Block","src":"45157:47:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1960,"name":"Identifier","src":"45214:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1961,"name":"Identifier","src":"45224:6:0"}],"id":1962,"name":"MemberAccess","src":"45224:13:0"}],"id":1963,"name":"BinaryOperation","src":"45214:23:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1964,"name":"Identifier","src":"45253:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1965,"name":"Identifier","src":"45262:6:0"}],"id":1966,"name":"MemberAccess","src":"45262:16:0"}],"id":1967,"name":"Assignment","src":"45253:25:0"}],"id":1968,"name":"ExpressionStatement","src":"45253:25:0"}],"id":1969,"name":"Block","src":"45239:50:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1970,"name":"Identifier","src":"45299:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1971,"name":"Identifier","src":"45309:6:0"}],"id":1972,"name":"MemberAccess","src":"45309:16:0"}],"id":1973,"name":"BinaryOperation","src":"45299:26:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":1974,"name":"Identifier","src":"45341:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":1975,"name":"Identifier","src":"45350:6:0"}],"id":1976,"name":"MemberAccess","src":"45350:17:0"}],"id":1977,"name":"Assignment","src":"45341:26:0"}],"id":1978,"name":"ExpressionStatement","src":"45341:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":1979,"name":"Identifier","src":"45383:7:0"}],"id":1980,"name":"UnaryOperation","src":"45381:9:0"}],"id":1981,"name":"ExpressionStatement","src":"45381:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"segmentSize"},"id":1982,"name":"Identifier","src":"45404:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1983,"name":"Literal","src":"45418:1:0"}],"id":1984,"name":"Assignment","src":"45404:15:0"}],"id":1985,"name":"ExpressionStatement","src":"45404:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"rnBlock"},"id":1986,"name":"Identifier","src":"45433:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1987,"name":"Literal","src":"45443:1:0"}],"id":1988,"name":"Assignment","src":"45433:11:0"}],"id":1989,"name":"ExpressionStatement","src":"45433:11:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"uint256","value":"randomNumber"},"id":1990,"name":"Identifier","src":"45458:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1991,"name":"Literal","src":"45473:1:0"}],"id":1992,"name":"Assignment","src":"45458:16:0"}],"id":1993,"name":"ExpressionStatement","src":"45458:16:0"}],"id":1994,"name":"Block","src":"45327:158:0"}],"id":1995,"name":"IfStatement","src":"45295:190:0"}],"id":1996,"name":"IfStatement","src":"45210:275:0"}],"id":1997,"name":"IfStatement","src":"45130:355:0"}],"id":1998,"name":"IfStatement","src":"44953:532:0"}],"id":1999,"name":"IfStatement","src":"44793:692:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"lastPeriodChange"},"id":2000,"name":"Identifier","src":"45496:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4071,"type":"uint256","value":"now"},"id":2001,"name":"Identifier","src":"45515:3:0"}],"id":2002,"name":"Assignment","src":"45496:22:0"}],"id":2003,"name":"ExpressionStatement","src":"45496:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1719,"type":"function (enum Kleros.Period,uint256)","value":"NewPeriod"},"id":2004,"name":"Identifier","src":"45528:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":2005,"name":"Identifier","src":"45538:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2006,"name":"Identifier","src":"45546:7:0"}],"id":2007,"name":"FunctionCall","src":"45528:26:0"}],"id":2008,"name":"ExpressionStatement","src":"45528:26:0"}],"id":2009,"name":"Block","src":"44711:850:0"}],"id":2010,"name":"FunctionDefinition","src":"44682:879:0"},{"attributes":{"constant":false,"documentation":"@dev Deposit tokens in order to have chances of being drawn. Note that once tokens are deposited, \n there is no possibility of depositing more.\n @param _value Amount of tokens (in basic units) to deposit.","implemented":true,"isConstructor":false,"name":"activateTokens","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":2069,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2011,"name":"ElementaryTypeName","src":"45827:4:0"}],"id":2012,"name":"VariableDeclaration","src":"45827:11:0"}],"id":2013,"name":"ParameterList","src":"45826:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":2018,"name":"ParameterList","src":"45877:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1760,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2014,"name":"Identifier","src":"45847:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Activation","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":2015,"name":"Identifier","src":"45858:6:0"}],"id":2016,"name":"MemberAccess","src":"45858:17:0"}],"id":2017,"name":"ModifierInvocation","src":"45847:29:0"},{"children":[{"attributes":{"assignments":[2020]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2069,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":2019,"name":"UserDefinedTypeName","src":"45887:5:0"}],"id":2020,"name":"VariableDeclaration","src":"45887:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2021,"name":"Identifier","src":"45909:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2022,"name":"Identifier","src":"45916:3:0"}],"id":2023,"name":"MemberAccess","src":"45916:10:0"}],"id":2024,"name":"IndexAccess","src":"45909:18:0"}],"id":2025,"name":"VariableDeclarationStatement","src":"45887:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2026,"name":"Identifier","src":"45937:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2012,"type":"uint256","value":"_value"},"id":2027,"name":"Identifier","src":"45945:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2020,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2028,"name":"Identifier","src":"45955:5:0"}],"id":2029,"name":"MemberAccess","src":"45955:13:0"}],"id":2030,"name":"BinaryOperation","src":"45945:23:0"}],"id":2031,"name":"FunctionCall","src":"45937:32:0"}],"id":2032,"name":"ExpressionStatement","src":"45937:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2033,"name":"Identifier","src":"45979:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2012,"type":"uint256","value":"_value"},"id":2034,"name":"Identifier","src":"45987:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1593,"type":"uint256","value":"minActivatedToken"},"id":2035,"name":"Identifier","src":"45997:17:0"}],"id":2036,"name":"BinaryOperation","src":"45987:27:0"}],"id":2037,"name":"FunctionCall","src":"45979:36:0"}],"id":2038,"name":"ExpressionStatement","src":"45979:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2039,"name":"Identifier","src":"46025:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":1633,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2020,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2040,"name":"Identifier","src":"46033:5:0"}],"id":2041,"name":"MemberAccess","src":"46033:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2042,"name":"Identifier","src":"46054:7:0"}],"id":2043,"name":"BinaryOperation","src":"46033:28:0"}],"id":2044,"name":"FunctionCall","src":"46025:37:0"}],"id":2045,"name":"ExpressionStatement","src":"46025:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"lastSession","referencedDeclaration":1633,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2020,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2046,"name":"Identifier","src":"46140:5:0"}],"id":2048,"name":"MemberAccess","src":"46140:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2049,"name":"Identifier","src":"46160:7:0"}],"id":2050,"name":"Assignment","src":"46140:27:0"}],"id":2051,"name":"ExpressionStatement","src":"46140:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"segmentStart","referencedDeclaration":1635,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2020,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2052,"name":"Identifier","src":"46177:5:0"}],"id":2054,"name":"MemberAccess","src":"46177:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"segmentSize"},"id":2055,"name":"Identifier","src":"46198:11:0"}],"id":2056,"name":"Assignment","src":"46177:32:0"}],"id":2057,"name":"ExpressionStatement","src":"46177:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"segmentSize"},"id":2058,"name":"Identifier","src":"46219:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2012,"type":"uint256","value":"_value"},"id":2059,"name":"Identifier","src":"46234:6:0"}],"id":2060,"name":"Assignment","src":"46219:21:0"}],"id":2061,"name":"ExpressionStatement","src":"46219:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"segmentEnd","referencedDeclaration":1637,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2020,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2062,"name":"Identifier","src":"46250:5:0"}],"id":2064,"name":"MemberAccess","src":"46250:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"segmentSize"},"id":2065,"name":"Identifier","src":"46269:11:0"}],"id":2066,"name":"Assignment","src":"46250:30:0"}],"id":2067,"name":"ExpressionStatement","src":"46250:30:0"}],"id":2068,"name":"Block","src":"45877:411:0"}],"id":2069,"name":"FunctionDefinition","src":"45803:485:0"},{"attributes":{"constant":false,"documentation":"@dev Vote a ruling. Juror must input the draw ID he was drawn.\n Note that the complexity is O(d), where d is amount of times the juror was drawn.\n Since being drawn multiple time is a rare occurrence and that a juror can always vote with less weight than it has, it is not a problem.\n But note that it can lead to arbitration fees being kept by the contract and never distributed.\n @param _disputeID The ID of the dispute the juror was drawn.\n @param _ruling The ruling given.\n @param _draws The list of draws the juror was drawn. Draw numbering starts at 1 and the numbers should be increasing.","implemented":true,"isConstructor":false,"name":"voteRuling","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2253,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2070,"name":"ElementaryTypeName","src":"46968:4:0"}],"id":2071,"name":"VariableDeclaration","src":"46968:15:0"},{"attributes":{"constant":false,"name":"_ruling","scope":2253,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2072,"name":"ElementaryTypeName","src":"46985:4:0"}],"id":2073,"name":"VariableDeclaration","src":"46985:12:0"},{"attributes":{"constant":false,"name":"_draws","scope":2253,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2074,"name":"ElementaryTypeName","src":"46999:4:0"}],"id":2075,"name":"ArrayTypeName","src":"46999:6:0"}],"id":2076,"name":"VariableDeclaration","src":"46999:13:0"}],"id":2077,"name":"ParameterList","src":"46967:46:0"},{"attributes":{"parameters":[null]},"children":[],"id":2082,"name":"ParameterList","src":"47045:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1760,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2078,"name":"Identifier","src":"47021:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":2079,"name":"Identifier","src":"47032:6:0"}],"id":2080,"name":"MemberAccess","src":"47032:11:0"}],"id":2081,"name":"ModifierInvocation","src":"47021:23:0"},{"children":[{"attributes":{"assignments":[2084]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":2253,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":2083,"name":"UserDefinedTypeName","src":"47055:7:0"}],"id":2084,"name":"VariableDeclaration","src":"47055:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2085,"name":"Identifier","src":"47081:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"_disputeID"},"id":2086,"name":"Identifier","src":"47090:10:0"}],"id":2087,"name":"IndexAccess","src":"47081:20:0"}],"id":2088,"name":"VariableDeclarationStatement","src":"47055:46:0"},{"attributes":{"assignments":[2090]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2253,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":2089,"name":"UserDefinedTypeName","src":"47111:5:0"}],"id":2090,"name":"VariableDeclaration","src":"47111:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2091,"name":"Identifier","src":"47133:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2092,"name":"Identifier","src":"47140:3:0"}],"id":2093,"name":"MemberAccess","src":"47140:10:0"}],"id":2094,"name":"IndexAccess","src":"47133:18:0"}],"id":2095,"name":"VariableDeclarationStatement","src":"47111:40:0"},{"attributes":{"assignments":[2097]},"children":[{"attributes":{"constant":false,"name":"voteCounter","scope":2253,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.VoteCounter","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"VoteCounter","referencedDeclaration":1656,"type":"struct Kleros.VoteCounter"},"id":2096,"name":"UserDefinedTypeName","src":"47161:11:0"}],"id":2097,"name":"VariableDeclaration","src":"47161:31:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2098,"name":"Identifier","src":"47195:7:0"}],"id":2099,"name":"MemberAccess","src":"47195:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2100,"name":"Identifier","src":"47215:7:0"}],"id":2101,"name":"MemberAccess","src":"47215:15:0"}],"id":2102,"name":"IndexAccess","src":"47195:36:0"}],"id":2103,"name":"VariableDeclarationStatement","src":"47161:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2104,"name":"Identifier","src":"47241:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":1686,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2105,"name":"Identifier","src":"47249:7:0"}],"id":2106,"name":"MemberAccess","src":"47249:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2107,"name":"Identifier","src":"47273:3:0"}],"id":2108,"name":"MemberAccess","src":"47273:10:0"}],"id":2109,"name":"IndexAccess","src":"47249:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2110,"name":"Identifier","src":"47288:7:0"}],"id":2111,"name":"BinaryOperation","src":"47249:46:0"}],"id":2112,"name":"FunctionCall","src":"47241:55:0"}],"id":2113,"name":"ExpressionStatement","src":"47241:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2114,"name":"Identifier","src":"47343:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint256","value":"_ruling"},"id":2115,"name":"Identifier","src":"47351:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"choices","referencedDeclaration":1669,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2116,"name":"Identifier","src":"47362:7:0"}],"id":2117,"name":"MemberAccess","src":"47362:15:0"}],"id":2118,"name":"BinaryOperation","src":"47351:26:0"}],"id":2119,"name":"FunctionCall","src":"47343:35:0"}],"id":2120,"name":"ExpressionStatement","src":"47343:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2121,"name":"Identifier","src":"47447:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3330,"type":"function (address,uint256,uint256[] memory) view returns (bool)","value":"validDraws"},"id":2122,"name":"Identifier","src":"47455:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2123,"name":"Identifier","src":"47466:3:0"}],"id":2124,"name":"MemberAccess","src":"47466:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"_disputeID"},"id":2125,"name":"Identifier","src":"47478:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2076,"type":"uint256[] memory","value":"_draws"},"id":2126,"name":"Identifier","src":"47490:6:0"}],"id":2127,"name":"FunctionCall","src":"47455:42:0"}],"id":2128,"name":"FunctionCall","src":"47447:51:0"}],"id":2129,"name":"ExpressionStatement","src":"47447:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":1686,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2130,"name":"Identifier","src":"47509:7:0"}],"id":2134,"name":"MemberAccess","src":"47509:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2132,"name":"Identifier","src":"47533:3:0"}],"id":2133,"name":"MemberAccess","src":"47533:10:0"}],"id":2135,"name":"IndexAccess","src":"47509:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2136,"name":"Identifier","src":"47547:7:0"}],"id":2137,"name":"Assignment","src":"47509:45:0"}],"id":2138,"name":"ExpressionStatement","src":"47509:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":1655,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2139,"name":"Identifier","src":"47564:11:0"}],"id":2142,"name":"MemberAccess","src":"47564:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint256","value":"_ruling"},"id":2141,"name":"Identifier","src":"47586:7:0"}],"id":2143,"name":"IndexAccess","src":"47564:30:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2076,"type":"uint256[] memory","value":"_draws"},"id":2144,"name":"Identifier","src":"47598:6:0"}],"id":2145,"name":"MemberAccess","src":"47598:13:0"}],"id":2146,"name":"Assignment","src":"47564:47:0"}],"id":2147,"name":"ExpressionStatement","src":"47564:47:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":1651,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2148,"name":"Identifier","src":"47625:11:0"}],"id":2149,"name":"MemberAccess","src":"47625:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":1655,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2150,"name":"Identifier","src":"47652:11:0"}],"id":2151,"name":"MemberAccess","src":"47652:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint256","value":"_ruling"},"id":2152,"name":"Identifier","src":"47674:7:0"}],"id":2153,"name":"IndexAccess","src":"47652:30:0"}],"id":2154,"name":"BinaryOperation","src":"47625:57:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningCount","referencedDeclaration":1651,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2155,"name":"Identifier","src":"47698:11:0"}],"id":2157,"name":"MemberAccess","src":"47698:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":1655,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2158,"name":"Identifier","src":"47725:11:0"}],"id":2159,"name":"MemberAccess","src":"47725:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint256","value":"_ruling"},"id":2160,"name":"Identifier","src":"47747:7:0"}],"id":2161,"name":"IndexAccess","src":"47725:30:0"}],"id":2162,"name":"Assignment","src":"47698:57:0"}],"id":2163,"name":"ExpressionStatement","src":"47698:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningChoice","referencedDeclaration":1649,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2164,"name":"Identifier","src":"47769:11:0"}],"id":2166,"name":"MemberAccess","src":"47769:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint256","value":"_ruling"},"id":2167,"name":"Identifier","src":"47797:7:0"}],"id":2168,"name":"Assignment","src":"47769:35:0"}],"id":2169,"name":"ExpressionStatement","src":"47769:35:0"}],"id":2170,"name":"Block","src":"47684:131:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":1651,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2171,"name":"Identifier","src":"47825:11:0"}],"id":2172,"name":"MemberAccess","src":"47825:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":1655,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2173,"name":"Identifier","src":"47851:11:0"}],"id":2174,"name":"MemberAccess","src":"47851:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint256","value":"_ruling"},"id":2175,"name":"Identifier","src":"47873:7:0"}],"id":2176,"name":"IndexAccess","src":"47851:30:0"}],"id":2177,"name":"BinaryOperation","src":"47825:56:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2076,"type":"uint256[] memory","value":"_draws"},"id":2178,"name":"Identifier","src":"47885:6:0"}],"id":2179,"name":"MemberAccess","src":"47885:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2180,"name":"Literal","src":"47900:1:0"}],"id":2181,"name":"BinaryOperation","src":"47885:16:0"}],"id":2182,"name":"BinaryOperation","src":"47825:76:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"winningChoice","referencedDeclaration":1649,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"struct Kleros.VoteCounter storage pointer","value":"voteCounter"},"id":2183,"name":"Identifier","src":"48014:11:0"}],"id":2185,"name":"MemberAccess","src":"48014:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2186,"name":"Literal","src":"48042:1:0"}],"id":2187,"name":"Assignment","src":"48014:29:0"}],"id":2188,"name":"ExpressionStatement","src":"48014:29:0"}],"id":2189,"name":"Block","src":"47903:176:0"}],"id":2190,"name":"IfStatement","src":"47821:258:0"}],"id":2191,"name":"IfStatement","src":"47621:458:0"},{"children":[{"attributes":{"assignments":[2193]},"children":[{"attributes":{"constant":false,"name":"i","scope":2253,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2192,"name":"ElementaryTypeName","src":"48093:4:0"}],"id":2193,"name":"VariableDeclaration","src":"48093:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2194,"name":"Literal","src":"48102:1:0"}],"id":2195,"name":"VariableDeclarationStatement","src":"48093:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2193,"type":"uint256","value":"i"},"id":2196,"name":"Identifier","src":"48105:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2076,"type":"uint256[] memory","value":"_draws"},"id":2197,"name":"Identifier","src":"48109:6:0"}],"id":2198,"name":"MemberAccess","src":"48109:13:0"}],"id":2199,"name":"BinaryOperation","src":"48105:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2193,"type":"uint256","value":"i"},"id":2200,"name":"Identifier","src":"48126:1:0"}],"id":2201,"name":"UnaryOperation","src":"48124:3:0"}],"id":2202,"name":"ExpressionStatement","src":"48124:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vote_$1647_memory","typeString":"struct Kleros.Vote memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (struct Kleros.Vote storage ref) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2203,"name":"Identifier","src":"48143:7:0"}],"id":2207,"name":"MemberAccess","src":"48143:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2205,"name":"Identifier","src":"48157:7:0"}],"id":2206,"name":"MemberAccess","src":"48157:15:0"}],"id":2208,"name":"IndexAccess","src":"48143:30:0"}],"id":2209,"name":"MemberAccess","src":"48143:35:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["account","ruling"],"type":"struct Kleros.Vote memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1647,"type":"type(struct Kleros.Vote storage pointer)","value":"Vote"},"id":2210,"name":"Identifier","src":"48179:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2211,"name":"Identifier","src":"48211:3:0"}],"id":2212,"name":"MemberAccess","src":"48211:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2073,"type":"uint256","value":"_ruling"},"id":2213,"name":"Identifier","src":"48247:7:0"}],"id":2214,"name":"FunctionCall","src":"48179:90:0"}],"id":2215,"name":"FunctionCall","src":"48143:127:0"}],"id":2216,"name":"ExpressionStatement","src":"48143:127:0"}],"id":2217,"name":"Block","src":"48129:152:0"}],"id":2218,"name":"ForStatement","src":"48088:193:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":1631,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2090,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2219,"name":"Identifier","src":"48291:5:0"}],"id":2221,"name":"MemberAccess","src":"48291:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2076,"type":"uint256[] memory","value":"_draws"},"id":2222,"name":"Identifier","src":"48308:6:0"}],"id":2223,"name":"MemberAccess","src":"48308:13:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":3642,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":2224,"name":"Identifier","src":"48324:15:0"}],"id":2225,"name":"FunctionCall","src":"48324:17:0"}],"id":2226,"name":"BinaryOperation","src":"48308:33:0"}],"id":2227,"name":"Assignment","src":"48291:50:0"}],"id":2228,"name":"ExpressionStatement","src":"48291:50:0"},{"attributes":{"assignments":[2230]},"children":[{"attributes":{"constant":false,"name":"feeToPay","scope":2253,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2229,"name":"ElementaryTypeName","src":"48351:4:0"}],"id":2230,"name":"VariableDeclaration","src":"48351:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2076,"type":"uint256[] memory","value":"_draws"},"id":2231,"name":"Identifier","src":"48367:6:0"}],"id":2232,"name":"MemberAccess","src":"48367:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":1673,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2084,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2233,"name":"Identifier","src":"48383:7:0"}],"id":2234,"name":"MemberAccess","src":"48383:30:0"}],"id":2235,"name":"BinaryOperation","src":"48367:46:0"}],"id":2236,"name":"VariableDeclarationStatement","src":"48351:62:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2237,"name":"Identifier","src":"48423:3:0"}],"id":2240,"name":"MemberAccess","src":"48423:10:0"}],"id":2241,"name":"MemberAccess","src":"48423:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2230,"type":"uint256","value":"feeToPay"},"id":2242,"name":"Identifier","src":"48443:8:0"}],"id":2243,"name":"FunctionCall","src":"48423:29:0"}],"id":2244,"name":"ExpressionStatement","src":"48423:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1735,"type":"function (address,uint256,uint256)","value":"ArbitrationReward"},"id":2245,"name":"Identifier","src":"48462:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2246,"name":"Identifier","src":"48480:3:0"}],"id":2247,"name":"MemberAccess","src":"48480:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"_disputeID"},"id":2248,"name":"Identifier","src":"48492:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2230,"type":"uint256","value":"feeToPay"},"id":2249,"name":"Identifier","src":"48504:8:0"}],"id":2250,"name":"FunctionCall","src":"48462:51:0"}],"id":2251,"name":"ExpressionStatement","src":"48462:51:0"}],"id":2252,"name":"Block","src":"47045:1475:0"}],"id":2253,"name":"FunctionDefinition","src":"46948:1572:0"},{"attributes":{"constant":false,"documentation":"@dev Steal part of the tokens and the arbitration fee of a juror who failed to vote.\n Note that a juror who voted but without all his weight can't be penalized.\n It is possible to not penalize with the maximum weight.\n But note that it can lead to arbitration fees being kept by the contract and never distributed.\n @param _jurorAddress Address of the juror to steal tokens from.\n @param _disputeID The ID of the dispute the juror was drawn.\n @param _draws The list of draws the juror was drawn. Numbering starts at 1 and the numbers should be increasing.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"penalizeInactiveJuror","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_jurorAddress","scope":2400,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2254,"name":"ElementaryTypeName","src":"49171:7:0"}],"id":2255,"name":"VariableDeclaration","src":"49171:21:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":2400,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2256,"name":"ElementaryTypeName","src":"49194:4:0"}],"id":2257,"name":"VariableDeclaration","src":"49194:15:0"},{"attributes":{"constant":false,"name":"_draws","scope":2400,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2258,"name":"ElementaryTypeName","src":"49211:4:0"}],"id":2259,"name":"ArrayTypeName","src":"49211:6:0"}],"id":2260,"name":"VariableDeclaration","src":"49211:13:0"}],"id":2261,"name":"ParameterList","src":"49170:55:0"},{"attributes":{"parameters":[null]},"children":[],"id":2262,"name":"ParameterList","src":"49233:0:0"},{"children":[{"attributes":{"assignments":[2264]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":2400,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":2263,"name":"UserDefinedTypeName","src":"49243:7:0"}],"id":2264,"name":"VariableDeclaration","src":"49243:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2265,"name":"Identifier","src":"49269:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2257,"type":"uint256","value":"_disputeID"},"id":2266,"name":"Identifier","src":"49278:10:0"}],"id":2267,"name":"IndexAccess","src":"49269:20:0"}],"id":2268,"name":"VariableDeclarationStatement","src":"49243:46:0"},{"attributes":{"assignments":[2270]},"children":[{"attributes":{"constant":false,"name":"inactiveJuror","scope":2400,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":2269,"name":"UserDefinedTypeName","src":"49299:5:0"}],"id":2270,"name":"VariableDeclaration","src":"49299:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2271,"name":"Identifier","src":"49329:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2255,"type":"address","value":"_jurorAddress"},"id":2272,"name":"Identifier","src":"49336:13:0"}],"id":2273,"name":"IndexAccess","src":"49329:21:0"}],"id":2274,"name":"VariableDeclarationStatement","src":"49299:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2275,"name":"Identifier","src":"49360:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":2276,"name":"Identifier","src":"49368:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Vote","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":2277,"name":"Identifier","src":"49377:6:0"}],"id":2278,"name":"MemberAccess","src":"49377:11:0"}],"id":2279,"name":"BinaryOperation","src":"49368:20:0"}],"id":2280,"name":"FunctionCall","src":"49360:29:0"}],"id":2281,"name":"ExpressionStatement","src":"49360:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2282,"name":"Identifier","src":"49399:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":1686,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2264,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2283,"name":"Identifier","src":"49407:7:0"}],"id":2284,"name":"MemberAccess","src":"49407:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2255,"type":"address","value":"_jurorAddress"},"id":2285,"name":"Identifier","src":"49431:13:0"}],"id":2286,"name":"IndexAccess","src":"49407:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2287,"name":"Identifier","src":"49449:7:0"}],"id":2288,"name":"BinaryOperation","src":"49407:49:0"}],"id":2289,"name":"FunctionCall","src":"49399:58:0"}],"id":2290,"name":"ExpressionStatement","src":"49399:58:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":1686,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2264,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2291,"name":"Identifier","src":"49501:7:0"}],"id":2294,"name":"MemberAccess","src":"49501:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2255,"type":"address","value":"_jurorAddress"},"id":2293,"name":"Identifier","src":"49525:13:0"}],"id":2295,"name":"IndexAccess","src":"49501:38:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2296,"name":"Identifier","src":"49542:7:0"}],"id":2297,"name":"Assignment","src":"49501:48:0"}],"id":2298,"name":"ExpressionStatement","src":"49501:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2299,"name":"Identifier","src":"49618:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3330,"type":"function (address,uint256,uint256[] memory) view returns (bool)","value":"validDraws"},"id":2300,"name":"Identifier","src":"49626:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2255,"type":"address","value":"_jurorAddress"},"id":2301,"name":"Identifier","src":"49637:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2257,"type":"uint256","value":"_disputeID"},"id":2302,"name":"Identifier","src":"49652:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2260,"type":"uint256[] memory","value":"_draws"},"id":2303,"name":"Identifier","src":"49664:6:0"}],"id":2304,"name":"FunctionCall","src":"49626:45:0"}],"id":2305,"name":"FunctionCall","src":"49618:54:0"}],"id":2306,"name":"ExpressionStatement","src":"49618:54:0"},{"attributes":{"assignments":[2308]},"children":[{"attributes":{"constant":false,"name":"penality","scope":2400,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2307,"name":"ElementaryTypeName","src":"49682:4:0"}],"id":2308,"name":"VariableDeclaration","src":"49682:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2260,"type":"uint256[] memory","value":"_draws"},"id":2309,"name":"Identifier","src":"49698:6:0"}],"id":2310,"name":"MemberAccess","src":"49698:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1593,"type":"uint256","value":"minActivatedToken"},"id":2311,"name":"Identifier","src":"49714:17:0"}],"id":2312,"name":"BinaryOperation","src":"49698:33:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2313,"name":"Literal","src":"49734:1:0"}],"id":2314,"name":"BinaryOperation","src":"49698:37:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1600,"type":"uint256","value":"alpha"},"id":2315,"name":"Identifier","src":"49738:5:0"}],"id":2316,"name":"BinaryOperation","src":"49698:45:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"ALPHA_DIVISOR"},"id":2317,"name":"Identifier","src":"49746:13:0"}],"id":2318,"name":"BinaryOperation","src":"49698:61:0"}],"id":2319,"name":"VariableDeclarationStatement","src":"49682:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2320,"name":"Identifier","src":"49769:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2321,"name":"Identifier","src":"49781:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2270,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2322,"name":"Identifier","src":"49792:13:0"}],"id":2323,"name":"MemberAccess","src":"49792:21:0"}],"id":2324,"name":"BinaryOperation","src":"49781:32:0"}],"id":2325,"name":"TupleExpression","src":"49780:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2326,"name":"Identifier","src":"49817:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2270,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2327,"name":"Identifier","src":"49828:13:0"}],"id":2328,"name":"MemberAccess","src":"49828:21:0"}],"id":2329,"name":"Conditional","src":"49780:69:0"}],"id":2330,"name":"Assignment","src":"49769:80:0"}],"id":2331,"name":"ExpressionStatement","src":"49769:80:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2270,"type":"struct Kleros.Juror storage pointer","value":"inactiveJuror"},"id":2332,"name":"Identifier","src":"49917:13:0"}],"id":2334,"name":"MemberAccess","src":"49917:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2335,"name":"Identifier","src":"49942:8:0"}],"id":2336,"name":"Assignment","src":"49917:33:0"}],"id":2337,"name":"ExpressionStatement","src":"49917:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2338,"name":"Identifier","src":"49960:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2255,"type":"address","value":"_jurorAddress"},"id":2339,"name":"Identifier","src":"49971:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2257,"type":"uint256","value":"_disputeID"},"id":2340,"name":"Identifier","src":"49986:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"int256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2341,"name":"ElementaryTypeNameExpression","src":"49999:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2342,"name":"Identifier","src":"50003:8:0"}],"id":2343,"name":"FunctionCall","src":"49999:13:0"}],"id":2344,"name":"UnaryOperation","src":"49998:14:0"}],"id":2345,"name":"FunctionCall","src":"49960:53:0"}],"id":2346,"name":"ExpressionStatement","src":"49960:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2347,"name":"Identifier","src":"50023:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2348,"name":"Identifier","src":"50030:3:0"}],"id":2349,"name":"MemberAccess","src":"50030:10:0"}],"id":2350,"name":"IndexAccess","src":"50023:18:0"}],"id":2351,"name":"MemberAccess","src":"50023:26:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2352,"name":"Identifier","src":"50053:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2353,"name":"Literal","src":"50064:1:0"}],"id":2354,"name":"BinaryOperation","src":"50053:12:0"}],"id":2355,"name":"Assignment","src":"50023:42:0"}],"id":2356,"name":"ExpressionStatement","src":"50023:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2357,"name":"Identifier","src":"50118:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2358,"name":"Identifier","src":"50129:3:0"}],"id":2359,"name":"MemberAccess","src":"50129:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2257,"type":"uint256","value":"_disputeID"},"id":2360,"name":"Identifier","src":"50141:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2361,"name":"ElementaryTypeNameExpression","src":"50153:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2362,"name":"Identifier","src":"50157:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2363,"name":"Literal","src":"50168:1:0"}],"id":2364,"name":"BinaryOperation","src":"50157:12:0"}],"id":2365,"name":"FunctionCall","src":"50153:17:0"}],"id":2366,"name":"FunctionCall","src":"50118:53:0"}],"id":2367,"name":"ExpressionStatement","src":"50118:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2368,"name":"Identifier","src":"50181:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":2369,"name":"Identifier","src":"50188:8:0"}],"id":2370,"name":"IndexAccess","src":"50181:16:0"}],"id":2371,"name":"MemberAccess","src":"50181:24:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2372,"name":"Identifier","src":"50209:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2373,"name":"Literal","src":"50220:1:0"}],"id":2374,"name":"BinaryOperation","src":"50209:12:0"}],"id":2375,"name":"Assignment","src":"50181:40:0"}],"id":2376,"name":"ExpressionStatement","src":"50181:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2377,"name":"Identifier","src":"50266:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":2378,"name":"Identifier","src":"50277:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2257,"type":"uint256","value":"_disputeID"},"id":2379,"name":"Identifier","src":"50287:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2380,"name":"ElementaryTypeNameExpression","src":"50299:3:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2308,"type":"uint256","value":"penality"},"id":2381,"name":"Identifier","src":"50303:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2382,"name":"Literal","src":"50314:1:0"}],"id":2383,"name":"BinaryOperation","src":"50303:12:0"}],"id":2384,"name":"FunctionCall","src":"50299:17:0"}],"id":2385,"name":"FunctionCall","src":"50266:51:0"}],"id":2386,"name":"ExpressionStatement","src":"50266:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":2387,"name":"Identifier","src":"50327:3:0"}],"id":2390,"name":"MemberAccess","src":"50327:10:0"}],"id":2391,"name":"MemberAccess","src":"50327:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2260,"type":"uint256[] memory","value":"_draws"},"id":2392,"name":"Identifier","src":"50347:6:0"}],"id":2393,"name":"MemberAccess","src":"50347:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":1673,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2264,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2394,"name":"Identifier","src":"50361:7:0"}],"id":2395,"name":"MemberAccess","src":"50361:30:0"}],"id":2396,"name":"BinaryOperation","src":"50347:44:0"}],"id":2397,"name":"FunctionCall","src":"50327:65:0"}],"id":2398,"name":"ExpressionStatement","src":"50327:65:0"}],"id":2399,"name":"Block","src":"49233:1210:0"}],"id":2400,"name":"FunctionDefinition","src":"49140:1303:0"},{"attributes":{"constant":false,"documentation":"@dev Execute all the token repartition.\n Note that this function could consume to much gas if there is too much votes. \n It is O(v), where v is the number of votes for this dispute.\n In the next version, there will also be a function to execute it in multiple calls \n (but note that one shot execution, if possible, is less expensive).\n @param _disputeID ID of the dispute.","implemented":true,"isConstructor":false,"name":"oneShotTokenRepartition","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2401,"name":"ElementaryTypeName","src":"50907:4:0"}],"id":2402,"name":"VariableDeclaration","src":"50907:15:0"}],"id":2403,"name":"ParameterList","src":"50906:17:0"},{"attributes":{"parameters":[null]},"children":[],"id":2408,"name":"ParameterList","src":"50960:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1760,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2404,"name":"Identifier","src":"50931:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":2405,"name":"Identifier","src":"50942:6:0"}],"id":2406,"name":"MemberAccess","src":"50942:16:0"}],"id":2407,"name":"ModifierInvocation","src":"50931:28:0"},{"children":[{"attributes":{"assignments":[2410]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":2689,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":2409,"name":"UserDefinedTypeName","src":"50970:7:0"}],"id":2410,"name":"VariableDeclaration","src":"50970:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2411,"name":"Identifier","src":"50996:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2402,"type":"uint256","value":"_disputeID"},"id":2412,"name":"Identifier","src":"51005:10:0"}],"id":2413,"name":"IndexAccess","src":"50996:20:0"}],"id":2414,"name":"VariableDeclarationStatement","src":"50970:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2415,"name":"Identifier","src":"51026:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$1661","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2416,"name":"Identifier","src":"51034:7:0"}],"id":2417,"name":"MemberAccess","src":"51034:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":2418,"name":"Identifier","src":"51051:12:0"}],"id":2419,"name":"MemberAccess","src":"51051:17:0"}],"id":2420,"name":"BinaryOperation","src":"51034:34:0"}],"id":2421,"name":"FunctionCall","src":"51026:43:0"}],"id":2422,"name":"ExpressionStatement","src":"51026:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2423,"name":"Identifier","src":"51079:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2424,"name":"Identifier","src":"51087:7:0"}],"id":2425,"name":"MemberAccess","src":"51087:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2426,"name":"Identifier","src":"51103:7:0"}],"id":2427,"name":"MemberAccess","src":"51103:15:0"}],"id":2428,"name":"BinaryOperation","src":"51087:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2429,"name":"Identifier","src":"51122:7:0"}],"id":2430,"name":"BinaryOperation","src":"51087:42:0"}],"id":2431,"name":"FunctionCall","src":"51079:51:0"}],"id":2432,"name":"ExpressionStatement","src":"51079:51:0"},{"attributes":{"assignments":[2434]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2433,"name":"ElementaryTypeName","src":"51141:4:0"}],"id":2434,"name":"VariableDeclaration","src":"51141:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":1649,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2435,"name":"Identifier","src":"51162:7:0"}],"id":2436,"name":"MemberAccess","src":"51162:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2437,"name":"Identifier","src":"51182:7:0"}],"id":2438,"name":"MemberAccess","src":"51182:15:0"}],"id":2439,"name":"IndexAccess","src":"51162:36:0"}],"id":2440,"name":"MemberAccess","src":"51162:50:0"}],"id":2441,"name":"VariableDeclarationStatement","src":"51141:71:0"},{"attributes":{"assignments":[2443]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2442,"name":"ElementaryTypeName","src":"51222:4:0"}],"id":2443,"name":"VariableDeclaration","src":"51222:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":3642,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":2444,"name":"Identifier","src":"51241:15:0"}],"id":2445,"name":"FunctionCall","src":"51241:17:0"}],"id":2446,"name":"VariableDeclarationStatement","src":"51222:36:0"},{"children":[{"attributes":{"assignments":[2448]},"children":[{"attributes":{"constant":false,"name":"i","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2447,"name":"ElementaryTypeName","src":"51273:4:0"}],"id":2448,"name":"VariableDeclaration","src":"51273:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2449,"name":"Literal","src":"51282:1:0"}],"id":2450,"name":"VariableDeclarationStatement","src":"51273:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2451,"name":"Identifier","src":"51285:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2452,"name":"Identifier","src":"51290:7:0"}],"id":2453,"name":"MemberAccess","src":"51290:15:0"}],"id":2454,"name":"BinaryOperation","src":"51285:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2455,"name":"Identifier","src":"51309:1:0"}],"id":2456,"name":"UnaryOperation","src":"51307:3:0"}],"id":2457,"name":"ExpressionStatement","src":"51307:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2434,"type":"uint256","value":"winningChoice"},"id":2458,"name":"Identifier","src":"51714:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2459,"name":"Literal","src":"51729:1:0"}],"id":2460,"name":"BinaryOperation","src":"51714:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":1655,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2461,"name":"Identifier","src":"51735:7:0"}],"id":2462,"name":"MemberAccess","src":"51735:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2463,"name":"Identifier","src":"51755:7:0"}],"id":2464,"name":"MemberAccess","src":"51755:15:0"}],"id":2465,"name":"IndexAccess","src":"51735:36:0"}],"id":2466,"name":"MemberAccess","src":"51735:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2467,"name":"Literal","src":"51782:1:0"}],"id":2468,"name":"IndexAccess","src":"51735:49:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":1651,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2469,"name":"Identifier","src":"51788:7:0"}],"id":2470,"name":"MemberAccess","src":"51788:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2471,"name":"Identifier","src":"51808:7:0"}],"id":2472,"name":"MemberAccess","src":"51808:15:0"}],"id":2473,"name":"IndexAccess","src":"51788:36:0"}],"id":2474,"name":"MemberAccess","src":"51788:49:0"}],"id":2475,"name":"BinaryOperation","src":"51735:102:0"}],"id":2476,"name":"TupleExpression","src":"51734:104:0"}],"id":2477,"name":"BinaryOperation","src":"51714:124:0"},{"children":[{"attributes":{"assignments":[2479]},"children":[{"attributes":{"constant":false,"name":"totalToRedistribute","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2478,"name":"ElementaryTypeName","src":"51858:4:0"}],"id":2479,"name":"VariableDeclaration","src":"51858:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2480,"name":"Literal","src":"51885:1:0"}],"id":2481,"name":"VariableDeclarationStatement","src":"51858:28:0"},{"attributes":{"assignments":[2483]},"children":[{"attributes":{"constant":false,"name":"nbCoherent","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2482,"name":"ElementaryTypeName","src":"51904:4:0"}],"id":2483,"name":"VariableDeclaration","src":"51904:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2484,"name":"Literal","src":"51922:1:0"}],"id":2485,"name":"VariableDeclarationStatement","src":"51904:19:0"},{"children":[{"attributes":{"assignments":[2487]},"children":[{"attributes":{"constant":false,"name":"j","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2486,"name":"ElementaryTypeName","src":"52010:4:0"}],"id":2487,"name":"VariableDeclaration","src":"52010:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2488,"name":"Literal","src":"52019:1:0"}],"id":2489,"name":"VariableDeclarationStatement","src":"52010:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2490,"name":"Identifier","src":"52022:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2491,"name":"Identifier","src":"52026:7:0"}],"id":2492,"name":"MemberAccess","src":"52026:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2493,"name":"Identifier","src":"52040:1:0"}],"id":2494,"name":"IndexAccess","src":"52026:16:0"}],"id":2495,"name":"MemberAccess","src":"52026:23:0"}],"id":2496,"name":"BinaryOperation","src":"52022:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2497,"name":"Identifier","src":"52053:1:0"}],"id":2498,"name":"UnaryOperation","src":"52051:3:0"}],"id":2499,"name":"ExpressionStatement","src":"52051:3:0"},{"children":[{"attributes":{"assignments":[2501]},"children":[{"attributes":{"constant":false,"name":"vote","scope":2689,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Vote","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":1647,"type":"struct Kleros.Vote"},"id":2500,"name":"UserDefinedTypeName","src":"52078:4:0"}],"id":2501,"name":"VariableDeclaration","src":"52078:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2502,"name":"Identifier","src":"52098:7:0"}],"id":2503,"name":"MemberAccess","src":"52098:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2504,"name":"Identifier","src":"52112:1:0"}],"id":2505,"name":"IndexAccess","src":"52098:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2506,"name":"Identifier","src":"52115:1:0"}],"id":2507,"name":"IndexAccess","src":"52098:19:0"}],"id":2508,"name":"VariableDeclarationStatement","src":"52078:39:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":1646,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2509,"name":"Identifier","src":"52143:4:0"}],"id":2510,"name":"MemberAccess","src":"52143:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2434,"type":"uint256","value":"winningChoice"},"id":2511,"name":"Identifier","src":"52158:13:0"}],"id":2512,"name":"BinaryOperation","src":"52143:28:0"},{"children":[{"attributes":{"assignments":[2514]},"children":[{"attributes":{"constant":false,"name":"juror","scope":2689,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":2513,"name":"UserDefinedTypeName","src":"52199:5:0"}],"id":2514,"name":"VariableDeclaration","src":"52199:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2515,"name":"Identifier","src":"52221:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2516,"name":"Identifier","src":"52228:4:0"}],"id":2517,"name":"MemberAccess","src":"52228:12:0"}],"id":2518,"name":"IndexAccess","src":"52221:20:0"}],"id":2519,"name":"VariableDeclarationStatement","src":"52199:42:0"},{"attributes":{"assignments":[2521]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2520,"name":"ElementaryTypeName","src":"52267:4:0"}],"id":2521,"name":"VariableDeclaration","src":"52267:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2443,"type":"uint256","value":"amountShift"},"id":2522,"name":"Identifier","src":"52282:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2514,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2523,"name":"Identifier","src":"52294:5:0"}],"id":2524,"name":"MemberAccess","src":"52294:13:0"}],"id":2525,"name":"BinaryOperation","src":"52282:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2443,"type":"uint256","value":"amountShift"},"id":2526,"name":"Identifier","src":"52310:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2514,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2527,"name":"Identifier","src":"52324:5:0"}],"id":2528,"name":"MemberAccess","src":"52324:13:0"}],"id":2529,"name":"Conditional","src":"52282:55:0"}],"id":2530,"name":"VariableDeclarationStatement","src":"52267:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2514,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2531,"name":"Identifier","src":"52363:5:0"}],"id":2533,"name":"MemberAccess","src":"52363:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2521,"type":"uint256","value":"penalty"},"id":2534,"name":"Identifier","src":"52380:7:0"}],"id":2535,"name":"Assignment","src":"52363:24:0"}],"id":2536,"name":"ExpressionStatement","src":"52363:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2537,"name":"Identifier","src":"52413:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2538,"name":"Identifier","src":"52424:4:0"}],"id":2539,"name":"MemberAccess","src":"52424:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2402,"type":"uint256","value":"_disputeID"},"id":2540,"name":"Identifier","src":"52438:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2541,"name":"ElementaryTypeNameExpression","src":"52450:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2521,"type":"uint256","value":"penalty"},"id":2542,"name":"Identifier","src":"52455:7:0"}],"id":2543,"name":"UnaryOperation","src":"52454:8:0"}],"id":2544,"name":"FunctionCall","src":"52450:13:0"}],"id":2545,"name":"FunctionCall","src":"52413:51:0"}],"id":2546,"name":"ExpressionStatement","src":"52413:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2479,"type":"uint256","value":"totalToRedistribute"},"id":2547,"name":"Identifier","src":"52490:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2521,"type":"uint256","value":"penalty"},"id":2548,"name":"Identifier","src":"52513:7:0"}],"id":2549,"name":"Assignment","src":"52490:30:0"}],"id":2550,"name":"ExpressionStatement","src":"52490:30:0"}],"id":2551,"name":"Block","src":"52173:370:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2483,"type":"uint256","value":"nbCoherent"},"id":2552,"name":"Identifier","src":"52577:10:0"}],"id":2553,"name":"UnaryOperation","src":"52575:12:0"}],"id":2554,"name":"ExpressionStatement","src":"52575:12:0"}],"id":2555,"name":"Block","src":"52549:61:0"}],"id":2556,"name":"IfStatement","src":"52139:471:0"}],"id":2557,"name":"Block","src":"52056:572:0"}],"id":2558,"name":"ForStatement","src":"52005:623:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2483,"type":"uint256","value":"nbCoherent"},"id":2559,"name":"Identifier","src":"52649:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2560,"name":"Literal","src":"52663:1:0"}],"id":2561,"name":"BinaryOperation","src":"52649:15:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2562,"name":"Identifier","src":"52759:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":2563,"name":"Identifier","src":"52766:8:0"}],"id":2564,"name":"IndexAccess","src":"52759:16:0"}],"id":2565,"name":"MemberAccess","src":"52759:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2479,"type":"uint256","value":"totalToRedistribute"},"id":2566,"name":"Identifier","src":"52787:19:0"}],"id":2567,"name":"Assignment","src":"52759:47:0"}],"id":2568,"name":"ExpressionStatement","src":"52759:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2569,"name":"Identifier","src":"52828:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":2570,"name":"Identifier","src":"52839:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2402,"type":"uint256","value":"_disputeID"},"id":2571,"name":"Identifier","src":"52849:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2572,"name":"ElementaryTypeNameExpression","src":"52861:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2479,"type":"uint256","value":"totalToRedistribute"},"id":2573,"name":"Identifier","src":"52865:19:0"}],"id":2574,"name":"FunctionCall","src":"52861:24:0"}],"id":2575,"name":"FunctionCall","src":"52828:58:0"}],"id":2576,"name":"ExpressionStatement","src":"52828:58:0"}],"id":2577,"name":"Block","src":"52666:239:0"},{"children":[{"attributes":{"assignments":[2579]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":2689,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2578,"name":"ElementaryTypeName","src":"52966:4:0"}],"id":2579,"name":"VariableDeclaration","src":"52966:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2479,"type":"uint256","value":"totalToRedistribute"},"id":2580,"name":"Identifier","src":"52988:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2483,"type":"uint256","value":"nbCoherent"},"id":2581,"name":"Identifier","src":"53010:10:0"}],"id":2582,"name":"BinaryOperation","src":"52988:32:0"}],"id":2583,"name":"VariableDeclarationStatement","src":"52966:54:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2584,"name":"Identifier","src":"53202:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2585,"name":"Literal","src":"53206:1:0"}],"id":2586,"name":"Assignment","src":"53202:5:0"}],"id":2587,"name":"ExpressionStatement","src":"53202:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2588,"name":"Identifier","src":"53209:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2589,"name":"Identifier","src":"53213:7:0"}],"id":2590,"name":"MemberAccess","src":"53213:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2591,"name":"Identifier","src":"53227:1:0"}],"id":2592,"name":"IndexAccess","src":"53213:16:0"}],"id":2593,"name":"MemberAccess","src":"53213:23:0"}],"id":2594,"name":"BinaryOperation","src":"53209:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2595,"name":"Identifier","src":"53240:1:0"}],"id":2596,"name":"UnaryOperation","src":"53238:3:0"}],"id":2597,"name":"ExpressionStatement","src":"53238:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2598,"name":"Identifier","src":"53269:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2599,"name":"Identifier","src":"53276:7:0"}],"id":2600,"name":"MemberAccess","src":"53276:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2601,"name":"Identifier","src":"53290:1:0"}],"id":2602,"name":"IndexAccess","src":"53276:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2603,"name":"Identifier","src":"53293:1:0"}],"id":2604,"name":"IndexAccess","src":"53276:19:0"}],"id":2605,"name":"Assignment","src":"53269:26:0"}],"id":2606,"name":"ExpressionStatement","src":"53269:26:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":1646,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2607,"name":"Identifier","src":"53325:4:0"}],"id":2608,"name":"MemberAccess","src":"53325:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2434,"type":"uint256","value":"winningChoice"},"id":2609,"name":"Identifier","src":"53340:13:0"}],"id":2610,"name":"BinaryOperation","src":"53325:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2514,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2611,"name":"Identifier","src":"53385:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2612,"name":"Identifier","src":"53393:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2613,"name":"Identifier","src":"53400:4:0"}],"id":2614,"name":"MemberAccess","src":"53400:12:0"}],"id":2615,"name":"IndexAccess","src":"53393:20:0"}],"id":2616,"name":"Assignment","src":"53385:28:0"}],"id":2617,"name":"ExpressionStatement","src":"53385:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2514,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2618,"name":"Identifier","src":"53443:5:0"}],"id":2620,"name":"MemberAccess","src":"53443:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2579,"type":"uint256","value":"toRedistribute"},"id":2621,"name":"Identifier","src":"53460:14:0"}],"id":2622,"name":"Assignment","src":"53443:31:0"}],"id":2623,"name":"ExpressionStatement","src":"53443:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2624,"name":"Identifier","src":"53504:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2625,"name":"Identifier","src":"53515:4:0"}],"id":2626,"name":"MemberAccess","src":"53515:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2402,"type":"uint256","value":"_disputeID"},"id":2627,"name":"Identifier","src":"53529:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2628,"name":"ElementaryTypeNameExpression","src":"53541:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2579,"type":"uint256","value":"toRedistribute"},"id":2629,"name":"Identifier","src":"53545:14:0"}],"id":2630,"name":"FunctionCall","src":"53541:19:0"}],"id":2631,"name":"FunctionCall","src":"53504:57:0"}],"id":2632,"name":"ExpressionStatement","src":"53504:57:0"}],"id":2633,"name":"Block","src":"53355:233:0"}],"id":2634,"name":"IfStatement","src":"53321:267:0"}],"id":2635,"name":"Block","src":"53243:367:0"}],"id":2636,"name":"ForStatement","src":"53197:413:0"}],"id":2637,"name":"Block","src":"52911:717:0"}],"id":2638,"name":"IfStatement","src":"52645:983:0"}],"id":2639,"name":"Block","src":"51840:1802:0"}],"id":2640,"name":"IfStatement","src":"51710:1932:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2641,"name":"Identifier","src":"53734:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2642,"name":"Literal","src":"53738:1:0"}],"id":2643,"name":"Assignment","src":"53734:5:0"}],"id":2644,"name":"ExpressionStatement","src":"53734:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2645,"name":"Identifier","src":"53741:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2646,"name":"Identifier","src":"53745:7:0"}],"id":2647,"name":"MemberAccess","src":"53745:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2648,"name":"Identifier","src":"53759:1:0"}],"id":2649,"name":"IndexAccess","src":"53745:16:0"}],"id":2650,"name":"MemberAccess","src":"53745:23:0"}],"id":2651,"name":"BinaryOperation","src":"53741:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2652,"name":"Identifier","src":"53772:1:0"}],"id":2653,"name":"UnaryOperation","src":"53770:3:0"}],"id":2654,"name":"ExpressionStatement","src":"53770:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2655,"name":"Identifier","src":"53793:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2656,"name":"Identifier","src":"53800:7:0"}],"id":2657,"name":"MemberAccess","src":"53800:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2448,"type":"uint256","value":"i"},"id":2658,"name":"Identifier","src":"53814:1:0"}],"id":2659,"name":"IndexAccess","src":"53800:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2487,"type":"uint256","value":"j"},"id":2660,"name":"Identifier","src":"53817:1:0"}],"id":2661,"name":"IndexAccess","src":"53800:19:0"}],"id":2662,"name":"Assignment","src":"53793:26:0"}],"id":2663,"name":"ExpressionStatement","src":"53793:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2514,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2664,"name":"Identifier","src":"53837:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2665,"name":"Identifier","src":"53845:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2501,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2666,"name":"Identifier","src":"53852:4:0"}],"id":2667,"name":"MemberAccess","src":"53852:12:0"}],"id":2668,"name":"IndexAccess","src":"53845:20:0"}],"id":2669,"name":"Assignment","src":"53837:28:0"}],"id":2670,"name":"ExpressionStatement","src":"53837:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":1631,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2514,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2671,"name":"Identifier","src":"53883:5:0"}],"id":2673,"name":"MemberAccess","src":"53883:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2443,"type":"uint256","value":"amountShift"},"id":2674,"name":"Identifier","src":"53900:11:0"}],"id":2675,"name":"Assignment","src":"53883:28:0"}],"id":2676,"name":"ExpressionStatement","src":"53883:28:0"}],"id":2677,"name":"Block","src":"53775:248:0"}],"id":2678,"name":"ForStatement","src":"53729:294:0"}],"id":2679,"name":"Block","src":"51312:2721:0"}],"id":2680,"name":"ForStatement","src":"51268:2765:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2410,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2681,"name":"Identifier","src":"54042:7:0"}],"id":2683,"name":"MemberAccess","src":"54042:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":2684,"name":"Identifier","src":"54058:12:0"}],"id":2685,"name":"MemberAccess","src":"54058:23:0"}],"id":2686,"name":"Assignment","src":"54042:39:0"}],"id":2687,"name":"ExpressionStatement","src":"54042:39:0"}],"id":2688,"name":"Block","src":"50960:3200:0"}],"id":2689,"name":"FunctionDefinition","src":"50874:3286:0"},{"attributes":{"constant":false,"documentation":"@dev Execute token repartition on a dispute for a specific number of votes.\n This should only be called if oneShotTokenRepartition will throw because there are too many votes (will use too much gas).\n Note that There are 3 iterations per vote. e.g. A dispute with 1 appeal (2 sessions) and 3 votes per session will have 18 iterations\n @param _disputeID ID of the dispute.\n @param _maxIterations the maxium number of votes to repartition in this iteration","implemented":true,"isConstructor":false,"name":"multipleShotTokenRepartition","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2690,"name":"ElementaryTypeName","src":"54703:4:0"}],"id":2691,"name":"VariableDeclaration","src":"54703:15:0"},{"attributes":{"constant":false,"name":"_maxIterations","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2692,"name":"ElementaryTypeName","src":"54720:4:0"}],"id":2693,"name":"VariableDeclaration","src":"54720:19:0"}],"id":2694,"name":"ParameterList","src":"54702:38:0"},{"attributes":{"parameters":[null]},"children":[],"id":2699,"name":"ParameterList","src":"54777:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1760,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":2695,"name":"Identifier","src":"54748:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Execution","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":2696,"name":"Identifier","src":"54759:6:0"}],"id":2697,"name":"MemberAccess","src":"54759:16:0"}],"id":2698,"name":"ModifierInvocation","src":"54748:28:0"},{"children":[{"attributes":{"assignments":[2701]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3183,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":2700,"name":"UserDefinedTypeName","src":"54787:7:0"}],"id":2701,"name":"VariableDeclaration","src":"54787:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":2702,"name":"Identifier","src":"54813:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2691,"type":"uint256","value":"_disputeID"},"id":2703,"name":"Identifier","src":"54822:10:0"}],"id":2704,"name":"IndexAccess","src":"54813:20:0"}],"id":2705,"name":"VariableDeclarationStatement","src":"54787:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2706,"name":"Identifier","src":"54843:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$1661","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2707,"name":"Identifier","src":"54851:7:0"}],"id":2708,"name":"MemberAccess","src":"54851:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Resolving","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":2709,"name":"Identifier","src":"54868:12:0"}],"id":2710,"name":"MemberAccess","src":"54868:22:0"}],"id":2711,"name":"BinaryOperation","src":"54851:39:0"}],"id":2712,"name":"FunctionCall","src":"54843:48:0"}],"id":2713,"name":"ExpressionStatement","src":"54843:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":2714,"name":"Identifier","src":"54901:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2715,"name":"Identifier","src":"54909:7:0"}],"id":2716,"name":"MemberAccess","src":"54909:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2717,"name":"Identifier","src":"54925:7:0"}],"id":2718,"name":"MemberAccess","src":"54925:15:0"}],"id":2719,"name":"BinaryOperation","src":"54909:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":2720,"name":"Identifier","src":"54944:7:0"}],"id":2721,"name":"BinaryOperation","src":"54909:42:0"}],"id":2722,"name":"FunctionCall","src":"54901:51:0"}],"id":2723,"name":"ExpressionStatement","src":"54901:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2724,"name":"Identifier","src":"54962:7:0"}],"id":2726,"name":"MemberAccess","src":"54962:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Resolving","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":2727,"name":"Identifier","src":"54978:12:0"}],"id":2728,"name":"MemberAccess","src":"54978:22:0"}],"id":2729,"name":"Assignment","src":"54962:38:0"}],"id":2730,"name":"ExpressionStatement","src":"54962:38:0"},{"attributes":{"assignments":[2732]},"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2731,"name":"ElementaryTypeName","src":"55088:4:0"}],"id":2732,"name":"VariableDeclaration","src":"55088:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":1649,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2733,"name":"Identifier","src":"55109:7:0"}],"id":2734,"name":"MemberAccess","src":"55109:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2735,"name":"Identifier","src":"55129:7:0"}],"id":2736,"name":"MemberAccess","src":"55129:15:0"}],"id":2737,"name":"IndexAccess","src":"55109:36:0"}],"id":2738,"name":"MemberAccess","src":"55109:50:0"}],"id":2739,"name":"VariableDeclarationStatement","src":"55088:71:0"},{"attributes":{"assignments":[2741]},"children":[{"attributes":{"constant":false,"name":"amountShift","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2740,"name":"ElementaryTypeName","src":"55169:4:0"}],"id":2741,"name":"VariableDeclaration","src":"55169:16:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":3642,"type":"function () view returns (uint256)","value":"getStakePerDraw"},"id":2742,"name":"Identifier","src":"55188:15:0"}],"id":2743,"name":"FunctionCall","src":"55188:17:0"}],"id":2744,"name":"VariableDeclarationStatement","src":"55169:36:0"},{"attributes":{"assignments":[2746]},"children":[{"attributes":{"constant":false,"name":"currentIterations","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2745,"name":"ElementaryTypeName","src":"55215:4:0"}],"id":2746,"name":"VariableDeclaration","src":"55215:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2747,"name":"Literal","src":"55240:1:0"}],"id":2748,"name":"VariableDeclarationStatement","src":"55215:26:0"},{"children":[{"attributes":{"assignments":[2750]},"children":[{"attributes":{"constant":false,"name":"i","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2749,"name":"ElementaryTypeName","src":"55309:4:0"}],"id":2750,"name":"VariableDeclaration","src":"55309:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentAppealToRepartition","referencedDeclaration":1688,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2751,"name":"Identifier","src":"55318:7:0"}],"id":2752,"name":"MemberAccess","src":"55318:34:0"}],"id":2753,"name":"VariableDeclarationStatement","src":"55309:43:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2754,"name":"Identifier","src":"55354:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2755,"name":"Identifier","src":"55359:7:0"}],"id":2756,"name":"MemberAccess","src":"55359:15:0"}],"id":2757,"name":"BinaryOperation","src":"55354:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2758,"name":"Identifier","src":"55378:1:0"}],"id":2759,"name":"UnaryOperation","src":"55376:3:0"}],"id":2760,"name":"ExpressionStatement","src":"55376:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2761,"name":"Identifier","src":"55459:7:0"}],"id":2762,"name":"MemberAccess","src":"55459:28:0"}],"id":2763,"name":"MemberAccess","src":"55459:35:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2764,"name":"Identifier","src":"55497:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2765,"name":"Literal","src":"55499:1:0"}],"id":2766,"name":"BinaryOperation","src":"55497:3:0"}],"id":2767,"name":"BinaryOperation","src":"55459:41:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2768,"name":"Identifier","src":"55520:7:0"}],"id":2771,"name":"MemberAccess","src":"55520:28:0"}],"id":2772,"name":"MemberAccess","src":"55520:35:0"}],"id":2773,"name":"UnaryOperation","src":"55520:37:0"}],"id":2774,"name":"ExpressionStatement","src":"55520:37:0"}],"id":2775,"name":"Block","src":"55502:70:0"}],"id":2776,"name":"IfStatement","src":"55455:117:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2732,"type":"uint256","value":"winningChoice"},"id":2777,"name":"Identifier","src":"55739:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2778,"name":"Literal","src":"55754:1:0"}],"id":2779,"name":"BinaryOperation","src":"55739:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":1655,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2780,"name":"Identifier","src":"55760:7:0"}],"id":2781,"name":"MemberAccess","src":"55760:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2782,"name":"Identifier","src":"55780:7:0"}],"id":2783,"name":"MemberAccess","src":"55780:15:0"}],"id":2784,"name":"IndexAccess","src":"55760:36:0"}],"id":2785,"name":"MemberAccess","src":"55760:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2786,"name":"Literal","src":"55807:1:0"}],"id":2787,"name":"IndexAccess","src":"55760:49:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":1651,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2788,"name":"Identifier","src":"55813:7:0"}],"id":2789,"name":"MemberAccess","src":"55813:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2790,"name":"Identifier","src":"55833:7:0"}],"id":2791,"name":"MemberAccess","src":"55833:15:0"}],"id":2792,"name":"IndexAccess","src":"55813:36:0"}],"id":2793,"name":"MemberAccess","src":"55813:49:0"}],"id":2794,"name":"BinaryOperation","src":"55760:102:0"}],"id":2795,"name":"TupleExpression","src":"55759:104:0"}],"id":2796,"name":"BinaryOperation","src":"55739:124:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2797,"name":"Identifier","src":"55946:7:0"}],"id":2800,"name":"MemberAccess","src":"55946:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2799,"name":"Identifier","src":"55975:1:0"}],"id":2801,"name":"IndexAccess","src":"55946:31:0"}],"id":2802,"name":"MemberAccess","src":"55946:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":2803,"name":"Identifier","src":"55986:16:0"}],"id":2804,"name":"MemberAccess","src":"55986:24:0"}],"id":2805,"name":"Assignment","src":"55946:64:0"}],"id":2806,"name":"ExpressionStatement","src":"55946:64:0"}],"id":2807,"name":"Block","src":"55865:160:0"}],"id":2808,"name":"IfStatement","src":"55735:290:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$1697","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2809,"name":"Identifier","src":"56103:7:0"}],"id":2810,"name":"MemberAccess","src":"56103:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2811,"name":"Identifier","src":"56132:1:0"}],"id":2812,"name":"IndexAccess","src":"56103:31:0"}],"id":2813,"name":"MemberAccess","src":"56103:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Incoherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":2814,"name":"Identifier","src":"56144:16:0"}],"id":2815,"name":"MemberAccess","src":"56144:27:0"}],"id":2816,"name":"BinaryOperation","src":"56103:68:0"},{"children":[{"children":[{"attributes":{"assignments":[2818]},"children":[{"attributes":{"constant":false,"name":"j","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2817,"name":"ElementaryTypeName","src":"56196:4:0"}],"id":2818,"name":"VariableDeclaration","src":"56196:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentIncoherentVote","referencedDeclaration":1703,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2819,"name":"Identifier","src":"56205:7:0"}],"id":2820,"name":"MemberAccess","src":"56205:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2821,"name":"Identifier","src":"56234:1:0"}],"id":2822,"name":"IndexAccess","src":"56205:31:0"}],"id":2823,"name":"MemberAccess","src":"56205:53:0"}],"id":2824,"name":"VariableDeclarationStatement","src":"56196:62:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":2825,"name":"Identifier","src":"56260:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2826,"name":"Identifier","src":"56264:7:0"}],"id":2827,"name":"MemberAccess","src":"56264:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2828,"name":"Identifier","src":"56278:1:0"}],"id":2829,"name":"IndexAccess","src":"56264:16:0"}],"id":2830,"name":"MemberAccess","src":"56264:23:0"}],"id":2831,"name":"BinaryOperation","src":"56260:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":2832,"name":"Identifier","src":"56291:1:0"}],"id":2833,"name":"UnaryOperation","src":"56289:3:0"}],"id":2834,"name":"ExpressionStatement","src":"56289:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2746,"type":"uint256","value":"currentIterations"},"id":2835,"name":"Identifier","src":"56320:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2693,"type":"uint256","value":"_maxIterations"},"id":2836,"name":"Identifier","src":"56341:14:0"}],"id":2837,"name":"BinaryOperation","src":"56320:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":2699},"id":2838,"name":"Return","src":"56383:7:0"}],"id":2839,"name":"Block","src":"56357:55:0"}],"id":2840,"name":"IfStatement","src":"56316:96:0"},{"attributes":{"assignments":[2842]},"children":[{"attributes":{"constant":false,"name":"vote","scope":3183,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Vote","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Vote","referencedDeclaration":1647,"type":"struct Kleros.Vote"},"id":2841,"name":"UserDefinedTypeName","src":"56433:4:0"}],"id":2842,"name":"VariableDeclaration","src":"56433:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2843,"name":"Identifier","src":"56453:7:0"}],"id":2844,"name":"MemberAccess","src":"56453:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2845,"name":"Identifier","src":"56467:1:0"}],"id":2846,"name":"IndexAccess","src":"56453:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":2847,"name":"Identifier","src":"56470:1:0"}],"id":2848,"name":"IndexAccess","src":"56453:19:0"}],"id":2849,"name":"VariableDeclarationStatement","src":"56433:39:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":1646,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2850,"name":"Identifier","src":"56498:4:0"}],"id":2851,"name":"MemberAccess","src":"56498:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2732,"type":"uint256","value":"winningChoice"},"id":2852,"name":"Identifier","src":"56513:13:0"}],"id":2853,"name":"BinaryOperation","src":"56498:28:0"},{"children":[{"attributes":{"assignments":[2855]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3183,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":2854,"name":"UserDefinedTypeName","src":"56554:5:0"}],"id":2855,"name":"VariableDeclaration","src":"56554:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2856,"name":"Identifier","src":"56576:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2857,"name":"Identifier","src":"56583:4:0"}],"id":2858,"name":"MemberAccess","src":"56583:12:0"}],"id":2859,"name":"IndexAccess","src":"56576:20:0"}],"id":2860,"name":"VariableDeclarationStatement","src":"56554:42:0"},{"attributes":{"assignments":[2862]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2861,"name":"ElementaryTypeName","src":"56622:4:0"}],"id":2862,"name":"VariableDeclaration","src":"56622:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2741,"type":"uint256","value":"amountShift"},"id":2863,"name":"Identifier","src":"56637:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2855,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2864,"name":"Identifier","src":"56649:5:0"}],"id":2865,"name":"MemberAccess","src":"56649:13:0"}],"id":2866,"name":"BinaryOperation","src":"56637:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2741,"type":"uint256","value":"amountShift"},"id":2867,"name":"Identifier","src":"56665:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2855,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2868,"name":"Identifier","src":"56679:5:0"}],"id":2869,"name":"MemberAccess","src":"56679:13:0"}],"id":2870,"name":"Conditional","src":"56637:55:0"}],"id":2871,"name":"VariableDeclarationStatement","src":"56622:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2855,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":2872,"name":"Identifier","src":"56718:5:0"}],"id":2874,"name":"MemberAccess","src":"56718:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2862,"type":"uint256","value":"penalty"},"id":2875,"name":"Identifier","src":"56735:7:0"}],"id":2876,"name":"Assignment","src":"56718:24:0"}],"id":2877,"name":"ExpressionStatement","src":"56718:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2878,"name":"Identifier","src":"56768:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":2879,"name":"Identifier","src":"56779:4:0"}],"id":2880,"name":"MemberAccess","src":"56779:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2691,"type":"uint256","value":"_disputeID"},"id":2881,"name":"Identifier","src":"56793:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2882,"name":"ElementaryTypeNameExpression","src":"56805:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2862,"type":"uint256","value":"penalty"},"id":2883,"name":"Identifier","src":"56810:7:0"}],"id":2884,"name":"UnaryOperation","src":"56809:8:0"}],"id":2885,"name":"FunctionCall","src":"56805:13:0"}],"id":2886,"name":"FunctionCall","src":"56768:51:0"}],"id":2887,"name":"ExpressionStatement","src":"56768:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"totalToRedistribute","referencedDeclaration":1699,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2888,"name":"Identifier","src":"56845:7:0"}],"id":2891,"name":"MemberAccess","src":"56845:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2890,"name":"Identifier","src":"56874:1:0"}],"id":2892,"name":"IndexAccess","src":"56845:31:0"}],"id":2893,"name":"MemberAccess","src":"56845:51:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2862,"type":"uint256","value":"penalty"},"id":2894,"name":"Identifier","src":"56900:7:0"}],"id":2895,"name":"Assignment","src":"56845:62:0"}],"id":2896,"name":"ExpressionStatement","src":"56845:62:0"}],"id":2897,"name":"Block","src":"56528:402:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"nbCoherent","referencedDeclaration":1701,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2898,"name":"Identifier","src":"56964:7:0"}],"id":2899,"name":"MemberAccess","src":"56964:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2900,"name":"Identifier","src":"56993:1:0"}],"id":2901,"name":"IndexAccess","src":"56964:31:0"}],"id":2902,"name":"MemberAccess","src":"56964:42:0"}],"id":2903,"name":"UnaryOperation","src":"56962:44:0"}],"id":2904,"name":"ExpressionStatement","src":"56962:44:0"}],"id":2905,"name":"Block","src":"56936:93:0"}],"id":2906,"name":"IfStatement","src":"56494:535:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentIncoherentVote","referencedDeclaration":1703,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2907,"name":"Identifier","src":"57053:7:0"}],"id":2908,"name":"MemberAccess","src":"57053:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2909,"name":"Identifier","src":"57082:1:0"}],"id":2910,"name":"IndexAccess","src":"57053:31:0"}],"id":2911,"name":"MemberAccess","src":"57053:53:0"}],"id":2912,"name":"UnaryOperation","src":"57051:55:0"}],"id":2913,"name":"ExpressionStatement","src":"57051:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2746,"type":"uint256","value":"currentIterations"},"id":2914,"name":"Identifier","src":"57130:17:0"}],"id":2915,"name":"UnaryOperation","src":"57128:19:0"}],"id":2916,"name":"ExpressionStatement","src":"57128:19:0"}],"id":2917,"name":"Block","src":"56294:872:0"}],"id":2918,"name":"ForStatement","src":"56191:975:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2919,"name":"Identifier","src":"57184:7:0"}],"id":2922,"name":"MemberAccess","src":"57184:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2921,"name":"Identifier","src":"57213:1:0"}],"id":2923,"name":"IndexAccess","src":"57184:31:0"}],"id":2924,"name":"MemberAccess","src":"57184:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Coherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":2925,"name":"Identifier","src":"57224:16:0"}],"id":2926,"name":"MemberAccess","src":"57224:25:0"}],"id":2927,"name":"Assignment","src":"57184:65:0"}],"id":2928,"name":"ExpressionStatement","src":"57184:65:0"}],"id":2929,"name":"Block","src":"56173:1091:0"}],"id":2930,"name":"IfStatement","src":"56099:1165:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$1697","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2931,"name":"Identifier","src":"57335:7:0"}],"id":2932,"name":"MemberAccess","src":"57335:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2933,"name":"Identifier","src":"57364:1:0"}],"id":2934,"name":"IndexAccess","src":"57335:31:0"}],"id":2935,"name":"MemberAccess","src":"57335:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Coherent","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":2936,"name":"Identifier","src":"57376:16:0"}],"id":2937,"name":"MemberAccess","src":"57376:25:0"}],"id":2938,"name":"BinaryOperation","src":"57335:66:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"nbCoherent","referencedDeclaration":1701,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2939,"name":"Identifier","src":"57425:7:0"}],"id":2940,"name":"MemberAccess","src":"57425:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2941,"name":"Identifier","src":"57454:1:0"}],"id":2942,"name":"IndexAccess","src":"57425:31:0"}],"id":2943,"name":"MemberAccess","src":"57425:42:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2944,"name":"Literal","src":"57471:1:0"}],"id":2945,"name":"BinaryOperation","src":"57425:47:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":2946,"name":"Identifier","src":"57567:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":2947,"name":"Identifier","src":"57574:8:0"}],"id":2948,"name":"IndexAccess","src":"57567:16:0"}],"id":2949,"name":"MemberAccess","src":"57567:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":1699,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2950,"name":"Identifier","src":"57595:7:0"}],"id":2951,"name":"MemberAccess","src":"57595:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2952,"name":"Identifier","src":"57624:1:0"}],"id":2953,"name":"IndexAccess","src":"57595:31:0"}],"id":2954,"name":"MemberAccess","src":"57595:51:0"}],"id":2955,"name":"Assignment","src":"57567:79:0"}],"id":2956,"name":"ExpressionStatement","src":"57567:79:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":2957,"name":"Identifier","src":"57668:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":2958,"name":"Identifier","src":"57679:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2691,"type":"uint256","value":"_disputeID"},"id":2959,"name":"Identifier","src":"57689:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":2960,"name":"ElementaryTypeNameExpression","src":"57701:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":1699,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2961,"name":"Identifier","src":"57705:7:0"}],"id":2962,"name":"MemberAccess","src":"57705:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2963,"name":"Identifier","src":"57734:1:0"}],"id":2964,"name":"IndexAccess","src":"57705:31:0"}],"id":2965,"name":"MemberAccess","src":"57705:51:0"}],"id":2966,"name":"FunctionCall","src":"57701:56:0"}],"id":2967,"name":"FunctionCall","src":"57668:90:0"}],"id":2968,"name":"ExpressionStatement","src":"57668:90:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2969,"name":"Identifier","src":"57780:7:0"}],"id":2972,"name":"MemberAccess","src":"57780:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2971,"name":"Identifier","src":"57809:1:0"}],"id":2973,"name":"IndexAccess","src":"57780:31:0"}],"id":2974,"name":"MemberAccess","src":"57780:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":2975,"name":"Identifier","src":"57820:16:0"}],"id":2976,"name":"MemberAccess","src":"57820:24:0"}],"id":2977,"name":"Assignment","src":"57780:64:0"}],"id":2978,"name":"ExpressionStatement","src":"57780:64:0"}],"id":2979,"name":"Block","src":"57474:389:0"},{"children":[{"attributes":{"assignments":[2981]},"children":[{"attributes":{"constant":false,"name":"toRedistribute","scope":3183,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2980,"name":"ElementaryTypeName","src":"57924:4:0"}],"id":2981,"name":"VariableDeclaration","src":"57924:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"totalToRedistribute","referencedDeclaration":1699,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2982,"name":"Identifier","src":"57946:7:0"}],"id":2983,"name":"MemberAccess","src":"57946:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2984,"name":"Identifier","src":"57975:1:0"}],"id":2985,"name":"IndexAccess","src":"57946:31:0"}],"id":2986,"name":"MemberAccess","src":"57946:51:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"nbCoherent","referencedDeclaration":1701,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2987,"name":"Identifier","src":"58000:7:0"}],"id":2988,"name":"MemberAccess","src":"58000:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2989,"name":"Identifier","src":"58029:1:0"}],"id":2990,"name":"IndexAccess","src":"58000:31:0"}],"id":2991,"name":"MemberAccess","src":"58000:42:0"}],"id":2992,"name":"BinaryOperation","src":"57946:96:0"}],"id":2993,"name":"VariableDeclarationStatement","src":"57924:118:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":2994,"name":"Identifier","src":"58224:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentCoherentVote","referencedDeclaration":1705,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":2995,"name":"Identifier","src":"58228:7:0"}],"id":2996,"name":"MemberAccess","src":"58228:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":2997,"name":"Identifier","src":"58257:1:0"}],"id":2998,"name":"IndexAccess","src":"58228:31:0"}],"id":2999,"name":"MemberAccess","src":"58228:51:0"}],"id":3000,"name":"Assignment","src":"58224:55:0"}],"id":3001,"name":"ExpressionStatement","src":"58224:55:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":3002,"name":"Identifier","src":"58281:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3003,"name":"Identifier","src":"58285:7:0"}],"id":3004,"name":"MemberAccess","src":"58285:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3005,"name":"Identifier","src":"58299:1:0"}],"id":3006,"name":"IndexAccess","src":"58285:16:0"}],"id":3007,"name":"MemberAccess","src":"58285:23:0"}],"id":3008,"name":"BinaryOperation","src":"58281:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":3009,"name":"Identifier","src":"58312:1:0"}],"id":3010,"name":"UnaryOperation","src":"58310:3:0"}],"id":3011,"name":"ExpressionStatement","src":"58310:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2746,"type":"uint256","value":"currentIterations"},"id":3012,"name":"Identifier","src":"58345:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2693,"type":"uint256","value":"_maxIterations"},"id":3013,"name":"Identifier","src":"58366:14:0"}],"id":3014,"name":"BinaryOperation","src":"58345:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":2699},"id":3015,"name":"Return","src":"58412:7:0"}],"id":3016,"name":"Block","src":"58382:63:0"}],"id":3017,"name":"IfStatement","src":"58341:104:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3018,"name":"Identifier","src":"58470:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3019,"name":"Identifier","src":"58477:7:0"}],"id":3020,"name":"MemberAccess","src":"58477:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3021,"name":"Identifier","src":"58491:1:0"}],"id":3022,"name":"IndexAccess","src":"58477:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":3023,"name":"Identifier","src":"58494:1:0"}],"id":3024,"name":"IndexAccess","src":"58477:19:0"}],"id":3025,"name":"Assignment","src":"58470:26:0"}],"id":3026,"name":"ExpressionStatement","src":"58470:26:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":1646,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3027,"name":"Identifier","src":"58526:4:0"}],"id":3028,"name":"MemberAccess","src":"58526:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2732,"type":"uint256","value":"winningChoice"},"id":3029,"name":"Identifier","src":"58541:13:0"}],"id":3030,"name":"BinaryOperation","src":"58526:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2855,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3031,"name":"Identifier","src":"58586:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3032,"name":"Identifier","src":"58594:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3033,"name":"Identifier","src":"58601:4:0"}],"id":3034,"name":"MemberAccess","src":"58601:12:0"}],"id":3035,"name":"IndexAccess","src":"58594:20:0"}],"id":3036,"name":"Assignment","src":"58586:28:0"}],"id":3037,"name":"ExpressionStatement","src":"58586:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"balance","referencedDeclaration":1629,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2855,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3038,"name":"Identifier","src":"58644:5:0"}],"id":3040,"name":"MemberAccess","src":"58644:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2981,"type":"uint256","value":"toRedistribute"},"id":3041,"name":"Identifier","src":"58661:14:0"}],"id":3042,"name":"Assignment","src":"58644:31:0"}],"id":3043,"name":"ExpressionStatement","src":"58644:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"overloadedDeclarations":[null],"referencedDeclaration":1727,"type":"function (address,uint256,int256)","value":"TokenShift"},"id":3044,"name":"Identifier","src":"58705:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3045,"name":"Identifier","src":"58716:4:0"}],"id":3046,"name":"MemberAccess","src":"58716:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2691,"type":"uint256","value":"_disputeID"},"id":3047,"name":"Identifier","src":"58730:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"int256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(int256)","value":"int"},"id":3048,"name":"ElementaryTypeNameExpression","src":"58742:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2981,"type":"uint256","value":"toRedistribute"},"id":3049,"name":"Identifier","src":"58746:14:0"}],"id":3050,"name":"FunctionCall","src":"58742:19:0"}],"id":3051,"name":"FunctionCall","src":"58705:57:0"}],"id":3052,"name":"ExpressionStatement","src":"58705:57:0"}],"id":3053,"name":"Block","src":"58556:233:0"}],"id":3054,"name":"IfStatement","src":"58522:267:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2746,"type":"uint256","value":"currentIterations"},"id":3055,"name":"Identifier","src":"58817:17:0"}],"id":3056,"name":"UnaryOperation","src":"58815:19:0"}],"id":3057,"name":"ExpressionStatement","src":"58815:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentCoherentVote","referencedDeclaration":1705,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3058,"name":"Identifier","src":"58862:7:0"}],"id":3059,"name":"MemberAccess","src":"58862:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3060,"name":"Identifier","src":"58891:1:0"}],"id":3061,"name":"IndexAccess","src":"58862:31:0"}],"id":3062,"name":"MemberAccess","src":"58862:51:0"}],"id":3063,"name":"UnaryOperation","src":"58860:53:0"}],"id":3064,"name":"ExpressionStatement","src":"58860:53:0"}],"id":3065,"name":"Block","src":"58315:621:0"}],"id":3066,"name":"ForStatement","src":"58219:717:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3067,"name":"Identifier","src":"58958:7:0"}],"id":3070,"name":"MemberAccess","src":"58958:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3069,"name":"Identifier","src":"58987:1:0"}],"id":3071,"name":"IndexAccess","src":"58958:31:0"}],"id":3072,"name":"MemberAccess","src":"58958:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3073,"name":"Identifier","src":"58998:16:0"}],"id":3074,"name":"MemberAccess","src":"58998:24:0"}],"id":3075,"name":"Assignment","src":"58958:64:0"}],"id":3076,"name":"ExpressionStatement","src":"58958:64:0"}],"id":3077,"name":"Block","src":"57869:1172:0"}],"id":3078,"name":"IfStatement","src":"57421:1620:0"}],"id":3079,"name":"Block","src":"57403:1652:0"}],"id":3080,"name":"IfStatement","src":"57331:1724:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$1697","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3081,"name":"Identifier","src":"59073:7:0"}],"id":3082,"name":"MemberAccess","src":"59073:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3083,"name":"Identifier","src":"59102:1:0"}],"id":3084,"name":"IndexAccess","src":"59073:31:0"}],"id":3085,"name":"MemberAccess","src":"59073:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"AtStake","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3086,"name":"Identifier","src":"59114:16:0"}],"id":3087,"name":"MemberAccess","src":"59114:24:0"}],"id":3088,"name":"BinaryOperation","src":"59073:65:0"},{"children":[{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":3089,"name":"Identifier","src":"59241:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"currentAtStakeVote","referencedDeclaration":1707,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3090,"name":"Identifier","src":"59245:7:0"}],"id":3091,"name":"MemberAccess","src":"59245:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3092,"name":"Identifier","src":"59274:1:0"}],"id":3093,"name":"IndexAccess","src":"59245:31:0"}],"id":3094,"name":"MemberAccess","src":"59245:50:0"}],"id":3095,"name":"Assignment","src":"59241:54:0"}],"id":3096,"name":"ExpressionStatement","src":"59241:54:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":3097,"name":"Identifier","src":"59297:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3098,"name":"Identifier","src":"59301:7:0"}],"id":3099,"name":"MemberAccess","src":"59301:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3100,"name":"Identifier","src":"59315:1:0"}],"id":3101,"name":"IndexAccess","src":"59301:16:0"}],"id":3102,"name":"MemberAccess","src":"59301:23:0"}],"id":3103,"name":"BinaryOperation","src":"59297:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":3104,"name":"Identifier","src":"59328:1:0"}],"id":3105,"name":"UnaryOperation","src":"59326:3:0"}],"id":3106,"name":"ExpressionStatement","src":"59326:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2746,"type":"uint256","value":"currentIterations"},"id":3107,"name":"Identifier","src":"59357:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2693,"type":"uint256","value":"_maxIterations"},"id":3108,"name":"Identifier","src":"59378:14:0"}],"id":3109,"name":"BinaryOperation","src":"59357:35:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":2699},"id":3110,"name":"Return","src":"59420:7:0"}],"id":3111,"name":"Block","src":"59394:55:0"}],"id":3112,"name":"IfStatement","src":"59353:96:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Vote storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3113,"name":"Identifier","src":"59470:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3114,"name":"Identifier","src":"59477:7:0"}],"id":3115,"name":"MemberAccess","src":"59477:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3116,"name":"Identifier","src":"59491:1:0"}],"id":3117,"name":"IndexAccess","src":"59477:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2818,"type":"uint256","value":"j"},"id":3118,"name":"Identifier","src":"59494:1:0"}],"id":3119,"name":"IndexAccess","src":"59477:19:0"}],"id":3120,"name":"Assignment","src":"59470:26:0"}],"id":3121,"name":"ExpressionStatement","src":"59470:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Kleros.Juror storage pointer"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2855,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3122,"name":"Identifier","src":"59518:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3123,"name":"Identifier","src":"59526:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2842,"type":"struct Kleros.Vote storage pointer","value":"vote"},"id":3124,"name":"Identifier","src":"59533:4:0"}],"id":3125,"name":"MemberAccess","src":"59533:12:0"}],"id":3126,"name":"IndexAccess","src":"59526:20:0"}],"id":3127,"name":"Assignment","src":"59518:28:0"}],"id":3128,"name":"ExpressionStatement","src":"59518:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"atStake","referencedDeclaration":1631,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2855,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3129,"name":"Identifier","src":"59568:5:0"}],"id":3131,"name":"MemberAccess","src":"59568:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2741,"type":"uint256","value":"amountShift"},"id":3132,"name":"Identifier","src":"59585:11:0"}],"id":3133,"name":"Assignment","src":"59568:28:0"}],"id":3134,"name":"ExpressionStatement","src":"59568:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2746,"type":"uint256","value":"currentIterations"},"id":3135,"name":"Identifier","src":"59718:17:0"}],"id":3136,"name":"UnaryOperation","src":"59716:19:0"}],"id":3137,"name":"ExpressionStatement","src":"59716:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentAtStakeVote","referencedDeclaration":1707,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3138,"name":"Identifier","src":"59759:7:0"}],"id":3139,"name":"MemberAccess","src":"59759:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3140,"name":"Identifier","src":"59788:1:0"}],"id":3141,"name":"IndexAccess","src":"59759:31:0"}],"id":3142,"name":"MemberAccess","src":"59759:50:0"}],"id":3143,"name":"UnaryOperation","src":"59757:52:0"}],"id":3144,"name":"ExpressionStatement","src":"59757:52:0"}],"id":3145,"name":"Block","src":"59331:497:0"}],"id":3146,"name":"ForStatement","src":"59236:592:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3147,"name":"Identifier","src":"59846:7:0"}],"id":3150,"name":"MemberAccess","src":"59846:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3149,"name":"Identifier","src":"59875:1:0"}],"id":3151,"name":"IndexAccess","src":"59846:31:0"}],"id":3152,"name":"MemberAccess","src":"59846:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Complete","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3153,"name":"Identifier","src":"59886:16:0"}],"id":3154,"name":"MemberAccess","src":"59886:25:0"}],"id":3155,"name":"Assignment","src":"59846:65:0"}],"id":3156,"name":"ExpressionStatement","src":"59846:65:0"}],"id":3157,"name":"Block","src":"59140:786:0"}],"id":3158,"name":"IfStatement","src":"59069:857:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_RepartitionStage_$1697","typeString":"enum Kleros.RepartitionStage"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"stage","referencedDeclaration":1709,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.AppealsRepartitioned storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appealsRepartitioned","referencedDeclaration":1691,"type":"struct Kleros.AppealsRepartitioned storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3159,"name":"Identifier","src":"59944:7:0"}],"id":3160,"name":"MemberAccess","src":"59944:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"uint256","value":"i"},"id":3161,"name":"Identifier","src":"59973:1:0"}],"id":3162,"name":"IndexAccess","src":"59944:31:0"}],"id":3163,"name":"MemberAccess","src":"59944:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Complete","referencedDeclaration":null,"type":"enum Kleros.RepartitionStage"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1697,"type":"type(enum Kleros.RepartitionStage)","value":"RepartitionStage"},"id":3164,"name":"Identifier","src":"59985:16:0"}],"id":3165,"name":"MemberAccess","src":"59985:25:0"}],"id":3166,"name":"BinaryOperation","src":"59944:66:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"currentAppealToRepartition","referencedDeclaration":1688,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3167,"name":"Identifier","src":"60032:7:0"}],"id":3168,"name":"MemberAccess","src":"60032:34:0"}],"id":3169,"name":"UnaryOperation","src":"60030:36:0"}],"id":3170,"name":"ExpressionStatement","src":"60030:36:0"}],"id":3171,"name":"Block","src":"60012:69:0"}],"id":3172,"name":"IfStatement","src":"59940:141:0"}],"id":3173,"name":"Block","src":"55381:4710:0"}],"id":3174,"name":"ForStatement","src":"55304:4787:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3175,"name":"Identifier","src":"60101:7:0"}],"id":3177,"name":"MemberAccess","src":"60101:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3178,"name":"Identifier","src":"60117:12:0"}],"id":3179,"name":"MemberAccess","src":"60117:23:0"}],"id":3180,"name":"Assignment","src":"60101:39:0"}],"id":3181,"name":"ExpressionStatement","src":"60101:39:0"}],"id":3182,"name":"Block","src":"54777:5370:0"}],"id":3183,"name":"FunctionDefinition","src":"54665:5482:0"},{"attributes":{"constant":true,"documentation":"@dev Return the amount of jurors which are or will be drawn in the dispute.\n The number of jurors is doubled and 1 is added at each appeal. We have proven the formula by recurrence.\n This avoid having a variable number of jurors which would be updated in order to save gas.\n @param _disputeID The ID of the dispute we compute the amount of jurors.\n @return nbJurors The number of jurors which are drawn.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"amountJurors","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3210,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3184,"name":"ElementaryTypeName","src":"60780:4:0"}],"id":3185,"name":"VariableDeclaration","src":"60780:15:0"}],"id":3186,"name":"ParameterList","src":"60779:17:0"},{"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3210,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3187,"name":"ElementaryTypeName","src":"60818:4:0"}],"id":3188,"name":"VariableDeclaration","src":"60818:13:0"}],"id":3189,"name":"ParameterList","src":"60817:15:0"},{"children":[{"attributes":{"assignments":[3191]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3210,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3190,"name":"UserDefinedTypeName","src":"60843:7:0"}],"id":3191,"name":"VariableDeclaration","src":"60843:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3192,"name":"Identifier","src":"60869:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3185,"type":"uint256","value":"_disputeID"},"id":3193,"name":"Identifier","src":"60878:10:0"}],"id":3194,"name":"IndexAccess","src":"60869:20:0"}],"id":3195,"name":"VariableDeclarationStatement","src":"60843:46:0"},{"attributes":{"functionReturnParameters":3189},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"initialNumberJurors","referencedDeclaration":1671,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3191,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3196,"name":"Identifier","src":"60907:7:0"}],"id":3197,"name":"MemberAccess","src":"60907:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3198,"name":"Literal","src":"60937:1:0"}],"id":3199,"name":"BinaryOperation","src":"60907:31:0"}],"id":3200,"name":"TupleExpression","src":"60906:33:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":3201,"name":"Literal","src":"60942:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3191,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3202,"name":"Identifier","src":"60945:7:0"}],"id":3203,"name":"MemberAccess","src":"60945:15:0"}],"id":3204,"name":"BinaryOperation","src":"60942:18:0"}],"id":3205,"name":"BinaryOperation","src":"60906:54:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3206,"name":"Literal","src":"60963:1:0"}],"id":3207,"name":"BinaryOperation","src":"60906:58:0"}],"id":3208,"name":"Return","src":"60899:65:0"}],"id":3209,"name":"Block","src":"60833:138:0"}],"id":3210,"name":"FunctionDefinition","src":"60758:213:0"},{"attributes":{"constant":true,"documentation":"@dev Must be used to verify that a juror has been draw at least _draws.length times.\n We have to require the user to specify the draws that lead the juror to be drawn.\n Because doing otherwise (looping through all draws) could consume too much gas.\n @param _jurorAddress Address of the juror we want to verify draws.\n @param _disputeID The ID of the dispute the juror was drawn.\n @param _draws The list of draws the juror was drawn. It draw numbering starts at 1 and the numbers should be increasing.\n Note that in most cases this list will just contain 1 number.\n @param valid true if the draws are valid.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"validDraws","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_jurorAddress","scope":3330,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3211,"name":"ElementaryTypeName","src":"61669:7:0"}],"id":3212,"name":"VariableDeclaration","src":"61669:21:0"},{"attributes":{"constant":false,"name":"_disputeID","scope":3330,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3213,"name":"ElementaryTypeName","src":"61692:4:0"}],"id":3214,"name":"VariableDeclaration","src":"61692:15:0"},{"attributes":{"constant":false,"name":"_draws","scope":3330,"stateVariable":false,"storageLocation":"default","type":"uint256[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint256[]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3215,"name":"ElementaryTypeName","src":"61709:4:0"}],"id":3216,"name":"ArrayTypeName","src":"61709:6:0"}],"id":3217,"name":"VariableDeclaration","src":"61709:13:0"}],"id":3218,"name":"ParameterList","src":"61668:55:0"},{"children":[{"attributes":{"constant":false,"name":"valid","scope":3330,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3219,"name":"ElementaryTypeName","src":"61745:4:0"}],"id":3220,"name":"VariableDeclaration","src":"61745:10:0"}],"id":3221,"name":"ParameterList","src":"61744:12:0"},{"children":[{"attributes":{"assignments":[3223]},"children":[{"attributes":{"constant":false,"name":"draw","scope":3330,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3222,"name":"ElementaryTypeName","src":"61767:4:0"}],"id":3223,"name":"VariableDeclaration","src":"61767:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3224,"name":"Literal","src":"61779:1:0"}],"id":3225,"name":"VariableDeclarationStatement","src":"61767:13:0"},{"attributes":{"assignments":[3227]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3330,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":3226,"name":"UserDefinedTypeName","src":"61790:5:0"}],"id":3227,"name":"VariableDeclaration","src":"61790:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3228,"name":"Identifier","src":"61812:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3212,"type":"address","value":"_jurorAddress"},"id":3229,"name":"Identifier","src":"61819:13:0"}],"id":3230,"name":"IndexAccess","src":"61812:21:0"}],"id":3231,"name":"VariableDeclarationStatement","src":"61790:43:0"},{"attributes":{"assignments":[3233]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3330,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3232,"name":"UserDefinedTypeName","src":"61843:7:0"}],"id":3233,"name":"VariableDeclaration","src":"61843:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3234,"name":"Identifier","src":"61869:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3214,"type":"uint256","value":"_disputeID"},"id":3235,"name":"Identifier","src":"61878:10:0"}],"id":3236,"name":"IndexAccess","src":"61869:20:0"}],"id":3237,"name":"VariableDeclarationStatement","src":"61843:46:0"},{"attributes":{"assignments":[3239]},"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3330,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3238,"name":"ElementaryTypeName","src":"61899:4:0"}],"id":3239,"name":"VariableDeclaration","src":"61899:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3210,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":3240,"name":"Identifier","src":"61915:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3214,"type":"uint256","value":"_disputeID"},"id":3241,"name":"Identifier","src":"61928:10:0"}],"id":3242,"name":"FunctionCall","src":"61915:24:0"}],"id":3243,"name":"VariableDeclarationStatement","src":"61899:40:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":1633,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3227,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3244,"name":"Identifier","src":"61954:5:0"}],"id":3245,"name":"MemberAccess","src":"61954:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3246,"name":"Identifier","src":"61975:7:0"}],"id":3247,"name":"BinaryOperation","src":"61954:28:0"},{"attributes":{"functionReturnParameters":3221},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3248,"name":"Literal","src":"61991:5:0"}],"id":3249,"name":"Return","src":"61984:12:0"}],"id":3250,"name":"IfStatement","src":"61950:46:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3233,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3251,"name":"Identifier","src":"62072:7:0"}],"id":3252,"name":"MemberAccess","src":"62072:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3233,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3253,"name":"Identifier","src":"62088:7:0"}],"id":3254,"name":"MemberAccess","src":"62088:15:0"}],"id":3255,"name":"BinaryOperation","src":"62072:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3256,"name":"Identifier","src":"62107:7:0"}],"id":3257,"name":"BinaryOperation","src":"62072:42:0"},{"attributes":{"functionReturnParameters":3221},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3258,"name":"Literal","src":"62123:5:0"}],"id":3259,"name":"Return","src":"62116:12:0"}],"id":3260,"name":"IfStatement","src":"62068:60:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":3261,"name":"Identifier","src":"62185:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":3262,"name":"Identifier","src":"62195:6:0"}],"id":3263,"name":"MemberAccess","src":"62195:11:0"}],"id":3264,"name":"BinaryOperation","src":"62185:21:0"},{"attributes":{"functionReturnParameters":3221},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3265,"name":"Literal","src":"62215:5:0"}],"id":3266,"name":"Return","src":"62208:12:0"}],"id":3267,"name":"IfStatement","src":"62181:39:0"},{"children":[{"attributes":{"assignments":[3269]},"children":[{"attributes":{"constant":false,"name":"i","scope":3330,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3268,"name":"ElementaryTypeName","src":"62279:4:0"}],"id":3269,"name":"VariableDeclaration","src":"62279:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3270,"name":"Literal","src":"62288:1:0"}],"id":3271,"name":"VariableDeclarationStatement","src":"62279:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3269,"type":"uint256","value":"i"},"id":3272,"name":"Identifier","src":"62291:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3217,"type":"uint256[] memory","value":"_draws"},"id":3273,"name":"Identifier","src":"62295:6:0"}],"id":3274,"name":"MemberAccess","src":"62295:13:0"}],"id":3275,"name":"BinaryOperation","src":"62291:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3269,"type":"uint256","value":"i"},"id":3276,"name":"Identifier","src":"62312:1:0"}],"id":3277,"name":"UnaryOperation","src":"62310:3:0"}],"id":3278,"name":"ExpressionStatement","src":"62310:3:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3217,"type":"uint256[] memory","value":"_draws"},"id":3279,"name":"Identifier","src":"62333:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3269,"type":"uint256","value":"i"},"id":3280,"name":"Identifier","src":"62340:1:0"}],"id":3281,"name":"IndexAccess","src":"62333:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3223,"type":"uint256","value":"draw"},"id":3282,"name":"Identifier","src":"62346:4:0"}],"id":3283,"name":"BinaryOperation","src":"62333:17:0"},{"attributes":{"functionReturnParameters":3221},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3284,"name":"Literal","src":"62359:5:0"}],"id":3285,"name":"Return","src":"62352:12:0"}],"id":3286,"name":"IfStatement","src":"62329:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3223,"type":"uint256","value":"draw"},"id":3287,"name":"Identifier","src":"62475:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3217,"type":"uint256[] memory","value":"_draws"},"id":3288,"name":"Identifier","src":"62482:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3269,"type":"uint256","value":"i"},"id":3289,"name":"Identifier","src":"62489:1:0"}],"id":3290,"name":"IndexAccess","src":"62482:9:0"}],"id":3291,"name":"Assignment","src":"62475:16:0"}],"id":3292,"name":"ExpressionStatement","src":"62475:16:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3223,"type":"uint256","value":"draw"},"id":3293,"name":"Identifier","src":"62509:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3239,"type":"uint256","value":"nbJurors"},"id":3294,"name":"Identifier","src":"62516:8:0"}],"id":3295,"name":"BinaryOperation","src":"62509:15:0"},{"attributes":{"functionReturnParameters":3221},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3296,"name":"Literal","src":"62533:5:0"}],"id":3297,"name":"Return","src":"62526:12:0"}],"id":3298,"name":"IfStatement","src":"62505:33:0"},{"attributes":{"assignments":[3300]},"children":[{"attributes":{"constant":false,"name":"position","scope":3330,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3299,"name":"ElementaryTypeName","src":"62552:4:0"}],"id":3300,"name":"VariableDeclaration","src":"62552:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":3301,"name":"ElementaryTypeNameExpression","src":"62568:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4063,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":3302,"name":"Identifier","src":"62573:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"uint256","value":"randomNumber"},"id":3303,"name":"Identifier","src":"62583:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3214,"type":"uint256","value":"_disputeID"},"id":3304,"name":"Identifier","src":"62597:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3223,"type":"uint256","value":"draw"},"id":3305,"name":"Identifier","src":"62609:4:0"}],"id":3306,"name":"FunctionCall","src":"62573:41:0"}],"id":3307,"name":"FunctionCall","src":"62568:47:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"segmentSize"},"id":3308,"name":"Identifier","src":"62618:11:0"}],"id":3309,"name":"BinaryOperation","src":"62568:61:0"}],"id":3310,"name":"VariableDeclarationStatement","src":"62552:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":3311,"name":"Identifier","src":"62687:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3300,"type":"uint256","value":"position"},"id":3312,"name":"Identifier","src":"62695:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentStart","referencedDeclaration":1635,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3227,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3313,"name":"Identifier","src":"62707:5:0"}],"id":3314,"name":"MemberAccess","src":"62707:18:0"}],"id":3315,"name":"BinaryOperation","src":"62695:30:0"}],"id":3316,"name":"FunctionCall","src":"62687:39:0"}],"id":3317,"name":"ExpressionStatement","src":"62687:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":3318,"name":"Identifier","src":"62740:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3300,"type":"uint256","value":"position"},"id":3319,"name":"Identifier","src":"62748:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentEnd","referencedDeclaration":1637,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3227,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3320,"name":"Identifier","src":"62759:5:0"}],"id":3321,"name":"MemberAccess","src":"62759:16:0"}],"id":3322,"name":"BinaryOperation","src":"62748:27:0"}],"id":3323,"name":"FunctionCall","src":"62740:36:0"}],"id":3324,"name":"ExpressionStatement","src":"62740:36:0"}],"id":3325,"name":"Block","src":"62315:472:0"}],"id":3326,"name":"ForStatement","src":"62274:513:0"},{"attributes":{"functionReturnParameters":3221},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":3327,"name":"Literal","src":"62804:4:0"}],"id":3328,"name":"Return","src":"62797:11:0"}],"id":3329,"name":"Block","src":"61757:1058:0"}],"id":3330,"name":"FunctionDefinition","src":"61649:1166:0"},{"attributes":{"constant":false,"documentation":"@dev Create a dispute. Must be called by the arbitrable contract.\n Must be paid at least arbitrationCost().\n @param _choices Amount of choices the arbitrator can make in this dispute.\n @param _extraData Null for the default number. Otherwise, first 16 bytes will be used to return the number of jurors.\n @return disputeID ID of the dispute created.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"createDispute","payable":true,"scope":4054,"stateMutability":"payable","superFunction":1513,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_choices","scope":3437,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3331,"name":"ElementaryTypeName","src":"63394:4:0"}],"id":3332,"name":"VariableDeclaration","src":"63394:13:0"},{"attributes":{"constant":false,"name":"_extraData","scope":3437,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3333,"name":"ElementaryTypeName","src":"63409:5:0"}],"id":3334,"name":"VariableDeclaration","src":"63409:16:0"}],"id":3335,"name":"ParameterList","src":"63393:33:0"},{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":3437,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3336,"name":"ElementaryTypeName","src":"63451:4:0"}],"id":3337,"name":"VariableDeclaration","src":"63451:14:0"}],"id":3338,"name":"ParameterList","src":"63450:16:0"},{"children":[{"attributes":{"assignments":[3340]},"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3437,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":3339,"name":"ElementaryTypeName","src":"63477:6:0"}],"id":3340,"name":"VariableDeclaration","src":"63477:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3629,"type":"function (bytes memory) view returns (uint16)","value":"extraDataToNbJurors"},"id":3341,"name":"Identifier","src":"63495:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3334,"type":"bytes memory","value":"_extraData"},"id":3342,"name":"Identifier","src":"63515:10:0"}],"id":3343,"name":"FunctionCall","src":"63495:31:0"}],"id":3344,"name":"VariableDeclarationStatement","src":"63477:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":3345,"name":"Identifier","src":"63536:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":3346,"name":"Identifier","src":"63544:3:0"}],"id":3347,"name":"MemberAccess","src":"63544:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[3564],"referencedDeclaration":3564,"type":"function (bytes memory) view returns (uint256)","value":"arbitrationCost"},"id":3348,"name":"Identifier","src":"63557:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3334,"type":"bytes memory","value":"_extraData"},"id":3349,"name":"Identifier","src":"63573:10:0"}],"id":3350,"name":"FunctionCall","src":"63557:27:0"}],"id":3351,"name":"BinaryOperation","src":"63544:40:0"}],"id":3352,"name":"FunctionCall","src":"63536:49:0"}],"id":3353,"name":"ExpressionStatement","src":"63536:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3337,"type":"uint256","value":"disputeID"},"id":3354,"name":"Identifier","src":"63596:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3355,"name":"Identifier","src":"63608:8:0"}],"id":3356,"name":"MemberAccess","src":"63608:15:0"}],"id":3357,"name":"UnaryOperation","src":"63608:17:0"}],"id":3358,"name":"Assignment","src":"63596:29:0"}],"id":3359,"name":"ExpressionStatement","src":"63596:29:0"},{"attributes":{"assignments":[3361]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3437,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3360,"name":"UserDefinedTypeName","src":"63635:7:0"}],"id":3361,"name":"VariableDeclaration","src":"63635:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3362,"name":"Identifier","src":"63661:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3337,"type":"uint256","value":"disputeID"},"id":3363,"name":"Identifier","src":"63670:9:0"}],"id":3364,"name":"IndexAccess","src":"63661:19:0"}],"id":3365,"name":"VariableDeclarationStatement","src":"63635:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"arbitrated","referencedDeclaration":1663,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3366,"name":"Identifier","src":"63690:7:0"}],"id":3368,"name":"MemberAccess","src":"63690:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1447,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":3369,"name":"Identifier","src":"63711:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":3370,"name":"Identifier","src":"63722:3:0"}],"id":3371,"name":"MemberAccess","src":"63722:10:0"}],"id":3372,"name":"FunctionCall","src":"63711:22:0"}],"id":3373,"name":"Assignment","src":"63690:43:0"}],"id":3374,"name":"ExpressionStatement","src":"63690:43:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":3375,"name":"Identifier","src":"63747:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":3376,"name":"Identifier","src":"63756:6:0"}],"id":3377,"name":"MemberAccess","src":"63756:11:0"}],"id":3378,"name":"BinaryOperation","src":"63747:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3379,"name":"Identifier","src":"63846:7:0"}],"id":3381,"name":"MemberAccess","src":"63846:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3382,"name":"Identifier","src":"63864:7:0"}],"id":3383,"name":"Assignment","src":"63846:25:0"}],"id":3384,"name":"ExpressionStatement","src":"63846:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3385,"name":"Identifier","src":"63941:7:0"}],"id":3387,"name":"MemberAccess","src":"63941:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3388,"name":"Identifier","src":"63959:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3389,"name":"Literal","src":"63967:1:0"}],"id":3390,"name":"BinaryOperation","src":"63959:9:0"}],"id":3391,"name":"Assignment","src":"63941:27:0"}],"id":3392,"name":"ExpressionStatement","src":"63941:27:0"}],"id":3393,"name":"IfStatement","src":"63743:225:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"choices","referencedDeclaration":1669,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3394,"name":"Identifier","src":"63978:7:0"}],"id":3396,"name":"MemberAccess","src":"63978:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3332,"type":"uint256","value":"_choices"},"id":3397,"name":"Identifier","src":"63996:8:0"}],"id":3398,"name":"Assignment","src":"63978:26:0"}],"id":3399,"name":"ExpressionStatement","src":"63978:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"initialNumberJurors","referencedDeclaration":1671,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3400,"name":"Identifier","src":"64014:7:0"}],"id":3402,"name":"MemberAccess","src":"64014:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3340,"type":"uint16","value":"nbJurors"},"id":3403,"name":"Identifier","src":"64044:8:0"}],"id":3404,"name":"Assignment","src":"64014:38:0"}],"id":3405,"name":"ExpressionStatement","src":"64014:38:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"arbitrationFeePerJuror","referencedDeclaration":1673,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3406,"name":"Identifier","src":"64062:7:0"}],"id":3408,"name":"MemberAccess","src":"64062:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1585,"type":"uint256","value":"arbitrationFeePerJuror"},"id":3409,"name":"Identifier","src":"64095:22:0"}],"id":3410,"name":"Assignment","src":"64062:55:0"}],"id":3411,"name":"ExpressionStatement","src":"64062:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3412,"name":"Identifier","src":"64210:7:0"}],"id":3415,"name":"MemberAccess","src":"64210:13:0"}],"id":3416,"name":"MemberAccess","src":"64210:20:0"}],"id":3417,"name":"UnaryOperation","src":"64210:22:0"}],"id":3418,"name":"ExpressionStatement","src":"64210:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3361,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3419,"name":"Identifier","src":"64242:7:0"}],"id":3422,"name":"MemberAccess","src":"64242:19:0"}],"id":3423,"name":"MemberAccess","src":"64242:26:0"}],"id":3424,"name":"UnaryOperation","src":"64242:28:0"}],"id":3425,"name":"ExpressionStatement","src":"64242:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_Arbitrable_$1447","typeString":"contract Arbitrable"}],"overloadedDeclarations":[null],"referencedDeclaration":1494,"type":"function (uint256,contract Arbitrable)","value":"DisputeCreation"},"id":3426,"name":"Identifier","src":"64281:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3337,"type":"uint256","value":"disputeID"},"id":3427,"name":"Identifier","src":"64297:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Arbitrable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1447,"type":"type(contract Arbitrable)","value":"Arbitrable"},"id":3428,"name":"Identifier","src":"64308:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":3429,"name":"Identifier","src":"64319:3:0"}],"id":3430,"name":"MemberAccess","src":"64319:10:0"}],"id":3431,"name":"FunctionCall","src":"64308:22:0"}],"id":3432,"name":"FunctionCall","src":"64281:50:0"}],"id":3433,"name":"ExpressionStatement","src":"64281:50:0"},{"attributes":{"functionReturnParameters":3338},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3337,"type":"uint256","value":"disputeID"},"id":3434,"name":"Identifier","src":"64348:9:0"}],"id":3435,"name":"Return","src":"64341:16:0"}],"id":3436,"name":"Block","src":"63467:897:0"}],"id":3437,"name":"FunctionDefinition","src":"63371:993:0"},{"attributes":{"constant":false,"documentation":"@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Standard but not used by this contract.","implemented":true,"isConstructor":false,"name":"appeal","payable":true,"scope":4054,"stateMutability":"payable","superFunction":1540,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3509,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3438,"name":"ElementaryTypeName","src":"64623:4:0"}],"id":3439,"name":"VariableDeclaration","src":"64623:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":3509,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3440,"name":"ElementaryTypeName","src":"64640:5:0"}],"id":3441,"name":"VariableDeclaration","src":"64640:16:0"}],"id":3442,"name":"ParameterList","src":"64622:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":3447,"name":"ParameterList","src":"64699:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1760,"type":"modifier (enum Kleros.Period)","value":"onlyDuring"},"id":3443,"name":"Identifier","src":"64673:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":3444,"name":"Identifier","src":"64684:6:0"}],"id":3445,"name":"MemberAccess","src":"64684:13:0"}],"id":3446,"name":"ModifierInvocation","src":"64673:25:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"appeal","referencedDeclaration":1540,"type":"function (uint256,bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4103,"type":"contract super Kleros","value":"super"},"id":3448,"name":"Identifier","src":"64709:5:0"}],"id":3450,"name":"MemberAccess","src":"64709:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3439,"type":"uint256","value":"_disputeID"},"id":3451,"name":"Identifier","src":"64722:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3441,"type":"bytes memory","value":"_extraData"},"id":3452,"name":"Identifier","src":"64733:10:0"}],"id":3453,"name":"FunctionCall","src":"64709:35:0"}],"id":3454,"name":"ExpressionStatement","src":"64709:35:0"},{"attributes":{"assignments":[3456]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3509,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3455,"name":"UserDefinedTypeName","src":"64754:7:0"}],"id":3456,"name":"VariableDeclaration","src":"64754:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3457,"name":"Identifier","src":"64780:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3439,"type":"uint256","value":"_disputeID"},"id":3458,"name":"Identifier","src":"64789:10:0"}],"id":3459,"name":"IndexAccess","src":"64780:20:0"}],"id":3460,"name":"VariableDeclarationStatement","src":"64754:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":3461,"name":"Identifier","src":"64810:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":3462,"name":"Identifier","src":"64818:3:0"}],"id":3463,"name":"MemberAccess","src":"64818:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[3599],"referencedDeclaration":3599,"type":"function (uint256,bytes memory) view returns (uint256)","value":"appealCost"},"id":3464,"name":"Identifier","src":"64831:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3439,"type":"uint256","value":"_disputeID"},"id":3465,"name":"Identifier","src":"64842:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3441,"type":"bytes memory","value":"_extraData"},"id":3466,"name":"Identifier","src":"64854:10:0"}],"id":3467,"name":"FunctionCall","src":"64831:34:0"}],"id":3468,"name":"BinaryOperation","src":"64818:47:0"}],"id":3469,"name":"FunctionCall","src":"64810:56:0"}],"id":3470,"name":"ExpressionStatement","src":"64810:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":3471,"name":"Identifier","src":"64876:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3456,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3472,"name":"Identifier","src":"64884:7:0"}],"id":3473,"name":"MemberAccess","src":"64884:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3456,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3474,"name":"Identifier","src":"64900:7:0"}],"id":3475,"name":"MemberAccess","src":"64900:15:0"}],"id":3476,"name":"BinaryOperation","src":"64884:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3477,"name":"Identifier","src":"64919:7:0"}],"id":3478,"name":"BinaryOperation","src":"64884:42:0"}],"id":3479,"name":"FunctionCall","src":"64876:51:0"}],"id":3480,"name":"ExpressionStatement","src":"64876:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":3481,"name":"Identifier","src":"64972:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrated","referencedDeclaration":1663,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3456,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3482,"name":"Identifier","src":"64980:7:0"}],"id":3483,"name":"MemberAccess","src":"64980:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"msg","value":"msg"},"id":3484,"name":"Identifier","src":"65002:3:0"}],"id":3485,"name":"MemberAccess","src":"65002:10:0"}],"id":3486,"name":"BinaryOperation","src":"64980:32:0"}],"id":3487,"name":"FunctionCall","src":"64972:41:0"}],"id":3488,"name":"ExpressionStatement","src":"64972:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3456,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3489,"name":"Identifier","src":"65032:7:0"}],"id":3491,"name":"MemberAccess","src":"65032:15:0"}],"id":3492,"name":"UnaryOperation","src":"65032:17:0"}],"id":3493,"name":"ExpressionStatement","src":"65032:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3456,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3494,"name":"Identifier","src":"65059:7:0"}],"id":3497,"name":"MemberAccess","src":"65059:13:0"}],"id":3498,"name":"MemberAccess","src":"65059:20:0"}],"id":3499,"name":"UnaryOperation","src":"65059:22:0"}],"id":3500,"name":"ExpressionStatement","src":"65059:22:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3456,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3501,"name":"Identifier","src":"65091:7:0"}],"id":3504,"name":"MemberAccess","src":"65091:19:0"}],"id":3505,"name":"MemberAccess","src":"65091:26:0"}],"id":3506,"name":"UnaryOperation","src":"65091:28:0"}],"id":3507,"name":"ExpressionStatement","src":"65091:28:0"}],"id":3508,"name":"Block","src":"64699:427:0"}],"id":3509,"name":"FunctionDefinition","src":"64607:519:0"},{"attributes":{"constant":false,"documentation":"@dev Execute the ruling of a dispute which is in the state executable. UNTRUSTED.\n @param disputeID ID of the dispute to execute the ruling.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"executeRuling","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"disputeID","scope":3550,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3510,"name":"ElementaryTypeName","src":"65319:4:0"}],"id":3511,"name":"VariableDeclaration","src":"65319:14:0"}],"id":3512,"name":"ParameterList","src":"65318:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":3513,"name":"ParameterList","src":"65342:0:0"},{"children":[{"attributes":{"assignments":[3515]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3550,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3514,"name":"UserDefinedTypeName","src":"65352:7:0"}],"id":3515,"name":"VariableDeclaration","src":"65352:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3516,"name":"Identifier","src":"65378:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3511,"type":"uint256","value":"disputeID"},"id":3517,"name":"Identifier","src":"65387:9:0"}],"id":3518,"name":"IndexAccess","src":"65378:19:0"}],"id":3519,"name":"VariableDeclarationStatement","src":"65352:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4072,4073],"referencedDeclaration":4072,"type":"function (bool) pure","value":"require"},"id":3520,"name":"Identifier","src":"65407:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$1661","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3515,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3521,"name":"Identifier","src":"65415:7:0"}],"id":3522,"name":"MemberAccess","src":"65415:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executable","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3523,"name":"Identifier","src":"65432:12:0"}],"id":3524,"name":"MemberAccess","src":"65432:23:0"}],"id":3525,"name":"BinaryOperation","src":"65415:40:0"}],"id":3526,"name":"FunctionCall","src":"65407:49:0"}],"id":3527,"name":"ExpressionStatement","src":"65407:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3515,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3528,"name":"Identifier","src":"65467:7:0"}],"id":3530,"name":"MemberAccess","src":"65467:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Executed","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3531,"name":"Identifier","src":"65483:12:0"}],"id":3532,"name":"MemberAccess","src":"65483:21:0"}],"id":3533,"name":"Assignment","src":"65467:37:0"}],"id":3534,"name":"ExpressionStatement","src":"65467:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"rule","referencedDeclaration":1439,"type":"function (uint256,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrated","referencedDeclaration":1663,"type":"contract Arbitrable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3515,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3535,"name":"Identifier","src":"65514:7:0"}],"id":3538,"name":"MemberAccess","src":"65514:18:0"}],"id":3539,"name":"MemberAccess","src":"65514:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3511,"type":"uint256","value":"disputeID"},"id":3540,"name":"Identifier","src":"65538:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":1649,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3515,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3541,"name":"Identifier","src":"65549:7:0"}],"id":3542,"name":"MemberAccess","src":"65549:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3515,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3543,"name":"Identifier","src":"65569:7:0"}],"id":3544,"name":"MemberAccess","src":"65569:15:0"}],"id":3545,"name":"IndexAccess","src":"65549:36:0"}],"id":3546,"name":"MemberAccess","src":"65549:50:0"}],"id":3547,"name":"FunctionCall","src":"65514:86:0"}],"id":3548,"name":"ExpressionStatement","src":"65514:86:0"}],"id":3549,"name":"Block","src":"65342:265:0"}],"id":3550,"name":"FunctionDefinition","src":"65296:311:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the cost of arbitration. It is recommended not to increase it often, \n as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n @return fee Amount to be paid.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"arbitrationCost","payable":false,"scope":4054,"stateMutability":"view","superFunction":1520,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":3564,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3551,"name":"ElementaryTypeName","src":"66164:5:0"}],"id":3552,"name":"VariableDeclaration","src":"66164:16:0"}],"id":3553,"name":"ParameterList","src":"66163:18:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":3564,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3554,"name":"ElementaryTypeName","src":"66203:4:0"}],"id":3555,"name":"VariableDeclaration","src":"66203:8:0"}],"id":3556,"name":"ParameterList","src":"66202:10:0"},{"children":[{"attributes":{"functionReturnParameters":3556},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":3629,"type":"function (bytes memory) view returns (uint16)","value":"extraDataToNbJurors"},"id":3557,"name":"Identifier","src":"66230:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3552,"type":"bytes memory","value":"_extraData"},"id":3558,"name":"Identifier","src":"66250:10:0"}],"id":3559,"name":"FunctionCall","src":"66230:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1585,"type":"uint256","value":"arbitrationFeePerJuror"},"id":3560,"name":"Identifier","src":"66264:22:0"}],"id":3561,"name":"BinaryOperation","src":"66230:56:0"}],"id":3562,"name":"Return","src":"66223:63:0"}],"id":3563,"name":"Block","src":"66213:80:0"}],"id":3564,"name":"FunctionDefinition","src":"66139:154:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the cost of appeal. It is recommended not to increase it often, \n as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _disputeID ID of the dispute to be appealed.\n @param _extraData Is not used there.\n @return fee Amount to be paid.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"appealCost","payable":false,"scope":4054,"stateMutability":"view","superFunction":1549,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3599,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3565,"name":"ElementaryTypeName","src":"66668:4:0"}],"id":3566,"name":"VariableDeclaration","src":"66668:15:0"},{"attributes":{"constant":false,"name":"_extraData","scope":3599,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3567,"name":"ElementaryTypeName","src":"66685:5:0"}],"id":3568,"name":"VariableDeclaration","src":"66685:16:0"}],"id":3569,"name":"ParameterList","src":"66667:35:0"},{"children":[{"attributes":{"constant":false,"name":"fee","scope":3599,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3570,"name":"ElementaryTypeName","src":"66724:4:0"}],"id":3571,"name":"VariableDeclaration","src":"66724:8:0"}],"id":3572,"name":"ParameterList","src":"66723:10:0"},{"children":[{"attributes":{"assignments":[3574]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3599,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3573,"name":"UserDefinedTypeName","src":"66744:7:0"}],"id":3574,"name":"VariableDeclaration","src":"66744:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3575,"name":"Identifier","src":"66770:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3566,"type":"uint256","value":"_disputeID"},"id":3576,"name":"Identifier","src":"66779:10:0"}],"id":3577,"name":"IndexAccess","src":"66770:20:0"}],"id":3578,"name":"VariableDeclarationStatement","src":"66744:46:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3574,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3579,"name":"Identifier","src":"66804:7:0"}],"id":3580,"name":"MemberAccess","src":"66804:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1606,"type":"uint256","value":"maxAppeals"},"id":3581,"name":"Identifier","src":"66823:10:0"}],"id":3582,"name":"BinaryOperation","src":"66804:29:0"},{"attributes":{"functionReturnParameters":3572},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1580,"type":"uint256","value":"NON_PAYABLE_AMOUNT"},"id":3583,"name":"Identifier","src":"66842:18:0"}],"id":3584,"name":"Return","src":"66835:25:0"}],"id":3585,"name":"IfStatement","src":"66801:59:0"},{"attributes":{"functionReturnParameters":3572},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":3586,"name":"Literal","src":"66879:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3210,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":3587,"name":"Identifier","src":"66881:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3566,"type":"uint256","value":"_disputeID"},"id":3588,"name":"Identifier","src":"66894:10:0"}],"id":3589,"name":"FunctionCall","src":"66881:24:0"}],"id":3590,"name":"BinaryOperation","src":"66879:26:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3591,"name":"Literal","src":"66908:1:0"}],"id":3592,"name":"BinaryOperation","src":"66879:30:0"}],"id":3593,"name":"TupleExpression","src":"66878:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"arbitrationFeePerJuror","referencedDeclaration":1673,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3574,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3594,"name":"Identifier","src":"66913:7:0"}],"id":3595,"name":"MemberAccess","src":"66913:30:0"}],"id":3596,"name":"BinaryOperation","src":"66878:65:0"}],"id":3597,"name":"Return","src":"66871:72:0"}],"id":3598,"name":"Block","src":"66734:216:0"}],"id":3599,"name":"FunctionDefinition","src":"66648:302:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the amount of jurors to be drawn.\n @param _extraData Null for the default number. Other first 16 bits will be used to return the number of jurors.\n Note that it does not check that the number of jurors is odd, but users are advised to choose a odd number of jurors.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"extraDataToNbJurors","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_extraData","scope":3629,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3600,"name":"ElementaryTypeName","src":"67294:5:0"}],"id":3601,"name":"VariableDeclaration","src":"67294:16:0"}],"id":3602,"name":"ParameterList","src":"67293:18:0"},{"children":[{"attributes":{"constant":false,"name":"nbJurors","scope":3629,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":3603,"name":"ElementaryTypeName","src":"67335:6:0"}],"id":3604,"name":"VariableDeclaration","src":"67335:15:0"}],"id":3605,"name":"ParameterList","src":"67334:17:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3601,"type":"bytes memory","value":"_extraData"},"id":3606,"name":"Identifier","src":"67366:10:0"}],"id":3607,"name":"MemberAccess","src":"67366:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":3608,"name":"Literal","src":"67386:1:0"}],"id":3609,"name":"BinaryOperation","src":"67366:21:0"},{"attributes":{"functionReturnParameters":3605},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1588,"type":"uint16","value":"defaultNumberJuror"},"id":3610,"name":"Identifier","src":"67408:18:0"}],"id":3611,"name":"Return","src":"67401:25:0"},{"attributes":{"functionReturnParameters":3605},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<<","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint16)","value":"uint16"},"id":3612,"name":"ElementaryTypeNameExpression","src":"67461:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3601,"type":"bytes memory","value":"_extraData"},"id":3613,"name":"Identifier","src":"67468:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3614,"name":"Literal","src":"67479:1:0"}],"id":3615,"name":"IndexAccess","src":"67468:13:0"}],"id":3616,"name":"FunctionCall","src":"67461:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":3617,"name":"Literal","src":"67486:1:0"}],"id":3618,"name":"BinaryOperation","src":"67461:26:0"}],"id":3619,"name":"TupleExpression","src":"67460:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint16","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint16)","value":"uint16"},"id":3620,"name":"ElementaryTypeNameExpression","src":"67491:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3601,"type":"bytes memory","value":"_extraData"},"id":3621,"name":"Identifier","src":"67498:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3622,"name":"Literal","src":"67509:1:0"}],"id":3623,"name":"IndexAccess","src":"67498:13:0"}],"id":3624,"name":"FunctionCall","src":"67491:21:0"}],"id":3625,"name":"BinaryOperation","src":"67460:52:0"}],"id":3626,"name":"Return","src":"67453:59:0"}],"id":3627,"name":"IfStatement","src":"67362:150:0"}],"id":3628,"name":"Block","src":"67352:167:0"}],"id":3629,"name":"FunctionDefinition","src":"67265:254:0"},{"attributes":{"constant":true,"documentation":"@dev Compute the minimum activated pinakions in alpha.\n Note there may be multiple draws for a single user on a single dispute.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getStakePerDraw","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":3630,"name":"ParameterList","src":"67700:2:0"},{"children":[{"attributes":{"constant":false,"name":"minActivatedTokenInAlpha","scope":3642,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3631,"name":"ElementaryTypeName","src":"67724:4:0"}],"id":3632,"name":"VariableDeclaration","src":"67724:29:0"}],"id":3633,"name":"ParameterList","src":"67723:31:0"},{"children":[{"attributes":{"functionReturnParameters":3633},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1600,"type":"uint256","value":"alpha"},"id":3634,"name":"Identifier","src":"67773:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1593,"type":"uint256","value":"minActivatedToken"},"id":3635,"name":"Identifier","src":"67781:17:0"}],"id":3636,"name":"BinaryOperation","src":"67773:25:0"}],"id":3637,"name":"TupleExpression","src":"67772:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"ALPHA_DIVISOR"},"id":3638,"name":"Identifier","src":"67802:13:0"}],"id":3639,"name":"BinaryOperation","src":"67772:43:0"}],"id":3640,"name":"Return","src":"67765:50:0"}],"id":3641,"name":"Block","src":"67755:67:0"}],"id":3642,"name":"FunctionDefinition","src":"67676:146:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for account in Vote.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @param _voteID The ID of the vote for this appeal (or initial session).\n @return account The address of the voter.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteAccount","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3664,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3643,"name":"ElementaryTypeName","src":"68264:4:0"}],"id":3644,"name":"VariableDeclaration","src":"68264:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":3664,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3645,"name":"ElementaryTypeName","src":"68281:4:0"}],"id":3646,"name":"VariableDeclaration","src":"68281:13:0"},{"attributes":{"constant":false,"name":"_voteID","scope":3664,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3647,"name":"ElementaryTypeName","src":"68296:4:0"}],"id":3648,"name":"VariableDeclaration","src":"68296:12:0"}],"id":3649,"name":"ParameterList","src":"68263:46:0"},{"children":[{"attributes":{"constant":false,"name":"account","scope":3664,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3650,"name":"ElementaryTypeName","src":"68331:7:0"}],"id":3651,"name":"VariableDeclaration","src":"68331:15:0"}],"id":3652,"name":"ParameterList","src":"68330:17:0"},{"children":[{"attributes":{"functionReturnParameters":3652},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"account","referencedDeclaration":1644,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3653,"name":"Identifier","src":"68365:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3644,"type":"uint256","value":"_disputeID"},"id":3654,"name":"Identifier","src":"68374:10:0"}],"id":3655,"name":"IndexAccess","src":"68365:20:0"}],"id":3656,"name":"MemberAccess","src":"68365:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3646,"type":"uint256","value":"_appeals"},"id":3657,"name":"Identifier","src":"68392:8:0"}],"id":3658,"name":"IndexAccess","src":"68365:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3648,"type":"uint256","value":"_voteID"},"id":3659,"name":"Identifier","src":"68402:7:0"}],"id":3660,"name":"IndexAccess","src":"68365:45:0"}],"id":3661,"name":"MemberAccess","src":"68365:53:0"}],"id":3662,"name":"Return","src":"68358:60:0"}],"id":3663,"name":"Block","src":"68348:77:0"}],"id":3664,"name":"FunctionDefinition","src":"68240:185:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for ruling in Vote.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @param _voteID The ID of the vote for this appeal (or initial session).\n @return ruling The ruling given by the voter.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteRuling","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3686,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3665,"name":"ElementaryTypeName","src":"68750:4:0"}],"id":3666,"name":"VariableDeclaration","src":"68750:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":3686,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3667,"name":"ElementaryTypeName","src":"68767:4:0"}],"id":3668,"name":"VariableDeclaration","src":"68767:13:0"},{"attributes":{"constant":false,"name":"_voteID","scope":3686,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3669,"name":"ElementaryTypeName","src":"68782:4:0"}],"id":3670,"name":"VariableDeclaration","src":"68782:12:0"}],"id":3671,"name":"ParameterList","src":"68749:46:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":3686,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3672,"name":"ElementaryTypeName","src":"68817:4:0"}],"id":3673,"name":"VariableDeclaration","src":"68817:11:0"}],"id":3674,"name":"ParameterList","src":"68816:13:0"},{"children":[{"attributes":{"functionReturnParameters":3674},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"ruling","referencedDeclaration":1646,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Vote storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"votes","referencedDeclaration":1679,"type":"struct Kleros.Vote storage ref[] storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3675,"name":"Identifier","src":"68847:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3666,"type":"uint256","value":"_disputeID"},"id":3676,"name":"Identifier","src":"68856:10:0"}],"id":3677,"name":"IndexAccess","src":"68847:20:0"}],"id":3678,"name":"MemberAccess","src":"68847:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3668,"type":"uint256","value":"_appeals"},"id":3679,"name":"Identifier","src":"68874:8:0"}],"id":3680,"name":"IndexAccess","src":"68847:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3670,"type":"uint256","value":"_voteID"},"id":3681,"name":"Identifier","src":"68884:7:0"}],"id":3682,"name":"IndexAccess","src":"68847:45:0"}],"id":3683,"name":"MemberAccess","src":"68847:52:0"}],"id":3684,"name":"Return","src":"68840:59:0"}],"id":3685,"name":"Block","src":"68830:76:0"}],"id":3686,"name":"FunctionDefinition","src":"68727:179:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for winningChoice in VoteCounter.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @return winningChoice The currently winning choice (or 0 if it's tied). Note that 0 can also be return if the majority refuses to arbitrate.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getWinningChoice","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3704,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3687,"name":"ElementaryTypeName","src":"69263:4:0"}],"id":3688,"name":"VariableDeclaration","src":"69263:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":3704,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3689,"name":"ElementaryTypeName","src":"69280:4:0"}],"id":3690,"name":"VariableDeclaration","src":"69280:13:0"}],"id":3691,"name":"ParameterList","src":"69262:32:0"},{"children":[{"attributes":{"constant":false,"name":"winningChoice","scope":3704,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3692,"name":"ElementaryTypeName","src":"69316:4:0"}],"id":3693,"name":"VariableDeclaration","src":"69316:18:0"}],"id":3694,"name":"ParameterList","src":"69315:20:0"},{"children":[{"attributes":{"functionReturnParameters":3694},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":1649,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3695,"name":"Identifier","src":"69353:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3688,"type":"uint256","value":"_disputeID"},"id":3696,"name":"Identifier","src":"69362:10:0"}],"id":3697,"name":"IndexAccess","src":"69353:20:0"}],"id":3698,"name":"MemberAccess","src":"69353:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3690,"type":"uint256","value":"_appeals"},"id":3699,"name":"Identifier","src":"69386:8:0"}],"id":3700,"name":"IndexAccess","src":"69353:42:0"}],"id":3701,"name":"MemberAccess","src":"69353:56:0"}],"id":3702,"name":"Return","src":"69346:63:0"}],"id":3703,"name":"Block","src":"69336:80:0"}],"id":3704,"name":"FunctionDefinition","src":"69237:179:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for winningCount in VoteCounter.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @return winningCount The amount of votes the winning choice (or those who are tied) has.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getWinningCount","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3722,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3705,"name":"ElementaryTypeName","src":"69719:4:0"}],"id":3706,"name":"VariableDeclaration","src":"69719:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":3722,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3707,"name":"ElementaryTypeName","src":"69736:4:0"}],"id":3708,"name":"VariableDeclaration","src":"69736:13:0"}],"id":3709,"name":"ParameterList","src":"69718:32:0"},{"children":[{"attributes":{"constant":false,"name":"winningCount","scope":3722,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3710,"name":"ElementaryTypeName","src":"69772:4:0"}],"id":3711,"name":"VariableDeclaration","src":"69772:17:0"}],"id":3712,"name":"ParameterList","src":"69771:19:0"},{"children":[{"attributes":{"functionReturnParameters":3712},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningCount","referencedDeclaration":1651,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3713,"name":"Identifier","src":"69808:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3706,"type":"uint256","value":"_disputeID"},"id":3714,"name":"Identifier","src":"69817:10:0"}],"id":3715,"name":"IndexAccess","src":"69808:20:0"}],"id":3716,"name":"MemberAccess","src":"69808:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3708,"type":"uint256","value":"_appeals"},"id":3717,"name":"Identifier","src":"69841:8:0"}],"id":3718,"name":"IndexAccess","src":"69808:42:0"}],"id":3719,"name":"MemberAccess","src":"69808:55:0"}],"id":3720,"name":"Return","src":"69801:62:0"}],"id":3721,"name":"Block","src":"69791:79:0"}],"id":3722,"name":"FunctionDefinition","src":"69694:176:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for voteCount in VoteCounter.\n @param _disputeID ID of the dispute.\n @param _appeals Which appeal (or 0 for the initial session).\n @param _choice The choice.\n @return voteCount The amount of votes the winning choice (or those who are tied) has.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getVoteCount","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3744,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3723,"name":"ElementaryTypeName","src":"70199:4:0"}],"id":3724,"name":"VariableDeclaration","src":"70199:15:0"},{"attributes":{"constant":false,"name":"_appeals","scope":3744,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3725,"name":"ElementaryTypeName","src":"70216:4:0"}],"id":3726,"name":"VariableDeclaration","src":"70216:13:0"},{"attributes":{"constant":false,"name":"_choice","scope":3744,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3727,"name":"ElementaryTypeName","src":"70231:4:0"}],"id":3728,"name":"VariableDeclaration","src":"70231:12:0"}],"id":3729,"name":"ParameterList","src":"70198:46:0"},{"children":[{"attributes":{"constant":false,"name":"voteCount","scope":3744,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3730,"name":"ElementaryTypeName","src":"70266:4:0"}],"id":3731,"name":"VariableDeclaration","src":"70266:14:0"}],"id":3732,"name":"ParameterList","src":"70265:16:0"},{"children":[{"attributes":{"functionReturnParameters":3732},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCount","referencedDeclaration":1655,"type":"mapping(uint256 => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3733,"name":"Identifier","src":"70299:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3724,"type":"uint256","value":"_disputeID"},"id":3734,"name":"Identifier","src":"70308:10:0"}],"id":3735,"name":"IndexAccess","src":"70299:20:0"}],"id":3736,"name":"MemberAccess","src":"70299:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3726,"type":"uint256","value":"_appeals"},"id":3737,"name":"Identifier","src":"70332:8:0"}],"id":3738,"name":"IndexAccess","src":"70299:42:0"}],"id":3739,"name":"MemberAccess","src":"70299:52:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3728,"type":"uint256","value":"_choice"},"id":3740,"name":"Identifier","src":"70352:7:0"}],"id":3741,"name":"IndexAccess","src":"70299:61:0"}],"id":3742,"name":"Return","src":"70292:68:0"}],"id":3743,"name":"Block","src":"70282:85:0"}],"id":3744,"name":"FunctionDefinition","src":"70177:190:0"},{"attributes":{"constant":true,"documentation":"@dev Getter for lastSessionVote in Dispute.\n @param _disputeID ID of the dispute.\n @param _juror The juror we want to get the last session he voted.\n @return lastSessionVote The last session the juror voted.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getLastSessionVote","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3761,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3745,"name":"ElementaryTypeName","src":"70646:4:0"}],"id":3746,"name":"VariableDeclaration","src":"70646:15:0"},{"attributes":{"constant":false,"name":"_juror","scope":3761,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3747,"name":"ElementaryTypeName","src":"70663:7:0"}],"id":3748,"name":"VariableDeclaration","src":"70663:14:0"}],"id":3749,"name":"ParameterList","src":"70645:33:0"},{"children":[{"attributes":{"constant":false,"name":"lastSessionVote","scope":3761,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3750,"name":"ElementaryTypeName","src":"70700:4:0"}],"id":3751,"name":"VariableDeclaration","src":"70700:20:0"}],"id":3752,"name":"ParameterList","src":"70699:22:0"},{"children":[{"attributes":{"functionReturnParameters":3752},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSessionVote","referencedDeclaration":1686,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3753,"name":"Identifier","src":"70739:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3746,"type":"uint256","value":"_disputeID"},"id":3754,"name":"Identifier","src":"70748:10:0"}],"id":3755,"name":"IndexAccess","src":"70739:20:0"}],"id":3756,"name":"MemberAccess","src":"70739:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3748,"type":"address","value":"_juror"},"id":3757,"name":"Identifier","src":"70776:6:0"}],"id":3758,"name":"IndexAccess","src":"70739:44:0"}],"id":3759,"name":"Return","src":"70732:51:0"}],"id":3760,"name":"Block","src":"70722:68:0"}],"id":3761,"name":"FunctionDefinition","src":"70618:172:0"},{"attributes":{"constant":true,"documentation":"@dev Is the juror drawn in the draw of the dispute.\n @param _disputeID ID of the dispute.\n @param _juror The juror.\n @param _draw The draw. Note that it starts at 1.\n @return drawn True if the juror is drawn, false otherwise.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isDrawn","payable":false,"scope":4054,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3846,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3762,"name":"ElementaryTypeName","src":"71083:4:0"}],"id":3763,"name":"VariableDeclaration","src":"71083:15:0"},{"attributes":{"constant":false,"name":"_juror","scope":3846,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3764,"name":"ElementaryTypeName","src":"71100:7:0"}],"id":3765,"name":"VariableDeclaration","src":"71100:14:0"},{"attributes":{"constant":false,"name":"_draw","scope":3846,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3766,"name":"ElementaryTypeName","src":"71116:4:0"}],"id":3767,"name":"VariableDeclaration","src":"71116:10:0"}],"id":3768,"name":"ParameterList","src":"71082:45:0"},{"children":[{"attributes":{"constant":false,"name":"drawn","scope":3846,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3769,"name":"ElementaryTypeName","src":"71149:4:0"}],"id":3770,"name":"VariableDeclaration","src":"71149:10:0"}],"id":3771,"name":"ParameterList","src":"71148:12:0"},{"children":[{"attributes":{"assignments":[3773]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3846,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3772,"name":"UserDefinedTypeName","src":"71171:7:0"}],"id":3773,"name":"VariableDeclaration","src":"71171:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3774,"name":"Identifier","src":"71197:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3763,"type":"uint256","value":"_disputeID"},"id":3775,"name":"Identifier","src":"71206:10:0"}],"id":3776,"name":"IndexAccess","src":"71197:20:0"}],"id":3777,"name":"VariableDeclarationStatement","src":"71171:46:0"},{"attributes":{"assignments":[3779]},"children":[{"attributes":{"constant":false,"name":"juror","scope":3846,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Juror","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Juror","referencedDeclaration":1638,"type":"struct Kleros.Juror"},"id":3778,"name":"UserDefinedTypeName","src":"71227:5:0"}],"id":3779,"name":"VariableDeclaration","src":"71227:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Juror storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1642,"type":"mapping(address => struct Kleros.Juror storage ref)","value":"jurors"},"id":3780,"name":"Identifier","src":"71249:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3765,"type":"address","value":"_juror"},"id":3781,"name":"Identifier","src":"71256:6:0"}],"id":3782,"name":"IndexAccess","src":"71249:14:0"}],"id":3783,"name":"VariableDeclarationStatement","src":"71227:36:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"lastSession","referencedDeclaration":1633,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3779,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3784,"name":"Identifier","src":"71277:5:0"}],"id":3785,"name":"MemberAccess","src":"71277:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3786,"name":"Identifier","src":"71298:7:0"}],"id":3787,"name":"BinaryOperation","src":"71277:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3773,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3788,"name":"Identifier","src":"71318:7:0"}],"id":3789,"name":"MemberAccess","src":"71318:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3773,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3790,"name":"Identifier","src":"71334:7:0"}],"id":3791,"name":"MemberAccess","src":"71334:15:0"}],"id":3792,"name":"BinaryOperation","src":"71318:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3793,"name":"Identifier","src":"71353:7:0"}],"id":3794,"name":"BinaryOperation","src":"71318:42:0"}],"id":3795,"name":"TupleExpression","src":"71317:44:0"}],"id":3796,"name":"BinaryOperation","src":"71277:84:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":3797,"name":"Identifier","src":"71373:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Draw","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":3798,"name":"Identifier","src":"71381:6:0"}],"id":3799,"name":"MemberAccess","src":"71381:11:0"}],"id":3800,"name":"BinaryOperation","src":"71373:19:0"}],"id":3801,"name":"BinaryOperation","src":"71277:115:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3767,"type":"uint256","value":"_draw"},"id":3802,"name":"Identifier","src":"71404:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3210,"type":"function (uint256) view returns (uint256)","value":"amountJurors"},"id":3803,"name":"Identifier","src":"71410:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3763,"type":"uint256","value":"_disputeID"},"id":3804,"name":"Identifier","src":"71423:10:0"}],"id":3805,"name":"FunctionCall","src":"71410:24:0"}],"id":3806,"name":"BinaryOperation","src":"71404:30:0"}],"id":3807,"name":"BinaryOperation","src":"71277:157:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3767,"type":"uint256","value":"_draw"},"id":3808,"name":"Identifier","src":"71446:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3809,"name":"Literal","src":"71453:1:0"}],"id":3810,"name":"BinaryOperation","src":"71446:8:0"}],"id":3811,"name":"BinaryOperation","src":"71277:177:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"segmentSize"},"id":3812,"name":"Identifier","src":"71466:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3813,"name":"Literal","src":"71479:1:0"}],"id":3814,"name":"BinaryOperation","src":"71466:14:0"}],"id":3815,"name":"BinaryOperation","src":"71277:203:0"},{"children":[{"attributes":{"functionReturnParameters":3771},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3816,"name":"Literal","src":"71512:5:0"}],"id":3817,"name":"Return","src":"71505:12:0"}],"id":3818,"name":"Block","src":"71491:37:0"},{"children":[{"attributes":{"assignments":[3820]},"children":[{"attributes":{"constant":false,"name":"position","scope":3846,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3819,"name":"ElementaryTypeName","src":"71548:4:0"}],"id":3820,"name":"VariableDeclaration","src":"71548:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":3821,"name":"ElementaryTypeNameExpression","src":"71564:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4063,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":3822,"name":"Identifier","src":"71569:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"uint256","value":"randomNumber"},"id":3823,"name":"Identifier","src":"71579:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3763,"type":"uint256","value":"_disputeID"},"id":3824,"name":"Identifier","src":"71592:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3767,"type":"uint256","value":"_draw"},"id":3825,"name":"Identifier","src":"71603:5:0"}],"id":3826,"name":"FunctionCall","src":"71569:40:0"}],"id":3827,"name":"FunctionCall","src":"71564:46:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"segmentSize"},"id":3828,"name":"Identifier","src":"71613:11:0"}],"id":3829,"name":"BinaryOperation","src":"71564:60:0"}],"id":3830,"name":"VariableDeclarationStatement","src":"71548:76:0"},{"attributes":{"functionReturnParameters":3771},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3820,"type":"uint256","value":"position"},"id":3831,"name":"Identifier","src":"71646:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentStart","referencedDeclaration":1635,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3779,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3832,"name":"Identifier","src":"71658:5:0"}],"id":3833,"name":"MemberAccess","src":"71658:18:0"}],"id":3834,"name":"BinaryOperation","src":"71646:30:0"}],"id":3835,"name":"TupleExpression","src":"71645:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3820,"type":"uint256","value":"position"},"id":3836,"name":"Identifier","src":"71682:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"segmentEnd","referencedDeclaration":1637,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3779,"type":"struct Kleros.Juror storage pointer","value":"juror"},"id":3837,"name":"Identifier","src":"71693:5:0"}],"id":3838,"name":"MemberAccess","src":"71693:16:0"}],"id":3839,"name":"BinaryOperation","src":"71682:27:0"}],"id":3840,"name":"TupleExpression","src":"71681:29:0"}],"id":3841,"name":"BinaryOperation","src":"71645:65:0"}],"id":3842,"name":"Return","src":"71638:72:0"}],"id":3843,"name":"Block","src":"71534:187:0"}],"id":3844,"name":"IfStatement","src":"71273:448:0"}],"id":3845,"name":"Block","src":"71161:567:0"}],"id":3846,"name":"FunctionDefinition","src":"71066:662:0"},{"attributes":{"constant":true,"documentation":"@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n @param _disputeID ID of the dispute.\n @return ruling The current ruling which will be given if there is no appeal. If it is not available, return 0.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"currentRuling","payable":false,"scope":4054,"stateMutability":"view","superFunction":1563,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3847,"name":"ElementaryTypeName","src":"72040:4:0"}],"id":3848,"name":"VariableDeclaration","src":"72040:15:0"}],"id":3849,"name":"ParameterList","src":"72039:17:0"},{"children":[{"attributes":{"constant":false,"name":"ruling","scope":3867,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3850,"name":"ElementaryTypeName","src":"72078:4:0"}],"id":3851,"name":"VariableDeclaration","src":"72078:11:0"}],"id":3852,"name":"ParameterList","src":"72077:13:0"},{"children":[{"attributes":{"assignments":[3854]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3867,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3853,"name":"UserDefinedTypeName","src":"72101:7:0"}],"id":3854,"name":"VariableDeclaration","src":"72101:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3855,"name":"Identifier","src":"72127:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3848,"type":"uint256","value":"_disputeID"},"id":3856,"name":"Identifier","src":"72136:10:0"}],"id":3857,"name":"IndexAccess","src":"72127:20:0"}],"id":3858,"name":"VariableDeclarationStatement","src":"72101:46:0"},{"attributes":{"functionReturnParameters":3852},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"winningChoice","referencedDeclaration":1649,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.VoteCounter storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"voteCounter","referencedDeclaration":1682,"type":"struct Kleros.VoteCounter storage ref[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3854,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3859,"name":"Identifier","src":"72164:7:0"}],"id":3860,"name":"MemberAccess","src":"72164:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3854,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3861,"name":"Identifier","src":"72184:7:0"}],"id":3862,"name":"MemberAccess","src":"72184:15:0"}],"id":3863,"name":"IndexAccess","src":"72164:36:0"}],"id":3864,"name":"MemberAccess","src":"72164:50:0"}],"id":3865,"name":"Return","src":"72157:57:0"}],"id":3866,"name":"Block","src":"72091:130:0"}],"id":3867,"name":"FunctionDefinition","src":"72017:204:0"},{"attributes":{"constant":true,"documentation":"@dev Return the status of a dispute.\n @param _disputeID ID of the dispute to rule.\n @return status The status of the dispute.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"disputeStatus","payable":false,"scope":4054,"stateMutability":"view","superFunction":1556,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_disputeID","scope":3933,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3868,"name":"ElementaryTypeName","src":"72406:4:0"}],"id":3869,"name":"VariableDeclaration","src":"72406:15:0"}],"id":3870,"name":"ParameterList","src":"72405:17:0"},{"children":[{"attributes":{"constant":false,"name":"status","scope":3933,"stateVariable":false,"storageLocation":"default","type":"enum Arbitrator.DisputeStatus","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DisputeStatus","referencedDeclaration":1451,"type":"enum Arbitrator.DisputeStatus"},"id":3871,"name":"UserDefinedTypeName","src":"72444:13:0"}],"id":3872,"name":"VariableDeclaration","src":"72444:20:0"}],"id":3873,"name":"ParameterList","src":"72443:22:0"},{"children":[{"attributes":{"assignments":[3875]},"children":[{"attributes":{"constant":false,"name":"dispute","scope":3933,"stateVariable":false,"storageLocation":"storage","type":"struct Kleros.Dispute","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Dispute","referencedDeclaration":1692,"type":"struct Kleros.Dispute"},"id":3874,"name":"UserDefinedTypeName","src":"72476:7:0"}],"id":3875,"name":"VariableDeclaration","src":"72476:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Kleros.Dispute storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1713,"type":"struct Kleros.Dispute storage ref[] storage ref","value":"disputes"},"id":3876,"name":"Identifier","src":"72502:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3869,"type":"uint256","value":"_disputeID"},"id":3877,"name":"Identifier","src":"72511:10:0"}],"id":3878,"name":"IndexAccess","src":"72502:20:0"}],"id":3879,"name":"VariableDeclarationStatement","src":"72476:46:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3875,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3880,"name":"Identifier","src":"72536:7:0"}],"id":3881,"name":"MemberAccess","src":"72536:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3875,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3882,"name":"Identifier","src":"72552:7:0"}],"id":3883,"name":"MemberAccess","src":"72552:15:0"}],"id":3884,"name":"BinaryOperation","src":"72536:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3885,"name":"Identifier","src":"72570:7:0"}],"id":3886,"name":"BinaryOperation","src":"72536:41:0"},{"attributes":{"functionReturnParameters":3873},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1451,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":3887,"name":"Identifier","src":"72626:13:0"}],"id":3888,"name":"MemberAccess","src":"72626:20:0"}],"id":3889,"name":"Return","src":"72619:27:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"session","referencedDeclaration":1665,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3875,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3890,"name":"Identifier","src":"72664:7:0"}],"id":3891,"name":"MemberAccess","src":"72664:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"appeals","referencedDeclaration":1667,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3875,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3892,"name":"Identifier","src":"72680:7:0"}],"id":3893,"name":"MemberAccess","src":"72680:15:0"}],"id":3894,"name":"BinaryOperation","src":"72664:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"uint256","value":"session"},"id":3895,"name":"Identifier","src":"72699:7:0"}],"id":3896,"name":"BinaryOperation","src":"72664:42:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_DisputeState_$1661","typeString":"enum Kleros.DisputeState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":1675,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3875,"type":"struct Kleros.Dispute storage pointer","value":"dispute"},"id":3897,"name":"Identifier","src":"72757:7:0"}],"id":3898,"name":"MemberAccess","src":"72757:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Kleros.DisputeState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1661,"type":"type(enum Kleros.DisputeState)","value":"DisputeState"},"id":3899,"name":"Identifier","src":"72774:12:0"}],"id":3900,"name":"MemberAccess","src":"72774:17:0"}],"id":3901,"name":"BinaryOperation","src":"72757:34:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":3902,"name":"Identifier","src":"72815:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":3903,"name":"Identifier","src":"72824:6:0"}],"id":3904,"name":"MemberAccess","src":"72824:13:0"}],"id":3905,"name":"BinaryOperation","src":"72815:22:0"},{"attributes":{"functionReturnParameters":3873},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Waiting","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1451,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":3906,"name":"Identifier","src":"72866:13:0"}],"id":3907,"name":"MemberAccess","src":"72866:21:0"}],"id":3908,"name":"Return","src":"72859:28:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Period_$1625","typeString":"enum Kleros.Period"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"enum Kleros.Period","value":"period"},"id":3909,"name":"Identifier","src":"72914:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appeal","referencedDeclaration":null,"type":"enum Kleros.Period"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"type(enum Kleros.Period)","value":"Period"},"id":3910,"name":"Identifier","src":"72924:6:0"}],"id":3911,"name":"MemberAccess","src":"72924:13:0"}],"id":3912,"name":"BinaryOperation","src":"72914:23:0"},{"attributes":{"functionReturnParameters":3873},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Appealable","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1451,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":3913,"name":"Identifier","src":"72966:13:0"}],"id":3914,"name":"MemberAccess","src":"72966:24:0"}],"id":3915,"name":"Return","src":"72959:31:0"},{"attributes":{"functionReturnParameters":3873},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1451,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":3916,"name":"Identifier","src":"73020:13:0"}],"id":3917,"name":"MemberAccess","src":"73020:20:0"}],"id":3918,"name":"Return","src":"73013:27:0"}],"id":3919,"name":"IfStatement","src":"72910:130:0"}],"id":3920,"name":"IfStatement","src":"72811:229:0"}],"id":3921,"name":"Block","src":"72793:262:0"},{"attributes":{"functionReturnParameters":3873},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Solved","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1451,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":3922,"name":"Identifier","src":"73068:13:0"}],"id":3923,"name":"MemberAccess","src":"73068:20:0"}],"id":3924,"name":"Return","src":"73061:27:0"}],"id":3925,"name":"IfStatement","src":"72753:335:0"}],"id":3926,"name":"Block","src":"72708:391:0"},{"attributes":{"functionReturnParameters":3873},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Waiting","referencedDeclaration":null,"type":"enum Arbitrator.DisputeStatus"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1451,"type":"type(enum Arbitrator.DisputeStatus)","value":"DisputeStatus"},"id":3927,"name":"Identifier","src":"73112:13:0"}],"id":3928,"name":"MemberAccess","src":"73112:21:0"}],"id":3929,"name":"Return","src":"73105:28:0"}],"id":3930,"name":"IfStatement","src":"72661:472:0"}],"id":3931,"name":"IfStatement","src":"72532:601:0"}],"id":3932,"name":"Block","src":"72466:705:0"}],"id":3933,"name":"FunctionDefinition","src":"72383:788:0"},{"attributes":{"constant":false,"documentation":"@dev General call function where the contract execute an arbitrary call with data and ETH following governor orders.\n @param _data Transaction data.\n @param _value Transaction value.\n @param _target Transaction target.","implemented":true,"isConstructor":false,"name":"executeOrder","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_data","scope":3955,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3934,"name":"ElementaryTypeName","src":"73573:7:0"}],"id":3935,"name":"VariableDeclaration","src":"73573:13:0"},{"attributes":{"constant":false,"name":"_value","scope":3955,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3936,"name":"ElementaryTypeName","src":"73588:4:0"}],"id":3937,"name":"VariableDeclaration","src":"73588:11:0"},{"attributes":{"constant":false,"name":"_target","scope":3955,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3938,"name":"ElementaryTypeName","src":"73601:7:0"}],"id":3939,"name":"VariableDeclaration","src":"73601:15:0"}],"id":3940,"name":"ParameterList","src":"73572:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":3943,"name":"ParameterList","src":"73638:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":3941,"name":"Identifier","src":"73625:12:0"}],"id":3942,"name":"ModifierInvocation","src":"73625:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function () payable returns (bool)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"function (uint256) returns (function () payable returns (bool))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"call","referencedDeclaration":null,"type":"function () payable returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3939,"type":"address","value":"_target"},"id":3944,"name":"Identifier","src":"73648:7:0"}],"id":3947,"name":"MemberAccess","src":"73648:12:0"}],"id":3948,"name":"MemberAccess","src":"73648:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3937,"type":"uint256","value":"_value"},"id":3949,"name":"Identifier","src":"73667:6:0"}],"id":3950,"name":"FunctionCall","src":"73648:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3935,"type":"bytes32","value":"_data"},"id":3951,"name":"Identifier","src":"73675:5:0"}],"id":3952,"name":"FunctionCall","src":"73648:33:0"}],"id":3953,"name":"ExpressionStatement","src":"73648:33:0"}],"id":3954,"name":"Block","src":"73638:50:0"}],"id":3955,"name":"FunctionDefinition","src":"73551:137:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for rng.\n @param _rng An instance of RNG.","implemented":true,"isConstructor":false,"name":"setRng","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_rng","scope":3967,"stateVariable":false,"storageLocation":"default","type":"contract RNG","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RNG","referencedDeclaration":1171,"type":"contract RNG"},"id":3956,"name":"UserDefinedTypeName","src":"73787:3:0"}],"id":3957,"name":"VariableDeclaration","src":"73787:8:0"}],"id":3958,"name":"ParameterList","src":"73786:10:0"},{"attributes":{"parameters":[null]},"children":[],"id":3961,"name":"ParameterList","src":"73817:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":3959,"name":"Identifier","src":"73804:12:0"}],"id":3960,"name":"ModifierInvocation","src":"73804:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RNG"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1582,"type":"contract RNG","value":"rng"},"id":3962,"name":"Identifier","src":"73827:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3957,"type":"contract RNG","value":"_rng"},"id":3963,"name":"Identifier","src":"73833:4:0"}],"id":3964,"name":"Assignment","src":"73827:10:0"}],"id":3965,"name":"ExpressionStatement","src":"73827:10:0"}],"id":3966,"name":"Block","src":"73817:27:0"}],"id":3967,"name":"FunctionDefinition","src":"73771:73:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for arbitrationFeePerJuror.\n @param _arbitrationFeePerJuror The fee which will be paid to each juror.","implemented":true,"isConstructor":false,"name":"setArbitrationFeePerJuror","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_arbitrationFeePerJuror","scope":3979,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3968,"name":"ElementaryTypeName","src":"74022:4:0"}],"id":3969,"name":"VariableDeclaration","src":"74022:28:0"}],"id":3970,"name":"ParameterList","src":"74021:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":3973,"name":"ParameterList","src":"74072:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":3971,"name":"Identifier","src":"74059:12:0"}],"id":3972,"name":"ModifierInvocation","src":"74059:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1585,"type":"uint256","value":"arbitrationFeePerJuror"},"id":3974,"name":"Identifier","src":"74082:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3969,"type":"uint256","value":"_arbitrationFeePerJuror"},"id":3975,"name":"Identifier","src":"74107:23:0"}],"id":3976,"name":"Assignment","src":"74082:48:0"}],"id":3977,"name":"ExpressionStatement","src":"74082:48:0"}],"id":3978,"name":"Block","src":"74072:65:0"}],"id":3979,"name":"FunctionDefinition","src":"73987:150:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for defaultNumberJuror.\n @param _defaultNumberJuror Number of drawn jurors unless specified otherwise.","implemented":true,"isConstructor":false,"name":"setDefaultNumberJuror","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_defaultNumberJuror","scope":3991,"stateVariable":false,"storageLocation":"default","type":"uint16","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint16","type":"uint16"},"id":3980,"name":"ElementaryTypeName","src":"74312:6:0"}],"id":3981,"name":"VariableDeclaration","src":"74312:26:0"}],"id":3982,"name":"ParameterList","src":"74311:28:0"},{"attributes":{"parameters":[null]},"children":[],"id":3985,"name":"ParameterList","src":"74360:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":3983,"name":"Identifier","src":"74347:12:0"}],"id":3984,"name":"ModifierInvocation","src":"74347:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint16"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1588,"type":"uint16","value":"defaultNumberJuror"},"id":3986,"name":"Identifier","src":"74370:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3981,"type":"uint16","value":"_defaultNumberJuror"},"id":3987,"name":"Identifier","src":"74391:19:0"}],"id":3988,"name":"Assignment","src":"74370:40:0"}],"id":3989,"name":"ExpressionStatement","src":"74370:40:0"}],"id":3990,"name":"Block","src":"74360:57:0"}],"id":3991,"name":"FunctionDefinition","src":"74281:136:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for minActivatedToken.\n @param _minActivatedToken Minimum of tokens to be activated (in basic units).","implemented":true,"isConstructor":false,"name":"setMinActivatedToken","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_minActivatedToken","scope":4003,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":3992,"name":"ElementaryTypeName","src":"74590:4:0"}],"id":3993,"name":"VariableDeclaration","src":"74590:23:0"}],"id":3994,"name":"ParameterList","src":"74589:25:0"},{"attributes":{"parameters":[null]},"children":[],"id":3997,"name":"ParameterList","src":"74635:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":3995,"name":"Identifier","src":"74622:12:0"}],"id":3996,"name":"ModifierInvocation","src":"74622:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1593,"type":"uint256","value":"minActivatedToken"},"id":3998,"name":"Identifier","src":"74645:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3993,"type":"uint256","value":"_minActivatedToken"},"id":3999,"name":"Identifier","src":"74665:18:0"}],"id":4000,"name":"Assignment","src":"74645:38:0"}],"id":4001,"name":"ExpressionStatement","src":"74645:38:0"}],"id":4002,"name":"Block","src":"74635:55:0"}],"id":4003,"name":"FunctionDefinition","src":"74560:130:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for timePerPeriod.\n @param _timePerPeriod The minimum time each period lasts (seconds).","implemented":true,"isConstructor":false,"name":"setTimePerPeriod","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_timePerPeriod","scope":4017,"stateVariable":false,"storageLocation":"default","type":"uint256[5]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[5]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4004,"name":"ElementaryTypeName","src":"74845:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"5"},"id":4005,"name":"Literal","src":"74850:1:0"}],"id":4006,"name":"ArrayTypeName","src":"74845:7:0"}],"id":4007,"name":"VariableDeclaration","src":"74845:22:0"}],"id":4008,"name":"ParameterList","src":"74844:24:0"},{"attributes":{"parameters":[null]},"children":[],"id":4011,"name":"ParameterList","src":"74889:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":4009,"name":"Identifier","src":"74876:12:0"}],"id":4010,"name":"ModifierInvocation","src":"74876:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256[5] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1597,"type":"uint256[5] storage ref","value":"timePerPeriod"},"id":4012,"name":"Identifier","src":"74899:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4007,"type":"uint256[5] memory","value":"_timePerPeriod"},"id":4013,"name":"Identifier","src":"74915:14:0"}],"id":4014,"name":"Assignment","src":"74899:30:0"}],"id":4015,"name":"ExpressionStatement","src":"74899:30:0"}],"id":4016,"name":"Block","src":"74889:47:0"}],"id":4017,"name":"FunctionDefinition","src":"74819:117:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for alpha.\n @param _alpha Alpha in ‱.","implemented":true,"isConstructor":false,"name":"setAlpha","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_alpha","scope":4029,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4018,"name":"ElementaryTypeName","src":"75035:4:0"}],"id":4019,"name":"VariableDeclaration","src":"75035:11:0"}],"id":4020,"name":"ParameterList","src":"75034:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":4023,"name":"ParameterList","src":"75068:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":4021,"name":"Identifier","src":"75055:12:0"}],"id":4022,"name":"ModifierInvocation","src":"75055:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1600,"type":"uint256","value":"alpha"},"id":4024,"name":"Identifier","src":"75078:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4019,"type":"uint256","value":"_alpha"},"id":4025,"name":"Identifier","src":"75086:6:0"}],"id":4026,"name":"Assignment","src":"75078:14:0"}],"id":4027,"name":"ExpressionStatement","src":"75078:14:0"}],"id":4028,"name":"Block","src":"75068:31:0"}],"id":4029,"name":"FunctionDefinition","src":"75017:82:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for maxAppeals.\n @param _maxAppeals Number of times a dispute can be appealed. When exceeded appeal cost becomes NON_PAYABLE_AMOUNT.","implemented":true,"isConstructor":false,"name":"setMaxAppeals","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_maxAppeals","scope":4041,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4030,"name":"ElementaryTypeName","src":"75296:4:0"}],"id":4031,"name":"VariableDeclaration","src":"75296:16:0"}],"id":4032,"name":"ParameterList","src":"75295:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":4035,"name":"ParameterList","src":"75334:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":4033,"name":"Identifier","src":"75321:12:0"}],"id":4034,"name":"ModifierInvocation","src":"75321:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1606,"type":"uint256","value":"maxAppeals"},"id":4036,"name":"Identifier","src":"75344:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4031,"type":"uint256","value":"_maxAppeals"},"id":4037,"name":"Identifier","src":"75357:11:0"}],"id":4038,"name":"Assignment","src":"75344:24:0"}],"id":4039,"name":"ExpressionStatement","src":"75344:24:0"}],"id":4040,"name":"Block","src":"75334:41:0"}],"id":4041,"name":"FunctionDefinition","src":"75273:102:0"},{"attributes":{"constant":false,"documentation":"@dev Setter for governor.\n @param _governor Address of the governor contract.","implemented":true,"isConstructor":false,"name":"setGovernor","payable":false,"scope":4054,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_governor","scope":4053,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4042,"name":"ElementaryTypeName","src":"75503:7:0"}],"id":4043,"name":"VariableDeclaration","src":"75503:17:0"}],"id":4044,"name":"ParameterList","src":"75502:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":4047,"name":"ParameterList","src":"75542:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1771,"type":"modifier ()","value":"onlyGovernor"},"id":4045,"name":"Identifier","src":"75529:12:0"}],"id":4046,"name":"ModifierInvocation","src":"75529:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1608,"type":"address","value":"governor"},"id":4048,"name":"Identifier","src":"75552:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4043,"type":"address","value":"_governor"},"id":4049,"name":"Identifier","src":"75563:9:0"}],"id":4050,"name":"Assignment","src":"75552:20:0"}],"id":4051,"name":"ExpressionStatement","src":"75552:20:0"}],"id":4052,"name":"Block","src":"75542:37:0"}],"id":4053,"name":"FunctionDefinition","src":"75482:97:0"}],"id":4054,"name":"ContractDefinition","src":"35322:40259:0"}],"id":4055,"name":"SourceUnit","src":"323:75258:0"}}