{"name":"StandardInterestRateModel","address":"0xd25c029a607ee888bdbdbe054515e25ec6f3fff9","source":"pragma solidity ^0.4.24;\n// produced by the Solididy File Flattener (c) David Appleton 2018\n// contact : <a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"adc9ccdbc8edccc6c2c0cfcc83cec2c0\">[emailÂ protected]</a>\n// released under Apache 2.0 licence\ncontract ErrorReporter {\n\n    /**\n      * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\n      * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\n      **/\n    event Failure(uint error, uint info, uint detail);\n\n    enum Error {\n        NO_ERROR,\n        OPAQUE_ERROR, // To be used when reporting errors from upgradeable contracts; the opaque code should be given as `detail` in the `Failure` event\n        UNAUTHORIZED,\n        INTEGER_OVERFLOW,\n        INTEGER_UNDERFLOW,\n        DIVISION_BY_ZERO,\n        BAD_INPUT,\n        TOKEN_INSUFFICIENT_ALLOWANCE,\n        TOKEN_INSUFFICIENT_BALANCE,\n        TOKEN_TRANSFER_FAILED,\n        MARKET_NOT_SUPPORTED,\n        SUPPLY_RATE_CALCULATION_FAILED,\n        BORROW_RATE_CALCULATION_FAILED,\n        TOKEN_INSUFFICIENT_CASH,\n        TOKEN_TRANSFER_OUT_FAILED,\n        INSUFFICIENT_LIQUIDITY,\n        INSUFFICIENT_BALANCE,\n        INVALID_COLLATERAL_RATIO,\n        MISSING_ASSET_PRICE,\n        EQUITY_INSUFFICIENT_BALANCE,\n        INVALID_CLOSE_AMOUNT_REQUESTED,\n        ASSET_NOT_PRICED,\n        INVALID_LIQUIDATION_DISCOUNT,\n        INVALID_COMBINED_RISK_PARAMETERS,\n        ZERO_ORACLE_ADDRESS,\n        CONTRACT_PAUSED\n    }\n\n    /*\n     * Note: FailureInfo (but not Error) is kept in alphabetical order\n     *       This is because FailureInfo grows significantly faster, and\n     *       the order of Error has some meaning, while the order of FailureInfo\n     *       is entirely arbitrary.\n     */\n    enum FailureInfo {\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\n        BORROW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED,\n        BORROW_ACCOUNT_SHORTFALL_PRESENT,\n        BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        BORROW_AMOUNT_LIQUIDITY_SHORTFALL,\n        BORROW_AMOUNT_VALUE_CALCULATION_FAILED,\n        BORROW_CONTRACT_PAUSED,\n        BORROW_MARKET_NOT_SUPPORTED,\n        BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        BORROW_NEW_BORROW_RATE_CALCULATION_FAILED,\n        BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED,\n        BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED,\n        BORROW_ORIGINATION_FEE_CALCULATION_FAILED,\n        BORROW_TRANSFER_OUT_FAILED,\n        EQUITY_WITHDRAWAL_AMOUNT_VALIDATION,\n        EQUITY_WITHDRAWAL_CALCULATE_EQUITY,\n        EQUITY_WITHDRAWAL_MODEL_OWNER_CHECK,\n        EQUITY_WITHDRAWAL_TRANSFER_OUT_FAILED,\n        LIQUIDATE_ACCUMULATED_BORROW_BALANCE_CALCULATION_FAILED,\n        LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET,\n        LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET,\n        LIQUIDATE_AMOUNT_SEIZE_CALCULATION_FAILED,\n        LIQUIDATE_BORROW_DENOMINATED_COLLATERAL_CALCULATION_FAILED,\n        LIQUIDATE_CLOSE_AMOUNT_TOO_HIGH,\n        LIQUIDATE_CONTRACT_PAUSED,\n        LIQUIDATE_DISCOUNTED_REPAY_TO_EVEN_AMOUNT_CALCULATION_FAILED,\n        LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET,\n        LIQUIDATE_NEW_BORROW_RATE_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET,\n        LIQUIDATE_NEW_SUPPLY_RATE_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_TOTAL_BORROW_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_TOTAL_CASH_CALCULATION_FAILED_BORROWED_ASSET,\n        LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET,\n        LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET,\n        LIQUIDATE_FETCH_ASSET_PRICE_FAILED,\n        LIQUIDATE_TRANSFER_IN_FAILED,\n        LIQUIDATE_TRANSFER_IN_NOT_POSSIBLE,\n        REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        REPAY_BORROW_CONTRACT_PAUSED,\n        REPAY_BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_BORROW_RATE_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED,\n        REPAY_BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED,\n        REPAY_BORROW_TRANSFER_IN_FAILED,\n        REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE,\n        SET_ASSET_PRICE_CHECK_ORACLE,\n        SET_MARKET_INTEREST_RATE_MODEL_OWNER_CHECK,\n        SET_ORACLE_OWNER_CHECK,\n        SET_ORIGINATION_FEE_OWNER_CHECK,\n        SET_PAUSED_OWNER_CHECK,\n        SET_PENDING_ADMIN_OWNER_CHECK,\n        SET_RISK_PARAMETERS_OWNER_CHECK,\n        SET_RISK_PARAMETERS_VALIDATION,\n        SUPPLY_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        SUPPLY_CONTRACT_PAUSED,\n        SUPPLY_MARKET_NOT_SUPPORTED,\n        SUPPLY_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        SUPPLY_NEW_BORROW_RATE_CALCULATION_FAILED,\n        SUPPLY_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        SUPPLY_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        SUPPLY_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        SUPPLY_NEW_TOTAL_CASH_CALCULATION_FAILED,\n        SUPPLY_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\n        SUPPLY_TRANSFER_IN_FAILED,\n        SUPPLY_TRANSFER_IN_NOT_POSSIBLE,\n        SUPPORT_MARKET_FETCH_PRICE_FAILED,\n        SUPPORT_MARKET_OWNER_CHECK,\n        SUPPORT_MARKET_PRICE_CHECK,\n        SUSPEND_MARKET_OWNER_CHECK,\n        WITHDRAW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED,\n        WITHDRAW_ACCOUNT_SHORTFALL_PRESENT,\n        WITHDRAW_ACCUMULATED_BALANCE_CALCULATION_FAILED,\n        WITHDRAW_AMOUNT_LIQUIDITY_SHORTFALL,\n        WITHDRAW_AMOUNT_VALUE_CALCULATION_FAILED,\n        WITHDRAW_CAPACITY_CALCULATION_FAILED,\n        WITHDRAW_CONTRACT_PAUSED,\n        WITHDRAW_NEW_BORROW_INDEX_CALCULATION_FAILED,\n        WITHDRAW_NEW_BORROW_RATE_CALCULATION_FAILED,\n        WITHDRAW_NEW_SUPPLY_INDEX_CALCULATION_FAILED,\n        WITHDRAW_NEW_SUPPLY_RATE_CALCULATION_FAILED,\n        WITHDRAW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,\n        WITHDRAW_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,\n        WITHDRAW_TRANSFER_OUT_FAILED,\n        WITHDRAW_TRANSFER_OUT_NOT_POSSIBLE\n    }\n\n\n    /**\n      * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\n      */\n    function fail(Error err, FailureInfo info) internal returns (uint) {\n        emit Failure(uint(err), uint(info), 0);\n\n        return uint(err);\n    }\n\n\n    /**\n      * @dev use this when reporting an opaque error from an upgradeable collaborator contract\n      */\n    function failOpaque(FailureInfo info, uint opaqueError) internal returns (uint) {\n        emit Failure(uint(Error.OPAQUE_ERROR), uint(info), opaqueError);\n\n        return uint(Error.OPAQUE_ERROR);\n    }\n\n}\ncontract InterestRateModel {\n\n    /**\n      * @notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the supply interest rate per block scaled by 10e18\n      */\n    function getSupplyRate(address asset, uint cash, uint borrows) public view returns (uint, uint);\n\n    /**\n      * @notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the borrow interest rate per block scaled by 10e18\n      */\n    function getBorrowRate(address asset, uint cash, uint borrows) public view returns (uint, uint);\n}\ncontract CarefulMath is ErrorReporter {\n\n    /**\n    * @dev Multiplies two numbers, returns an error on overflow.\n    */\n    function mul(uint a, uint b) internal pure returns (Error, uint) {\n        if (a == 0) {\n            return (Error.NO_ERROR, 0);\n        }\n\n        uint c = a * b;\n\n        if (c / a != b) {\n            return (Error.INTEGER_OVERFLOW, 0);\n        } else {\n            return (Error.NO_ERROR, c);\n        }\n    }\n\n    /**\n    * @dev Integer division of two numbers, truncating the quotient.\n    */\n    function div(uint a, uint b) internal pure returns (Error, uint) {\n        if (b == 0) {\n            return (Error.DIVISION_BY_ZERO, 0);\n        }\n\n        return (Error.NO_ERROR, a / b);\n    }\n\n    /**\n    * @dev Subtracts two numbers, returns an error on overflow (i.e. if subtrahend is greater than minuend).\n    */\n    function sub(uint a, uint b) internal pure returns (Error, uint) {\n        if (b <= a) {\n            return (Error.NO_ERROR, a - b);\n        } else {\n            return (Error.INTEGER_UNDERFLOW, 0);\n        }\n    }\n\n    /**\n    * @dev Adds two numbers, returns an error on overflow.\n    */\n    function add(uint a, uint b) internal pure returns (Error, uint) {\n        uint c = a + b;\n\n        if (c >= a) {\n            return (Error.NO_ERROR, c);\n        } else {\n            return (Error.INTEGER_OVERFLOW, 0);\n        }\n    }\n\n    /**\n    * @dev add a and b and then subtract c\n    */\n    function addThenSub(uint a, uint b, uint c) internal pure returns (Error, uint) {\n        (Error err0, uint sum) = add(a, b);\n\n        if (err0 != Error.NO_ERROR) {\n            return (err0, 0);\n        }\n\n        return sub(sum, c);\n    }\n}\ncontract Exponential is ErrorReporter, CarefulMath {\n\n    // TODO: We may wish to put the result of 10**18 here instead of the expression.\n    // Per https://solidity.readthedocs.io/en/latest/contracts.html#constant-state-variables\n    // the optimizer MAY replace the expression 10**18 with its calculated value.\n    uint constant expScale = 10**18;\n\n    // See TODO on expScale\n    uint constant halfExpScale = expScale/2;\n\n    struct Exp {\n        uint mantissa;\n    }\n\n    uint constant mantissaOne = 10**18;\n    uint constant mantissaOneTenth = 10**17;\n\n    /**\n    * @dev Creates an exponential from numerator and denominator values.\n    *      Note: Returns an error if (`num` * 10e18) > MAX_INT,\n    *            or if `denom` is zero.\n    */\n    function getExp(uint num, uint denom) pure internal returns (Error, Exp memory) {\n        (Error err0, uint scaledNumerator) = mul(num, expScale);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        (Error err1, uint rational) = div(scaledNumerator, denom);\n        if (err1 != Error.NO_ERROR) {\n            return (err1, Exp({mantissa: 0}));\n        }\n\n        return (Error.NO_ERROR, Exp({mantissa: rational}));\n    }\n\n    /**\n    * @dev Adds two exponentials, returning a new exponential.\n    */\n    function addExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n        (Error error, uint result) = add(a.mantissa, b.mantissa);\n\n        return (error, Exp({mantissa: result}));\n    }\n\n    /**\n    * @dev Subtracts two exponentials, returning a new exponential.\n    */\n    function subExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n        (Error error, uint result) = sub(a.mantissa, b.mantissa);\n\n        return (error, Exp({mantissa: result}));\n    }\n\n    /**\n    * @dev Multiply an Exp by a scalar, returning a new Exp.\n    */\n    function mulScalar(Exp memory a, uint scalar) pure internal returns (Error, Exp memory) {\n        (Error err0, uint scaledMantissa) = mul(a.mantissa, scalar);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        return (Error.NO_ERROR, Exp({mantissa: scaledMantissa}));\n    }\n\n    /**\n    * @dev Divide an Exp by a scalar, returning a new Exp.\n    */\n    function divScalar(Exp memory a, uint scalar) pure internal returns (Error, Exp memory) {\n        (Error err0, uint descaledMantissa) = div(a.mantissa, scalar);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        return (Error.NO_ERROR, Exp({mantissa: descaledMantissa}));\n    }\n\n    /**\n    * @dev Divide a scalar by an Exp, returning a new Exp.\n    */\n    function divScalarByExp(uint scalar, Exp divisor) pure internal returns (Error, Exp memory) {\n        /*\n            We are doing this as:\n            getExp(mul(expScale, scalar), divisor.mantissa)\n\n            How it works:\n            Exp = a / b;\n            Scalar = s;\n            `s / (a / b)` = `b * s / a` and since for an Exp `a = mantissa, b = expScale`\n        */\n        (Error err0, uint numerator) = mul(expScale, scalar);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n        return getExp(numerator, divisor.mantissa);\n    }\n\n    /**\n    * @dev Multiplies two exponentials, returning a new exponential.\n    */\n    function mulExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n\n        (Error err0, uint doubleScaledProduct) = mul(a.mantissa, b.mantissa);\n        if (err0 != Error.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}));\n        }\n\n        // We add half the scale before dividing so that we get rounding instead of truncation.\n        //  See \"Listing 6\" and text above it at https://accu.org/index.php/journals/1717\n        // Without this change, a result like 6.6...e-19 will be truncated to 0 instead of being rounded to 1e-18.\n        (Error err1, uint doubleScaledProductWithHalfScale) = add(halfExpScale, doubleScaledProduct);\n        if (err1 != Error.NO_ERROR) {\n            return (err1, Exp({mantissa: 0}));\n        }\n\n        (Error err2, uint product) = div(doubleScaledProductWithHalfScale, expScale);\n        // The only error `div` can return is Error.DIVISION_BY_ZERO but we control `expScale` and it is not zero.\n        assert(err2 == Error.NO_ERROR);\n\n        return (Error.NO_ERROR, Exp({mantissa: product}));\n    }\n\n    /**\n      * @dev Divides two exponentials, returning a new exponential.\n      *     (a/scale) / (b/scale) = (a/scale) * (scale/b) = a/b,\n      *  which we can scale as an Exp by calling getExp(a.mantissa, b.mantissa)\n      */\n    function divExp(Exp memory a, Exp memory b) pure internal returns (Error, Exp memory) {\n        return getExp(a.mantissa, b.mantissa);\n    }\n\n    /**\n      * @dev Truncates the given exp to a whole number value.\n      *      For example, truncate(Exp{mantissa: 15 * (10**18)}) = 15\n      */\n    function truncate(Exp memory exp) pure internal returns (uint) {\n        // Note: We are not using careful math here as we're performing a division that cannot fail\n        return exp.mantissa / 10**18;\n    }\n\n    /**\n      * @dev Checks if first Exp is less than second Exp.\n      */\n    function lessThanExp(Exp memory left, Exp memory right) pure internal returns (bool) {\n        return left.mantissa < right.mantissa; //TODO: Add some simple tests and this in another PR yo.\n    }\n\n    /**\n      * @dev Checks if left Exp <= right Exp.\n      */\n    function lessThanOrEqualExp(Exp memory left, Exp memory right) pure internal returns (bool) {\n        return left.mantissa <= right.mantissa;\n    }\n\n    /**\n      * @dev returns true if Exp is exactly zero\n      */\n    function isZeroExp(Exp memory value) pure internal returns (bool) {\n        return value.mantissa == 0;\n    }\n}\n\ncontract StandardInterestRateModel is Exponential {\n\n    uint constant oneMinusSpreadBasisPoints = 9000;\n    uint constant blocksPerYear = 2102400;\n    uint constant mantissaFivePercent = 5 * 10**16;\n\n    enum IRError {\n        NO_ERROR,\n        FAILED_TO_ADD_CASH_PLUS_BORROWS,\n        FAILED_TO_GET_EXP,\n        FAILED_TO_MUL_PRODUCT_TIMES_BORROW_RATE\n    }\n\n    /*\n     * @dev Calculates the utilization rate (borrows / (cash + borrows)) as an Exp\n     */\n    function getUtilizationRate(uint cash, uint borrows) pure internal returns (IRError, Exp memory) {\n        if (borrows == 0) {\n            // Utilization rate is zero when there's no borrows\n            return (IRError.NO_ERROR, Exp({mantissa: 0}));\n        }\n\n        (Error err0, uint cashPlusBorrows) = add(cash, borrows);\n        if (err0 != Error.NO_ERROR) {\n            return (IRError.FAILED_TO_ADD_CASH_PLUS_BORROWS, Exp({mantissa: 0}));\n        }\n\n        (Error err1, Exp memory utilizationRate) = getExp(borrows, cashPlusBorrows);\n        if (err1 != Error.NO_ERROR) {\n            return (IRError.FAILED_TO_GET_EXP, Exp({mantissa: 0}));\n        }\n\n        return (IRError.NO_ERROR, utilizationRate);\n    }\n\n    /*\n     * @dev Calculates the utilization and borrow rates for use by get{Supply,Borrow}Rate functions\n     */\n    function getUtilizationAndAnnualBorrowRate(uint cash, uint borrows) pure internal returns (IRError, Exp memory, Exp memory) {\n        (IRError err0, Exp memory utilizationRate) = getUtilizationRate(cash, borrows);\n        if (err0 != IRError.NO_ERROR) {\n            return (err0, Exp({mantissa: 0}), Exp({mantissa: 0}));\n        }\n\n        // Borrow Rate is 5% + UtilizationRate * 45%\n        // 45% of utilizationRate, is `rate * 45 / 100`\n        (Error err1, Exp memory utilizationRateMuled) = mulScalar(utilizationRate, 45);\n        // `mulScalar` only overflows when the product is >= 2^256.\n        // utilizationRate is a real number on the interval [0,1], which means that\n        // utilizationRate.mantissa is in the interval [0e18,1e18], which means that 45 times\n        // that is in the interval [0e18,45e18]. That interval has no intersection with 2^256, and therefore\n        // this can never overflow. As such, we assert.\n        assert(err1 == Error.NO_ERROR);\n\n        (Error err2, Exp memory utilizationRateScaled) = divScalar(utilizationRateMuled, 100);\n        // 100 is a constant, and therefore cannot be zero, which is the only error case of divScalar.\n        assert(err2 == Error.NO_ERROR);\n\n        // Add the 5% for (5% + 45% * Ua)\n        (Error err3, Exp memory annualBorrowRate) = addExp(utilizationRateScaled, Exp({mantissa: mantissaFivePercent}));\n        // `addExp` only fails when the addition of mantissas overflow.\n        // As per above, utilizationRateMuled is capped at 45e18,\n        // and utilizationRateScaled is capped at 4.5e17. mantissaFivePercent = 0.5e17, and thus the addition\n        // is capped at 5e17, which is less than 2^256.\n        assert(err3 == Error.NO_ERROR);\n\n        return (IRError.NO_ERROR, utilizationRate, annualBorrowRate);\n    }\n\n    /**\n      * @notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param _asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the supply interest rate per block scaled by 10e18\n      */\n    function getSupplyRate(address _asset, uint cash, uint borrows) public view returns (uint, uint) {\n        _asset; // pragma ignore unused argument\n\n        (IRError err0, Exp memory utilizationRate0, Exp memory annualBorrowRate) = getUtilizationAndAnnualBorrowRate(cash, borrows);\n        if (err0 != IRError.NO_ERROR) {\n            return (uint(err0), 0);\n        }\n\n        // We're going to multiply the utilization rate by the spread's numerator\n        (Error err1, Exp memory utilizationRate1) = mulScalar(utilizationRate0, oneMinusSpreadBasisPoints);\n        // mulScalar only overflows when product is greater than or equal to 2^256.\n        // utilization rate's mantissa is a number between [0e18,1e18]. That means that\n        // utilizationRate1 is a value between [0e18,9e21]. This is strictly less than 2^256.\n        assert(err1 == Error.NO_ERROR);\n\n        // Next multiply this product times the borrow rate\n        (Error err2, Exp memory supplyRate0) = mulExp(utilizationRate1, annualBorrowRate);\n        // If the product of the mantissas for mulExp are both less than 2^256,\n        // then this operation will never fail. TODO: Verify.\n        // We know that borrow rate is in the interval [0, 4e17] from above.\n        // We know that utilizationRate1 is in the interval [0, 9e21] from directly above.\n        // As such, the multiplication is in the interval of [0, 3.6e39]. This is strictly\n        // less than 2^256 (which is about 10e77).\n        assert(err2 == Error.NO_ERROR);\n\n        // And then divide down by the spread's denominator (basis points divisor)\n        // as well as by blocks per year.\n        (Error err3, Exp memory supplyRate1) = divScalar(supplyRate0, 10000 * blocksPerYear); // basis points * blocks per year\n        // divScalar only fails when divisor is zero. This is clearly not the case.\n        assert(err3 == Error.NO_ERROR);\n\n        // Note: mantissa is the rate scaled 1e18, which matches the expected result\n        return (uint(IRError.NO_ERROR), supplyRate1.mantissa);\n    }\n\n    /**\n      * @notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n      * @dev The return value should be scaled by 1e18, thus a return value of\n      *      `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n      * @param _asset The asset to get the interest rate of\n      * @param cash The total cash of the asset in the market\n      * @param borrows The total borrows of the asset in the market\n      * @return Success or failure and the borrow interest rate per block scaled by 10e18\n      */\n    function getBorrowRate(address _asset, uint cash, uint borrows) public view returns (uint, uint) {\n        _asset; // pragma ignore unused argument\n\n        (IRError err0, Exp memory _utilizationRate, Exp memory annualBorrowRate) = getUtilizationAndAnnualBorrowRate(cash, borrows);\n        if (err0 != IRError.NO_ERROR) {\n            return (uint(err0), 0);\n        }\n\n        // And then divide down by blocks per year.\n        (Error err1, Exp memory borrowRate) = divScalar(annualBorrowRate, blocksPerYear); // basis points * blocks per year\n        // divScalar only fails when divisor is zero. This is clearly not the case.\n        assert(err1 == Error.NO_ERROR);\n\n        _utilizationRate; // pragma ignore unused variable\n\n        // Note: mantissa is the rate scaled 1e18, which matches the expected result\n        return (uint(IRError.NO_ERROR), borrowRate.mantissa);\n    }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"_asset\",\"type\":\"address\"},{\"name\":\"cash\",\"type\":\"uint256\"},{\"name\":\"borrows\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_asset\",\"type\":\"address\"},{\"name\":\"cash\",\"type\":\"uint256\"},{\"name\":\"borrows\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"}]","bin":"608060405234801561001057600080fd5b506109ba806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063517cf73e14610051578063ed2b5a3c146100c3575b600080fd5b34801561005d57600080fd5b506100a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610135565b604051808381526020018281526020019250505060405180910390f35b3480156100cf57600080fd5b50610118600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610273565b604051808381526020018281526020019250505060405180910390f35b600080600061014261097a565b61014a61097a565b600061015461097a565b600061015e61097a565b600061016861097a565b6101728d8d610333565b9850985098506000600381111561018557fe5b89600381111561019157fe5b1415156101b2578860038111156101a457fe5b60008090509a509a50610262565b6101be88612328610491565b95509550600060198111156101cf57fe5b8660198111156101db57fe5b1415156101e457fe5b6101ee8588610511565b93509350600060198111156101ff57fe5b84601981111561020b57fe5b14151561021457fe5b610225836220148061271002610637565b915091506000601981111561023657fe5b82601981111561024257fe5b14151561024b57fe5b6000600381111561025857fe5b81600001519a509a505b505050505050505050935093915050565b600080600061028061097a565b61028861097a565b600061029261097a565b61029c8989610333565b945094509450600060038111156102af57fe5b8560038111156102bb57fe5b1415156102dc578460038111156102ce57fe5b600080905096509650610326565b6102e98362201480610637565b91509150600060198111156102fa57fe5b82601981111561030657fe5b14151561030f57fe5b6000600381111561031c57fe5b8160000151965096505b5050505050935093915050565b600061033d61097a565b61034561097a565b600061034f61097a565b600061035961097a565b600061036361097a565b600061036d61097a565b6103778d8d6106b7565b975097506000600381111561038857fe5b88600381111561039457fe5b1415156103cf5787602060405190810160405280600081525060206040519081016040528060008152508191508090509a509a509a50610482565b6103da87602d610491565b95509550600060198111156103eb57fe5b8660198111156103f757fe5b14151561040057fe5b61040b856064610637565b935093506000601981111561041c57fe5b84601981111561042857fe5b14151561043157fe5b6104518360206040519081016040528066b1a2bc2ec500008152506107a3565b915091506000601981111561046257fe5b82601981111561046e57fe5b14151561047757fe5b600087829a509a509a505b50505050505050509250925092565b600061049b61097a565b6000806104ac8660000151866107e7565b91509150600060198111156104bd57fe5b8260198111156104c957fe5b1415156104ee5781602060405190810160405280600081525080905093509350610508565b600060206040519081016040528083815250809050935093505b50509250929050565b600061051b61097a565b6000806000806000806105368a600001518a600001516107e7565b955095506000601981111561054757fe5b86601981111561055357fe5b141515610578578560206040519081016040528060008152508090509750975061062a565b6105966002670de0b6b3a764000081151561058f57fe5b048661083c565b93509350600060198111156105a757fe5b8460198111156105b357fe5b1415156105d8578360206040519081016040528060008152508090509750975061062a565b6105ea83670de0b6b3a764000061086f565b91509150600060198111156105fb57fe5b82601981111561060757fe5b14151561061057fe5b600060206040519081016040528083815250809050975097505b5050505050509250929050565b600061064161097a565b60008061065286600001518661086f565b915091506000601981111561066357fe5b82601981111561066f57fe5b14151561069457816020604051908101604052806000815250809050935093506106ae565b600060206040519081016040528083815250809050935093505b50509250929050565b60006106c161097a565b60008060006106ce61097a565b60008714156106f6576000602060405190810160405280600081525080905095509550610798565b610700888861083c565b935093506000601981111561071157fe5b84601981111561071d57fe5b141515610743576001602060405190810160405280600081525080905095509550610798565b61074d87846108a5565b915091506000601981111561075e57fe5b82601981111561076a57fe5b141515610790576002602060405190810160405280600081525080905095509550610798565b600081955095505b505050509250929050565b60006107ad61097a565b6000806107c28660000151866000015161083c565b9150915081602060405190810160405280838152508090509350935050509250929050565b6000806000808514156108035760008080905092509250610834565b838502905083858281151561081457fe5b0414151561082c576003600080905092509250610834565b600081925092505b509250929050565b60008060008385019050848110151561085b5760008192509250610867565b60036000809050925092505b509250929050565b600080600083141561088b57600560008090509150915061089e565b6000838581151561089857fe5b04915091505b9250929050565b60006108af61097a565b6000806000806108c788670de0b6b3a76400006107e7565b93509350600060198111156108d857fe5b8460198111156108e457fe5b141515610909578360206040519081016040528060008152508090509550955061096f565b610913838861086f565b915091506000601981111561092457fe5b82601981111561093057fe5b141515610955578160206040519081016040528060008152508090509550955061096f565b600060206040519081016040528083815250809050955095505b505050509250929050565b6020604051908101604052806000815250905600a165627a7a7230582011222835177a7e2bf6fc71e56b2e9d613f0d89252602dbce9743dc90ed67d88b0029","bin-runtime":"60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063517cf73e14610051578063ed2b5a3c146100c3575b600080fd5b34801561005d57600080fd5b506100a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610135565b604051808381526020018281526020019250505060405180910390f35b3480156100cf57600080fd5b50610118600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610273565b604051808381526020018281526020019250505060405180910390f35b600080600061014261097a565b61014a61097a565b600061015461097a565b600061015e61097a565b600061016861097a565b6101728d8d610333565b9850985098506000600381111561018557fe5b89600381111561019157fe5b1415156101b2578860038111156101a457fe5b60008090509a509a50610262565b6101be88612328610491565b95509550600060198111156101cf57fe5b8660198111156101db57fe5b1415156101e457fe5b6101ee8588610511565b93509350600060198111156101ff57fe5b84601981111561020b57fe5b14151561021457fe5b610225836220148061271002610637565b915091506000601981111561023657fe5b82601981111561024257fe5b14151561024b57fe5b6000600381111561025857fe5b81600001519a509a505b505050505050505050935093915050565b600080600061028061097a565b61028861097a565b600061029261097a565b61029c8989610333565b945094509450600060038111156102af57fe5b8560038111156102bb57fe5b1415156102dc578460038111156102ce57fe5b600080905096509650610326565b6102e98362201480610637565b91509150600060198111156102fa57fe5b82601981111561030657fe5b14151561030f57fe5b6000600381111561031c57fe5b8160000151965096505b5050505050935093915050565b600061033d61097a565b61034561097a565b600061034f61097a565b600061035961097a565b600061036361097a565b600061036d61097a565b6103778d8d6106b7565b975097506000600381111561038857fe5b88600381111561039457fe5b1415156103cf5787602060405190810160405280600081525060206040519081016040528060008152508191508090509a509a509a50610482565b6103da87602d610491565b95509550600060198111156103eb57fe5b8660198111156103f757fe5b14151561040057fe5b61040b856064610637565b935093506000601981111561041c57fe5b84601981111561042857fe5b14151561043157fe5b6104518360206040519081016040528066b1a2bc2ec500008152506107a3565b915091506000601981111561046257fe5b82601981111561046e57fe5b14151561047757fe5b600087829a509a509a505b50505050505050509250925092565b600061049b61097a565b6000806104ac8660000151866107e7565b91509150600060198111156104bd57fe5b8260198111156104c957fe5b1415156104ee5781602060405190810160405280600081525080905093509350610508565b600060206040519081016040528083815250809050935093505b50509250929050565b600061051b61097a565b6000806000806000806105368a600001518a600001516107e7565b955095506000601981111561054757fe5b86601981111561055357fe5b141515610578578560206040519081016040528060008152508090509750975061062a565b6105966002670de0b6b3a764000081151561058f57fe5b048661083c565b93509350600060198111156105a757fe5b8460198111156105b357fe5b1415156105d8578360206040519081016040528060008152508090509750975061062a565b6105ea83670de0b6b3a764000061086f565b91509150600060198111156105fb57fe5b82601981111561060757fe5b14151561061057fe5b600060206040519081016040528083815250809050975097505b5050505050509250929050565b600061064161097a565b60008061065286600001518661086f565b915091506000601981111561066357fe5b82601981111561066f57fe5b14151561069457816020604051908101604052806000815250809050935093506106ae565b600060206040519081016040528083815250809050935093505b50509250929050565b60006106c161097a565b60008060006106ce61097a565b60008714156106f6576000602060405190810160405280600081525080905095509550610798565b610700888861083c565b935093506000601981111561071157fe5b84601981111561071d57fe5b141515610743576001602060405190810160405280600081525080905095509550610798565b61074d87846108a5565b915091506000601981111561075e57fe5b82601981111561076a57fe5b141515610790576002602060405190810160405280600081525080905095509550610798565b600081955095505b505050509250929050565b60006107ad61097a565b6000806107c28660000151866000015161083c565b9150915081602060405190810160405280838152508090509350935050509250929050565b6000806000808514156108035760008080905092509250610834565b838502905083858281151561081457fe5b0414151561082c576003600080905092509250610834565b600081925092505b509250929050565b60008060008385019050848110151561085b5760008192509250610867565b60036000809050925092505b509250929050565b600080600083141561088b57600560008090509150915061089e565b6000838581151561089857fe5b04915091505b9250929050565b60006108af61097a565b6000806000806108c788670de0b6b3a76400006107e7565b93509350600060198111156108d857fe5b8460198111156108e457fe5b141515610909578360206040519081016040528060008152508090509550955061096f565b610913838861086f565b915091506000601981111561092457fe5b82601981111561093057fe5b141515610955578160206040519081016040528060008152508090509550955061096f565b600060206040519081016040528083815250809050955095505b505050509250929050565b6020604051908101604052806000815250905600a165627a7a7230582011222835177a7e2bf6fc71e56b2e9d613f0d89252602dbce9743dc90ed67d88b0029","srcmap":"16136:7206:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16136:7206:0;;;;;;;","srcmap-runtime":"16136:7206:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19828:2041;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19828:2041:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22458:882;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22458:882:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19828:2041;19913:4;19919;19986:12;20000:27;;:::i;:::-;20029;;:::i;:::-;20288:10;20300:27;;:::i;:::-;20763:10;20775:22;;:::i;:::-;21472:10;21484:22;;:::i;:::-;20060:48;20094:4;20100:7;20060:33;:48::i;:::-;19985:123;;;;;;20130:16;20122:24;;;;;;;;:4;:24;;;;;;;;;;20118:77;;;20175:4;20170:10;;;;;;;;20182:1;20162:22;;;;;;;;;20118:77;20331:54;20341:16;16235:4;20331:9;:54::i;:::-;20287:98;;;;20676:14;20668:22;;;;;;;;:4;:22;;;;;;;;;20661:30;;;;;;20801:42;20808:16;20826;20801:6;:42::i;:::-;20762:81;;;;21320:14;21312:22;;;;;;;;:4;:22;;;;;;;;;21305:30;;;;;;21510:45;21520:11;16275:7;21533:5;:21;21510:9;:45::i;:::-;21471:84;;;;21698:14;21690:22;;;;;;;;:4;:22;;;;;;;;;21683:30;;;;;;21822:16;21817:22;;;;;;;;21841:11;:20;;;21809:53;;;;19828:2041;;;;;;;;;;;;;;;;:::o;22458:882::-;22543:4;22549;22616:12;22630:27;;:::i;:::-;22659;;:::i;:::-;22888:10;22900:21;;:::i;:::-;22690:48;22724:4;22730:7;22690:33;:48::i;:::-;22615:123;;;;;;22760:16;22752:24;;;;;;;;:4;:24;;;;;;;;;;22748:77;;;22805:4;22800:10;;;;;;;;22812:1;22792:22;;;;;;;;;22748:77;22925:42;22935:16;16275:7;22925:9;:42::i;:::-;22887:80;;;;23110:14;23102:22;;;;;;;;:4;:22;;;;;;;;;23095:30;;;;;;23294:16;23289:22;;;;;;;;23313:10;:19;;;23281:52;;;;22458:882;;;;;;;;;;;;:::o;17436:1803::-;17527:7;17536:3;;:::i;:::-;17548;;:::i;:::-;17571:12;17585:26;;:::i;:::-;17886:10;17898:31;;:::i;:::-;18426:10;18438:32;;:::i;:::-;18707:10;18719:27;;:::i;:::-;17615:33;17634:4;17640:7;17615:18;:33::i;:::-;17570:78;;;;17670:16;17662:24;;;;;;;;:4;:24;;;;;;;;;;17658:108;;;17710:4;17716:18;;;;;;;;;17731:1;17716:18;;;17736;;;;;;;;;17751:1;17736:18;;;17702:53;;;;;;;;;;;;;;17658:108;17933:30;17943:15;17960:2;17933:9;:30::i;:::-;17885:78;;;;18399:14;18391:22;;;;;;;;:4;:22;;;;;;;;;18384:30;;;;;;18474:36;18484:20;18506:3;18474:9;:36::i;:::-;18425:85;;;;18638:14;18630:22;;;;;;;;:4;:22;;;;;;;;;18623:30;;;;;;18750:67;18757:21;18780:36;;;;;;;;;16324:10;18780:36;;;18750:6;:67::i;:::-;18706:111;;;;19146:14;19138:22;;;;;;;;:4;:22;;;;;;;;;19131:30;;;;;;19180:16;19198:15;19215:16;19172:60;;;;;;17436:1803;;;;;;;;;;;;;;:::o;12155:326::-;12224:5;12231:3;;:::i;:::-;12254:10;12266:19;12289:23;12293:1;:10;;;12305:6;12289:3;:23::i;:::-;12253:59;;;;12334:14;12326:22;;;;;;;;:4;:22;;;;;;;;;;12322:86;;;12372:4;12378:18;;;;;;;;;12393:1;12378:18;;;12364:33;;;;;;;;;12322:86;12426:14;12442:31;;;;;;;;;12457:14;12442:31;;;12418:56;;;;;;;12155:326;;;;;;;;:::o;13651:1068::-;13718:5;13725:3;;:::i;:::-;13749:10;13761:24;14224:10;14236:37;14422:10;14434:12;13789:27;13793:1;:10;;;13805:1;:10;;;13789:3;:27::i;:::-;13748:68;;;;13838:14;13830:22;;;;;;;;:4;:22;;;;;;;;;;13826:86;;;13876:4;13882:18;;;;;;;;;13897:1;13882:18;;;13868:33;;;;;;;;;13826:86;14277:38;10678:1;10599:6;10669:10;;;;;;;;14295:19;14277:3;:38::i;:::-;14223:92;;;;14337:14;14329:22;;;;;;;;:4;:22;;;;;;;;;;14325:86;;;14375:4;14381:18;;;;;;;;;14396:1;14381:18;;;14367:33;;;;;;;;;14325:86;14450:47;14454:32;10599:6;14450:3;:47::i;:::-;14421:76;;;;14637:14;14629:22;;;;;;;;:4;:22;;;;;;;;;14622:30;;;;;;14671:14;14687:24;;;;;;;;;14702:7;14687:24;;;14663:49;;;;;;;13651:1068;;;;;;;;;;;;:::o;12561:330::-;12630:5;12637:3;;:::i;:::-;12660:10;12672:21;12697:23;12701:1;:10;;;12713:6;12697:3;:23::i;:::-;12659:61;;;;12742:14;12734:22;;;;;;;;:4;:22;;;;;;;;;;12730:86;;;12780:4;12786:18;;;;;;;;;12801:1;12786:18;;;12772:33;;;;;;;;;12730:86;12834:14;12850:33;;;;;;;;;12865:16;12850:33;;;12826:58;;;;;;;12561:330;;;;;;;;:::o;16599:716::-;16675:7;16684:3;;:::i;:::-;16869:10;16881:20;17065:10;17077:26;;:::i;:::-;16721:1;16710:7;:12;16706:152;;;16810:16;16828:18;;;;;;;;;16843:1;16828:18;;;16802:45;;;;;;;;;16706:152;16905:18;16909:4;16915:7;16905:3;:18::i;:::-;16868:55;;;;16945:14;16937:22;;;;;;;;:4;:22;;;;;;;;;;16933:121;;;16983:39;17024:18;;;;;;;;;17039:1;17024:18;;;16975:68;;;;;;;;;16933:121;17107:32;17114:7;17123:15;17107:6;:32::i;:::-;17064:75;;;;17161:14;17153:22;;;;;;;;:4;:22;;;;;;;;;;17149:107;;;17199:25;17226:18;;;;;;;;;17241:1;17226:18;;;17191:54;;;;;;;;;17149:107;17274:16;17292:15;17266:42;;;;16599:716;;;;;;;;;;:::o;11566:209::-;11633:5;11640:3;;:::i;:::-;11663:11;11676;11691:27;11695:1;:10;;;11707:1;:10;;;11691:3;:27::i;:::-;11662:56;;;;11737:5;11744:23;;;;;;;;;11759:6;11744:23;;;11729:39;;;;;;;11566:209;;;;;;;:::o;8698:311::-;8750:5;8757:4;8846:6;8782:1;8777;:6;8773:63;;;8807:14;8823:1;8799:26;;;;;;;;;8773:63;8859:1;8855;:5;8846:14;;8884:1;8879;8875;:5;;;;;;;;:10;;8871:132;;;8909:22;8933:1;8901:34;;;;;;;;;8871:132;8974:14;8990:1;8966:26;;;;8698:311;;;;;;;:::o;9716:234::-;9768:5;9775:4;9791:6;9804:1;9800;:5;9791:14;;9825:1;9820;:6;;9816:128;;;9850:14;9866:1;9842:26;;;;;;9816:128;9907:22;9931:1;9899:34;;;;;;;9716:234;;;;;;;:::o;9099:193::-;9151:5;9158:4;9183:1;9178;:6;9174:71;;;9208:22;9232:1;9200:34;;;;;;;;;9174:71;9263:14;9283:1;9279;:5;;;;;;;;9255:30;;;;9099:193;;;;;;:::o;11011:471::-;11072:5;11079:3;;:::i;:::-;11102:10;11114:20;11263:10;11275:13;11138:18;11142:3;10599:6;11138:3;:18::i;:::-;11101:55;;;;11178:14;11170:22;;;;;;;;:4;:22;;;;;;;;;;11166:86;;;11216:4;11222:18;;;;;;;;;11237:1;11222:18;;;11208:33;;;;;;;;;11166:86;11292:27;11296:15;11313:5;11292:3;:27::i;:::-;11262:57;;;;11341:14;11333:22;;;;;;;;:4;:22;;;;;;;;;;11329:86;;;11379:4;11385:18;;;;;;;;;11400:1;11385:18;;;11371:33;;;;;;;;;11329:86;11433:14;11449:25;;;;;;;;;11464:8;11449:25;;;11425:50;;;;;;;11011:471;;;;;;;;;;:::o;16136:7206::-;;;;;;;;;;;;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0xd25c029a607ee888bdbdbe054515e25ec6f3fff9_StandardInterestRateModel.sol","exportedSymbols":{"CarefulMath":[387],"ErrorReporter":[180],"Exponential":[813],"InterestRateModel":[207],"StandardInterestRateModel":[1163]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[180],"name":"ErrorReporter","scope":1164},"children":[{"attributes":{"anonymous":false,"documentation":"@dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\ncontract-specific code that enables us to report opaque error codes from upgradeable contracts.*","name":"Failure"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"error","scope":9,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"555:4:0"}],"id":3,"name":"VariableDeclaration","src":"555:10:0"},{"attributes":{"constant":false,"indexed":false,"name":"info","scope":9,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"567:4:0"}],"id":5,"name":"VariableDeclaration","src":"567:9:0"},{"attributes":{"constant":false,"indexed":false,"name":"detail","scope":9,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":6,"name":"ElementaryTypeName","src":"578:4:0"}],"id":7,"name":"VariableDeclaration","src":"578:11:0"}],"id":8,"name":"ParameterList","src":"554:36:0"}],"id":9,"name":"EventDefinition","src":"541:50:0"},{"attributes":{"canonicalName":"ErrorReporter.Error","name":"Error"},"children":[{"attributes":{"name":"NO_ERROR"},"id":10,"name":"EnumValue","src":"618:8:0"},{"attributes":{"name":"OPAQUE_ERROR"},"id":11,"name":"EnumValue","src":"636:12:0"},{"attributes":{"name":"UNAUTHORIZED"},"id":12,"name":"EnumValue","src":"789:12:0"},{"attributes":{"name":"INTEGER_OVERFLOW"},"id":13,"name":"EnumValue","src":"811:16:0"},{"attributes":{"name":"INTEGER_UNDERFLOW"},"id":14,"name":"EnumValue","src":"837:17:0"},{"attributes":{"name":"DIVISION_BY_ZERO"},"id":15,"name":"EnumValue","src":"864:16:0"},{"attributes":{"name":"BAD_INPUT"},"id":16,"name":"EnumValue","src":"890:9:0"},{"attributes":{"name":"TOKEN_INSUFFICIENT_ALLOWANCE"},"id":17,"name":"EnumValue","src":"909:28:0"},{"attributes":{"name":"TOKEN_INSUFFICIENT_BALANCE"},"id":18,"name":"EnumValue","src":"947:26:0"},{"attributes":{"name":"TOKEN_TRANSFER_FAILED"},"id":19,"name":"EnumValue","src":"983:21:0"},{"attributes":{"name":"MARKET_NOT_SUPPORTED"},"id":20,"name":"EnumValue","src":"1014:20:0"},{"attributes":{"name":"SUPPLY_RATE_CALCULATION_FAILED"},"id":21,"name":"EnumValue","src":"1044:30:0"},{"attributes":{"name":"BORROW_RATE_CALCULATION_FAILED"},"id":22,"name":"EnumValue","src":"1084:30:0"},{"attributes":{"name":"TOKEN_INSUFFICIENT_CASH"},"id":23,"name":"EnumValue","src":"1124:23:0"},{"attributes":{"name":"TOKEN_TRANSFER_OUT_FAILED"},"id":24,"name":"EnumValue","src":"1157:25:0"},{"attributes":{"name":"INSUFFICIENT_LIQUIDITY"},"id":25,"name":"EnumValue","src":"1192:22:0"},{"attributes":{"name":"INSUFFICIENT_BALANCE"},"id":26,"name":"EnumValue","src":"1224:20:0"},{"attributes":{"name":"INVALID_COLLATERAL_RATIO"},"id":27,"name":"EnumValue","src":"1254:24:0"},{"attributes":{"name":"MISSING_ASSET_PRICE"},"id":28,"name":"EnumValue","src":"1288:19:0"},{"attributes":{"name":"EQUITY_INSUFFICIENT_BALANCE"},"id":29,"name":"EnumValue","src":"1317:27:0"},{"attributes":{"name":"INVALID_CLOSE_AMOUNT_REQUESTED"},"id":30,"name":"EnumValue","src":"1354:30:0"},{"attributes":{"name":"ASSET_NOT_PRICED"},"id":31,"name":"EnumValue","src":"1394:16:0"},{"attributes":{"name":"INVALID_LIQUIDATION_DISCOUNT"},"id":32,"name":"EnumValue","src":"1420:28:0"},{"attributes":{"name":"INVALID_COMBINED_RISK_PARAMETERS"},"id":33,"name":"EnumValue","src":"1458:32:0"},{"attributes":{"name":"ZERO_ORACLE_ADDRESS"},"id":34,"name":"EnumValue","src":"1500:19:0"},{"attributes":{"name":"CONTRACT_PAUSED"},"id":35,"name":"EnumValue","src":"1529:15:0"}],"id":36,"name":"EnumDefinition","src":"597:953:0"},{"attributes":{"canonicalName":"ErrorReporter.FailureInfo","name":"FailureInfo"},"children":[{"attributes":{"name":"ACCEPT_ADMIN_PENDING_ADMIN_CHECK"},"id":37,"name":"EnumValue","src":"1859:32:0"},{"attributes":{"name":"BORROW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED"},"id":38,"name":"EnumValue","src":"1901:43:0"},{"attributes":{"name":"BORROW_ACCOUNT_SHORTFALL_PRESENT"},"id":39,"name":"EnumValue","src":"1954:32:0"},{"attributes":{"name":"BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":40,"name":"EnumValue","src":"1996:45:0"},{"attributes":{"name":"BORROW_AMOUNT_LIQUIDITY_SHORTFALL"},"id":41,"name":"EnumValue","src":"2051:33:0"},{"attributes":{"name":"BORROW_AMOUNT_VALUE_CALCULATION_FAILED"},"id":42,"name":"EnumValue","src":"2094:38:0"},{"attributes":{"name":"BORROW_CONTRACT_PAUSED"},"id":43,"name":"EnumValue","src":"2142:22:0"},{"attributes":{"name":"BORROW_MARKET_NOT_SUPPORTED"},"id":44,"name":"EnumValue","src":"2174:27:0"},{"attributes":{"name":"BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":45,"name":"EnumValue","src":"2211:42:0"},{"attributes":{"name":"BORROW_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":46,"name":"EnumValue","src":"2263:41:0"},{"attributes":{"name":"BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":47,"name":"EnumValue","src":"2314:42:0"},{"attributes":{"name":"BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":48,"name":"EnumValue","src":"2366:41:0"},{"attributes":{"name":"BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":49,"name":"EnumValue","src":"2417:43:0"},{"attributes":{"name":"BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED"},"id":50,"name":"EnumValue","src":"2470:42:0"},{"attributes":{"name":"BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED"},"id":51,"name":"EnumValue","src":"2522:40:0"},{"attributes":{"name":"BORROW_ORIGINATION_FEE_CALCULATION_FAILED"},"id":52,"name":"EnumValue","src":"2572:41:0"},{"attributes":{"name":"BORROW_TRANSFER_OUT_FAILED"},"id":53,"name":"EnumValue","src":"2623:26:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_AMOUNT_VALIDATION"},"id":54,"name":"EnumValue","src":"2659:35:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_CALCULATE_EQUITY"},"id":55,"name":"EnumValue","src":"2704:34:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_MODEL_OWNER_CHECK"},"id":56,"name":"EnumValue","src":"2748:35:0"},{"attributes":{"name":"EQUITY_WITHDRAWAL_TRANSFER_OUT_FAILED"},"id":57,"name":"EnumValue","src":"2793:37:0"},{"attributes":{"name":"LIQUIDATE_ACCUMULATED_BORROW_BALANCE_CALCULATION_FAILED"},"id":58,"name":"EnumValue","src":"2840:55:0"},{"attributes":{"name":"LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET"},"id":59,"name":"EnumValue","src":"2905:81:0"},{"attributes":{"name":"LIQUIDATE_ACCUMULATED_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET"},"id":60,"name":"EnumValue","src":"2996:83:0"},{"attributes":{"name":"LIQUIDATE_AMOUNT_SEIZE_CALCULATION_FAILED"},"id":61,"name":"EnumValue","src":"3089:41:0"},{"attributes":{"name":"LIQUIDATE_BORROW_DENOMINATED_COLLATERAL_CALCULATION_FAILED"},"id":62,"name":"EnumValue","src":"3140:58:0"},{"attributes":{"name":"LIQUIDATE_CLOSE_AMOUNT_TOO_HIGH"},"id":63,"name":"EnumValue","src":"3208:31:0"},{"attributes":{"name":"LIQUIDATE_CONTRACT_PAUSED"},"id":64,"name":"EnumValue","src":"3249:25:0"},{"attributes":{"name":"LIQUIDATE_DISCOUNTED_REPAY_TO_EVEN_AMOUNT_CALCULATION_FAILED"},"id":65,"name":"EnumValue","src":"3284:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_BORROWED_ASSET"},"id":66,"name":"EnumValue","src":"3354:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_BORROW_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET"},"id":67,"name":"EnumValue","src":"3424:62:0"},{"attributes":{"name":"LIQUIDATE_NEW_BORROW_RATE_CALCULATION_FAILED_BORROWED_ASSET"},"id":68,"name":"EnumValue","src":"3496:59:0"},{"attributes":{"name":"LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_BORROWED_ASSET"},"id":69,"name":"EnumValue","src":"3565:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_SUPPLY_INDEX_CALCULATION_FAILED_COLLATERAL_ASSET"},"id":70,"name":"EnumValue","src":"3635:62:0"},{"attributes":{"name":"LIQUIDATE_NEW_SUPPLY_RATE_CALCULATION_FAILED_BORROWED_ASSET"},"id":71,"name":"EnumValue","src":"3707:59:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_BORROW_CALCULATION_FAILED_BORROWED_ASSET"},"id":72,"name":"EnumValue","src":"3776:60:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_CASH_CALCULATION_FAILED_BORROWED_ASSET"},"id":73,"name":"EnumValue","src":"3846:58:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_BORROWER_COLLATERAL_ASSET"},"id":74,"name":"EnumValue","src":"3914:79:0"},{"attributes":{"name":"LIQUIDATE_NEW_TOTAL_SUPPLY_BALANCE_CALCULATION_FAILED_LIQUIDATOR_COLLATERAL_ASSET"},"id":75,"name":"EnumValue","src":"4003:81:0"},{"attributes":{"name":"LIQUIDATE_FETCH_ASSET_PRICE_FAILED"},"id":76,"name":"EnumValue","src":"4094:34:0"},{"attributes":{"name":"LIQUIDATE_TRANSFER_IN_FAILED"},"id":77,"name":"EnumValue","src":"4138:28:0"},{"attributes":{"name":"LIQUIDATE_TRANSFER_IN_NOT_POSSIBLE"},"id":78,"name":"EnumValue","src":"4176:34:0"},{"attributes":{"name":"REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":79,"name":"EnumValue","src":"4220:51:0"},{"attributes":{"name":"REPAY_BORROW_CONTRACT_PAUSED"},"id":80,"name":"EnumValue","src":"4281:28:0"},{"attributes":{"name":"REPAY_BORROW_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":81,"name":"EnumValue","src":"4319:48:0"},{"attributes":{"name":"REPAY_BORROW_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":82,"name":"EnumValue","src":"4377:47:0"},{"attributes":{"name":"REPAY_BORROW_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":83,"name":"EnumValue","src":"4434:48:0"},{"attributes":{"name":"REPAY_BORROW_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":84,"name":"EnumValue","src":"4492:47:0"},{"attributes":{"name":"REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":85,"name":"EnumValue","src":"4549:49:0"},{"attributes":{"name":"REPAY_BORROW_NEW_TOTAL_BORROW_CALCULATION_FAILED"},"id":86,"name":"EnumValue","src":"4608:48:0"},{"attributes":{"name":"REPAY_BORROW_NEW_TOTAL_CASH_CALCULATION_FAILED"},"id":87,"name":"EnumValue","src":"4666:46:0"},{"attributes":{"name":"REPAY_BORROW_TRANSFER_IN_FAILED"},"id":88,"name":"EnumValue","src":"4722:31:0"},{"attributes":{"name":"REPAY_BORROW_TRANSFER_IN_NOT_POSSIBLE"},"id":89,"name":"EnumValue","src":"4763:37:0"},{"attributes":{"name":"SET_ASSET_PRICE_CHECK_ORACLE"},"id":90,"name":"EnumValue","src":"4810:28:0"},{"attributes":{"name":"SET_MARKET_INTEREST_RATE_MODEL_OWNER_CHECK"},"id":91,"name":"EnumValue","src":"4848:42:0"},{"attributes":{"name":"SET_ORACLE_OWNER_CHECK"},"id":92,"name":"EnumValue","src":"4900:22:0"},{"attributes":{"name":"SET_ORIGINATION_FEE_OWNER_CHECK"},"id":93,"name":"EnumValue","src":"4932:31:0"},{"attributes":{"name":"SET_PAUSED_OWNER_CHECK"},"id":94,"name":"EnumValue","src":"4973:22:0"},{"attributes":{"name":"SET_PENDING_ADMIN_OWNER_CHECK"},"id":95,"name":"EnumValue","src":"5005:29:0"},{"attributes":{"name":"SET_RISK_PARAMETERS_OWNER_CHECK"},"id":96,"name":"EnumValue","src":"5044:31:0"},{"attributes":{"name":"SET_RISK_PARAMETERS_VALIDATION"},"id":97,"name":"EnumValue","src":"5085:30:0"},{"attributes":{"name":"SUPPLY_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":98,"name":"EnumValue","src":"5125:45:0"},{"attributes":{"name":"SUPPLY_CONTRACT_PAUSED"},"id":99,"name":"EnumValue","src":"5180:22:0"},{"attributes":{"name":"SUPPLY_MARKET_NOT_SUPPORTED"},"id":100,"name":"EnumValue","src":"5212:27:0"},{"attributes":{"name":"SUPPLY_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":101,"name":"EnumValue","src":"5249:42:0"},{"attributes":{"name":"SUPPLY_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":102,"name":"EnumValue","src":"5301:41:0"},{"attributes":{"name":"SUPPLY_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":103,"name":"EnumValue","src":"5352:42:0"},{"attributes":{"name":"SUPPLY_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":104,"name":"EnumValue","src":"5404:41:0"},{"attributes":{"name":"SUPPLY_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":105,"name":"EnumValue","src":"5455:43:0"},{"attributes":{"name":"SUPPLY_NEW_TOTAL_CASH_CALCULATION_FAILED"},"id":106,"name":"EnumValue","src":"5508:40:0"},{"attributes":{"name":"SUPPLY_NEW_TOTAL_SUPPLY_CALCULATION_FAILED"},"id":107,"name":"EnumValue","src":"5558:42:0"},{"attributes":{"name":"SUPPLY_TRANSFER_IN_FAILED"},"id":108,"name":"EnumValue","src":"5610:25:0"},{"attributes":{"name":"SUPPLY_TRANSFER_IN_NOT_POSSIBLE"},"id":109,"name":"EnumValue","src":"5645:31:0"},{"attributes":{"name":"SUPPORT_MARKET_FETCH_PRICE_FAILED"},"id":110,"name":"EnumValue","src":"5686:33:0"},{"attributes":{"name":"SUPPORT_MARKET_OWNER_CHECK"},"id":111,"name":"EnumValue","src":"5729:26:0"},{"attributes":{"name":"SUPPORT_MARKET_PRICE_CHECK"},"id":112,"name":"EnumValue","src":"5765:26:0"},{"attributes":{"name":"SUSPEND_MARKET_OWNER_CHECK"},"id":113,"name":"EnumValue","src":"5801:26:0"},{"attributes":{"name":"WITHDRAW_ACCOUNT_LIQUIDITY_CALCULATION_FAILED"},"id":114,"name":"EnumValue","src":"5837:45:0"},{"attributes":{"name":"WITHDRAW_ACCOUNT_SHORTFALL_PRESENT"},"id":115,"name":"EnumValue","src":"5892:34:0"},{"attributes":{"name":"WITHDRAW_ACCUMULATED_BALANCE_CALCULATION_FAILED"},"id":116,"name":"EnumValue","src":"5936:47:0"},{"attributes":{"name":"WITHDRAW_AMOUNT_LIQUIDITY_SHORTFALL"},"id":117,"name":"EnumValue","src":"5993:35:0"},{"attributes":{"name":"WITHDRAW_AMOUNT_VALUE_CALCULATION_FAILED"},"id":118,"name":"EnumValue","src":"6038:40:0"},{"attributes":{"name":"WITHDRAW_CAPACITY_CALCULATION_FAILED"},"id":119,"name":"EnumValue","src":"6088:36:0"},{"attributes":{"name":"WITHDRAW_CONTRACT_PAUSED"},"id":120,"name":"EnumValue","src":"6134:24:0"},{"attributes":{"name":"WITHDRAW_NEW_BORROW_INDEX_CALCULATION_FAILED"},"id":121,"name":"EnumValue","src":"6168:44:0"},{"attributes":{"name":"WITHDRAW_NEW_BORROW_RATE_CALCULATION_FAILED"},"id":122,"name":"EnumValue","src":"6222:43:0"},{"attributes":{"name":"WITHDRAW_NEW_SUPPLY_INDEX_CALCULATION_FAILED"},"id":123,"name":"EnumValue","src":"6275:44:0"},{"attributes":{"name":"WITHDRAW_NEW_SUPPLY_RATE_CALCULATION_FAILED"},"id":124,"name":"EnumValue","src":"6329:43:0"},{"attributes":{"name":"WITHDRAW_NEW_TOTAL_BALANCE_CALCULATION_FAILED"},"id":125,"name":"EnumValue","src":"6382:45:0"},{"attributes":{"name":"WITHDRAW_NEW_TOTAL_SUPPLY_CALCULATION_FAILED"},"id":126,"name":"EnumValue","src":"6437:44:0"},{"attributes":{"name":"WITHDRAW_TRANSFER_OUT_FAILED"},"id":127,"name":"EnumValue","src":"6491:28:0"},{"attributes":{"name":"WITHDRAW_TRANSFER_OUT_NOT_POSSIBLE"},"id":128,"name":"EnumValue","src":"6529:34:0"}],"id":129,"name":"EnumDefinition","src":"1832:4737:0"},{"attributes":{"constant":false,"documentation":"@dev use this when reporting a known error from the money market or a non-upgradeable collaborator","implemented":true,"isConstructor":false,"modifiers":[null],"name":"fail","payable":false,"scope":180,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"err","scope":153,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":130,"name":"UserDefinedTypeName","src":"6714:5:0"}],"id":131,"name":"VariableDeclaration","src":"6714:9:0"},{"attributes":{"constant":false,"name":"info","scope":153,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.FailureInfo","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"FailureInfo","referencedDeclaration":129,"type":"enum ErrorReporter.FailureInfo"},"id":132,"name":"UserDefinedTypeName","src":"6725:11:0"}],"id":133,"name":"VariableDeclaration","src":"6725:16:0"}],"id":134,"name":"ParameterList","src":"6713:29:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":153,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":135,"name":"ElementaryTypeName","src":"6761:4:0"}],"id":136,"name":"VariableDeclaration","src":"6761:4:0"}],"id":137,"name":"ParameterList","src":"6760:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"function (uint256,uint256,uint256)","value":"Failure"},"id":138,"name":"Identifier","src":"6782:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":139,"name":"ElementaryTypeNameExpression","src":"6790:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":131,"type":"enum ErrorReporter.Error","value":"err"},"id":140,"name":"Identifier","src":"6795:3:0"}],"id":141,"name":"FunctionCall","src":"6790:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_FailureInfo_$129","typeString":"enum ErrorReporter.FailureInfo"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":142,"name":"ElementaryTypeNameExpression","src":"6801:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":133,"type":"enum ErrorReporter.FailureInfo","value":"info"},"id":143,"name":"Identifier","src":"6806:4:0"}],"id":144,"name":"FunctionCall","src":"6801:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":145,"name":"Literal","src":"6813:1:0"}],"id":146,"name":"FunctionCall","src":"6782:33:0"}],"id":147,"name":"EmitStatement","src":"6777:38:0"},{"attributes":{"functionReturnParameters":137},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":148,"name":"ElementaryTypeNameExpression","src":"6833:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":131,"type":"enum ErrorReporter.Error","value":"err"},"id":149,"name":"Identifier","src":"6838:3:0"}],"id":150,"name":"FunctionCall","src":"6833:9:0"}],"id":151,"name":"Return","src":"6826:16:0"}],"id":152,"name":"Block","src":"6767:82:0"}],"id":153,"name":"FunctionDefinition","src":"6700:149:0"},{"attributes":{"constant":false,"documentation":"@dev use this when reporting an opaque error from an upgradeable collaborator contract","implemented":true,"isConstructor":false,"modifiers":[null],"name":"failOpaque","payable":false,"scope":180,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"info","scope":179,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.FailureInfo","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"FailureInfo","referencedDeclaration":129,"type":"enum ErrorReporter.FailureInfo"},"id":154,"name":"UserDefinedTypeName","src":"6988:11:0"}],"id":155,"name":"VariableDeclaration","src":"6988:16:0"},{"attributes":{"constant":false,"name":"opaqueError","scope":179,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":156,"name":"ElementaryTypeName","src":"7006:4:0"}],"id":157,"name":"VariableDeclaration","src":"7006:16:0"}],"id":158,"name":"ParameterList","src":"6987:36:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":179,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":159,"name":"ElementaryTypeName","src":"7042:4:0"}],"id":160,"name":"VariableDeclaration","src":"7042:4:0"}],"id":161,"name":"ParameterList","src":"7041:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"function (uint256,uint256,uint256)","value":"Failure"},"id":162,"name":"Identifier","src":"7063:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":163,"name":"ElementaryTypeNameExpression","src":"7071:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"OPAQUE_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":164,"name":"Identifier","src":"7076:5:0"}],"id":165,"name":"MemberAccess","src":"7076:18:0"}],"id":166,"name":"FunctionCall","src":"7071:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_FailureInfo_$129","typeString":"enum ErrorReporter.FailureInfo"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":167,"name":"ElementaryTypeNameExpression","src":"7097:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":155,"type":"enum ErrorReporter.FailureInfo","value":"info"},"id":168,"name":"Identifier","src":"7102:4:0"}],"id":169,"name":"FunctionCall","src":"7097:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":157,"type":"uint256","value":"opaqueError"},"id":170,"name":"Identifier","src":"7109:11:0"}],"id":171,"name":"FunctionCall","src":"7063:58:0"}],"id":172,"name":"EmitStatement","src":"7058:63:0"},{"attributes":{"functionReturnParameters":161},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":173,"name":"ElementaryTypeNameExpression","src":"7139:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"OPAQUE_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":174,"name":"Identifier","src":"7144:5:0"}],"id":175,"name":"MemberAccess","src":"7144:18:0"}],"id":176,"name":"FunctionCall","src":"7139:24:0"}],"id":177,"name":"Return","src":"7132:31:0"}],"id":178,"name":"Block","src":"7048:122:0"}],"id":179,"name":"FunctionDefinition","src":"6968:202:0"}],"id":180,"name":"ContractDefinition","src":"272:6901:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":false,"linearizedBaseContracts":[207],"name":"InterestRateModel","scope":1164},"children":[{"attributes":{"body":null,"constant":true,"documentation":"@notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the supply interest rate per block scaled by 10e18","implemented":false,"isConstructor":false,"modifiers":[null],"name":"getSupplyRate","payable":false,"scope":207,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"asset","scope":193,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":181,"name":"ElementaryTypeName","src":"7813:7:0"}],"id":182,"name":"VariableDeclaration","src":"7813:13:0"},{"attributes":{"constant":false,"name":"cash","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":183,"name":"ElementaryTypeName","src":"7828:4:0"}],"id":184,"name":"VariableDeclaration","src":"7828:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":185,"name":"ElementaryTypeName","src":"7839:4:0"}],"id":186,"name":"VariableDeclaration","src":"7839:12:0"}],"id":187,"name":"ParameterList","src":"7812:40:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":188,"name":"ElementaryTypeName","src":"7874:4:0"}],"id":189,"name":"VariableDeclaration","src":"7874:4:0"},{"attributes":{"constant":false,"name":"","scope":193,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":190,"name":"ElementaryTypeName","src":"7880:4:0"}],"id":191,"name":"VariableDeclaration","src":"7880:4:0"}],"id":192,"name":"ParameterList","src":"7873:12:0"}],"id":193,"name":"FunctionDefinition","src":"7790:96:0"},{"attributes":{"body":null,"constant":true,"documentation":"@notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the borrow interest rate per block scaled by 10e18","implemented":false,"isConstructor":false,"modifiers":[null],"name":"getBorrowRate","payable":false,"scope":207,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"asset","scope":206,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":194,"name":"ElementaryTypeName","src":"8497:7:0"}],"id":195,"name":"VariableDeclaration","src":"8497:13:0"},{"attributes":{"constant":false,"name":"cash","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":196,"name":"ElementaryTypeName","src":"8512:4:0"}],"id":197,"name":"VariableDeclaration","src":"8512:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":198,"name":"ElementaryTypeName","src":"8523:4:0"}],"id":199,"name":"VariableDeclaration","src":"8523:12:0"}],"id":200,"name":"ParameterList","src":"8496:40:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":201,"name":"ElementaryTypeName","src":"8558:4:0"}],"id":202,"name":"VariableDeclaration","src":"8558:4:0"},{"attributes":{"constant":false,"name":"","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":203,"name":"ElementaryTypeName","src":"8564:4:0"}],"id":204,"name":"VariableDeclaration","src":"8564:4:0"}],"id":205,"name":"ParameterList","src":"8557:12:0"}],"id":206,"name":"FunctionDefinition","src":"8474:96:0"}],"id":207,"name":"ContractDefinition","src":"7174:1398:0"},{"attributes":{"contractDependencies":[180],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[387,180],"name":"CarefulMath","scope":1164},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ErrorReporter","referencedDeclaration":180,"type":"contract ErrorReporter"},"id":208,"name":"UserDefinedTypeName","src":"8597:13:0"}],"id":209,"name":"InheritanceSpecifier","src":"8597:13:0"},{"attributes":{"constant":true,"documentation":"@dev Multiplies two numbers, returns an error on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mul","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":210,"name":"ElementaryTypeName","src":"8711:4:0"}],"id":211,"name":"VariableDeclaration","src":"8711:6:0"},{"attributes":{"constant":false,"name":"b","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":212,"name":"ElementaryTypeName","src":"8719:4:0"}],"id":213,"name":"VariableDeclaration","src":"8719:6:0"}],"id":214,"name":"ParameterList","src":"8710:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":255,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":215,"name":"UserDefinedTypeName","src":"8750:5:0"}],"id":216,"name":"VariableDeclaration","src":"8750:5:0"},{"attributes":{"constant":false,"name":"","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":217,"name":"ElementaryTypeName","src":"8757:4:0"}],"id":218,"name":"VariableDeclaration","src":"8757:4:0"}],"id":219,"name":"ParameterList","src":"8749:13:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"a"},"id":220,"name":"Identifier","src":"8777:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":221,"name":"Literal","src":"8782:1:0"}],"id":222,"name":"BinaryOperation","src":"8777:6:0"},{"children":[{"attributes":{"functionReturnParameters":219},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":223,"name":"Identifier","src":"8807:5:0"}],"id":224,"name":"MemberAccess","src":"8807:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":225,"name":"Literal","src":"8823:1:0"}],"id":226,"name":"TupleExpression","src":"8806:19:0"}],"id":227,"name":"Return","src":"8799:26:0"}],"id":228,"name":"Block","src":"8785:51:0"}],"id":229,"name":"IfStatement","src":"8773:63:0"},{"attributes":{"assignments":[231]},"children":[{"attributes":{"constant":false,"name":"c","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":230,"name":"ElementaryTypeName","src":"8846:4:0"}],"id":231,"name":"VariableDeclaration","src":"8846:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"a"},"id":232,"name":"Identifier","src":"8855:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":213,"type":"uint256","value":"b"},"id":233,"name":"Identifier","src":"8859:1:0"}],"id":234,"name":"BinaryOperation","src":"8855:5:0"}],"id":235,"name":"VariableDeclarationStatement","src":"8846:14:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":231,"type":"uint256","value":"c"},"id":236,"name":"Identifier","src":"8875:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"a"},"id":237,"name":"Identifier","src":"8879:1:0"}],"id":238,"name":"BinaryOperation","src":"8875:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":213,"type":"uint256","value":"b"},"id":239,"name":"Identifier","src":"8884:1:0"}],"id":240,"name":"BinaryOperation","src":"8875:10:0"},{"children":[{"attributes":{"functionReturnParameters":219},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"INTEGER_OVERFLOW","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":241,"name":"Identifier","src":"8909:5:0"}],"id":242,"name":"MemberAccess","src":"8909:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":243,"name":"Literal","src":"8933:1:0"}],"id":244,"name":"TupleExpression","src":"8908:27:0"}],"id":245,"name":"Return","src":"8901:34:0"}],"id":246,"name":"Block","src":"8887:59:0"},{"children":[{"attributes":{"functionReturnParameters":219},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":247,"name":"Identifier","src":"8974:5:0"}],"id":248,"name":"MemberAccess","src":"8974:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":231,"type":"uint256","value":"c"},"id":249,"name":"Identifier","src":"8990:1:0"}],"id":250,"name":"TupleExpression","src":"8973:19:0"}],"id":251,"name":"Return","src":"8966:26:0"}],"id":252,"name":"Block","src":"8952:51:0"}],"id":253,"name":"IfStatement","src":"8871:132:0"}],"id":254,"name":"Block","src":"8763:246:0"}],"id":255,"name":"FunctionDefinition","src":"8698:311:0"},{"attributes":{"constant":true,"documentation":"@dev Integer division of two numbers, truncating the quotient.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"div","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":284,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":256,"name":"ElementaryTypeName","src":"9112:4:0"}],"id":257,"name":"VariableDeclaration","src":"9112:6:0"},{"attributes":{"constant":false,"name":"b","scope":284,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":258,"name":"ElementaryTypeName","src":"9120:4:0"}],"id":259,"name":"VariableDeclaration","src":"9120:6:0"}],"id":260,"name":"ParameterList","src":"9111:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":284,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":261,"name":"UserDefinedTypeName","src":"9151:5:0"}],"id":262,"name":"VariableDeclaration","src":"9151:5:0"},{"attributes":{"constant":false,"name":"","scope":284,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":263,"name":"ElementaryTypeName","src":"9158:4:0"}],"id":264,"name":"VariableDeclaration","src":"9158:4:0"}],"id":265,"name":"ParameterList","src":"9150:13:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"b"},"id":266,"name":"Identifier","src":"9178:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":267,"name":"Literal","src":"9183:1:0"}],"id":268,"name":"BinaryOperation","src":"9178:6:0"},{"children":[{"attributes":{"functionReturnParameters":265},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"DIVISION_BY_ZERO","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":269,"name":"Identifier","src":"9208:5:0"}],"id":270,"name":"MemberAccess","src":"9208:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":271,"name":"Literal","src":"9232:1:0"}],"id":272,"name":"TupleExpression","src":"9207:27:0"}],"id":273,"name":"Return","src":"9200:34:0"}],"id":274,"name":"Block","src":"9186:59:0"}],"id":275,"name":"IfStatement","src":"9174:71:0"},{"attributes":{"functionReturnParameters":265},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":276,"name":"Identifier","src":"9263:5:0"}],"id":277,"name":"MemberAccess","src":"9263:14:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"uint256","value":"a"},"id":278,"name":"Identifier","src":"9279:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":259,"type":"uint256","value":"b"},"id":279,"name":"Identifier","src":"9283:1:0"}],"id":280,"name":"BinaryOperation","src":"9279:5:0"}],"id":281,"name":"TupleExpression","src":"9262:23:0"}],"id":282,"name":"Return","src":"9255:30:0"}],"id":283,"name":"Block","src":"9164:128:0"}],"id":284,"name":"FunctionDefinition","src":"9099:193:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two numbers, returns an error on overflow (i.e. if subtrahend is greater than minuend).","implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":314,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":285,"name":"ElementaryTypeName","src":"9435:4:0"}],"id":286,"name":"VariableDeclaration","src":"9435:6:0"},{"attributes":{"constant":false,"name":"b","scope":314,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":287,"name":"ElementaryTypeName","src":"9443:4:0"}],"id":288,"name":"VariableDeclaration","src":"9443:6:0"}],"id":289,"name":"ParameterList","src":"9434:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":314,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":290,"name":"UserDefinedTypeName","src":"9474:5:0"}],"id":291,"name":"VariableDeclaration","src":"9474:5:0"},{"attributes":{"constant":false,"name":"","scope":314,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":292,"name":"ElementaryTypeName","src":"9481:4:0"}],"id":293,"name":"VariableDeclaration","src":"9481:4:0"}],"id":294,"name":"ParameterList","src":"9473:13:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"b"},"id":295,"name":"Identifier","src":"9501:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":286,"type":"uint256","value":"a"},"id":296,"name":"Identifier","src":"9506:1:0"}],"id":297,"name":"BinaryOperation","src":"9501:6:0"},{"children":[{"attributes":{"functionReturnParameters":294},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":298,"name":"Identifier","src":"9531:5:0"}],"id":299,"name":"MemberAccess","src":"9531:14:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":286,"type":"uint256","value":"a"},"id":300,"name":"Identifier","src":"9547:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"uint256","value":"b"},"id":301,"name":"Identifier","src":"9551:1:0"}],"id":302,"name":"BinaryOperation","src":"9547:5:0"}],"id":303,"name":"TupleExpression","src":"9530:23:0"}],"id":304,"name":"Return","src":"9523:30:0"}],"id":305,"name":"Block","src":"9509:55:0"},{"children":[{"attributes":{"functionReturnParameters":294},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"INTEGER_UNDERFLOW","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":306,"name":"Identifier","src":"9592:5:0"}],"id":307,"name":"MemberAccess","src":"9592:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":308,"name":"Literal","src":"9617:1:0"}],"id":309,"name":"TupleExpression","src":"9591:28:0"}],"id":310,"name":"Return","src":"9584:35:0"}],"id":311,"name":"Block","src":"9570:60:0"}],"id":312,"name":"IfStatement","src":"9497:133:0"}],"id":313,"name":"Block","src":"9487:149:0"}],"id":314,"name":"FunctionDefinition","src":"9422:214:0"},{"attributes":{"constant":true,"documentation":"@dev Adds two numbers, returns an error on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":315,"name":"ElementaryTypeName","src":"9729:4:0"}],"id":316,"name":"VariableDeclaration","src":"9729:6:0"},{"attributes":{"constant":false,"name":"b","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":317,"name":"ElementaryTypeName","src":"9737:4:0"}],"id":318,"name":"VariableDeclaration","src":"9737:6:0"}],"id":319,"name":"ParameterList","src":"9728:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":348,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":320,"name":"UserDefinedTypeName","src":"9768:5:0"}],"id":321,"name":"VariableDeclaration","src":"9768:5:0"},{"attributes":{"constant":false,"name":"","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":322,"name":"ElementaryTypeName","src":"9775:4:0"}],"id":323,"name":"VariableDeclaration","src":"9775:4:0"}],"id":324,"name":"ParameterList","src":"9767:13:0"},{"children":[{"attributes":{"assignments":[326]},"children":[{"attributes":{"constant":false,"name":"c","scope":348,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":325,"name":"ElementaryTypeName","src":"9791:4:0"}],"id":326,"name":"VariableDeclaration","src":"9791:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":316,"type":"uint256","value":"a"},"id":327,"name":"Identifier","src":"9800:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":318,"type":"uint256","value":"b"},"id":328,"name":"Identifier","src":"9804:1:0"}],"id":329,"name":"BinaryOperation","src":"9800:5:0"}],"id":330,"name":"VariableDeclarationStatement","src":"9791:14:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":326,"type":"uint256","value":"c"},"id":331,"name":"Identifier","src":"9820:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":316,"type":"uint256","value":"a"},"id":332,"name":"Identifier","src":"9825:1:0"}],"id":333,"name":"BinaryOperation","src":"9820:6:0"},{"children":[{"attributes":{"functionReturnParameters":324},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":334,"name":"Identifier","src":"9850:5:0"}],"id":335,"name":"MemberAccess","src":"9850:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":326,"type":"uint256","value":"c"},"id":336,"name":"Identifier","src":"9866:1:0"}],"id":337,"name":"TupleExpression","src":"9849:19:0"}],"id":338,"name":"Return","src":"9842:26:0"}],"id":339,"name":"Block","src":"9828:51:0"},{"children":[{"attributes":{"functionReturnParameters":324},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"INTEGER_OVERFLOW","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":340,"name":"Identifier","src":"9907:5:0"}],"id":341,"name":"MemberAccess","src":"9907:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":342,"name":"Literal","src":"9931:1:0"}],"id":343,"name":"TupleExpression","src":"9906:27:0"}],"id":344,"name":"Return","src":"9899:34:0"}],"id":345,"name":"Block","src":"9885:59:0"}],"id":346,"name":"IfStatement","src":"9816:128:0"}],"id":347,"name":"Block","src":"9781:169:0"}],"id":348,"name":"FunctionDefinition","src":"9716:234:0"},{"attributes":{"constant":true,"documentation":"@dev add a and b and then subtract c","implemented":true,"isConstructor":false,"modifiers":[null],"name":"addThenSub","payable":false,"scope":387,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":349,"name":"ElementaryTypeName","src":"10034:4:0"}],"id":350,"name":"VariableDeclaration","src":"10034:6:0"},{"attributes":{"constant":false,"name":"b","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":351,"name":"ElementaryTypeName","src":"10042:4:0"}],"id":352,"name":"VariableDeclaration","src":"10042:6:0"},{"attributes":{"constant":false,"name":"c","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":353,"name":"ElementaryTypeName","src":"10050:4:0"}],"id":354,"name":"VariableDeclaration","src":"10050:6:0"}],"id":355,"name":"ParameterList","src":"10033:24:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":386,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":356,"name":"UserDefinedTypeName","src":"10081:5:0"}],"id":357,"name":"VariableDeclaration","src":"10081:5:0"},{"attributes":{"constant":false,"name":"","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":358,"name":"ElementaryTypeName","src":"10088:4:0"}],"id":359,"name":"VariableDeclaration","src":"10088:4:0"}],"id":360,"name":"ParameterList","src":"10080:13:0"},{"children":[{"attributes":{"assignments":[362,364]},"children":[{"attributes":{"constant":false,"name":"err0","scope":386,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":361,"name":"UserDefinedTypeName","src":"10105:5:0"}],"id":362,"name":"VariableDeclaration","src":"10105:10:0"},{"attributes":{"constant":false,"name":"sum","scope":386,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":363,"name":"ElementaryTypeName","src":"10117:4:0"}],"id":364,"name":"VariableDeclaration","src":"10117:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":365,"name":"Identifier","src":"10129:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":350,"type":"uint256","value":"a"},"id":366,"name":"Identifier","src":"10133:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":352,"type":"uint256","value":"b"},"id":367,"name":"Identifier","src":"10136:1:0"}],"id":368,"name":"FunctionCall","src":"10129:9:0"}],"id":369,"name":"VariableDeclarationStatement","src":"10104:34:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":362,"type":"enum ErrorReporter.Error","value":"err0"},"id":370,"name":"Identifier","src":"10153:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":371,"name":"Identifier","src":"10161:5:0"}],"id":372,"name":"MemberAccess","src":"10161:14:0"}],"id":373,"name":"BinaryOperation","src":"10153:22:0"},{"children":[{"attributes":{"functionReturnParameters":360},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":362,"type":"enum ErrorReporter.Error","value":"err0"},"id":374,"name":"Identifier","src":"10199:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":375,"name":"Literal","src":"10205:1:0"}],"id":376,"name":"TupleExpression","src":"10198:9:0"}],"id":377,"name":"Return","src":"10191:16:0"}],"id":378,"name":"Block","src":"10177:41:0"}],"id":379,"name":"IfStatement","src":"10149:69:0"},{"attributes":{"functionReturnParameters":360},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":314,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"sub"},"id":380,"name":"Identifier","src":"10235:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"uint256","value":"sum"},"id":381,"name":"Identifier","src":"10239:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":354,"type":"uint256","value":"c"},"id":382,"name":"Identifier","src":"10244:1:0"}],"id":383,"name":"FunctionCall","src":"10235:11:0"}],"id":384,"name":"Return","src":"10228:18:0"}],"id":385,"name":"Block","src":"10094:159:0"}],"id":386,"name":"FunctionDefinition","src":"10014:239:0"}],"id":387,"name":"ContractDefinition","src":"8573:1682:0"},{"attributes":{"contractDependencies":[180,387],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[813,387,180],"name":"Exponential","scope":1164},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ErrorReporter","referencedDeclaration":180,"type":"contract ErrorReporter"},"id":388,"name":"UserDefinedTypeName","src":"10280:13:0"}],"id":389,"name":"InheritanceSpecifier","src":"10280:13:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"CarefulMath","referencedDeclaration":387,"type":"contract CarefulMath"},"id":390,"name":"UserDefinedTypeName","src":"10295:11:0"}],"id":391,"name":"InheritanceSpecifier","src":"10295:11:0"},{"attributes":{"constant":true,"name":"expScale","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":392,"name":"ElementaryTypeName","src":"10574:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1000000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":393,"name":"Literal","src":"10599:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":394,"name":"Literal","src":"10603:2:0"}],"id":395,"name":"BinaryOperation","src":"10599:6:0"}],"id":396,"name":"VariableDeclaration","src":"10574:31:0"},{"attributes":{"constant":true,"name":"halfExpScale","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":397,"name":"ElementaryTypeName","src":"10640:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":398,"name":"Identifier","src":"10669:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":399,"name":"Literal","src":"10678:1:0"}],"id":400,"name":"BinaryOperation","src":"10669:10:0"}],"id":401,"name":"VariableDeclaration","src":"10640:39:0"},{"attributes":{"canonicalName":"Exponential.Exp","name":"Exp","scope":813,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"mantissa","scope":404,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":402,"name":"ElementaryTypeName","src":"10707:4:0"}],"id":403,"name":"VariableDeclaration","src":"10707:13:0"}],"id":404,"name":"StructDefinition","src":"10686:41:0"},{"attributes":{"constant":true,"name":"mantissaOne","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":405,"name":"ElementaryTypeName","src":"10733:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1000000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":406,"name":"Literal","src":"10761:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":407,"name":"Literal","src":"10765:2:0"}],"id":408,"name":"BinaryOperation","src":"10761:6:0"}],"id":409,"name":"VariableDeclaration","src":"10733:34:0"},{"attributes":{"constant":true,"name":"mantissaOneTenth","scope":813,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":410,"name":"ElementaryTypeName","src":"10773:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 100000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":411,"name":"Literal","src":"10806:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3137","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 17","value":"17"},"id":412,"name":"Literal","src":"10810:2:0"}],"id":413,"name":"BinaryOperation","src":"10806:6:0"}],"id":414,"name":"VariableDeclaration","src":"10773:39:0"},{"attributes":{"constant":true,"documentation":"@dev Creates an exponential from numerator and denominator values.\n     Note: Returns an error if (`num` * 10e18) > MAX_INT,\n           or if `denom` is zero.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"num","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":415,"name":"ElementaryTypeName","src":"11027:4:0"}],"id":416,"name":"VariableDeclaration","src":"11027:8:0"},{"attributes":{"constant":false,"name":"denom","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":417,"name":"ElementaryTypeName","src":"11037:4:0"}],"id":418,"name":"VariableDeclaration","src":"11037:10:0"}],"id":419,"name":"ParameterList","src":"11026:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":475,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":420,"name":"UserDefinedTypeName","src":"11072:5:0"}],"id":421,"name":"VariableDeclaration","src":"11072:5:0"},{"attributes":{"constant":false,"name":"","scope":475,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":422,"name":"UserDefinedTypeName","src":"11079:3:0"}],"id":423,"name":"VariableDeclaration","src":"11079:3:0"}],"id":424,"name":"ParameterList","src":"11071:19:0"},{"children":[{"attributes":{"assignments":[426,428]},"children":[{"attributes":{"constant":false,"name":"err0","scope":475,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":425,"name":"UserDefinedTypeName","src":"11102:5:0"}],"id":426,"name":"VariableDeclaration","src":"11102:10:0"},{"attributes":{"constant":false,"name":"scaledNumerator","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":427,"name":"ElementaryTypeName","src":"11114:4:0"}],"id":428,"name":"VariableDeclaration","src":"11114:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":429,"name":"Identifier","src":"11138:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":416,"type":"uint256","value":"num"},"id":430,"name":"Identifier","src":"11142:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":431,"name":"Identifier","src":"11147:8:0"}],"id":432,"name":"FunctionCall","src":"11138:18:0"}],"id":433,"name":"VariableDeclarationStatement","src":"11101:55:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":426,"type":"enum ErrorReporter.Error","value":"err0"},"id":434,"name":"Identifier","src":"11170:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":435,"name":"Identifier","src":"11178:5:0"}],"id":436,"name":"MemberAccess","src":"11178:14:0"}],"id":437,"name":"BinaryOperation","src":"11170:22:0"},{"children":[{"attributes":{"functionReturnParameters":424},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":426,"type":"enum ErrorReporter.Error","value":"err0"},"id":438,"name":"Identifier","src":"11216:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":439,"name":"Identifier","src":"11222:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":440,"name":"Literal","src":"11237:1:0"}],"id":441,"name":"FunctionCall","src":"11222:18:0"}],"id":442,"name":"TupleExpression","src":"11215:26:0"}],"id":443,"name":"Return","src":"11208:33:0"}],"id":444,"name":"Block","src":"11194:58:0"}],"id":445,"name":"IfStatement","src":"11166:86:0"},{"attributes":{"assignments":[447,449]},"children":[{"attributes":{"constant":false,"name":"err1","scope":475,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":446,"name":"UserDefinedTypeName","src":"11263:5:0"}],"id":447,"name":"VariableDeclaration","src":"11263:10:0"},{"attributes":{"constant":false,"name":"rational","scope":475,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":448,"name":"ElementaryTypeName","src":"11275:4:0"}],"id":449,"name":"VariableDeclaration","src":"11275:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":450,"name":"Identifier","src":"11292:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":428,"type":"uint256","value":"scaledNumerator"},"id":451,"name":"Identifier","src":"11296:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":418,"type":"uint256","value":"denom"},"id":452,"name":"Identifier","src":"11313:5:0"}],"id":453,"name":"FunctionCall","src":"11292:27:0"}],"id":454,"name":"VariableDeclarationStatement","src":"11262:57:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":447,"type":"enum ErrorReporter.Error","value":"err1"},"id":455,"name":"Identifier","src":"11333:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":456,"name":"Identifier","src":"11341:5:0"}],"id":457,"name":"MemberAccess","src":"11341:14:0"}],"id":458,"name":"BinaryOperation","src":"11333:22:0"},{"children":[{"attributes":{"functionReturnParameters":424},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":447,"type":"enum ErrorReporter.Error","value":"err1"},"id":459,"name":"Identifier","src":"11379:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":460,"name":"Identifier","src":"11385:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":461,"name":"Literal","src":"11400:1:0"}],"id":462,"name":"FunctionCall","src":"11385:18:0"}],"id":463,"name":"TupleExpression","src":"11378:26:0"}],"id":464,"name":"Return","src":"11371:33:0"}],"id":465,"name":"Block","src":"11357:58:0"}],"id":466,"name":"IfStatement","src":"11329:86:0"},{"attributes":{"functionReturnParameters":424},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":467,"name":"Identifier","src":"11433:5:0"}],"id":468,"name":"MemberAccess","src":"11433:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":469,"name":"Identifier","src":"11449:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":449,"type":"uint256","value":"rational"},"id":470,"name":"Identifier","src":"11464:8:0"}],"id":471,"name":"FunctionCall","src":"11449:25:0"}],"id":472,"name":"TupleExpression","src":"11432:43:0"}],"id":473,"name":"Return","src":"11425:50:0"}],"id":474,"name":"Block","src":"11091:391:0"}],"id":475,"name":"FunctionDefinition","src":"11011:471:0"},{"attributes":{"constant":true,"documentation":"@dev Adds two exponentials, returning a new exponential.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"addExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":504,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":476,"name":"UserDefinedTypeName","src":"11582:3:0"}],"id":477,"name":"VariableDeclaration","src":"11582:12:0"},{"attributes":{"constant":false,"name":"b","scope":504,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":478,"name":"UserDefinedTypeName","src":"11596:3:0"}],"id":479,"name":"VariableDeclaration","src":"11596:12:0"}],"id":480,"name":"ParameterList","src":"11581:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":504,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":481,"name":"UserDefinedTypeName","src":"11633:5:0"}],"id":482,"name":"VariableDeclaration","src":"11633:5:0"},{"attributes":{"constant":false,"name":"","scope":504,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":483,"name":"UserDefinedTypeName","src":"11640:3:0"}],"id":484,"name":"VariableDeclaration","src":"11640:3:0"}],"id":485,"name":"ParameterList","src":"11632:19:0"},{"children":[{"attributes":{"assignments":[487,489]},"children":[{"attributes":{"constant":false,"name":"error","scope":504,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":486,"name":"UserDefinedTypeName","src":"11663:5:0"}],"id":487,"name":"VariableDeclaration","src":"11663:11:0"},{"attributes":{"constant":false,"name":"result","scope":504,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":488,"name":"ElementaryTypeName","src":"11676:4:0"}],"id":489,"name":"VariableDeclaration","src":"11676:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":490,"name":"Identifier","src":"11691:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":477,"type":"struct Exponential.Exp memory","value":"a"},"id":491,"name":"Identifier","src":"11695:1:0"}],"id":492,"name":"MemberAccess","src":"11695:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":479,"type":"struct Exponential.Exp memory","value":"b"},"id":493,"name":"Identifier","src":"11707:1:0"}],"id":494,"name":"MemberAccess","src":"11707:10:0"}],"id":495,"name":"FunctionCall","src":"11691:27:0"}],"id":496,"name":"VariableDeclarationStatement","src":"11662:56:0"},{"attributes":{"functionReturnParameters":485},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":487,"type":"enum ErrorReporter.Error","value":"error"},"id":497,"name":"Identifier","src":"11737:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":498,"name":"Identifier","src":"11744:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":489,"type":"uint256","value":"result"},"id":499,"name":"Identifier","src":"11759:6:0"}],"id":500,"name":"FunctionCall","src":"11744:23:0"}],"id":501,"name":"TupleExpression","src":"11736:32:0"}],"id":502,"name":"Return","src":"11729:39:0"}],"id":503,"name":"Block","src":"11652:123:0"}],"id":504,"name":"FunctionDefinition","src":"11566:209:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two exponentials, returning a new exponential.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"subExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":533,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":505,"name":"UserDefinedTypeName","src":"11880:3:0"}],"id":506,"name":"VariableDeclaration","src":"11880:12:0"},{"attributes":{"constant":false,"name":"b","scope":533,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":507,"name":"UserDefinedTypeName","src":"11894:3:0"}],"id":508,"name":"VariableDeclaration","src":"11894:12:0"}],"id":509,"name":"ParameterList","src":"11879:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":533,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":510,"name":"UserDefinedTypeName","src":"11931:5:0"}],"id":511,"name":"VariableDeclaration","src":"11931:5:0"},{"attributes":{"constant":false,"name":"","scope":533,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":512,"name":"UserDefinedTypeName","src":"11938:3:0"}],"id":513,"name":"VariableDeclaration","src":"11938:3:0"}],"id":514,"name":"ParameterList","src":"11930:19:0"},{"children":[{"attributes":{"assignments":[516,518]},"children":[{"attributes":{"constant":false,"name":"error","scope":533,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":515,"name":"UserDefinedTypeName","src":"11961:5:0"}],"id":516,"name":"VariableDeclaration","src":"11961:11:0"},{"attributes":{"constant":false,"name":"result","scope":533,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":517,"name":"ElementaryTypeName","src":"11974:4:0"}],"id":518,"name":"VariableDeclaration","src":"11974:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":314,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"sub"},"id":519,"name":"Identifier","src":"11989:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":506,"type":"struct Exponential.Exp memory","value":"a"},"id":520,"name":"Identifier","src":"11993:1:0"}],"id":521,"name":"MemberAccess","src":"11993:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":508,"type":"struct Exponential.Exp memory","value":"b"},"id":522,"name":"Identifier","src":"12005:1:0"}],"id":523,"name":"MemberAccess","src":"12005:10:0"}],"id":524,"name":"FunctionCall","src":"11989:27:0"}],"id":525,"name":"VariableDeclarationStatement","src":"11960:56:0"},{"attributes":{"functionReturnParameters":514},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":516,"type":"enum ErrorReporter.Error","value":"error"},"id":526,"name":"Identifier","src":"12035:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":527,"name":"Identifier","src":"12042:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":518,"type":"uint256","value":"result"},"id":528,"name":"Identifier","src":"12057:6:0"}],"id":529,"name":"FunctionCall","src":"12042:23:0"}],"id":530,"name":"TupleExpression","src":"12034:32:0"}],"id":531,"name":"Return","src":"12027:39:0"}],"id":532,"name":"Block","src":"11950:123:0"}],"id":533,"name":"FunctionDefinition","src":"11864:209:0"},{"attributes":{"constant":true,"documentation":"@dev Multiply an Exp by a scalar, returning a new Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mulScalar","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":574,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":534,"name":"UserDefinedTypeName","src":"12174:3:0"}],"id":535,"name":"VariableDeclaration","src":"12174:12:0"},{"attributes":{"constant":false,"name":"scalar","scope":574,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":536,"name":"ElementaryTypeName","src":"12188:4:0"}],"id":537,"name":"VariableDeclaration","src":"12188:11:0"}],"id":538,"name":"ParameterList","src":"12173:27:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":574,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":539,"name":"UserDefinedTypeName","src":"12224:5:0"}],"id":540,"name":"VariableDeclaration","src":"12224:5:0"},{"attributes":{"constant":false,"name":"","scope":574,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":541,"name":"UserDefinedTypeName","src":"12231:3:0"}],"id":542,"name":"VariableDeclaration","src":"12231:3:0"}],"id":543,"name":"ParameterList","src":"12223:19:0"},{"children":[{"attributes":{"assignments":[545,547]},"children":[{"attributes":{"constant":false,"name":"err0","scope":574,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":544,"name":"UserDefinedTypeName","src":"12254:5:0"}],"id":545,"name":"VariableDeclaration","src":"12254:10:0"},{"attributes":{"constant":false,"name":"scaledMantissa","scope":574,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":546,"name":"ElementaryTypeName","src":"12266:4:0"}],"id":547,"name":"VariableDeclaration","src":"12266:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":548,"name":"Identifier","src":"12289:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":535,"type":"struct Exponential.Exp memory","value":"a"},"id":549,"name":"Identifier","src":"12293:1:0"}],"id":550,"name":"MemberAccess","src":"12293:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":537,"type":"uint256","value":"scalar"},"id":551,"name":"Identifier","src":"12305:6:0"}],"id":552,"name":"FunctionCall","src":"12289:23:0"}],"id":553,"name":"VariableDeclarationStatement","src":"12253:59:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":545,"type":"enum ErrorReporter.Error","value":"err0"},"id":554,"name":"Identifier","src":"12326:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":555,"name":"Identifier","src":"12334:5:0"}],"id":556,"name":"MemberAccess","src":"12334:14:0"}],"id":557,"name":"BinaryOperation","src":"12326:22:0"},{"children":[{"attributes":{"functionReturnParameters":543},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":545,"type":"enum ErrorReporter.Error","value":"err0"},"id":558,"name":"Identifier","src":"12372:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":559,"name":"Identifier","src":"12378:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":560,"name":"Literal","src":"12393:1:0"}],"id":561,"name":"FunctionCall","src":"12378:18:0"}],"id":562,"name":"TupleExpression","src":"12371:26:0"}],"id":563,"name":"Return","src":"12364:33:0"}],"id":564,"name":"Block","src":"12350:58:0"}],"id":565,"name":"IfStatement","src":"12322:86:0"},{"attributes":{"functionReturnParameters":543},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":566,"name":"Identifier","src":"12426:5:0"}],"id":567,"name":"MemberAccess","src":"12426:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":568,"name":"Identifier","src":"12442:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":547,"type":"uint256","value":"scaledMantissa"},"id":569,"name":"Identifier","src":"12457:14:0"}],"id":570,"name":"FunctionCall","src":"12442:31:0"}],"id":571,"name":"TupleExpression","src":"12425:49:0"}],"id":572,"name":"Return","src":"12418:56:0"}],"id":573,"name":"Block","src":"12243:238:0"}],"id":574,"name":"FunctionDefinition","src":"12155:326:0"},{"attributes":{"constant":true,"documentation":"@dev Divide an Exp by a scalar, returning a new Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"divScalar","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":615,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":575,"name":"UserDefinedTypeName","src":"12580:3:0"}],"id":576,"name":"VariableDeclaration","src":"12580:12:0"},{"attributes":{"constant":false,"name":"scalar","scope":615,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":577,"name":"ElementaryTypeName","src":"12594:4:0"}],"id":578,"name":"VariableDeclaration","src":"12594:11:0"}],"id":579,"name":"ParameterList","src":"12579:27:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":615,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":580,"name":"UserDefinedTypeName","src":"12630:5:0"}],"id":581,"name":"VariableDeclaration","src":"12630:5:0"},{"attributes":{"constant":false,"name":"","scope":615,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":582,"name":"UserDefinedTypeName","src":"12637:3:0"}],"id":583,"name":"VariableDeclaration","src":"12637:3:0"}],"id":584,"name":"ParameterList","src":"12629:19:0"},{"children":[{"attributes":{"assignments":[586,588]},"children":[{"attributes":{"constant":false,"name":"err0","scope":615,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":585,"name":"UserDefinedTypeName","src":"12660:5:0"}],"id":586,"name":"VariableDeclaration","src":"12660:10:0"},{"attributes":{"constant":false,"name":"descaledMantissa","scope":615,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":587,"name":"ElementaryTypeName","src":"12672:4:0"}],"id":588,"name":"VariableDeclaration","src":"12672:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":589,"name":"Identifier","src":"12697:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":576,"type":"struct Exponential.Exp memory","value":"a"},"id":590,"name":"Identifier","src":"12701:1:0"}],"id":591,"name":"MemberAccess","src":"12701:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":578,"type":"uint256","value":"scalar"},"id":592,"name":"Identifier","src":"12713:6:0"}],"id":593,"name":"FunctionCall","src":"12697:23:0"}],"id":594,"name":"VariableDeclarationStatement","src":"12659:61:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"enum ErrorReporter.Error","value":"err0"},"id":595,"name":"Identifier","src":"12734:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":596,"name":"Identifier","src":"12742:5:0"}],"id":597,"name":"MemberAccess","src":"12742:14:0"}],"id":598,"name":"BinaryOperation","src":"12734:22:0"},{"children":[{"attributes":{"functionReturnParameters":584},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"enum ErrorReporter.Error","value":"err0"},"id":599,"name":"Identifier","src":"12780:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":600,"name":"Identifier","src":"12786:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":601,"name":"Literal","src":"12801:1:0"}],"id":602,"name":"FunctionCall","src":"12786:18:0"}],"id":603,"name":"TupleExpression","src":"12779:26:0"}],"id":604,"name":"Return","src":"12772:33:0"}],"id":605,"name":"Block","src":"12758:58:0"}],"id":606,"name":"IfStatement","src":"12730:86:0"},{"attributes":{"functionReturnParameters":584},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":607,"name":"Identifier","src":"12834:5:0"}],"id":608,"name":"MemberAccess","src":"12834:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":609,"name":"Identifier","src":"12850:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":588,"type":"uint256","value":"descaledMantissa"},"id":610,"name":"Identifier","src":"12865:16:0"}],"id":611,"name":"FunctionCall","src":"12850:33:0"}],"id":612,"name":"TupleExpression","src":"12833:51:0"}],"id":613,"name":"Return","src":"12826:58:0"}],"id":614,"name":"Block","src":"12649:242:0"}],"id":615,"name":"FunctionDefinition","src":"12561:330:0"},{"attributes":{"constant":true,"documentation":"@dev Divide a scalar by an Exp, returning a new Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"divScalarByExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"scalar","scope":654,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":616,"name":"ElementaryTypeName","src":"12995:4:0"}],"id":617,"name":"VariableDeclaration","src":"12995:11:0"},{"attributes":{"constant":false,"name":"divisor","scope":654,"stateVariable":false,"storageLocation":"default","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":618,"name":"UserDefinedTypeName","src":"13008:3:0"}],"id":619,"name":"VariableDeclaration","src":"13008:11:0"}],"id":620,"name":"ParameterList","src":"12994:26:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":654,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":621,"name":"UserDefinedTypeName","src":"13044:5:0"}],"id":622,"name":"VariableDeclaration","src":"13044:5:0"},{"attributes":{"constant":false,"name":"","scope":654,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":623,"name":"UserDefinedTypeName","src":"13051:3:0"}],"id":624,"name":"VariableDeclaration","src":"13051:3:0"}],"id":625,"name":"ParameterList","src":"13043:19:0"},{"children":[{"attributes":{"assignments":[627,629]},"children":[{"attributes":{"constant":false,"name":"err0","scope":654,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":626,"name":"UserDefinedTypeName","src":"13356:5:0"}],"id":627,"name":"VariableDeclaration","src":"13356:10:0"},{"attributes":{"constant":false,"name":"numerator","scope":654,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":628,"name":"ElementaryTypeName","src":"13368:4:0"}],"id":629,"name":"VariableDeclaration","src":"13368:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":630,"name":"Identifier","src":"13386:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":631,"name":"Identifier","src":"13390:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":617,"type":"uint256","value":"scalar"},"id":632,"name":"Identifier","src":"13400:6:0"}],"id":633,"name":"FunctionCall","src":"13386:21:0"}],"id":634,"name":"VariableDeclarationStatement","src":"13355:52:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":627,"type":"enum ErrorReporter.Error","value":"err0"},"id":635,"name":"Identifier","src":"13421:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":636,"name":"Identifier","src":"13429:5:0"}],"id":637,"name":"MemberAccess","src":"13429:14:0"}],"id":638,"name":"BinaryOperation","src":"13421:22:0"},{"children":[{"attributes":{"functionReturnParameters":625},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":627,"type":"enum ErrorReporter.Error","value":"err0"},"id":639,"name":"Identifier","src":"13467:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":640,"name":"Identifier","src":"13473:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":641,"name":"Literal","src":"13488:1:0"}],"id":642,"name":"FunctionCall","src":"13473:18:0"}],"id":643,"name":"TupleExpression","src":"13466:26:0"}],"id":644,"name":"Return","src":"13459:33:0"}],"id":645,"name":"Block","src":"13445:58:0"}],"id":646,"name":"IfStatement","src":"13417:86:0"},{"attributes":{"functionReturnParameters":625},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"getExp"},"id":647,"name":"Identifier","src":"13519:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":629,"type":"uint256","value":"numerator"},"id":648,"name":"Identifier","src":"13526:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":619,"type":"struct Exponential.Exp memory","value":"divisor"},"id":649,"name":"Identifier","src":"13537:7:0"}],"id":650,"name":"MemberAccess","src":"13537:16:0"}],"id":651,"name":"FunctionCall","src":"13519:35:0"}],"id":652,"name":"Return","src":"13512:42:0"}],"id":653,"name":"Block","src":"13063:498:0"}],"id":654,"name":"FunctionDefinition","src":"12971:590:0"},{"attributes":{"constant":true,"documentation":"@dev Multiplies two exponentials, returning a new exponential.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mulExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":733,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":655,"name":"UserDefinedTypeName","src":"13667:3:0"}],"id":656,"name":"VariableDeclaration","src":"13667:12:0"},{"attributes":{"constant":false,"name":"b","scope":733,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":657,"name":"UserDefinedTypeName","src":"13681:3:0"}],"id":658,"name":"VariableDeclaration","src":"13681:12:0"}],"id":659,"name":"ParameterList","src":"13666:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":660,"name":"UserDefinedTypeName","src":"13718:5:0"}],"id":661,"name":"VariableDeclaration","src":"13718:5:0"},{"attributes":{"constant":false,"name":"","scope":733,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":662,"name":"UserDefinedTypeName","src":"13725:3:0"}],"id":663,"name":"VariableDeclaration","src":"13725:3:0"}],"id":664,"name":"ParameterList","src":"13717:19:0"},{"children":[{"attributes":{"assignments":[666,668]},"children":[{"attributes":{"constant":false,"name":"err0","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":665,"name":"UserDefinedTypeName","src":"13749:5:0"}],"id":666,"name":"VariableDeclaration","src":"13749:10:0"},{"attributes":{"constant":false,"name":"doubleScaledProduct","scope":733,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":667,"name":"ElementaryTypeName","src":"13761:4:0"}],"id":668,"name":"VariableDeclaration","src":"13761:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":255,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"mul"},"id":669,"name":"Identifier","src":"13789:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":656,"type":"struct Exponential.Exp memory","value":"a"},"id":670,"name":"Identifier","src":"13793:1:0"}],"id":671,"name":"MemberAccess","src":"13793:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":658,"type":"struct Exponential.Exp memory","value":"b"},"id":672,"name":"Identifier","src":"13805:1:0"}],"id":673,"name":"MemberAccess","src":"13805:10:0"}],"id":674,"name":"FunctionCall","src":"13789:27:0"}],"id":675,"name":"VariableDeclarationStatement","src":"13748:68:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":666,"type":"enum ErrorReporter.Error","value":"err0"},"id":676,"name":"Identifier","src":"13830:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":677,"name":"Identifier","src":"13838:5:0"}],"id":678,"name":"MemberAccess","src":"13838:14:0"}],"id":679,"name":"BinaryOperation","src":"13830:22:0"},{"children":[{"attributes":{"functionReturnParameters":664},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":666,"type":"enum ErrorReporter.Error","value":"err0"},"id":680,"name":"Identifier","src":"13876:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":681,"name":"Identifier","src":"13882:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":682,"name":"Literal","src":"13897:1:0"}],"id":683,"name":"FunctionCall","src":"13882:18:0"}],"id":684,"name":"TupleExpression","src":"13875:26:0"}],"id":685,"name":"Return","src":"13868:33:0"}],"id":686,"name":"Block","src":"13854:58:0"}],"id":687,"name":"IfStatement","src":"13826:86:0"},{"attributes":{"assignments":[689,691]},"children":[{"attributes":{"constant":false,"name":"err1","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":688,"name":"UserDefinedTypeName","src":"14224:5:0"}],"id":689,"name":"VariableDeclaration","src":"14224:10:0"},{"attributes":{"constant":false,"name":"doubleScaledProductWithHalfScale","scope":733,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":690,"name":"ElementaryTypeName","src":"14236:4:0"}],"id":691,"name":"VariableDeclaration","src":"14236:37:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":692,"name":"Identifier","src":"14277:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":401,"type":"uint256","value":"halfExpScale"},"id":693,"name":"Identifier","src":"14281:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":668,"type":"uint256","value":"doubleScaledProduct"},"id":694,"name":"Identifier","src":"14295:19:0"}],"id":695,"name":"FunctionCall","src":"14277:38:0"}],"id":696,"name":"VariableDeclarationStatement","src":"14223:92:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":689,"type":"enum ErrorReporter.Error","value":"err1"},"id":697,"name":"Identifier","src":"14329:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":698,"name":"Identifier","src":"14337:5:0"}],"id":699,"name":"MemberAccess","src":"14337:14:0"}],"id":700,"name":"BinaryOperation","src":"14329:22:0"},{"children":[{"attributes":{"functionReturnParameters":664},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":689,"type":"enum ErrorReporter.Error","value":"err1"},"id":701,"name":"Identifier","src":"14375:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":702,"name":"Identifier","src":"14381:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":703,"name":"Literal","src":"14396:1:0"}],"id":704,"name":"FunctionCall","src":"14381:18:0"}],"id":705,"name":"TupleExpression","src":"14374:26:0"}],"id":706,"name":"Return","src":"14367:33:0"}],"id":707,"name":"Block","src":"14353:58:0"}],"id":708,"name":"IfStatement","src":"14325:86:0"},{"attributes":{"assignments":[710,712]},"children":[{"attributes":{"constant":false,"name":"err2","scope":733,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":709,"name":"UserDefinedTypeName","src":"14422:5:0"}],"id":710,"name":"VariableDeclaration","src":"14422:10:0"},{"attributes":{"constant":false,"name":"product","scope":733,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":711,"name":"ElementaryTypeName","src":"14434:4:0"}],"id":712,"name":"VariableDeclaration","src":"14434:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":284,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"div"},"id":713,"name":"Identifier","src":"14450:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":691,"type":"uint256","value":"doubleScaledProductWithHalfScale"},"id":714,"name":"Identifier","src":"14454:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":396,"type":"uint256","value":"expScale"},"id":715,"name":"Identifier","src":"14488:8:0"}],"id":716,"name":"FunctionCall","src":"14450:47:0"}],"id":717,"name":"VariableDeclarationStatement","src":"14421:76:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":718,"name":"Identifier","src":"14622:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":710,"type":"enum ErrorReporter.Error","value":"err2"},"id":719,"name":"Identifier","src":"14629:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":720,"name":"Identifier","src":"14637:5:0"}],"id":721,"name":"MemberAccess","src":"14637:14:0"}],"id":722,"name":"BinaryOperation","src":"14629:22:0"}],"id":723,"name":"FunctionCall","src":"14622:30:0"}],"id":724,"name":"ExpressionStatement","src":"14622:30:0"},{"attributes":{"functionReturnParameters":664},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":725,"name":"Identifier","src":"14671:5:0"}],"id":726,"name":"MemberAccess","src":"14671:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":727,"name":"Identifier","src":"14687:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":712,"type":"uint256","value":"product"},"id":728,"name":"Identifier","src":"14702:7:0"}],"id":729,"name":"FunctionCall","src":"14687:24:0"}],"id":730,"name":"TupleExpression","src":"14670:42:0"}],"id":731,"name":"Return","src":"14663:49:0"}],"id":732,"name":"Block","src":"13737:982:0"}],"id":733,"name":"FunctionDefinition","src":"13651:1068:0"},{"attributes":{"constant":true,"documentation":"@dev Divides two exponentials, returning a new exponential.\n    (a/scale) / (b/scale) = (a/scale) * (scale/b) = a/b,\n which we can scale as an Exp by calling getExp(a.mantissa, b.mantissa)","implemented":true,"isConstructor":false,"modifiers":[null],"name":"divExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":752,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":734,"name":"UserDefinedTypeName","src":"14971:3:0"}],"id":735,"name":"VariableDeclaration","src":"14971:12:0"},{"attributes":{"constant":false,"name":"b","scope":752,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":736,"name":"UserDefinedTypeName","src":"14985:3:0"}],"id":737,"name":"VariableDeclaration","src":"14985:12:0"}],"id":738,"name":"ParameterList","src":"14970:28:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":752,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":739,"name":"UserDefinedTypeName","src":"15022:5:0"}],"id":740,"name":"VariableDeclaration","src":"15022:5:0"},{"attributes":{"constant":false,"name":"","scope":752,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":741,"name":"UserDefinedTypeName","src":"15029:3:0"}],"id":742,"name":"VariableDeclaration","src":"15029:3:0"}],"id":743,"name":"ParameterList","src":"15021:19:0"},{"children":[{"attributes":{"functionReturnParameters":743},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"getExp"},"id":744,"name":"Identifier","src":"15058:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":735,"type":"struct Exponential.Exp memory","value":"a"},"id":745,"name":"Identifier","src":"15065:1:0"}],"id":746,"name":"MemberAccess","src":"15065:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":737,"type":"struct Exponential.Exp memory","value":"b"},"id":747,"name":"Identifier","src":"15077:1:0"}],"id":748,"name":"MemberAccess","src":"15077:10:0"}],"id":749,"name":"FunctionCall","src":"15058:30:0"}],"id":750,"name":"Return","src":"15051:37:0"}],"id":751,"name":"Block","src":"15041:54:0"}],"id":752,"name":"FunctionDefinition","src":"14955:140:0"},{"attributes":{"constant":true,"documentation":"@dev Truncates the given exp to a whole number value.\n     For example, truncate(Exp{mantissa: 15 * (10**18)}) = 15","implemented":true,"isConstructor":false,"modifiers":[null],"name":"truncate","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"exp","scope":767,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":753,"name":"UserDefinedTypeName","src":"15268:3:0"}],"id":754,"name":"VariableDeclaration","src":"15268:14:0"}],"id":755,"name":"ParameterList","src":"15267:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":767,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":756,"name":"ElementaryTypeName","src":"15307:4:0"}],"id":757,"name":"VariableDeclaration","src":"15307:4:0"}],"id":758,"name":"ParameterList","src":"15306:6:0"},{"children":[{"attributes":{"functionReturnParameters":758},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":754,"type":"struct Exponential.Exp memory","value":"exp"},"id":759,"name":"Identifier","src":"15430:3:0"}],"id":760,"name":"MemberAccess","src":"15430:12:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 1000000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":761,"name":"Literal","src":"15445:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":762,"name":"Literal","src":"15449:2:0"}],"id":763,"name":"BinaryOperation","src":"15445:6:0"}],"id":764,"name":"BinaryOperation","src":"15430:21:0"}],"id":765,"name":"Return","src":"15423:28:0"}],"id":766,"name":"Block","src":"15313:145:0"}],"id":767,"name":"FunctionDefinition","src":"15250:208:0"},{"attributes":{"constant":true,"documentation":"@dev Checks if first Exp is less than second Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"lessThanExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"left","scope":783,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":768,"name":"UserDefinedTypeName","src":"15560:3:0"}],"id":769,"name":"VariableDeclaration","src":"15560:15:0"},{"attributes":{"constant":false,"name":"right","scope":783,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":770,"name":"UserDefinedTypeName","src":"15577:3:0"}],"id":771,"name":"VariableDeclaration","src":"15577:16:0"}],"id":772,"name":"ParameterList","src":"15559:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":783,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":773,"name":"ElementaryTypeName","src":"15618:4:0"}],"id":774,"name":"VariableDeclaration","src":"15618:4:0"}],"id":775,"name":"ParameterList","src":"15617:6:0"},{"children":[{"attributes":{"functionReturnParameters":775},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":769,"type":"struct Exponential.Exp memory","value":"left"},"id":776,"name":"Identifier","src":"15641:4:0"}],"id":777,"name":"MemberAccess","src":"15641:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":771,"type":"struct Exponential.Exp memory","value":"right"},"id":778,"name":"Identifier","src":"15657:5:0"}],"id":779,"name":"MemberAccess","src":"15657:14:0"}],"id":780,"name":"BinaryOperation","src":"15641:30:0"}],"id":781,"name":"Return","src":"15634:37:0"}],"id":782,"name":"Block","src":"15624:111:0"}],"id":783,"name":"FunctionDefinition","src":"15539:196:0"},{"attributes":{"constant":true,"documentation":"@dev Checks if left Exp <= right Exp.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"lessThanOrEqualExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"left","scope":799,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":784,"name":"UserDefinedTypeName","src":"15832:3:0"}],"id":785,"name":"VariableDeclaration","src":"15832:15:0"},{"attributes":{"constant":false,"name":"right","scope":799,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":786,"name":"UserDefinedTypeName","src":"15849:3:0"}],"id":787,"name":"VariableDeclaration","src":"15849:16:0"}],"id":788,"name":"ParameterList","src":"15831:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":799,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":789,"name":"ElementaryTypeName","src":"15890:4:0"}],"id":790,"name":"VariableDeclaration","src":"15890:4:0"}],"id":791,"name":"ParameterList","src":"15889:6:0"},{"children":[{"attributes":{"functionReturnParameters":791},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":785,"type":"struct Exponential.Exp memory","value":"left"},"id":792,"name":"Identifier","src":"15913:4:0"}],"id":793,"name":"MemberAccess","src":"15913:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":787,"type":"struct Exponential.Exp memory","value":"right"},"id":794,"name":"Identifier","src":"15930:5:0"}],"id":795,"name":"MemberAccess","src":"15930:14:0"}],"id":796,"name":"BinaryOperation","src":"15913:31:0"}],"id":797,"name":"Return","src":"15906:38:0"}],"id":798,"name":"Block","src":"15896:55:0"}],"id":799,"name":"FunctionDefinition","src":"15804:147:0"},{"attributes":{"constant":true,"documentation":"@dev returns true if Exp is exactly zero","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isZeroExp","payable":false,"scope":813,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"value","scope":812,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":800,"name":"UserDefinedTypeName","src":"16042:3:0"}],"id":801,"name":"VariableDeclaration","src":"16042:16:0"}],"id":802,"name":"ParameterList","src":"16041:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":812,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":803,"name":"ElementaryTypeName","src":"16083:4:0"}],"id":804,"name":"VariableDeclaration","src":"16083:4:0"}],"id":805,"name":"ParameterList","src":"16082:6:0"},{"children":[{"attributes":{"functionReturnParameters":805},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":801,"type":"struct Exponential.Exp memory","value":"value"},"id":806,"name":"Identifier","src":"16106:5:0"}],"id":807,"name":"MemberAccess","src":"16106:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":808,"name":"Literal","src":"16124:1:0"}],"id":809,"name":"BinaryOperation","src":"16106:19:0"}],"id":810,"name":"Return","src":"16099:26:0"}],"id":811,"name":"Block","src":"16089:43:0"}],"id":812,"name":"FunctionDefinition","src":"16023:109:0"}],"id":813,"name":"ContractDefinition","src":"10256:5878:0"},{"attributes":{"contractDependencies":[180,387,813],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[1163,813,387,180],"name":"StandardInterestRateModel","scope":1164},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Exponential","referencedDeclaration":813,"type":"contract Exponential"},"id":814,"name":"UserDefinedTypeName","src":"16174:11:0"}],"id":815,"name":"InheritanceSpecifier","src":"16174:11:0"},{"attributes":{"constant":true,"name":"oneMinusSpreadBasisPoints","scope":1163,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":816,"name":"ElementaryTypeName","src":"16193:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"39303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 9000","value":"9000"},"id":817,"name":"Literal","src":"16235:4:0"}],"id":818,"name":"VariableDeclaration","src":"16193:46:0"},{"attributes":{"constant":true,"name":"blocksPerYear","scope":1163,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":819,"name":"ElementaryTypeName","src":"16245:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32313032343030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2102400","value":"2102400"},"id":820,"name":"Literal","src":"16275:7:0"}],"id":821,"name":"VariableDeclaration","src":"16245:37:0"},{"attributes":{"constant":true,"name":"mantissaFivePercent","scope":1163,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":822,"name":"ElementaryTypeName","src":"16288:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_50000000000000000_by_1","typeString":"int_const 50000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"int_const 50000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"35","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 5","value":"5"},"id":823,"name":"Literal","src":"16324:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"int_const 10000000000000000"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":824,"name":"Literal","src":"16328:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3136","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 16","value":"16"},"id":825,"name":"Literal","src":"16332:2:0"}],"id":826,"name":"BinaryOperation","src":"16328:6:0"}],"id":827,"name":"BinaryOperation","src":"16324:10:0"}],"id":828,"name":"VariableDeclaration","src":"16288:46:0"},{"attributes":{"canonicalName":"StandardInterestRateModel.IRError","name":"IRError"},"children":[{"attributes":{"name":"NO_ERROR"},"id":829,"name":"EnumValue","src":"16364:8:0"},{"attributes":{"name":"FAILED_TO_ADD_CASH_PLUS_BORROWS"},"id":830,"name":"EnumValue","src":"16382:31:0"},{"attributes":{"name":"FAILED_TO_GET_EXP"},"id":831,"name":"EnumValue","src":"16423:17:0"},{"attributes":{"name":"FAILED_TO_MUL_PRODUCT_TIMES_BORROW_RATE"},"id":832,"name":"EnumValue","src":"16450:39:0"}],"id":833,"name":"EnumDefinition","src":"16341:154:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUtilizationRate","payable":false,"scope":1163,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"cash","scope":906,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":834,"name":"ElementaryTypeName","src":"16627:4:0"}],"id":835,"name":"VariableDeclaration","src":"16627:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":906,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":836,"name":"ElementaryTypeName","src":"16638:4:0"}],"id":837,"name":"VariableDeclaration","src":"16638:12:0"}],"id":838,"name":"ParameterList","src":"16626:25:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":906,"stateVariable":false,"storageLocation":"default","type":"enum StandardInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":833,"type":"enum StandardInterestRateModel.IRError"},"id":839,"name":"UserDefinedTypeName","src":"16675:7:0"}],"id":840,"name":"VariableDeclaration","src":"16675:7:0"},{"attributes":{"constant":false,"name":"","scope":906,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":841,"name":"UserDefinedTypeName","src":"16684:3:0"}],"id":842,"name":"VariableDeclaration","src":"16684:3:0"}],"id":843,"name":"ParameterList","src":"16674:21:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":837,"type":"uint256","value":"borrows"},"id":844,"name":"Identifier","src":"16710:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":845,"name":"Literal","src":"16721:1:0"}],"id":846,"name":"BinaryOperation","src":"16710:12:0"},{"children":[{"attributes":{"functionReturnParameters":843},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":847,"name":"Identifier","src":"16810:7:0"}],"id":848,"name":"MemberAccess","src":"16810:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":849,"name":"Identifier","src":"16828:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":850,"name":"Literal","src":"16843:1:0"}],"id":851,"name":"FunctionCall","src":"16828:18:0"}],"id":852,"name":"TupleExpression","src":"16809:38:0"}],"id":853,"name":"Return","src":"16802:45:0"}],"id":854,"name":"Block","src":"16724:134:0"}],"id":855,"name":"IfStatement","src":"16706:152:0"},{"attributes":{"assignments":[857,859]},"children":[{"attributes":{"constant":false,"name":"err0","scope":906,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":856,"name":"UserDefinedTypeName","src":"16869:5:0"}],"id":857,"name":"VariableDeclaration","src":"16869:10:0"},{"attributes":{"constant":false,"name":"cashPlusBorrows","scope":906,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":858,"name":"ElementaryTypeName","src":"16881:4:0"}],"id":859,"name":"VariableDeclaration","src":"16881:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,uint256)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":348,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,uint256)","value":"add"},"id":860,"name":"Identifier","src":"16905:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":835,"type":"uint256","value":"cash"},"id":861,"name":"Identifier","src":"16909:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":837,"type":"uint256","value":"borrows"},"id":862,"name":"Identifier","src":"16915:7:0"}],"id":863,"name":"FunctionCall","src":"16905:18:0"}],"id":864,"name":"VariableDeclarationStatement","src":"16868:55:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":857,"type":"enum ErrorReporter.Error","value":"err0"},"id":865,"name":"Identifier","src":"16937:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":866,"name":"Identifier","src":"16945:5:0"}],"id":867,"name":"MemberAccess","src":"16945:14:0"}],"id":868,"name":"BinaryOperation","src":"16937:22:0"},{"children":[{"attributes":{"functionReturnParameters":843},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"FAILED_TO_ADD_CASH_PLUS_BORROWS","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":869,"name":"Identifier","src":"16983:7:0"}],"id":870,"name":"MemberAccess","src":"16983:39:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":871,"name":"Identifier","src":"17024:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":872,"name":"Literal","src":"17039:1:0"}],"id":873,"name":"FunctionCall","src":"17024:18:0"}],"id":874,"name":"TupleExpression","src":"16982:61:0"}],"id":875,"name":"Return","src":"16975:68:0"}],"id":876,"name":"Block","src":"16961:93:0"}],"id":877,"name":"IfStatement","src":"16933:121:0"},{"attributes":{"assignments":[879,881]},"children":[{"attributes":{"constant":false,"name":"err1","scope":906,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":878,"name":"UserDefinedTypeName","src":"17065:5:0"}],"id":879,"name":"VariableDeclaration","src":"17065:10:0"},{"attributes":{"constant":false,"name":"utilizationRate","scope":906,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":880,"name":"UserDefinedTypeName","src":"17077:3:0"}],"id":881,"name":"VariableDeclaration","src":"17077:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":475,"type":"function (uint256,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"getExp"},"id":882,"name":"Identifier","src":"17107:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":837,"type":"uint256","value":"borrows"},"id":883,"name":"Identifier","src":"17114:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":859,"type":"uint256","value":"cashPlusBorrows"},"id":884,"name":"Identifier","src":"17123:15:0"}],"id":885,"name":"FunctionCall","src":"17107:32:0"}],"id":886,"name":"VariableDeclarationStatement","src":"17064:75:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":879,"type":"enum ErrorReporter.Error","value":"err1"},"id":887,"name":"Identifier","src":"17153:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":888,"name":"Identifier","src":"17161:5:0"}],"id":889,"name":"MemberAccess","src":"17161:14:0"}],"id":890,"name":"BinaryOperation","src":"17153:22:0"},{"children":[{"attributes":{"functionReturnParameters":843},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"FAILED_TO_GET_EXP","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":891,"name":"Identifier","src":"17199:7:0"}],"id":892,"name":"MemberAccess","src":"17199:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":893,"name":"Identifier","src":"17226:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":894,"name":"Literal","src":"17241:1:0"}],"id":895,"name":"FunctionCall","src":"17226:18:0"}],"id":896,"name":"TupleExpression","src":"17198:47:0"}],"id":897,"name":"Return","src":"17191:54:0"}],"id":898,"name":"Block","src":"17177:79:0"}],"id":899,"name":"IfStatement","src":"17149:107:0"},{"attributes":{"functionReturnParameters":843},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":900,"name":"Identifier","src":"17274:7:0"}],"id":901,"name":"MemberAccess","src":"17274:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":881,"type":"struct Exponential.Exp memory","value":"utilizationRate"},"id":902,"name":"Identifier","src":"17292:15:0"}],"id":903,"name":"TupleExpression","src":"17273:35:0"}],"id":904,"name":"Return","src":"17266:42:0"}],"id":905,"name":"Block","src":"16696:619:0"}],"id":906,"name":"FunctionDefinition","src":"16599:716:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getUtilizationAndAnnualBorrowRate","payable":false,"scope":1163,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"cash","scope":1000,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":907,"name":"ElementaryTypeName","src":"17479:4:0"}],"id":908,"name":"VariableDeclaration","src":"17479:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":1000,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":909,"name":"ElementaryTypeName","src":"17490:4:0"}],"id":910,"name":"VariableDeclaration","src":"17490:12:0"}],"id":911,"name":"ParameterList","src":"17478:25:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1000,"stateVariable":false,"storageLocation":"default","type":"enum StandardInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":833,"type":"enum StandardInterestRateModel.IRError"},"id":912,"name":"UserDefinedTypeName","src":"17527:7:0"}],"id":913,"name":"VariableDeclaration","src":"17527:7:0"},{"attributes":{"constant":false,"name":"","scope":1000,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":914,"name":"UserDefinedTypeName","src":"17536:3:0"}],"id":915,"name":"VariableDeclaration","src":"17536:3:0"},{"attributes":{"constant":false,"name":"","scope":1000,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":916,"name":"UserDefinedTypeName","src":"17548:3:0"}],"id":917,"name":"VariableDeclaration","src":"17548:3:0"}],"id":918,"name":"ParameterList","src":"17526:33:0"},{"children":[{"attributes":{"assignments":[920,922]},"children":[{"attributes":{"constant":false,"name":"err0","scope":1000,"stateVariable":false,"storageLocation":"default","type":"enum StandardInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":833,"type":"enum StandardInterestRateModel.IRError"},"id":919,"name":"UserDefinedTypeName","src":"17571:7:0"}],"id":920,"name":"VariableDeclaration","src":"17571:12:0"},{"attributes":{"constant":false,"name":"utilizationRate","scope":1000,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":921,"name":"UserDefinedTypeName","src":"17585:3:0"}],"id":922,"name":"VariableDeclaration","src":"17585:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":906,"type":"function (uint256,uint256) pure returns (enum StandardInterestRateModel.IRError,struct Exponential.Exp memory)","value":"getUtilizationRate"},"id":923,"name":"Identifier","src":"17615:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"uint256","value":"cash"},"id":924,"name":"Identifier","src":"17634:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"uint256","value":"borrows"},"id":925,"name":"Identifier","src":"17640:7:0"}],"id":926,"name":"FunctionCall","src":"17615:33:0"}],"id":927,"name":"VariableDeclarationStatement","src":"17570:78:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_IRError_$833","typeString":"enum StandardInterestRateModel.IRError"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":920,"type":"enum StandardInterestRateModel.IRError","value":"err0"},"id":928,"name":"Identifier","src":"17662:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":929,"name":"Identifier","src":"17670:7:0"}],"id":930,"name":"MemberAccess","src":"17670:16:0"}],"id":931,"name":"BinaryOperation","src":"17662:24:0"},{"children":[{"attributes":{"functionReturnParameters":918},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":920,"type":"enum StandardInterestRateModel.IRError","value":"err0"},"id":932,"name":"Identifier","src":"17710:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":933,"name":"Identifier","src":"17716:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":934,"name":"Literal","src":"17731:1:0"}],"id":935,"name":"FunctionCall","src":"17716:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":936,"name":"Identifier","src":"17736:3:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":937,"name":"Literal","src":"17751:1:0"}],"id":938,"name":"FunctionCall","src":"17736:18:0"}],"id":939,"name":"TupleExpression","src":"17709:46:0"}],"id":940,"name":"Return","src":"17702:53:0"}],"id":941,"name":"Block","src":"17688:78:0"}],"id":942,"name":"IfStatement","src":"17658:108:0"},{"attributes":{"assignments":[944,946]},"children":[{"attributes":{"constant":false,"name":"err1","scope":1000,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":943,"name":"UserDefinedTypeName","src":"17886:5:0"}],"id":944,"name":"VariableDeclaration","src":"17886:10:0"},{"attributes":{"constant":false,"name":"utilizationRateMuled","scope":1000,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":945,"name":"UserDefinedTypeName","src":"17898:3:0"}],"id":946,"name":"VariableDeclaration","src":"17898:31:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"}],"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"mulScalar"},"id":947,"name":"Identifier","src":"17933:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":922,"type":"struct Exponential.Exp memory","value":"utilizationRate"},"id":948,"name":"Identifier","src":"17943:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3435","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 45","value":"45"},"id":949,"name":"Literal","src":"17960:2:0"}],"id":950,"name":"FunctionCall","src":"17933:30:0"}],"id":951,"name":"VariableDeclarationStatement","src":"17885:78:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":952,"name":"Identifier","src":"18384:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":944,"type":"enum ErrorReporter.Error","value":"err1"},"id":953,"name":"Identifier","src":"18391:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":954,"name":"Identifier","src":"18399:5:0"}],"id":955,"name":"MemberAccess","src":"18399:14:0"}],"id":956,"name":"BinaryOperation","src":"18391:22:0"}],"id":957,"name":"FunctionCall","src":"18384:30:0"}],"id":958,"name":"ExpressionStatement","src":"18384:30:0"},{"attributes":{"assignments":[960,962]},"children":[{"attributes":{"constant":false,"name":"err2","scope":1000,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":959,"name":"UserDefinedTypeName","src":"18426:5:0"}],"id":960,"name":"VariableDeclaration","src":"18426:10:0"},{"attributes":{"constant":false,"name":"utilizationRateScaled","scope":1000,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":961,"name":"UserDefinedTypeName","src":"18438:3:0"}],"id":962,"name":"VariableDeclaration","src":"18438:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"overloadedDeclarations":[null],"referencedDeclaration":615,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"divScalar"},"id":963,"name":"Identifier","src":"18474:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":946,"type":"struct Exponential.Exp memory","value":"utilizationRateMuled"},"id":964,"name":"Identifier","src":"18484:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"313030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 100","value":"100"},"id":965,"name":"Literal","src":"18506:3:0"}],"id":966,"name":"FunctionCall","src":"18474:36:0"}],"id":967,"name":"VariableDeclarationStatement","src":"18425:85:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":968,"name":"Identifier","src":"18623:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":960,"type":"enum ErrorReporter.Error","value":"err2"},"id":969,"name":"Identifier","src":"18630:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":970,"name":"Identifier","src":"18638:5:0"}],"id":971,"name":"MemberAccess","src":"18638:14:0"}],"id":972,"name":"BinaryOperation","src":"18630:22:0"}],"id":973,"name":"FunctionCall","src":"18623:30:0"}],"id":974,"name":"ExpressionStatement","src":"18623:30:0"},{"attributes":{"assignments":[976,978]},"children":[{"attributes":{"constant":false,"name":"err3","scope":1000,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":975,"name":"UserDefinedTypeName","src":"18707:5:0"}],"id":976,"name":"VariableDeclaration","src":"18707:10:0"},{"attributes":{"constant":false,"name":"annualBorrowRate","scope":1000,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":977,"name":"UserDefinedTypeName","src":"18719:3:0"}],"id":978,"name":"VariableDeclaration","src":"18719:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_struct$_Exp_$404_memory","typeString":"struct Exponential.Exp memory"}],"overloadedDeclarations":[null],"referencedDeclaration":504,"type":"function (struct Exponential.Exp memory,struct Exponential.Exp memory) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"addExp"},"id":979,"name":"Identifier","src":"18750:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":962,"type":"struct Exponential.Exp memory","value":"utilizationRateScaled"},"id":980,"name":"Identifier","src":"18757:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":true,"lValueRequested":false,"names":["mantissa"],"type":"struct Exponential.Exp memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":404,"type":"type(struct Exponential.Exp storage pointer)","value":"Exp"},"id":981,"name":"Identifier","src":"18780:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":828,"type":"uint256","value":"mantissaFivePercent"},"id":982,"name":"Identifier","src":"18795:19:0"}],"id":983,"name":"FunctionCall","src":"18780:36:0"}],"id":984,"name":"FunctionCall","src":"18750:67:0"}],"id":985,"name":"VariableDeclarationStatement","src":"18706:111:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":986,"name":"Identifier","src":"19131:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":976,"type":"enum ErrorReporter.Error","value":"err3"},"id":987,"name":"Identifier","src":"19138:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":988,"name":"Identifier","src":"19146:5:0"}],"id":989,"name":"MemberAccess","src":"19146:14:0"}],"id":990,"name":"BinaryOperation","src":"19138:22:0"}],"id":991,"name":"FunctionCall","src":"19131:30:0"}],"id":992,"name":"ExpressionStatement","src":"19131:30:0"},{"attributes":{"functionReturnParameters":918},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":993,"name":"Identifier","src":"19180:7:0"}],"id":994,"name":"MemberAccess","src":"19180:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":922,"type":"struct Exponential.Exp memory","value":"utilizationRate"},"id":995,"name":"Identifier","src":"19198:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":978,"type":"struct Exponential.Exp memory","value":"annualBorrowRate"},"id":996,"name":"Identifier","src":"19215:16:0"}],"id":997,"name":"TupleExpression","src":"19179:53:0"}],"id":998,"name":"Return","src":"19172:60:0"}],"id":999,"name":"Block","src":"17560:1679:0"}],"id":1000,"name":"FunctionDefinition","src":"17436:1803:0"},{"attributes":{"constant":true,"documentation":"@notice Gets the current supply interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param _asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the supply interest rate per block scaled by 10e18","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getSupplyRate","payable":false,"scope":1163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_asset","scope":1097,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1001,"name":"ElementaryTypeName","src":"19851:7:0"}],"id":1002,"name":"VariableDeclaration","src":"19851:14:0"},{"attributes":{"constant":false,"name":"cash","scope":1097,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1003,"name":"ElementaryTypeName","src":"19867:4:0"}],"id":1004,"name":"VariableDeclaration","src":"19867:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":1097,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1005,"name":"ElementaryTypeName","src":"19878:4:0"}],"id":1006,"name":"VariableDeclaration","src":"19878:12:0"}],"id":1007,"name":"ParameterList","src":"19850:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1097,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1008,"name":"ElementaryTypeName","src":"19913:4:0"}],"id":1009,"name":"VariableDeclaration","src":"19913:4:0"},{"attributes":{"constant":false,"name":"","scope":1097,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1010,"name":"ElementaryTypeName","src":"19919:4:0"}],"id":1011,"name":"VariableDeclaration","src":"19919:4:0"}],"id":1012,"name":"ParameterList","src":"19912:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1002,"type":"address","value":"_asset"},"id":1013,"name":"Identifier","src":"19935:6:0"}],"id":1014,"name":"ExpressionStatement","src":"19935:6:0"},{"attributes":{"assignments":[1016,1018,1020]},"children":[{"attributes":{"constant":false,"name":"err0","scope":1097,"stateVariable":false,"storageLocation":"default","type":"enum StandardInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":833,"type":"enum StandardInterestRateModel.IRError"},"id":1015,"name":"UserDefinedTypeName","src":"19986:7:0"}],"id":1016,"name":"VariableDeclaration","src":"19986:12:0"},{"attributes":{"constant":false,"name":"utilizationRate0","scope":1097,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1017,"name":"UserDefinedTypeName","src":"20000:3:0"}],"id":1018,"name":"VariableDeclaration","src":"20000:27:0"},{"attributes":{"constant":false,"name":"annualBorrowRate","scope":1097,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1019,"name":"UserDefinedTypeName","src":"20029:3:0"}],"id":1020,"name":"VariableDeclaration","src":"20029:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1000,"type":"function (uint256,uint256) pure returns (enum StandardInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","value":"getUtilizationAndAnnualBorrowRate"},"id":1021,"name":"Identifier","src":"20060:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1004,"type":"uint256","value":"cash"},"id":1022,"name":"Identifier","src":"20094:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1006,"type":"uint256","value":"borrows"},"id":1023,"name":"Identifier","src":"20100:7:0"}],"id":1024,"name":"FunctionCall","src":"20060:48:0"}],"id":1025,"name":"VariableDeclarationStatement","src":"19985:123:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_IRError_$833","typeString":"enum StandardInterestRateModel.IRError"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1016,"type":"enum StandardInterestRateModel.IRError","value":"err0"},"id":1026,"name":"Identifier","src":"20122:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":1027,"name":"Identifier","src":"20130:7:0"}],"id":1028,"name":"MemberAccess","src":"20130:16:0"}],"id":1029,"name":"BinaryOperation","src":"20122:24:0"},{"children":[{"attributes":{"functionReturnParameters":1012},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$833","typeString":"enum StandardInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1030,"name":"ElementaryTypeNameExpression","src":"20170:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1016,"type":"enum StandardInterestRateModel.IRError","value":"err0"},"id":1031,"name":"Identifier","src":"20175:4:0"}],"id":1032,"name":"FunctionCall","src":"20170:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1033,"name":"Literal","src":"20182:1:0"}],"id":1034,"name":"TupleExpression","src":"20169:15:0"}],"id":1035,"name":"Return","src":"20162:22:0"}],"id":1036,"name":"Block","src":"20148:47:0"}],"id":1037,"name":"IfStatement","src":"20118:77:0"},{"attributes":{"assignments":[1039,1041]},"children":[{"attributes":{"constant":false,"name":"err1","scope":1097,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1038,"name":"UserDefinedTypeName","src":"20288:5:0"}],"id":1039,"name":"VariableDeclaration","src":"20288:10:0"},{"attributes":{"constant":false,"name":"utilizationRate1","scope":1097,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1040,"name":"UserDefinedTypeName","src":"20300:3:0"}],"id":1041,"name":"VariableDeclaration","src":"20300:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":574,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"mulScalar"},"id":1042,"name":"Identifier","src":"20331:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1018,"type":"struct Exponential.Exp memory","value":"utilizationRate0"},"id":1043,"name":"Identifier","src":"20341:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":818,"type":"uint256","value":"oneMinusSpreadBasisPoints"},"id":1044,"name":"Identifier","src":"20359:25:0"}],"id":1045,"name":"FunctionCall","src":"20331:54:0"}],"id":1046,"name":"VariableDeclarationStatement","src":"20287:98:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":1047,"name":"Identifier","src":"20661:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1039,"type":"enum ErrorReporter.Error","value":"err1"},"id":1048,"name":"Identifier","src":"20668:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1049,"name":"Identifier","src":"20676:5:0"}],"id":1050,"name":"MemberAccess","src":"20676:14:0"}],"id":1051,"name":"BinaryOperation","src":"20668:22:0"}],"id":1052,"name":"FunctionCall","src":"20661:30:0"}],"id":1053,"name":"ExpressionStatement","src":"20661:30:0"},{"attributes":{"assignments":[1055,1057]},"children":[{"attributes":{"constant":false,"name":"err2","scope":1097,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1054,"name":"UserDefinedTypeName","src":"20763:5:0"}],"id":1055,"name":"VariableDeclaration","src":"20763:10:0"},{"attributes":{"constant":false,"name":"supplyRate0","scope":1097,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1056,"name":"UserDefinedTypeName","src":"20775:3:0"}],"id":1057,"name":"VariableDeclaration","src":"20775:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"}],"overloadedDeclarations":[null],"referencedDeclaration":733,"type":"function (struct Exponential.Exp memory,struct Exponential.Exp memory) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"mulExp"},"id":1058,"name":"Identifier","src":"20801:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1041,"type":"struct Exponential.Exp memory","value":"utilizationRate1"},"id":1059,"name":"Identifier","src":"20808:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1020,"type":"struct Exponential.Exp memory","value":"annualBorrowRate"},"id":1060,"name":"Identifier","src":"20826:16:0"}],"id":1061,"name":"FunctionCall","src":"20801:42:0"}],"id":1062,"name":"VariableDeclarationStatement","src":"20762:81:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":1063,"name":"Identifier","src":"21305:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1055,"type":"enum ErrorReporter.Error","value":"err2"},"id":1064,"name":"Identifier","src":"21312:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1065,"name":"Identifier","src":"21320:5:0"}],"id":1066,"name":"MemberAccess","src":"21320:14:0"}],"id":1067,"name":"BinaryOperation","src":"21312:22:0"}],"id":1068,"name":"FunctionCall","src":"21305:30:0"}],"id":1069,"name":"ExpressionStatement","src":"21305:30:0"},{"attributes":{"assignments":[1071,1073]},"children":[{"attributes":{"constant":false,"name":"err3","scope":1097,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1070,"name":"UserDefinedTypeName","src":"21472:5:0"}],"id":1071,"name":"VariableDeclaration","src":"21472:10:0"},{"attributes":{"constant":false,"name":"supplyRate1","scope":1097,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1072,"name":"UserDefinedTypeName","src":"21484:3:0"}],"id":1073,"name":"VariableDeclaration","src":"21484:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":615,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"divScalar"},"id":1074,"name":"Identifier","src":"21510:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1057,"type":"struct Exponential.Exp memory","value":"supplyRate0"},"id":1075,"name":"Identifier","src":"21520:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10000","value":"10000"},"id":1076,"name":"Literal","src":"21533:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":821,"type":"uint256","value":"blocksPerYear"},"id":1077,"name":"Identifier","src":"21541:13:0"}],"id":1078,"name":"BinaryOperation","src":"21533:21:0"}],"id":1079,"name":"FunctionCall","src":"21510:45:0"}],"id":1080,"name":"VariableDeclarationStatement","src":"21471:84:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":1081,"name":"Identifier","src":"21683:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1071,"type":"enum ErrorReporter.Error","value":"err3"},"id":1082,"name":"Identifier","src":"21690:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1083,"name":"Identifier","src":"21698:5:0"}],"id":1084,"name":"MemberAccess","src":"21698:14:0"}],"id":1085,"name":"BinaryOperation","src":"21690:22:0"}],"id":1086,"name":"FunctionCall","src":"21683:30:0"}],"id":1087,"name":"ExpressionStatement","src":"21683:30:0"},{"attributes":{"functionReturnParameters":1012},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$833","typeString":"enum StandardInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1088,"name":"ElementaryTypeNameExpression","src":"21817:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":1089,"name":"Identifier","src":"21822:7:0"}],"id":1090,"name":"MemberAccess","src":"21822:16:0"}],"id":1091,"name":"FunctionCall","src":"21817:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1073,"type":"struct Exponential.Exp memory","value":"supplyRate1"},"id":1092,"name":"Identifier","src":"21841:11:0"}],"id":1093,"name":"MemberAccess","src":"21841:20:0"}],"id":1094,"name":"TupleExpression","src":"21816:46:0"}],"id":1095,"name":"Return","src":"21809:53:0"}],"id":1096,"name":"Block","src":"19925:1944:0"}],"id":1097,"name":"FunctionDefinition","src":"19828:2041:0"},{"attributes":{"constant":true,"documentation":"@notice Gets the current borrow interest rate based on the given asset, total cash and total borrows\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param _asset The asset to get the interest rate of\n@param cash The total cash of the asset in the market\n@param borrows The total borrows of the asset in the market\n@return Success or failure and the borrow interest rate per block scaled by 10e18","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getBorrowRate","payable":false,"scope":1163,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_asset","scope":1162,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1098,"name":"ElementaryTypeName","src":"22481:7:0"}],"id":1099,"name":"VariableDeclaration","src":"22481:14:0"},{"attributes":{"constant":false,"name":"cash","scope":1162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1100,"name":"ElementaryTypeName","src":"22497:4:0"}],"id":1101,"name":"VariableDeclaration","src":"22497:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":1162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1102,"name":"ElementaryTypeName","src":"22508:4:0"}],"id":1103,"name":"VariableDeclaration","src":"22508:12:0"}],"id":1104,"name":"ParameterList","src":"22480:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1105,"name":"ElementaryTypeName","src":"22543:4:0"}],"id":1106,"name":"VariableDeclaration","src":"22543:4:0"},{"attributes":{"constant":false,"name":"","scope":1162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":1107,"name":"ElementaryTypeName","src":"22549:4:0"}],"id":1108,"name":"VariableDeclaration","src":"22549:4:0"}],"id":1109,"name":"ParameterList","src":"22542:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1099,"type":"address","value":"_asset"},"id":1110,"name":"Identifier","src":"22565:6:0"}],"id":1111,"name":"ExpressionStatement","src":"22565:6:0"},{"attributes":{"assignments":[1113,1115,1117]},"children":[{"attributes":{"constant":false,"name":"err0","scope":1162,"stateVariable":false,"storageLocation":"default","type":"enum StandardInterestRateModel.IRError","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IRError","referencedDeclaration":833,"type":"enum StandardInterestRateModel.IRError"},"id":1112,"name":"UserDefinedTypeName","src":"22616:7:0"}],"id":1113,"name":"VariableDeclaration","src":"22616:12:0"},{"attributes":{"constant":false,"name":"_utilizationRate","scope":1162,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1114,"name":"UserDefinedTypeName","src":"22630:3:0"}],"id":1115,"name":"VariableDeclaration","src":"22630:27:0"},{"attributes":{"constant":false,"name":"annualBorrowRate","scope":1162,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1116,"name":"UserDefinedTypeName","src":"22659:3:0"}],"id":1117,"name":"VariableDeclaration","src":"22659:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum StandardInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1000,"type":"function (uint256,uint256) pure returns (enum StandardInterestRateModel.IRError,struct Exponential.Exp memory,struct Exponential.Exp memory)","value":"getUtilizationAndAnnualBorrowRate"},"id":1118,"name":"Identifier","src":"22690:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1101,"type":"uint256","value":"cash"},"id":1119,"name":"Identifier","src":"22724:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1103,"type":"uint256","value":"borrows"},"id":1120,"name":"Identifier","src":"22730:7:0"}],"id":1121,"name":"FunctionCall","src":"22690:48:0"}],"id":1122,"name":"VariableDeclarationStatement","src":"22615:123:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_IRError_$833","typeString":"enum StandardInterestRateModel.IRError"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1113,"type":"enum StandardInterestRateModel.IRError","value":"err0"},"id":1123,"name":"Identifier","src":"22752:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":1124,"name":"Identifier","src":"22760:7:0"}],"id":1125,"name":"MemberAccess","src":"22760:16:0"}],"id":1126,"name":"BinaryOperation","src":"22752:24:0"},{"children":[{"attributes":{"functionReturnParameters":1109},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$833","typeString":"enum StandardInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1127,"name":"ElementaryTypeNameExpression","src":"22800:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1113,"type":"enum StandardInterestRateModel.IRError","value":"err0"},"id":1128,"name":"Identifier","src":"22805:4:0"}],"id":1129,"name":"FunctionCall","src":"22800:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1130,"name":"Literal","src":"22812:1:0"}],"id":1131,"name":"TupleExpression","src":"22799:15:0"}],"id":1132,"name":"Return","src":"22792:22:0"}],"id":1133,"name":"Block","src":"22778:47:0"}],"id":1134,"name":"IfStatement","src":"22748:77:0"},{"attributes":{"assignments":[1136,1138]},"children":[{"attributes":{"constant":false,"name":"err1","scope":1162,"stateVariable":false,"storageLocation":"default","type":"enum ErrorReporter.Error","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Error","referencedDeclaration":36,"type":"enum ErrorReporter.Error"},"id":1135,"name":"UserDefinedTypeName","src":"22888:5:0"}],"id":1136,"name":"VariableDeclaration","src":"22888:10:0"},{"attributes":{"constant":false,"name":"borrowRate","scope":1162,"stateVariable":false,"storageLocation":"memory","type":"struct Exponential.Exp","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Exp","referencedDeclaration":404,"type":"struct Exponential.Exp"},"id":1137,"name":"UserDefinedTypeName","src":"22900:3:0"}],"id":1138,"name":"VariableDeclaration","src":"22900:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple(enum ErrorReporter.Error,struct Exponential.Exp memory)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Exp_$404_memory_ptr","typeString":"struct Exponential.Exp memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":615,"type":"function (struct Exponential.Exp memory,uint256) pure returns (enum ErrorReporter.Error,struct Exponential.Exp memory)","value":"divScalar"},"id":1139,"name":"Identifier","src":"22925:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1117,"type":"struct Exponential.Exp memory","value":"annualBorrowRate"},"id":1140,"name":"Identifier","src":"22935:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":821,"type":"uint256","value":"blocksPerYear"},"id":1141,"name":"Identifier","src":"22953:13:0"}],"id":1142,"name":"FunctionCall","src":"22925:42:0"}],"id":1143,"name":"VariableDeclarationStatement","src":"22887:80:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":1167,"type":"function (bool) pure","value":"assert"},"id":1144,"name":"Identifier","src":"23095:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_Error_$36","typeString":"enum ErrorReporter.Error"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1136,"type":"enum ErrorReporter.Error","value":"err1"},"id":1145,"name":"Identifier","src":"23102:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum ErrorReporter.Error"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"type(enum ErrorReporter.Error)","value":"Error"},"id":1146,"name":"Identifier","src":"23110:5:0"}],"id":1147,"name":"MemberAccess","src":"23110:14:0"}],"id":1148,"name":"BinaryOperation","src":"23102:22:0"}],"id":1149,"name":"FunctionCall","src":"23095:30:0"}],"id":1150,"name":"ExpressionStatement","src":"23095:30:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1115,"type":"struct Exponential.Exp memory","value":"_utilizationRate"},"id":1151,"name":"Identifier","src":"23136:16:0"}],"id":1152,"name":"ExpressionStatement","src":"23136:16:0"},{"attributes":{"functionReturnParameters":1109},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(uint256,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_IRError_$833","typeString":"enum StandardInterestRateModel.IRError"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint"},"id":1153,"name":"ElementaryTypeNameExpression","src":"23289:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"NO_ERROR","referencedDeclaration":null,"type":"enum StandardInterestRateModel.IRError"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":833,"type":"type(enum StandardInterestRateModel.IRError)","value":"IRError"},"id":1154,"name":"Identifier","src":"23294:7:0"}],"id":1155,"name":"MemberAccess","src":"23294:16:0"}],"id":1156,"name":"FunctionCall","src":"23289:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"mantissa","referencedDeclaration":403,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1138,"type":"struct Exponential.Exp memory","value":"borrowRate"},"id":1157,"name":"Identifier","src":"23313:10:0"}],"id":1158,"name":"MemberAccess","src":"23313:19:0"}],"id":1159,"name":"TupleExpression","src":"23288:45:0"}],"id":1160,"name":"Return","src":"23281:52:0"}],"id":1161,"name":"Block","src":"22555:785:0"}],"id":1162,"name":"FunctionDefinition","src":"22458:882:0"}],"id":1163,"name":"ContractDefinition","src":"16136:7206:0"}],"id":1164,"name":"SourceUnit","src":"0:23342:0"}}