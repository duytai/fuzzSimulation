{"name":"DarknodeRewardVault","address":"0x880407c9cd119bef48b1821cdfc434e3ca3cd588","source":"pragma solidity ^0.4.24;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/issues/20\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n/**\n * @title Pausable token\n * @dev StandardToken modified with pausable transfers.\n **/\ncontract PausableToken is StandardToken, Pausable {\n\n  function transfer(\n    address _to,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(\n    address _spender,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseApproval(\n    address _spender,\n    uint _addedValue\n  )\n    public\n    whenNotPaused\n    returns (bool success)\n  {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n\n  function decreaseApproval(\n    address _spender,\n    uint _subtractedValue\n  )\n    public\n    whenNotPaused\n    returns (bool success)\n  {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n}\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is BasicToken {\n\n  event Burn(address indexed burner, uint256 value);\n\n  /**\n   * @dev Burns a specific amount of tokens.\n   * @param _value The amount of token to be burned.\n   */\n  function burn(uint256 _value) public {\n    _burn(msg.sender, _value);\n  }\n\n  function _burn(address _who, uint256 _value) internal {\n    require(_value <= balances[_who]);\n    // no need to require value <= totalSupply, since that would imply the\n    // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n    balances[_who] = balances[_who].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit Burn(_who, _value);\n    emit Transfer(_who, address(0), _value);\n  }\n}\n\ncontract RepublicToken is PausableToken, BurnableToken {\n\n    string public constant name = \"Republic Token\";\n    string public constant symbol = \"REN\";\n    uint8 public constant decimals = 18;\n    uint256 public constant INITIAL_SUPPLY = 1000000000 * 10**uint256(decimals);\n\n    /// @notice The RepublicToken Constructor.\n    constructor() public {\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n    }\n\n    function transferTokens(address beneficiary, uint256 amount) public onlyOwner returns (bool) {\n        /* solium-disable error-reason */\n        require(amount > 0);\n\n        balances[owner] = balances[owner].sub(amount);\n        balances[beneficiary] = balances[beneficiary].add(amount);\n        emit Transfer(owner, beneficiary, amount);\n\n        return true;\n    }\n}\n\n/**\n * @notice LinkedList is a library for a circular double linked list.\n */\nlibrary LinkedList {\n\n    /*\n    * @notice A permanent NULL node (0x0) in the circular double linked list.\n    * NULL.next is the head, and NULL.previous is the tail.\n    */\n    address public constant NULL = 0x0;\n\n    /**\n    * @notice A node points to the node before it, and the node after it. If\n    * node.previous = NULL, then the node is the head of the list. If\n    * node.next = NULL, then the node is the tail of the list.\n    */\n    struct Node {\n        bool inList;\n        address previous;\n        address next;\n    }\n\n    /**\n    * @notice LinkedList uses a mapping from address to nodes. Each address\n    * uniquely identifies a node, and in this way they are used like pointers.\n    */\n    struct List {\n        mapping (address => Node) list;\n    }\n\n    /**\n    * @notice Insert a new node before an existing node.\n    *\n    * @param self The list being used.\n    * @param target The existing node in the list.\n    * @param newNode The next node to insert before the target.\n    */\n    function insertBefore(List storage self, address target, address newNode) internal {\n        require(!isInList(self, newNode), \"already in list\");\n        require(isInList(self, target) || target == NULL, \"not in list\");\n\n        // It is expected that this value is sometimes NULL.\n        address prev = self.list[target].previous;\n\n        self.list[newNode].next = target;\n        self.list[newNode].previous = prev;\n        self.list[target].previous = newNode;\n        self.list[prev].next = newNode;\n\n        self.list[newNode].inList = true;\n    }\n\n    /**\n    * @notice Insert a new node after an existing node.\n    *\n    * @param self The list being used.\n    * @param target The existing node in the list.\n    * @param newNode The next node to insert after the target.\n    */\n    function insertAfter(List storage self, address target, address newNode) internal {\n        require(!isInList(self, newNode), \"already in list\");\n        require(isInList(self, target) || target == NULL, \"not in list\");\n\n        // It is expected that this value is sometimes NULL.\n        address n = self.list[target].next;\n\n        self.list[newNode].previous = target;\n        self.list[newNode].next = n;\n        self.list[target].next = newNode;\n        self.list[n].previous = newNode;\n\n        self.list[newNode].inList = true;\n    }\n\n    /**\n    * @notice Remove a node from the list, and fix the previous and next\n    * pointers that are pointing to the removed node. Removing anode that is not\n    * in the list will do nothing.\n    *\n    * @param self The list being using.\n    * @param node The node in the list to be removed.\n    */\n    function remove(List storage self, address node) internal {\n        require(isInList(self, node), \"not in list\");\n        if (node == NULL) {\n            return;\n        }\n        address p = self.list[node].previous;\n        address n = self.list[node].next;\n\n        self.list[p].next = n;\n        self.list[n].previous = p;\n\n        // Deleting the node should set this value to false, but we set it here for\n        // explicitness.\n        self.list[node].inList = false;\n        delete self.list[node];\n    }\n\n    /**\n    * @notice Insert a node at the beginning of the list.\n    *\n    * @param self The list being used.\n    * @param node The node to insert at the beginning of the list.\n    */\n    function prepend(List storage self, address node) internal {\n        // isInList(node) is checked in insertBefore\n\n        insertBefore(self, begin(self), node);\n    }\n\n    /**\n    * @notice Insert a node at the end of the list.\n    *\n    * @param self The list being used.\n    * @param node The node to insert at the end of the list.\n    */\n    function append(List storage self, address node) internal {\n        // isInList(node) is checked in insertBefore\n\n        insertAfter(self, end(self), node);\n    }\n\n    function swap(List storage self, address left, address right) internal {\n        // isInList(left) and isInList(right) are checked in remove\n\n        address previousRight = self.list[right].previous;\n        remove(self, right);\n        insertAfter(self, left, right);\n        remove(self, left);\n        insertAfter(self, previousRight, left);\n    }\n\n    function isInList(List storage self, address node) internal view returns (bool) {\n        return self.list[node].inList;\n    }\n\n    /**\n    * @notice Get the node at the beginning of a double linked list.\n    *\n    * @param self The list being used.\n    *\n    * @return A address identifying the node at the beginning of the double\n    * linked list.\n    */\n    function begin(List storage self) internal view returns (address) {\n        return self.list[NULL].next;\n    }\n\n    /**\n    * @notice Get the node at the end of a double linked list.\n    *\n    * @param self The list being used.\n    *\n    * @return A address identifying the node at the end of the double linked\n    * list.\n    */\n    function end(List storage self) internal view returns (address) {\n        return self.list[NULL].previous;\n    }\n\n    function next(List storage self, address node) internal view returns (address) {\n        require(isInList(self, node), \"not in list\");\n        return self.list[node].next;\n    }\n\n    function previous(List storage self, address node) internal view returns (address) {\n        require(isInList(self, node), \"not in list\");\n        return self.list[node].previous;\n    }\n\n}\n\n/// @notice This contract stores data and funds for the DarknodeRegistry\n/// contract. The data / fund logic and storage have been separated to improve\n/// upgradability.\ncontract DarknodeRegistryStore is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    /// @notice Darknodes are stored in the darknode struct. The owner is the\n    /// address that registered the darknode, the bond is the amount of REN that\n    /// was transferred during registration, and the public key is the\n    /// encryption key that should be used when sending sensitive information to\n    /// the darknode.\n    struct Darknode {\n        // The owner of a Darknode is the address that called the register\n        // function. The owner is the only address that is allowed to\n        // deregister the Darknode, unless the Darknode is slashed for\n        // malicious behavior.\n        address owner;\n\n        // The bond is the amount of REN submitted as a bond by the Darknode.\n        // This amount is reduced when the Darknode is slashed for malicious\n        // behavior.\n        uint256 bond;\n\n        // The block number at which the Darknode is considered registered.\n        uint256 registeredAt;\n\n        // The block number at which the Darknode is considered deregistered.\n        uint256 deregisteredAt;\n\n        // The public key used by this Darknode for encrypting sensitive data\n        // off chain. It is assumed that the Darknode has access to the\n        // respective private key, and that there is an agreement on the format\n        // of the public key.\n        bytes publicKey;\n    }\n\n    /// Registry data.\n    mapping(address => Darknode) private darknodeRegistry;\n    LinkedList.List private darknodes;\n\n    // RepublicToken.\n    RepublicToken public ren;\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    /// @param _ren The address of the RepublicToken contract.\n    constructor(\n        string _VERSION,\n        RepublicToken _ren\n    ) public {\n        VERSION = _VERSION;\n        ren = _ren;\n    }\n\n    /// @notice Instantiates a darknode and appends it to the darknodes\n    /// linked-list.\n    ///\n    /// @param _darknodeID The darknode's ID.\n    /// @param _darknodeOwner The darknode's owner's address\n    /// @param _bond The darknode's bond value\n    /// @param _publicKey The darknode's public key\n    /// @param _registeredAt The time stamp when the darknode is registered.\n    /// @param _deregisteredAt The time stamp when the darknode is deregistered.\n    function appendDarknode(\n        address _darknodeID,\n        address _darknodeOwner,\n        uint256 _bond,\n        bytes _publicKey,\n        uint256 _registeredAt,\n        uint256 _deregisteredAt\n    ) external onlyOwner {\n        Darknode memory darknode = Darknode({\n            owner: _darknodeOwner,\n            bond: _bond,\n            publicKey: _publicKey,\n            registeredAt: _registeredAt,\n            deregisteredAt: _deregisteredAt\n        });\n        darknodeRegistry[_darknodeID] = darknode;\n        LinkedList.append(darknodes, _darknodeID);\n    }\n\n    /// @notice Returns the address of the first darknode in the store\n    function begin() external view onlyOwner returns(address) {\n        return LinkedList.begin(darknodes);\n    }\n\n    /// @notice Returns the address of the next darknode in the store after the\n    /// given address.\n    function next(address darknodeID) external view onlyOwner returns(address) {\n        return LinkedList.next(darknodes, darknodeID);\n    }\n\n    /// @notice Removes a darknode from the store and transfers its bond to the\n    /// owner of this contract.\n    function removeDarknode(address darknodeID) external onlyOwner {\n        uint256 bond = darknodeRegistry[darknodeID].bond;\n        delete darknodeRegistry[darknodeID];\n        LinkedList.remove(darknodes, darknodeID);\n        require(ren.transfer(owner, bond), \"bond transfer failed\");\n    }\n\n    /// @notice Updates the bond of the darknode. If the bond is being\n    /// decreased, the difference is sent to the owner of this contract.\n    function updateDarknodeBond(address darknodeID, uint256 bond) external onlyOwner {\n        uint256 previousBond = darknodeRegistry[darknodeID].bond;\n        darknodeRegistry[darknodeID].bond = bond;\n        if (previousBond > bond) {\n            require(ren.transfer(owner, previousBond - bond), \"cannot transfer bond\");\n        }\n    }\n\n    /// @notice Updates the deregistration timestamp of a darknode.\n    function updateDarknodeDeregisteredAt(address darknodeID, uint256 deregisteredAt) external onlyOwner {\n        darknodeRegistry[darknodeID].deregisteredAt = deregisteredAt;\n    }\n\n    /// @notice Returns the owner of a given darknode.\n    function darknodeOwner(address darknodeID) external view onlyOwner returns (address) {\n        return darknodeRegistry[darknodeID].owner;\n    }\n\n    /// @notice Returns the bond of a given darknode.\n    function darknodeBond(address darknodeID) external view onlyOwner returns (uint256) {\n        return darknodeRegistry[darknodeID].bond;\n    }\n\n    /// @notice Returns the registration time of a given darknode.\n    function darknodeRegisteredAt(address darknodeID) external view onlyOwner returns (uint256) {\n        return darknodeRegistry[darknodeID].registeredAt;\n    }\n\n    /// @notice Returns the deregistration time of a given darknode.\n    function darknodeDeregisteredAt(address darknodeID) external view onlyOwner returns (uint256) {\n        return darknodeRegistry[darknodeID].deregisteredAt;\n    }\n\n    /// @notice Returns the encryption public key of a given darknode.\n    function darknodePublicKey(address darknodeID) external view onlyOwner returns (bytes) {\n        return darknodeRegistry[darknodeID].publicKey;\n    }\n}\n\n/// @notice DarknodeRegistry is responsible for the registration and\n/// deregistration of Darknodes.\ncontract DarknodeRegistry is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    /// @notice Darknode pods are shuffled after a fixed number of blocks.\n    /// An Epoch stores an epoch hash used as an (insecure) RNG seed, and the\n    /// blocknumber which restricts when the next epoch can be called.\n    struct Epoch {\n        uint256 epochhash;\n        uint256 blocknumber;\n    }\n\n    uint256 public numDarknodes;\n    uint256 public numDarknodesNextEpoch;\n    uint256 public numDarknodesPreviousEpoch;\n\n    /// Variables used to parameterize behavior.\n    uint256 public minimumBond;\n    uint256 public minimumPodSize;\n    uint256 public minimumEpochInterval;\n    address public slasher;\n\n    /// When one of the above variables is modified, it is only updated when the\n    /// next epoch is called. These variables store the values for the next epoch.\n    uint256 public nextMinimumBond;\n    uint256 public nextMinimumPodSize;\n    uint256 public nextMinimumEpochInterval;\n    address public nextSlasher;\n\n    /// The current and previous epoch\n    Epoch public currentEpoch;\n    Epoch public previousEpoch;\n\n    /// Republic ERC20 token contract used to transfer bonds.\n    RepublicToken public ren;\n\n    /// Darknode Registry Store is the storage contract for darknodes.\n    DarknodeRegistryStore public store;\n\n    /// @notice Emitted when a darknode is registered.\n    /// @param _darknodeID The darknode ID that was registered.\n    /// @param _bond The amount of REN that was transferred as bond.\n    event LogDarknodeRegistered(address _darknodeID, uint256 _bond);\n\n    /// @notice Emitted when a darknode is deregistered.\n    /// @param _darknodeID The darknode ID that was deregistered.\n    event LogDarknodeDeregistered(address _darknodeID);\n\n    /// @notice Emitted when a refund has been made.\n    /// @param _owner The address that was refunded.\n    /// @param _amount The amount of REN that was refunded.\n    event LogDarknodeOwnerRefunded(address _owner, uint256 _amount);\n\n    /// @notice Emitted when a new epoch has begun.\n    event LogNewEpoch();\n\n    /// @notice Emitted when a constructor parameter has been updated.\n    event LogMinimumBondUpdated(uint256 previousMinimumBond, uint256 nextMinimumBond);\n    event LogMinimumPodSizeUpdated(uint256 previousMinimumPodSize, uint256 nextMinimumPodSize);\n    event LogMinimumEpochIntervalUpdated(uint256 previousMinimumEpochInterval, uint256 nextMinimumEpochInterval);\n    event LogSlasherUpdated(address previousSlasher, address nextSlasher);\n\n    /// @notice Only allow the owner that registered the darknode to pass.\n    modifier onlyDarknodeOwner(address _darknodeID) {\n        require(store.darknodeOwner(_darknodeID) == msg.sender, \"must be darknode owner\");\n        _;\n    }\n\n    /// @notice Only allow unregistered darknodes.\n    modifier onlyRefunded(address _darknodeID) {\n        require(isRefunded(_darknodeID), \"must be refunded or never registered\");\n        _;\n    }\n\n    /// @notice Only allow refundable darknodes.\n    modifier onlyRefundable(address _darknodeID) {\n        require(isRefundable(_darknodeID), \"must be deregistered for at least one epoch\");\n        _;\n    }\n\n    /// @notice Only allowed registered nodes without a pending deregistration to\n    /// deregister\n    modifier onlyDeregisterable(address _darknodeID) {\n        require(isDeregisterable(_darknodeID), \"must be deregisterable\");\n        _;\n    }\n\n    /// @notice Only allow the Slasher contract.\n    modifier onlySlasher() {\n        require(slasher == msg.sender, \"must be slasher\");\n        _;\n    }\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    /// @param _renAddress The address of the RepublicToken contract.\n    /// @param _storeAddress The address of the DarknodeRegistryStore contract.\n    /// @param _minimumBond The minimum bond amount that can be submitted by a\n    ///        Darknode.\n    /// @param _minimumPodSize The minimum size of a Darknode pod.\n    /// @param _minimumEpochInterval The minimum number of blocks between\n    ///        epochs.\n    constructor(\n        string _VERSION,\n        RepublicToken _renAddress,\n        DarknodeRegistryStore _storeAddress,\n        uint256 _minimumBond,\n        uint256 _minimumPodSize,\n        uint256 _minimumEpochInterval\n    ) public {\n        VERSION = _VERSION;\n\n        store = _storeAddress;\n        ren = _renAddress;\n\n        minimumBond = _minimumBond;\n        nextMinimumBond = minimumBond;\n\n        minimumPodSize = _minimumPodSize;\n        nextMinimumPodSize = minimumPodSize;\n\n        minimumEpochInterval = _minimumEpochInterval;\n        nextMinimumEpochInterval = minimumEpochInterval;\n\n        currentEpoch = Epoch({\n            epochhash: uint256(blockhash(block.number - 1)),\n            blocknumber: block.number\n        });\n        numDarknodes = 0;\n        numDarknodesNextEpoch = 0;\n        numDarknodesPreviousEpoch = 0;\n    }\n\n    /// @notice Register a darknode and transfer the bond to this contract. The\n    /// caller must provide a public encryption key for the darknode as well as\n    /// a bond in REN. The bond must be provided as an ERC20 allowance. The dark\n    /// node will remain pending registration until the next epoch. Only after\n    /// this period can the darknode be deregistered. The caller of this method\n    /// will be stored as the owner of the darknode.\n    ///\n    /// @param _darknodeID The darknode ID that will be registered.\n    /// @param _publicKey The public key of the darknode. It is stored to allow\n    ///        other darknodes and traders to encrypt messages to the trader.\n    /// @param _bond The bond that will be paid. It must be greater than, or\n    ///        equal to, the minimum bond.\n    function register(address _darknodeID, bytes _publicKey, uint256 _bond) external onlyRefunded(_darknodeID) {\n        // REN allowance\n        require(_bond >= minimumBond, \"insufficient bond\");\n        // require(ren.allowance(msg.sender, address(this)) >= _bond);\n        require(ren.transferFrom(msg.sender, address(this), _bond), \"bond transfer failed\");\n        ren.transfer(address(store), _bond);\n\n        // Flag this darknode for registration\n        store.appendDarknode(\n            _darknodeID,\n            msg.sender,\n            _bond,\n            _publicKey,\n            currentEpoch.blocknumber + minimumEpochInterval,\n            0\n        );\n\n        numDarknodesNextEpoch += 1;\n\n        // Emit an event.\n        emit LogDarknodeRegistered(_darknodeID, _bond);\n    }\n\n    /// @notice Deregister a darknode. The darknode will not be deregistered\n    /// until the end of the epoch. After another epoch, the bond can be\n    /// refunded by calling the refund method.\n    /// @param _darknodeID The darknode ID that will be deregistered. The caller\n    ///        of this method store.darknodeRegisteredAt(_darknodeID) must be\n    //         the owner of this darknode.\n    function deregister(address _darknodeID) external onlyDeregisterable(_darknodeID) onlyDarknodeOwner(_darknodeID) {\n        // Flag the darknode for deregistration\n        store.updateDarknodeDeregisteredAt(_darknodeID, currentEpoch.blocknumber + minimumEpochInterval);\n        numDarknodesNextEpoch -= 1;\n\n        // Emit an event\n        emit LogDarknodeDeregistered(_darknodeID);\n    }\n\n    /// @notice Progress the epoch if it is possible to do so. This captures\n    /// the current timestamp and current blockhash and overrides the current\n    /// epoch.\n    function epoch() external {\n        if (previousEpoch.blocknumber == 0) {\n            // The first epoch must be called by the owner of the contract\n            require(msg.sender == owner, \"not authorized (first epochs)\");\n        }\n\n        // Require that the epoch interval has passed\n        require(block.number >= currentEpoch.blocknumber + minimumEpochInterval, \"epoch interval has not passed\");\n        uint256 epochhash = uint256(blockhash(block.number - 1));\n\n        // Update the epoch hash and timestamp\n        previousEpoch = currentEpoch;\n        currentEpoch = Epoch({\n            epochhash: epochhash,\n            blocknumber: block.number\n        });\n\n        // Update the registry information\n        numDarknodesPreviousEpoch = numDarknodes;\n        numDarknodes = numDarknodesNextEpoch;\n\n        // If any update functions have been called, update the values now\n        if (nextMinimumBond != minimumBond) {\n            minimumBond = nextMinimumBond;\n            emit LogMinimumBondUpdated(minimumBond, nextMinimumBond);\n        }\n        if (nextMinimumPodSize != minimumPodSize) {\n            minimumPodSize = nextMinimumPodSize;\n            emit LogMinimumPodSizeUpdated(minimumPodSize, nextMinimumPodSize);\n        }\n        if (nextMinimumEpochInterval != minimumEpochInterval) {\n            minimumEpochInterval = nextMinimumEpochInterval;\n            emit LogMinimumEpochIntervalUpdated(minimumEpochInterval, nextMinimumEpochInterval);\n        }\n        if (nextSlasher != slasher) {\n            slasher = nextSlasher;\n            emit LogSlasherUpdated(slasher, nextSlasher);\n        }\n\n        // Emit an event\n        emit LogNewEpoch();\n    }\n\n    /// @notice Allows the contract owner to transfer ownership of the\n    /// DarknodeRegistryStore.\n    /// @param _newOwner The address to transfer the ownership to.\n    function transferStoreOwnership(address _newOwner) external onlyOwner {\n        store.transferOwnership(_newOwner);\n    }\n\n    /// @notice Allows the contract owner to update the minimum bond.\n    /// @param _nextMinimumBond The minimum bond amount that can be submitted by\n    ///        a darknode.\n    function updateMinimumBond(uint256 _nextMinimumBond) external onlyOwner {\n        // Will be updated next epoch\n        nextMinimumBond = _nextMinimumBond;\n    }\n\n    /// @notice Allows the contract owner to update the minimum pod size.\n    /// @param _nextMinimumPodSize The minimum size of a pod.\n    function updateMinimumPodSize(uint256 _nextMinimumPodSize) external onlyOwner {\n        // Will be updated next epoch\n        nextMinimumPodSize = _nextMinimumPodSize;\n    }\n\n    /// @notice Allows the contract owner to update the minimum epoch interval.\n    /// @param _nextMinimumEpochInterval The minimum number of blocks between epochs.\n    function updateMinimumEpochInterval(uint256 _nextMinimumEpochInterval) external onlyOwner {\n        // Will be updated next epoch\n        nextMinimumEpochInterval = _nextMinimumEpochInterval;\n    }\n\n    /// @notice Allow the contract owner to update the DarknodeSlasher contract\n    /// address.\n    /// @param _slasher The new slasher address.\n    function updateSlasher(address _slasher) external onlyOwner {\n        nextSlasher = _slasher;\n    }\n\n    /// @notice Allow the DarknodeSlasher contract to slash half of a darknode's\n    /// bond and deregister it. The bond is distributed as follows:\n    ///   1/2 is kept by the guilty prover\n    ///   1/8 is rewarded to the first challenger\n    ///   1/8 is rewarded to the second challenger\n    ///   1/4 becomes unassigned\n    /// @param _prover The guilty prover whose bond is being slashed\n    /// @param _challenger1 The first of the two darknodes who submitted the challenge\n    /// @param _challenger2 The second of the two darknodes who submitted the challenge\n    function slash(address _prover, address _challenger1, address _challenger2)\n        external\n        onlySlasher\n    {\n        uint256 penalty = store.darknodeBond(_prover) / 2;\n        uint256 reward = penalty / 4;\n\n        // Slash the bond of the failed prover in half\n        store.updateDarknodeBond(_prover, penalty);\n\n        // If the darknode has not been deregistered then deregister it\n        if (isDeregisterable(_prover)) {\n            store.updateDarknodeDeregisteredAt(_prover, currentEpoch.blocknumber + minimumEpochInterval);\n            numDarknodesNextEpoch -= 1;\n            emit LogDarknodeDeregistered(_prover);\n        }\n\n        // Reward the challengers with less than the penalty so that it is not\n        // worth challenging yourself\n        ren.transfer(store.darknodeOwner(_challenger1), reward);\n        ren.transfer(store.darknodeOwner(_challenger2), reward);\n    }\n\n    /// @notice Refund the bond of a deregistered darknode. This will make the\n    /// darknode available for registration again. Anyone can call this function\n    /// but the bond will always be refunded to the darknode owner.\n    ///\n    /// @param _darknodeID The darknode ID that will be refunded. The caller\n    ///        of this method must be the owner of this darknode.\n    function refund(address _darknodeID) external onlyRefundable(_darknodeID) {\n        address darknodeOwner = store.darknodeOwner(_darknodeID);\n\n        // Remember the bond amount\n        uint256 amount = store.darknodeBond(_darknodeID);\n\n        // Erase the darknode from the registry\n        store.removeDarknode(_darknodeID);\n\n        // Refund the owner by transferring REN\n        ren.transfer(darknodeOwner, amount);\n\n        // Emit an event.\n        emit LogDarknodeOwnerRefunded(darknodeOwner, amount);\n    }\n\n    /// @notice Retrieves the address of the account that registered a darknode.\n    /// @param _darknodeID The ID of the darknode to retrieve the owner for.\n    function getDarknodeOwner(address _darknodeID) external view returns (address) {\n        return store.darknodeOwner(_darknodeID);\n    }\n\n    /// @notice Retrieves the bond amount of a darknode in 10^-18 REN.\n    /// @param _darknodeID The ID of the darknode to retrieve the bond for.\n    function getDarknodeBond(address _darknodeID) external view returns (uint256) {\n        return store.darknodeBond(_darknodeID);\n    }\n\n    /// @notice Retrieves the encryption public key of the darknode.\n    /// @param _darknodeID The ID of the darknode to retrieve the public key for.\n    function getDarknodePublicKey(address _darknodeID) external view returns (bytes) {\n        return store.darknodePublicKey(_darknodeID);\n    }\n\n    /// @notice Retrieves a list of darknodes which are registered for the\n    /// current epoch.\n    /// @param _start A darknode ID used as an offset for the list. If _start is\n    ///        0x0, the first dark node will be used. _start won't be\n    ///        included it is not registered for the epoch.\n    /// @param _count The number of darknodes to retrieve starting from _start.\n    ///        If _count is 0, all of the darknodes from _start are\n    ///        retrieved. If _count is more than the remaining number of\n    ///        registered darknodes, the rest of the list will contain\n    ///        0x0s.\n    function getDarknodes(address _start, uint256 _count) external view returns (address[]) {\n        uint256 count = _count;\n        if (count == 0) {\n            count = numDarknodes;\n        }\n        return getDarknodesFromEpochs(_start, count, false);\n    }\n\n    /// @notice Retrieves a list of darknodes which were registered for the\n    /// previous epoch. See `getDarknodes` for the parameter documentation.\n    function getPreviousDarknodes(address _start, uint256 _count) external view returns (address[]) {\n        uint256 count = _count;\n        if (count == 0) {\n            count = numDarknodesPreviousEpoch;\n        }\n        return getDarknodesFromEpochs(_start, count, true);\n    }\n\n    /// @notice Returns whether a darknode is scheduled to become registered\n    /// at next epoch.\n    /// @param _darknodeID The ID of the darknode to return\n    function isPendingRegistration(address _darknodeID) external view returns (bool) {\n        uint256 registeredAt = store.darknodeRegisteredAt(_darknodeID);\n        return registeredAt != 0 && registeredAt > currentEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode is in the pending deregistered state. In\n    /// this state a darknode is still considered registered.\n    function isPendingDeregistration(address _darknodeID) external view returns (bool) {\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        return deregisteredAt != 0 && deregisteredAt > currentEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode is in the deregistered state.\n    function isDeregistered(address _darknodeID) public view returns (bool) {\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        return deregisteredAt != 0 && deregisteredAt <= currentEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode can be deregistered. This is true if the\n    /// darknodes is in the registered state and has not attempted to\n    /// deregister yet.\n    function isDeregisterable(address _darknodeID) public view returns (bool) {\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        // The Darknode is currently in the registered state and has not been\n        // transitioned to the pending deregistration, or deregistered, state\n        return isRegistered(_darknodeID) && deregisteredAt == 0;\n    }\n\n    /// @notice Returns if a darknode is in the refunded state. This is true\n    /// for darknodes that have never been registered, or darknodes that have\n    /// been deregistered and refunded.\n    function isRefunded(address _darknodeID) public view returns (bool) {\n        uint256 registeredAt = store.darknodeRegisteredAt(_darknodeID);\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        return registeredAt == 0 && deregisteredAt == 0;\n    }\n\n    /// @notice Returns if a darknode is refundable. This is true for darknodes\n    /// that have been in the deregistered state for one full epoch.\n    function isRefundable(address _darknodeID) public view returns (bool) {\n        return isDeregistered(_darknodeID) && store.darknodeDeregisteredAt(_darknodeID) <= previousEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode is in the registered state.\n    function isRegistered(address _darknodeID) public view returns (bool) {\n        return isRegisteredInEpoch(_darknodeID, currentEpoch);\n    }\n\n    /// @notice Returns if a darknode was in the registered state last epoch.\n    function isRegisteredInPreviousEpoch(address _darknodeID) public view returns (bool) {\n        return isRegisteredInEpoch(_darknodeID, previousEpoch);\n    }\n\n    /// @notice Returns if a darknode was in the registered state for a given\n    /// epoch.\n    /// @param _darknodeID The ID of the darknode\n    /// @param _epoch One of currentEpoch, previousEpoch\n    function isRegisteredInEpoch(address _darknodeID, Epoch _epoch) private view returns (bool) {\n        uint256 registeredAt = store.darknodeRegisteredAt(_darknodeID);\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        bool registered = registeredAt != 0 && registeredAt <= _epoch.blocknumber;\n        bool notDeregistered = deregisteredAt == 0 || deregisteredAt > _epoch.blocknumber;\n        // The Darknode has been registered and has not yet been deregistered,\n        // although it might be pending deregistration\n        return registered && notDeregistered;\n    }\n\n    /// @notice Returns a list of darknodes registered for either the current\n    /// or the previous epoch. See `getDarknodes` for documentation on the\n    /// parameters `_start` and `_count`.\n    /// @param _usePreviousEpoch If true, use the previous epoch, otherwise use\n    ///        the current epoch.\n    function getDarknodesFromEpochs(address _start, uint256 _count, bool _usePreviousEpoch) private view returns (address[]) {\n        uint256 count = _count;\n        if (count == 0) {\n            count = numDarknodes;\n        }\n\n        address[] memory nodes = new address[](count);\n\n        // Begin with the first node in the list\n        uint256 n = 0;\n        address next = _start;\n        if (next == 0x0) {\n            next = store.begin();\n        }\n\n        // Iterate until all registered Darknodes have been collected\n        while (n < count) {\n            if (next == 0x0) {\n                break;\n            }\n            // Only include Darknodes that are currently registered\n            bool includeNext;\n            if (_usePreviousEpoch) {\n                includeNext = isRegisteredInPreviousEpoch(next);\n            } else {\n                includeNext = isRegistered(next);\n            }\n            if (!includeNext) {\n                next = store.next(next);\n                continue;\n            }\n            nodes[n] = next;\n            next = store.next(next);\n            n += 1;\n        }\n        return nodes;\n    }\n}\n\n/**\n * @title Math\n * @dev Assorted math operations\n */\nlibrary Math {\n  function max64(uint64 a, uint64 b) internal pure returns (uint64) {\n    return a >= b ? a : b;\n  }\n\n  function min64(uint64 a, uint64 b) internal pure returns (uint64) {\n    return a < b ? a : b;\n  }\n\n  function max256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a >= b ? a : b;\n  }\n\n  function min256(uint256 a, uint256 b) internal pure returns (uint256) {\n    return a < b ? a : b;\n  }\n}\n\n/// @notice Implements safeTransfer, safeTransferFrom and\n/// safeApprove for CompatibleERC20.\n///\n/// See https://github.com/ethereum/solidity/issues/4116\n///\n/// This library allows interacting with ERC20 tokens that implement any of\n/// these interfaces:\n///\n/// (1) transfer returns true on success, false on failure\n/// (2) transfer returns true on success, reverts on failure\n/// (3) transfer returns nothing on success, reverts on failure\n///\n/// Additionally, safeTransferFromWithFees will return the final token\n/// value received after accounting for token fees.\nlibrary CompatibleERC20Functions {\n    using SafeMath for uint256;\n\n    /// @notice Calls transfer on the token and reverts if the call fails.\n    function safeTransfer(address token, address to, uint256 amount) internal {\n        CompatibleERC20(token).transfer(to, amount);\n        require(previousReturnValue(), \"transfer failed\");\n    }\n\n    /// @notice Calls transferFrom on the token and reverts if the call fails.\n    function safeTransferFrom(address token, address from, address to, uint256 amount) internal {\n        CompatibleERC20(token).transferFrom(from, to, amount);\n        require(previousReturnValue(), \"transferFrom failed\");\n    }\n\n    /// @notice Calls approve on the token and reverts if the call fails.\n    function safeApprove(address token, address spender, uint256 amount) internal {\n        CompatibleERC20(token).approve(spender, amount);\n        require(previousReturnValue(), \"approve failed\");\n    }\n\n    /// @notice Calls transferFrom on the token, reverts if the call fails and\n    /// returns the value transferred after fees.\n    function safeTransferFromWithFees(address token, address from, address to, uint256 amount) internal returns (uint256) {\n        uint256 balancesBefore = CompatibleERC20(token).balanceOf(to);\n        CompatibleERC20(token).transferFrom(from, to, amount);\n        require(previousReturnValue(), \"transferFrom failed\");\n        uint256 balancesAfter = CompatibleERC20(token).balanceOf(to);\n        return Math.min256(amount, balancesAfter.sub(balancesBefore));\n    }\n\n    /// @notice Checks the return value of the previous function. Returns true\n    /// if the previous function returned 32 non-zero bytes or returned zero\n    /// bytes.\n    function previousReturnValue() private pure returns (bool)\n    {\n        uint256 returnData = 0;\n\n        assembly { /* solium-disable-line security/no-inline-assembly */\n            // Switch on the number of bytes returned by the previous call\n            switch returndatasize\n\n            // 0 bytes: ERC20 of type (3), did not throw\n            case 0 {\n                returnData := 1\n            }\n\n            // 32 bytes: ERC20 of types (1) or (2)\n            case 32 {\n                // Copy the return data into scratch space\n                returndatacopy(0x0, 0x0, 32)\n\n                // Load  the return data into returnData\n                returnData := mload(0x0)\n            }\n\n            // Other return size: return false\n            default { }\n        }\n\n        return returnData != 0;\n    }\n}\n\n/// @notice ERC20 interface which doesn't specify the return type for transfer,\n/// transferFrom and approve.\ninterface CompatibleERC20 {\n    // Modified to not return boolean\n    function transfer(address to, uint256 value) external;\n    function transferFrom(address from, address to, uint256 value) external;\n    function approve(address spender, uint256 value) external;\n\n    // Not modifier\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/// @notice The DarknodeRewardVault contract is responsible for holding fees\n/// for darknodes for settling orders. Fees can be withdrawn to the address of\n/// the darknode's operator. Fees can be in ETH or in ERC20 tokens.\n/// Docs: https://github.com/republicprotocol/republic-sol/blob/master/docs/02-darknode-reward-vault.md\ncontract DarknodeRewardVault is Ownable {\n    using SafeMath for uint256;\n    using CompatibleERC20Functions for CompatibleERC20;\n\n    string public VERSION; // Passed in as a constructor parameter.\n\n    /// @notice The special address for Ether.\n    address constant public ETHEREUM = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n\n    DarknodeRegistry public darknodeRegistry;\n\n    mapping(address => mapping(address => uint256)) public darknodeBalances;\n\n    event LogDarknodeRegistryUpdated(DarknodeRegistry previousDarknodeRegistry, DarknodeRegistry nextDarknodeRegistry);\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    /// @param _darknodeRegistry The DarknodeRegistry contract that is used by\n    ///        the vault to lookup Darknode owners.\n    constructor(string _VERSION, DarknodeRegistry _darknodeRegistry) public {\n        VERSION = _VERSION;\n        darknodeRegistry = _darknodeRegistry;\n    }\n\n    function updateDarknodeRegistry(DarknodeRegistry _newDarknodeRegistry) public onlyOwner {\n        emit LogDarknodeRegistryUpdated(darknodeRegistry, _newDarknodeRegistry);\n        darknodeRegistry = _newDarknodeRegistry;\n    }\n\n    /// @notice Deposit fees into the vault for a Darknode. The Darknode\n    /// registration is not checked (to reduce gas fees); the caller must be\n    /// careful not to call this function for a Darknode that is not registered\n    /// otherwise any fees deposited to that Darknode can be withdrawn by a\n    /// malicious adversary (by registering the Darknode before the honest\n    /// party and claiming ownership).\n    ///\n    /// @param _darknode The address of the Darknode that will receive the\n    ///        fees.\n    /// @param _token The address of the ERC20 token being used to pay the fee.\n    ///        A special address is used for Ether.\n    /// @param _value The amount of fees in the smallest unit of the token.\n    function deposit(address _darknode, ERC20 _token, uint256 _value) public payable {\n        uint256 receivedValue = _value;\n        if (address(_token) == ETHEREUM) {\n            require(msg.value == _value, \"mismatched ether value\");\n        } else {\n            require(msg.value == 0, \"unexpected ether value\");\n            receivedValue = CompatibleERC20(_token).safeTransferFromWithFees(msg.sender, address(this), _value);\n        }\n        darknodeBalances[_darknode][_token] = darknodeBalances[_darknode][_token].add(receivedValue);\n    }\n\n    /// @notice Withdraw fees earned by a Darknode. The fees will be sent to\n    /// the owner of the Darknode. If a Darknode is not registered the fees\n    /// cannot be withdrawn.\n    ///\n    /// @param _darknode The address of the Darknode whose fees are being\n    ///        withdrawn. The owner of this Darknode will receive the fees.\n    /// @param _token The address of the ERC20 token to withdraw.\n    function withdraw(address _darknode, ERC20 _token) public {\n        address darknodeOwner = darknodeRegistry.getDarknodeOwner(address(_darknode));\n\n        require(darknodeOwner != 0x0, \"invalid darknode owner\");\n\n        uint256 value = darknodeBalances[_darknode][_token];\n        darknodeBalances[_darknode][_token] = 0;\n\n        if (address(_token) == ETHEREUM) {\n            darknodeOwner.transfer(value);\n        } else {\n            CompatibleERC20(_token).safeTransfer(darknodeOwner, value);\n        }\n    }\n\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"darknodeBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_darknode\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"darknodeRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDarknodeRegistry\",\"type\":\"address\"}],\"name\":\"updateDarknodeRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHEREUM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_darknode\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_VERSION\",\"type\":\"string\"},{\"name\":\"_darknodeRegistry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousDarknodeRegistry\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"nextDarknodeRegistry\",\"type\":\"address\"}],\"name\":\"LogDarknodeRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","bin":"60806040523480156200001157600080fd5b50604051620015af380380620015af8339810180604052810190808051820192919060200180519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600190805190602001906200009b929190620000e5565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000194565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200012857805160ff191683800117855562000159565b8280016001018555821562000159579182015b82811115620001585782518255916020019190600101906200013b565b5b5090506200016891906200016c565b5090565b6200019191905b808211156200018d57600081600090555060010162000173565b5090565b90565b61140b80620001a46000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806370324b77146100a9578063715018a6146101205780638340f549146101375780638da5cb5b146101975780639e45e0d0146101ee578063aaff096d14610245578063f2fde38b14610288578063f7cdf47c146102cb578063f940e38514610322578063ffa1ad7414610385575b600080fd5b3480156100b557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610415565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b5061013561043a565b005b610195600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061053c565b005b3480156101a357600080fd5b506101ac6107c2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101fa57600080fd5b506102036107e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025157600080fd5b50610286600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061080d565b005b34801561029457600080fd5b506102c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610965565b005b3480156102d757600080fd5b506102e06109cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032e57600080fd5b50610383600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e4565b005b34801561039157600080fd5b5061039a610d37565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103da5780820151818401526020810190506103bf565b50505050905090810190601f1680156104075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6003602052816000526040600020602052806000526040600020600091509150505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561049557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610605578134141515610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6d69736d6174636865642065746865722076616c75650000000000000000000081525060200191505060405180910390fd5b6106ad565b60003414151561067d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f756e65787065637465642065746865722076616c75650000000000000000000081525060200191505060405180910390fd5b6106aa3330848673ffffffffffffffffffffffffffffffffffffffff16610dd5909392919063ffffffff16565b90505b61073c81600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111d90919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561086857600080fd5b7ff9f6dd5c784f63cc27c1079c73574a73485a6c2e7f7e2181c5eb2be8c693cfb7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109c057600080fd5b6109c981611139565b50565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631cedf8a3856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610aa457600080fd5b505af1158015610ab8573d6000803e3d6000fd5b505050506040513d6020811015610ace57600080fd5b8101908080519060200190929190505050915060008273ffffffffffffffffffffffffffffffffffffffff1614151515610b70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e76616c6964206461726b6e6f6465206f776e65720000000000000000000081525060200191505060405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d05578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cff573d6000803e3d6000fd5b50610d31565b610d3082828573ffffffffffffffffffffffffffffffffffffffff166112339092919063ffffffff16565b5b50505050565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dcd5780601f10610da257610100808354040283529160200191610dcd565b820191906000526020600020905b815481529060010190602001808311610db057829003601f168201915b505050505081565b60008060008673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b505050506040513d6020811015610e9f57600080fd5b810190808051906020019092919050505091508673ffffffffffffffffffffffffffffffffffffffff166323b872dd8787876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610f8957600080fd5b505af1158015610f9d573d6000803e3d6000fd5b50505050610fa961136f565b151561101d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7472616e7366657246726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156110b857600080fd5b505af11580156110cc573d6000803e3d6000fd5b505050506040513d60208110156110e257600080fd5b810190808051906020019092919050505090506111118461110c84846113ad90919063ffffffff16565b6113c6565b92505050949350505050565b6000818301905082811015151561113057fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561117557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156112d657600080fd5b505af11580156112ea573d6000803e3d6000fd5b505050506112f661136f565b151561136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b505050565b600080600090503d6000811461138c5760208114611395576113a1565b600191506113a1565b60206000803e60005191505b50600081141591505090565b60008282111515156113bb57fe5b818303905092915050565b60008183106113d557816113d7565b825b9050929150505600a165627a7a723058203c9e2d98fce0caaca2c3beaa167786f571c1884a26ab9ccad525c2e7610298a80029","bin-runtime":"6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806370324b77146100a9578063715018a6146101205780638340f549146101375780638da5cb5b146101975780639e45e0d0146101ee578063aaff096d14610245578063f2fde38b14610288578063f7cdf47c146102cb578063f940e38514610322578063ffa1ad7414610385575b600080fd5b3480156100b557600080fd5b5061010a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610415565b6040518082815260200191505060405180910390f35b34801561012c57600080fd5b5061013561043a565b005b610195600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061053c565b005b3480156101a357600080fd5b506101ac6107c2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101fa57600080fd5b506102036107e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025157600080fd5b50610286600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061080d565b005b34801561029457600080fd5b506102c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610965565b005b3480156102d757600080fd5b506102e06109cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032e57600080fd5b50610383600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e4565b005b34801561039157600080fd5b5061039a610d37565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103da5780820151818401526020810190506103bf565b50505050905090810190601f1680156104075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6003602052816000526040600020602052806000526040600020600091509150505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561049557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600081905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610605578134141515610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6d69736d6174636865642065746865722076616c75650000000000000000000081525060200191505060405180910390fd5b6106ad565b60003414151561067d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f756e65787065637465642065746865722076616c75650000000000000000000081525060200191505060405180910390fd5b6106aa3330848673ffffffffffffffffffffffffffffffffffffffff16610dd5909392919063ffffffff16565b90505b61073c81600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111d90919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561086857600080fd5b7ff9f6dd5c784f63cc27c1079c73574a73485a6c2e7f7e2181c5eb2be8c693cfb7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109c057600080fd5b6109c981611139565b50565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631cedf8a3856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610aa457600080fd5b505af1158015610ab8573d6000803e3d6000fd5b505050506040513d6020811015610ace57600080fd5b8101908080519060200190929190505050915060008273ffffffffffffffffffffffffffffffffffffffff1614151515610b70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e76616c6964206461726b6e6f6465206f776e65720000000000000000000081525060200191505060405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d05578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cff573d6000803e3d6000fd5b50610d31565b610d3082828573ffffffffffffffffffffffffffffffffffffffff166112339092919063ffffffff16565b5b50505050565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dcd5780601f10610da257610100808354040283529160200191610dcd565b820191906000526020600020905b815481529060010190602001808311610db057829003601f168201915b505050505081565b60008060008673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b505050506040513d6020811015610e9f57600080fd5b810190808051906020019092919050505091508673ffffffffffffffffffffffffffffffffffffffff166323b872dd8787876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610f8957600080fd5b505af1158015610f9d573d6000803e3d6000fd5b50505050610fa961136f565b151561101d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7472616e7366657246726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156110b857600080fd5b505af11580156110cc573d6000803e3d6000fd5b505050506040513d60208110156110e257600080fd5b810190808051906020019092919050505090506111118461110c84846113ad90919063ffffffff16565b6113c6565b92505050949350505050565b6000818301905082811015151561113057fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561117557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156112d657600080fd5b505af11580156112ea573d6000803e3d6000fd5b505050506112f661136f565b151561136a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b505050565b600080600090503d6000811461138c5760208114611395576113a1565b600191506113a1565b60206000803e60005191505b50600081141591505090565b60008282111515156113bb57fe5b818303905092915050565b60008183106113d557816113d7565b825b9050929150505600a165627a7a723058203c9e2d98fce0caaca2c3beaa167786f571c1884a26ab9ccad525c2e7610298a80029","srcmap":"49347:3422:0:-;;;50173:153;8:9:-1;5:2;;;30:1;27;20:12;5:2;50173:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:10;566:5;;:18;;;;;;;;;;;;;;;;;;50265:8;50255:7;:18;;;;;;;;;;;;:::i;:::-;;50302:17;50283:16;;:36;;;;;;;;;;;;;;;;;;50173:153;;49347:3422;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","srcmap-runtime":"49347:3422:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49729:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49729:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:111:0;;;;;;51295:544;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;49682:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49682:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;50332:225;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50332:225:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;49598:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49598:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;52251:515;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52251:515:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49482:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49482:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;49482:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49729:71;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1000:111::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;1076:5;;;;;;;;;;;1057:25;;;;;;;;;;;;1104:1;1088:5;;:18;;;;;;;;;;;;;;;;;;1000:111::o;51295:544::-;51386:21;51410:6;51386:30;;49633:42;51430:27;;51438:6;51430:27;;;51426:305;;;51494:6;51481:9;:19;51473:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51426:305;;;51579:1;51566:9;:14;51558:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51637:83;51686:10;51706:4;51713:6;51653;51637:48;;;;:83;;;;;;:::i;:::-;51621:99;;51426:305;51778:54;51818:13;51778:16;:27;51795:9;51778:27;;;;;;;;;;;;;;;:35;51806:6;51778:35;;;;;;;;;;;;;;;;:39;;:54;;;;:::i;:::-;51740:16;:27;51757:9;51740:27;;;;;;;;;;;;;;;:35;51768:6;51740:35;;;;;;;;;;;;;;;:92;;;;51295:544;;;;:::o;237:20::-;;;;;;;;;;;;;:::o;49682:40::-;;;;;;;;;;;;;:::o;50332:225::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;50435:66;50462:16;;;;;;;;;;;50480:20;50435:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50530:20;50511:16;;:39;;;;;;;;;;;;;;;;;;50332:225;:::o;1273:103::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;1342:29;1361:9;1342:18;:29::i;:::-;1273:103;:::o;49598:77::-;49633:42;49598:77;:::o;52251:515::-;52319:21;52473:13;52343:16;;;;;;;;;;;:33;;;52385:9;52343:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52343:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52343:53:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52343:53:0;;;;;;;;;;;;;;;;52319:77;;52432:3;52415:13;:20;;;;52407:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52489:16;:27;52506:9;52489:27;;;;;;;;;;;;;;;:35;52517:6;52489:35;;;;;;;;;;;;;;;;52473:51;;52572:1;52534:16;:27;52551:9;52534:27;;;;;;;;;;;;;;;:35;52562:6;52534:35;;;;;;;;;;;;;;;:39;;;;49633:42;52588:27;;52596:6;52588:27;;;52584:176;;;52631:13;:22;;:29;52654:5;52631:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52631:29:0;52584:176;;;52691:58;52728:13;52743:5;52707:6;52691:36;;;;:58;;;;;:::i;:::-;52584:176;52251:515;;;;:::o;49482:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;46783:463::-;46892:7;46911:22;47108:21;46952:5;46936:32;;;46969:2;46936:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46936:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46936:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46936:36:0;;;;;;;;;;;;;;;;46911:61;;46998:5;46982:35;;;47018:4;47024:2;47028:6;46982:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46982:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46982:53:0;;;;47053:21;:19;:21::i;:::-;47045:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47148:5;47132:32;;;47165:2;47132:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47132:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47132:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47132:36:0;;;;;;;;;;;;;;;;47108:60;;47185:54;47197:6;47205:33;47223:14;47205:13;:17;;:33;;;;:::i;:::-;47185:11;:54::i;:::-;47178:61;;46783:463;;;;;;;;:::o;3763:123::-;3821:9;3846:1;3842;:5;3838:9;;3865:1;3860;:6;;3853:14;;;;;;3880:1;3873:8;;3763:123;;;;:::o;1511:171::-;1602:1;1581:23;;:9;:23;;;;1573:32;;;;;;;;1644:9;1616:38;;1637:5;;;;;;;;;;;1616:38;;;;;;;;;;;;1668:9;1660:5;;:17;;;;;;;;;;;;;;;;;;1511:171;:::o;45865:193::-;45965:5;45949:31;;;45981:2;45985:6;45949:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45949:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45949:43:0;;;;46010:21;:19;:21::i;:::-;46002:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45865:193;;;:::o;47423:816::-;47476:4;47496:18;47517:1;47496:22;;47688:14;47778:1;47773:54;;;;47897:2;47892:226;;;;47681:509;;47773:54;47812:1;47798:15;;47773:54;;47892:226;48002:2;47997:3;47992;47977:28;48100:3;48094:10;48080:24;;47681:509;;48231:1;48217:10;:15;;48210:22;;47423:816;;:::o;3591:110::-;3649:7;3676:1;3671;:6;;3664:14;;;;;;3695:1;3691;:5;3684:12;;3591:110;;;;:::o;45040:101::-;45101:7;45127:1;45123;:5;:13;;45135:1;45123:13;;;45131:1;45123:13;45116:20;;45040:101;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0x880407c9cd119bef48b1821cdfc434e3ca3cd588_DarknodeRewardVault.sol","exportedSymbols":{"BasicToken":[339],"BurnableToken":[805],"CompatibleERC20":[2928],"CompatibleERC20Functions":[2867],"DarknodeRegistry":[2648],"DarknodeRegistryStore":[1588],"DarknodeRewardVault":[3118],"ERC20":[155],"ERC20Basic":[115],"LinkedList":[1310],"Math":[2717],"Ownable":[85],"Pausable":[639],"PausableToken":[737],"RepublicToken":[891],"SafeMath":[247],"StandardToken":[582]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".","fullyImplemented":true,"linearizedBaseContracts":[85],"name":"Ownable","scope":3119},"children":[{"attributes":{"constant":false,"name":"owner","scope":85,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":2,"name":"ElementaryTypeName","src":"237:7:0"}],"id":3,"name":"VariableDeclaration","src":"237:20:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipRenounced"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":7,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4,"name":"ElementaryTypeName","src":"288:7:0"}],"id":5,"name":"VariableDeclaration","src":"288:29:0"}],"id":6,"name":"ParameterList","src":"287:31:0"}],"id":7,"name":"EventDefinition","src":"263:56:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipTransferred"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":13,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":8,"name":"ElementaryTypeName","src":"354:7:0"}],"id":9,"name":"VariableDeclaration","src":"354:29:0"},{"attributes":{"constant":false,"indexed":true,"name":"newOwner","scope":13,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":10,"name":"ElementaryTypeName","src":"389:7:0"}],"id":11,"name":"VariableDeclaration","src":"389:24:0"}],"id":12,"name":"ParameterList","src":"348:69:0"}],"id":13,"name":"EventDefinition","src":"322:96:0"},{"attributes":{"constant":false,"documentation":"@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":14,"name":"ParameterList","src":"550:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":15,"name":"ParameterList","src":"560:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":16,"name":"Identifier","src":"566:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":17,"name":"Identifier","src":"574:3:0"}],"id":18,"name":"MemberAccess","src":"574:10:0"}],"id":19,"name":"Assignment","src":"566:18:0"}],"id":20,"name":"ExpressionStatement","src":"566:18:0"}],"id":21,"name":"Block","src":"560:29:0"}],"id":22,"name":"FunctionDefinition","src":"539:50:0"},{"attributes":{"documentation":"@dev Throws if called by any account other than the owner.","name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":23,"name":"ParameterList","src":"687:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":24,"name":"Identifier","src":"696:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":25,"name":"Identifier","src":"704:3:0"}],"id":26,"name":"MemberAccess","src":"704:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":27,"name":"Identifier","src":"718:5:0"}],"id":28,"name":"BinaryOperation","src":"704:19:0"}],"id":29,"name":"FunctionCall","src":"696:28:0"}],"id":30,"name":"ExpressionStatement","src":"696:28:0"},{"id":31,"name":"PlaceholderStatement","src":"730:1:0"}],"id":32,"name":"Block","src":"690:46:0"}],"id":33,"name":"ModifierDefinition","src":"669:67:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.","implemented":true,"isConstructor":false,"name":"renounceOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":34,"name":"ParameterList","src":"1026:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":37,"name":"ParameterList","src":"1046:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":35,"name":"Identifier","src":"1036:9:0"}],"id":36,"name":"ModifierInvocation","src":"1036:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"function (address)","value":"OwnershipRenounced"},"id":38,"name":"Identifier","src":"1057:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":39,"name":"Identifier","src":"1076:5:0"}],"id":40,"name":"FunctionCall","src":"1057:25:0"}],"id":41,"name":"EmitStatement","src":"1052:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":42,"name":"Identifier","src":"1088:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":43,"name":"ElementaryTypeNameExpression","src":"1096:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":44,"name":"Literal","src":"1104:1:0"}],"id":45,"name":"FunctionCall","src":"1096:10:0"}],"id":46,"name":"Assignment","src":"1088:18:0"}],"id":47,"name":"ExpressionStatement","src":"1088:18:0"}],"id":48,"name":"Block","src":"1046:65:0"}],"id":49,"name":"FunctionDefinition","src":"1000:111:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":61,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":50,"name":"ElementaryTypeName","src":"1300:7:0"}],"id":51,"name":"VariableDeclaration","src":"1300:17:0"}],"id":52,"name":"ParameterList","src":"1299:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":55,"name":"ParameterList","src":"1336:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":53,"name":"Identifier","src":"1326:9:0"}],"id":54,"name":"ModifierInvocation","src":"1326:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":84,"type":"function (address)","value":"_transferOwnership"},"id":56,"name":"Identifier","src":"1342:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":51,"type":"address","value":"_newOwner"},"id":57,"name":"Identifier","src":"1361:9:0"}],"id":58,"name":"FunctionCall","src":"1342:29:0"}],"id":59,"name":"ExpressionStatement","src":"1342:29:0"}],"id":60,"name":"Block","src":"1336:40:0"}],"id":61,"name":"FunctionDefinition","src":"1273:103:0"},{"attributes":{"constant":false,"documentation":"@dev Transfers control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"_transferOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":84,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":62,"name":"ElementaryTypeName","src":"1539:7:0"}],"id":63,"name":"VariableDeclaration","src":"1539:17:0"}],"id":64,"name":"ParameterList","src":"1538:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":65,"name":"ParameterList","src":"1567:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":66,"name":"Identifier","src":"1573:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":67,"name":"Identifier","src":"1581:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":68,"name":"ElementaryTypeNameExpression","src":"1594:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":69,"name":"Literal","src":"1602:1:0"}],"id":70,"name":"FunctionCall","src":"1594:10:0"}],"id":71,"name":"BinaryOperation","src":"1581:23:0"}],"id":72,"name":"FunctionCall","src":"1573:32:0"}],"id":73,"name":"ExpressionStatement","src":"1573:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"function (address,address)","value":"OwnershipTransferred"},"id":74,"name":"Identifier","src":"1616:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":75,"name":"Identifier","src":"1637:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":76,"name":"Identifier","src":"1644:9:0"}],"id":77,"name":"FunctionCall","src":"1616:38:0"}],"id":78,"name":"EmitStatement","src":"1611:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":79,"name":"Identifier","src":"1660:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":80,"name":"Identifier","src":"1668:9:0"}],"id":81,"name":"Assignment","src":"1660:17:0"}],"id":82,"name":"ExpressionStatement","src":"1660:17:0"}],"id":83,"name":"Block","src":"1567:115:0"}],"id":84,"name":"FunctionDefinition","src":"1511:171:0"}],"id":85,"name":"ContractDefinition","src":"216:1468:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title ERC20Basic\n@dev Simpler version of ERC20 interface\nSee https://github.com/ethereum/EIPs/issues/179","fullyImplemented":false,"linearizedBaseContracts":[115],"name":"ERC20Basic","scope":3119},"children":[{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":115,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":86,"name":"ParameterList","src":"1853:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":90,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":87,"name":"ElementaryTypeName","src":"1877:7:0"}],"id":88,"name":"VariableDeclaration","src":"1877:7:0"}],"id":89,"name":"ParameterList","src":"1876:9:0"}],"id":90,"name":"FunctionDefinition","src":"1833:53:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":115,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"who","scope":97,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":91,"name":"ElementaryTypeName","src":"1908:7:0"}],"id":92,"name":"VariableDeclaration","src":"1908:11:0"}],"id":93,"name":"ParameterList","src":"1907:13:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":97,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":94,"name":"ElementaryTypeName","src":"1942:7:0"}],"id":95,"name":"VariableDeclaration","src":"1942:7:0"}],"id":96,"name":"ParameterList","src":"1941:9:0"}],"id":97,"name":"FunctionDefinition","src":"1889:62:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":115,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":106,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":98,"name":"ElementaryTypeName","src":"1972:7:0"}],"id":99,"name":"VariableDeclaration","src":"1972:10:0"},{"attributes":{"constant":false,"name":"value","scope":106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":100,"name":"ElementaryTypeName","src":"1984:7:0"}],"id":101,"name":"VariableDeclaration","src":"1984:13:0"}],"id":102,"name":"ParameterList","src":"1971:27:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":106,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":103,"name":"ElementaryTypeName","src":"2015:4:0"}],"id":104,"name":"VariableDeclaration","src":"2015:4:0"}],"id":105,"name":"ParameterList","src":"2014:6:0"}],"id":106,"name":"FunctionDefinition","src":"1954:67:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":114,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":107,"name":"ElementaryTypeName","src":"2039:7:0"}],"id":108,"name":"VariableDeclaration","src":"2039:20:0"},{"attributes":{"constant":false,"indexed":true,"name":"to","scope":114,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":109,"name":"ElementaryTypeName","src":"2061:7:0"}],"id":110,"name":"VariableDeclaration","src":"2061:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":114,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":111,"name":"ElementaryTypeName","src":"2081:7:0"}],"id":112,"name":"VariableDeclaration","src":"2081:13:0"}],"id":113,"name":"ParameterList","src":"2038:57:0"}],"id":114,"name":"EventDefinition","src":"2024:72:0"}],"id":115,"name":"ContractDefinition","src":"1809:289:0"},{"attributes":{"contractDependencies":[115],"contractKind":"contract","documentation":"@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20","fullyImplemented":false,"linearizedBaseContracts":[155,115],"name":"ERC20","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":115,"type":"contract ERC20Basic"},"id":116,"name":"UserDefinedTypeName","src":"2207:10:0"}],"id":117,"name":"InheritanceSpecifier","src":"2207:10:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":155,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"owner","scope":126,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":118,"name":"ElementaryTypeName","src":"2241:7:0"}],"id":119,"name":"VariableDeclaration","src":"2241:13:0"},{"attributes":{"constant":false,"name":"spender","scope":126,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":120,"name":"ElementaryTypeName","src":"2256:7:0"}],"id":121,"name":"VariableDeclaration","src":"2256:15:0"}],"id":122,"name":"ParameterList","src":"2240:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":126,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":123,"name":"ElementaryTypeName","src":"2298:7:0"}],"id":124,"name":"VariableDeclaration","src":"2298:7:0"}],"id":125,"name":"ParameterList","src":"2297:9:0"}],"id":126,"name":"FunctionDefinition","src":"2222:85:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":155,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":137,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":127,"name":"ElementaryTypeName","src":"2333:7:0"}],"id":128,"name":"VariableDeclaration","src":"2333:12:0"},{"attributes":{"constant":false,"name":"to","scope":137,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":129,"name":"ElementaryTypeName","src":"2347:7:0"}],"id":130,"name":"VariableDeclaration","src":"2347:10:0"},{"attributes":{"constant":false,"name":"value","scope":137,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":131,"name":"ElementaryTypeName","src":"2359:7:0"}],"id":132,"name":"VariableDeclaration","src":"2359:13:0"}],"id":133,"name":"ParameterList","src":"2332:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":137,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":134,"name":"ElementaryTypeName","src":"2394:4:0"}],"id":135,"name":"VariableDeclaration","src":"2394:4:0"}],"id":136,"name":"ParameterList","src":"2393:6:0"}],"id":137,"name":"FunctionDefinition","src":"2311:89:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":155,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":146,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":138,"name":"ElementaryTypeName","src":"2421:7:0"}],"id":139,"name":"VariableDeclaration","src":"2421:15:0"},{"attributes":{"constant":false,"name":"value","scope":146,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":140,"name":"ElementaryTypeName","src":"2438:7:0"}],"id":141,"name":"VariableDeclaration","src":"2438:13:0"}],"id":142,"name":"ParameterList","src":"2420:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":146,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":143,"name":"ElementaryTypeName","src":"2469:4:0"}],"id":144,"name":"VariableDeclaration","src":"2469:4:0"}],"id":145,"name":"ParameterList","src":"2468:6:0"}],"id":146,"name":"FunctionDefinition","src":"2404:71:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"owner","scope":154,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":147,"name":"ElementaryTypeName","src":"2498:7:0"}],"id":148,"name":"VariableDeclaration","src":"2498:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"spender","scope":154,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":149,"name":"ElementaryTypeName","src":"2525:7:0"}],"id":150,"name":"VariableDeclaration","src":"2525:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":154,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":151,"name":"ElementaryTypeName","src":"2554:7:0"}],"id":152,"name":"VariableDeclaration","src":"2554:13:0"}],"id":153,"name":"ParameterList","src":"2492:79:0"}],"id":154,"name":"EventDefinition","src":"2478:94:0"}],"id":155,"name":"ContractDefinition","src":"2189:385:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title SafeMath\n@dev Math operations with safety checks that throw on error","fullyImplemented":true,"linearizedBaseContracts":[247],"name":"SafeMath","scope":3119},"children":[{"attributes":{"constant":true,"documentation":"@dev Multiplies two numbers, throws on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mul","payable":false,"scope":247,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":156,"name":"ElementaryTypeName","src":"2765:7:0"}],"id":157,"name":"VariableDeclaration","src":"2765:9:0"},{"attributes":{"constant":false,"name":"b","scope":188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":158,"name":"ElementaryTypeName","src":"2776:7:0"}],"id":159,"name":"VariableDeclaration","src":"2776:9:0"}],"id":160,"name":"ParameterList","src":"2764:22:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":188,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":161,"name":"ElementaryTypeName","src":"2810:7:0"}],"id":162,"name":"VariableDeclaration","src":"2810:9:0"}],"id":163,"name":"ParameterList","src":"2809:11:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":157,"type":"uint256","value":"a"},"id":164,"name":"Identifier","src":"3036:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":165,"name":"Literal","src":"3041:1:0"}],"id":166,"name":"BinaryOperation","src":"3036:6:0"},{"children":[{"attributes":{"functionReturnParameters":163},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":167,"name":"Literal","src":"3059:1:0"}],"id":168,"name":"Return","src":"3052:8:0"}],"id":169,"name":"Block","src":"3044:23:0"}],"id":170,"name":"IfStatement","src":"3032:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":162,"type":"uint256","value":"c"},"id":171,"name":"Identifier","src":"3073:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":157,"type":"uint256","value":"a"},"id":172,"name":"Identifier","src":"3077:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":159,"type":"uint256","value":"b"},"id":173,"name":"Identifier","src":"3081:1:0"}],"id":174,"name":"BinaryOperation","src":"3077:5:0"}],"id":175,"name":"Assignment","src":"3073:9:0"}],"id":176,"name":"ExpressionStatement","src":"3073:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":3122,"type":"function (bool) pure","value":"assert"},"id":177,"name":"Identifier","src":"3088:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":162,"type":"uint256","value":"c"},"id":178,"name":"Identifier","src":"3095:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":157,"type":"uint256","value":"a"},"id":179,"name":"Identifier","src":"3099:1:0"}],"id":180,"name":"BinaryOperation","src":"3095:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":159,"type":"uint256","value":"b"},"id":181,"name":"Identifier","src":"3104:1:0"}],"id":182,"name":"BinaryOperation","src":"3095:10:0"}],"id":183,"name":"FunctionCall","src":"3088:18:0"}],"id":184,"name":"ExpressionStatement","src":"3088:18:0"},{"attributes":{"functionReturnParameters":163},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":162,"type":"uint256","value":"c"},"id":185,"name":"Identifier","src":"3119:1:0"}],"id":186,"name":"Return","src":"3112:8:0"}],"id":187,"name":"Block","src":"2821:304:0"}],"id":188,"name":"FunctionDefinition","src":"2752:373:0"},{"attributes":{"constant":true,"documentation":"@dev Integer division of two numbers, truncating the quotient.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"div","payable":false,"scope":247,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":202,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":189,"name":"ElementaryTypeName","src":"3220:7:0"}],"id":190,"name":"VariableDeclaration","src":"3220:9:0"},{"attributes":{"constant":false,"name":"b","scope":202,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":191,"name":"ElementaryTypeName","src":"3231:7:0"}],"id":192,"name":"VariableDeclaration","src":"3231:9:0"}],"id":193,"name":"ParameterList","src":"3219:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":202,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":194,"name":"ElementaryTypeName","src":"3265:7:0"}],"id":195,"name":"VariableDeclaration","src":"3265:7:0"}],"id":196,"name":"ParameterList","src":"3264:9:0"},{"children":[{"attributes":{"functionReturnParameters":196},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":190,"type":"uint256","value":"a"},"id":197,"name":"Identifier","src":"3469:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":192,"type":"uint256","value":"b"},"id":198,"name":"Identifier","src":"3473:1:0"}],"id":199,"name":"BinaryOperation","src":"3469:5:0"}],"id":200,"name":"Return","src":"3462:12:0"}],"id":201,"name":"Block","src":"3274:205:0"}],"id":202,"name":"FunctionDefinition","src":"3207:272:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).","implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":247,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":222,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":203,"name":"ElementaryTypeName","src":"3604:7:0"}],"id":204,"name":"VariableDeclaration","src":"3604:9:0"},{"attributes":{"constant":false,"name":"b","scope":222,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":205,"name":"ElementaryTypeName","src":"3615:7:0"}],"id":206,"name":"VariableDeclaration","src":"3615:9:0"}],"id":207,"name":"ParameterList","src":"3603:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":222,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":208,"name":"ElementaryTypeName","src":"3649:7:0"}],"id":209,"name":"VariableDeclaration","src":"3649:7:0"}],"id":210,"name":"ParameterList","src":"3648:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":3122,"type":"function (bool) pure","value":"assert"},"id":211,"name":"Identifier","src":"3664:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":206,"type":"uint256","value":"b"},"id":212,"name":"Identifier","src":"3671:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":204,"type":"uint256","value":"a"},"id":213,"name":"Identifier","src":"3676:1:0"}],"id":214,"name":"BinaryOperation","src":"3671:6:0"}],"id":215,"name":"FunctionCall","src":"3664:14:0"}],"id":216,"name":"ExpressionStatement","src":"3664:14:0"},{"attributes":{"functionReturnParameters":210},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":204,"type":"uint256","value":"a"},"id":217,"name":"Identifier","src":"3691:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":206,"type":"uint256","value":"b"},"id":218,"name":"Identifier","src":"3695:1:0"}],"id":219,"name":"BinaryOperation","src":"3691:5:0"}],"id":220,"name":"Return","src":"3684:12:0"}],"id":221,"name":"Block","src":"3658:43:0"}],"id":222,"name":"FunctionDefinition","src":"3591:110:0"},{"attributes":{"constant":true,"documentation":"@dev Adds two numbers, throws on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":247,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":223,"name":"ElementaryTypeName","src":"3776:7:0"}],"id":224,"name":"VariableDeclaration","src":"3776:9:0"},{"attributes":{"constant":false,"name":"b","scope":246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":225,"name":"ElementaryTypeName","src":"3787:7:0"}],"id":226,"name":"VariableDeclaration","src":"3787:9:0"}],"id":227,"name":"ParameterList","src":"3775:22:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":228,"name":"ElementaryTypeName","src":"3821:7:0"}],"id":229,"name":"VariableDeclaration","src":"3821:9:0"}],"id":230,"name":"ParameterList","src":"3820:11:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":229,"type":"uint256","value":"c"},"id":231,"name":"Identifier","src":"3838:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":224,"type":"uint256","value":"a"},"id":232,"name":"Identifier","src":"3842:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":226,"type":"uint256","value":"b"},"id":233,"name":"Identifier","src":"3846:1:0"}],"id":234,"name":"BinaryOperation","src":"3842:5:0"}],"id":235,"name":"Assignment","src":"3838:9:0"}],"id":236,"name":"ExpressionStatement","src":"3838:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":3122,"type":"function (bool) pure","value":"assert"},"id":237,"name":"Identifier","src":"3853:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":229,"type":"uint256","value":"c"},"id":238,"name":"Identifier","src":"3860:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":224,"type":"uint256","value":"a"},"id":239,"name":"Identifier","src":"3865:1:0"}],"id":240,"name":"BinaryOperation","src":"3860:6:0"}],"id":241,"name":"FunctionCall","src":"3853:14:0"}],"id":242,"name":"ExpressionStatement","src":"3853:14:0"},{"attributes":{"functionReturnParameters":230},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":229,"type":"uint256","value":"c"},"id":243,"name":"Identifier","src":"3880:1:0"}],"id":244,"name":"Return","src":"3873:8:0"}],"id":245,"name":"Block","src":"3832:54:0"}],"id":246,"name":"FunctionDefinition","src":"3763:123:0"}],"id":247,"name":"ContractDefinition","src":"2666:1222:0"},{"attributes":{"contractDependencies":[115],"contractKind":"contract","documentation":"@title Basic token\n@dev Basic version of StandardToken, with no allowances.","fullyImplemented":true,"linearizedBaseContracts":[339,115],"name":"BasicToken","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":115,"type":"contract ERC20Basic"},"id":248,"name":"UserDefinedTypeName","src":"4003:10:0"}],"id":249,"name":"InheritanceSpecifier","src":"4003:10:0"},{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":247,"type":"library SafeMath"},"id":250,"name":"UserDefinedTypeName","src":"4024:8:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":251,"name":"ElementaryTypeName","src":"4037:7:0"}],"id":252,"name":"UsingForDirective","src":"4018:27:0"},{"attributes":{"constant":false,"name":"balances","scope":339,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":253,"name":"ElementaryTypeName","src":"4057:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":254,"name":"ElementaryTypeName","src":"4068:7:0"}],"id":255,"name":"Mapping","src":"4049:27:0"}],"id":256,"name":"VariableDeclaration","src":"4049:36:0"},{"attributes":{"constant":false,"name":"totalSupply_","scope":339,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":257,"name":"ElementaryTypeName","src":"4090:7:0"}],"id":258,"name":"VariableDeclaration","src":"4090:20:0"},{"attributes":{"constant":true,"documentation":"@dev Total number of tokens in existence","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":339,"stateMutability":"view","superFunction":90,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":259,"name":"ParameterList","src":"4191:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":266,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":260,"name":"ElementaryTypeName","src":"4215:7:0"}],"id":261,"name":"VariableDeclaration","src":"4215:7:0"}],"id":262,"name":"ParameterList","src":"4214:9:0"},{"children":[{"attributes":{"functionReturnParameters":262},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":258,"type":"uint256","value":"totalSupply_"},"id":263,"name":"Identifier","src":"4237:12:0"}],"id":264,"name":"Return","src":"4230:19:0"}],"id":265,"name":"Block","src":"4224:30:0"}],"id":266,"name":"FunctionDefinition","src":"4171:83:0"},{"attributes":{"constant":false,"documentation":"@dev Transfer token for a specified address\n@param _to The address to transfer to.\n@param _value The amount to be transferred.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":339,"stateMutability":"nonpayable","superFunction":106,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":326,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":267,"name":"ElementaryTypeName","src":"4426:7:0"}],"id":268,"name":"VariableDeclaration","src":"4426:11:0"},{"attributes":{"constant":false,"name":"_value","scope":326,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":269,"name":"ElementaryTypeName","src":"4439:7:0"}],"id":270,"name":"VariableDeclaration","src":"4439:14:0"}],"id":271,"name":"ParameterList","src":"4425:29:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":326,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":272,"name":"ElementaryTypeName","src":"4471:4:0"}],"id":273,"name":"VariableDeclaration","src":"4471:4:0"}],"id":274,"name":"ParameterList","src":"4470:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":275,"name":"Identifier","src":"4483:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"address","value":"_to"},"id":276,"name":"Identifier","src":"4491:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":277,"name":"ElementaryTypeNameExpression","src":"4498:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":278,"name":"Literal","src":"4506:1:0"}],"id":279,"name":"FunctionCall","src":"4498:10:0"}],"id":280,"name":"BinaryOperation","src":"4491:17:0"}],"id":281,"name":"FunctionCall","src":"4483:26:0"}],"id":282,"name":"ExpressionStatement","src":"4483:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":283,"name":"Identifier","src":"4515:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"uint256","value":"_value"},"id":284,"name":"Identifier","src":"4523:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":285,"name":"Identifier","src":"4533:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":286,"name":"Identifier","src":"4542:3:0"}],"id":287,"name":"MemberAccess","src":"4542:10:0"}],"id":288,"name":"IndexAccess","src":"4533:20:0"}],"id":289,"name":"BinaryOperation","src":"4523:30:0"}],"id":290,"name":"FunctionCall","src":"4515:39:0"}],"id":291,"name":"ExpressionStatement","src":"4515:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":292,"name":"Identifier","src":"4561:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":293,"name":"Identifier","src":"4570:3:0"}],"id":294,"name":"MemberAccess","src":"4570:10:0"}],"id":295,"name":"IndexAccess","src":"4561:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":296,"name":"Identifier","src":"4584:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":297,"name":"Identifier","src":"4593:3:0"}],"id":298,"name":"MemberAccess","src":"4593:10:0"}],"id":299,"name":"IndexAccess","src":"4584:20:0"}],"id":300,"name":"MemberAccess","src":"4584:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"uint256","value":"_value"},"id":301,"name":"Identifier","src":"4609:6:0"}],"id":302,"name":"FunctionCall","src":"4584:32:0"}],"id":303,"name":"Assignment","src":"4561:55:0"}],"id":304,"name":"ExpressionStatement","src":"4561:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":305,"name":"Identifier","src":"4622:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"address","value":"_to"},"id":306,"name":"Identifier","src":"4631:3:0"}],"id":307,"name":"IndexAccess","src":"4622:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":246,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":308,"name":"Identifier","src":"4638:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"address","value":"_to"},"id":309,"name":"Identifier","src":"4647:3:0"}],"id":310,"name":"IndexAccess","src":"4638:13:0"}],"id":311,"name":"MemberAccess","src":"4638:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"uint256","value":"_value"},"id":312,"name":"Identifier","src":"4656:6:0"}],"id":313,"name":"FunctionCall","src":"4638:25:0"}],"id":314,"name":"Assignment","src":"4622:41:0"}],"id":315,"name":"ExpressionStatement","src":"4622:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":316,"name":"Identifier","src":"4674:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":317,"name":"Identifier","src":"4683:3:0"}],"id":318,"name":"MemberAccess","src":"4683:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"address","value":"_to"},"id":319,"name":"Identifier","src":"4695:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"uint256","value":"_value"},"id":320,"name":"Identifier","src":"4700:6:0"}],"id":321,"name":"FunctionCall","src":"4674:33:0"}],"id":322,"name":"EmitStatement","src":"4669:38:0"},{"attributes":{"functionReturnParameters":274},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":323,"name":"Literal","src":"4720:4:0"}],"id":324,"name":"Return","src":"4713:11:0"}],"id":325,"name":"Block","src":"4477:252:0"}],"id":326,"name":"FunctionDefinition","src":"4408:321:0"},{"attributes":{"constant":true,"documentation":"@dev Gets the balance of the specified address.\n@param _owner The address to query the the balance of.\n@return An uint256 representing the amount owned by the passed address.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":339,"stateMutability":"view","superFunction":97,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":338,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":327,"name":"ElementaryTypeName","src":"4950:7:0"}],"id":328,"name":"VariableDeclaration","src":"4950:14:0"}],"id":329,"name":"ParameterList","src":"4949:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":338,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":330,"name":"ElementaryTypeName","src":"4987:7:0"}],"id":331,"name":"VariableDeclaration","src":"4987:7:0"}],"id":332,"name":"ParameterList","src":"4986:9:0"},{"children":[{"attributes":{"functionReturnParameters":332},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":333,"name":"Identifier","src":"5009:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":328,"type":"address","value":"_owner"},"id":334,"name":"Identifier","src":"5018:6:0"}],"id":335,"name":"IndexAccess","src":"5009:16:0"}],"id":336,"name":"Return","src":"5002:23:0"}],"id":337,"name":"Block","src":"4996:34:0"}],"id":338,"name":"FunctionDefinition","src":"4931:99:0"}],"id":339,"name":"ContractDefinition","src":"3980:1053:0"},{"attributes":{"contractDependencies":[115,155,339],"contractKind":"contract","documentation":"@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\nhttps://github.com/ethereum/EIPs/issues/20\nBased on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol","fullyImplemented":true,"linearizedBaseContracts":[582,339,155,115],"name":"StandardToken","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ERC20","referencedDeclaration":155,"type":"contract ERC20"},"id":340,"name":"UserDefinedTypeName","src":"5318:5:0"}],"id":341,"name":"InheritanceSpecifier","src":"5318:5:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BasicToken","referencedDeclaration":339,"type":"contract BasicToken"},"id":342,"name":"UserDefinedTypeName","src":"5325:10:0"}],"id":343,"name":"InheritanceSpecifier","src":"5325:10:0"},{"attributes":{"constant":false,"name":"allowed","scope":582,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":344,"name":"ElementaryTypeName","src":"5350:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":345,"name":"ElementaryTypeName","src":"5370:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":346,"name":"ElementaryTypeName","src":"5381:7:0"}],"id":347,"name":"Mapping","src":"5361:28:0"}],"id":348,"name":"Mapping","src":"5341:49:0"}],"id":349,"name":"VariableDeclaration","src":"5341:66:0"},{"attributes":{"constant":false,"documentation":"@dev Transfer tokens from one address to another\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint256 the amount of tokens to be transferred","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":137,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":435,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":350,"name":"ElementaryTypeName","src":"5711:7:0"}],"id":351,"name":"VariableDeclaration","src":"5711:13:0"},{"attributes":{"constant":false,"name":"_to","scope":435,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":352,"name":"ElementaryTypeName","src":"5730:7:0"}],"id":353,"name":"VariableDeclaration","src":"5730:11:0"},{"attributes":{"constant":false,"name":"_value","scope":435,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":354,"name":"ElementaryTypeName","src":"5747:7:0"}],"id":355,"name":"VariableDeclaration","src":"5747:14:0"}],"id":356,"name":"ParameterList","src":"5705:60:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":435,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":357,"name":"ElementaryTypeName","src":"5790:4:0"}],"id":358,"name":"VariableDeclaration","src":"5790:4:0"}],"id":359,"name":"ParameterList","src":"5789:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":360,"name":"Identifier","src":"5804:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":361,"name":"Identifier","src":"5812:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":362,"name":"ElementaryTypeNameExpression","src":"5819:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":363,"name":"Literal","src":"5827:1:0"}],"id":364,"name":"FunctionCall","src":"5819:10:0"}],"id":365,"name":"BinaryOperation","src":"5812:17:0"}],"id":366,"name":"FunctionCall","src":"5804:26:0"}],"id":367,"name":"ExpressionStatement","src":"5804:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":368,"name":"Identifier","src":"5836:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":369,"name":"Identifier","src":"5844:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":370,"name":"Identifier","src":"5854:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":371,"name":"Identifier","src":"5863:5:0"}],"id":372,"name":"IndexAccess","src":"5854:15:0"}],"id":373,"name":"BinaryOperation","src":"5844:25:0"}],"id":374,"name":"FunctionCall","src":"5836:34:0"}],"id":375,"name":"ExpressionStatement","src":"5836:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":376,"name":"Identifier","src":"5876:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":377,"name":"Identifier","src":"5884:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":378,"name":"Identifier","src":"5894:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":379,"name":"Identifier","src":"5902:5:0"}],"id":380,"name":"IndexAccess","src":"5894:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":381,"name":"Identifier","src":"5909:3:0"}],"id":382,"name":"MemberAccess","src":"5909:10:0"}],"id":383,"name":"IndexAccess","src":"5894:26:0"}],"id":384,"name":"BinaryOperation","src":"5884:36:0"}],"id":385,"name":"FunctionCall","src":"5876:45:0"}],"id":386,"name":"ExpressionStatement","src":"5876:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":387,"name":"Identifier","src":"5928:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":388,"name":"Identifier","src":"5937:5:0"}],"id":389,"name":"IndexAccess","src":"5928:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":390,"name":"Identifier","src":"5946:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":391,"name":"Identifier","src":"5955:5:0"}],"id":392,"name":"IndexAccess","src":"5946:15:0"}],"id":393,"name":"MemberAccess","src":"5946:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":394,"name":"Identifier","src":"5966:6:0"}],"id":395,"name":"FunctionCall","src":"5946:27:0"}],"id":396,"name":"Assignment","src":"5928:45:0"}],"id":397,"name":"ExpressionStatement","src":"5928:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":398,"name":"Identifier","src":"5979:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":399,"name":"Identifier","src":"5988:3:0"}],"id":400,"name":"IndexAccess","src":"5979:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":246,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":401,"name":"Identifier","src":"5995:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":402,"name":"Identifier","src":"6004:3:0"}],"id":403,"name":"IndexAccess","src":"5995:13:0"}],"id":404,"name":"MemberAccess","src":"5995:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":405,"name":"Identifier","src":"6013:6:0"}],"id":406,"name":"FunctionCall","src":"5995:25:0"}],"id":407,"name":"Assignment","src":"5979:41:0"}],"id":408,"name":"ExpressionStatement","src":"5979:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":409,"name":"Identifier","src":"6026:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":410,"name":"Identifier","src":"6034:5:0"}],"id":413,"name":"IndexAccess","src":"6026:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":411,"name":"Identifier","src":"6041:3:0"}],"id":412,"name":"MemberAccess","src":"6041:10:0"}],"id":414,"name":"IndexAccess","src":"6026:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":415,"name":"Identifier","src":"6055:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":416,"name":"Identifier","src":"6063:5:0"}],"id":417,"name":"IndexAccess","src":"6055:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":418,"name":"Identifier","src":"6070:3:0"}],"id":419,"name":"MemberAccess","src":"6070:10:0"}],"id":420,"name":"IndexAccess","src":"6055:26:0"}],"id":421,"name":"MemberAccess","src":"6055:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":422,"name":"Identifier","src":"6086:6:0"}],"id":423,"name":"FunctionCall","src":"6055:38:0"}],"id":424,"name":"Assignment","src":"6026:67:0"}],"id":425,"name":"ExpressionStatement","src":"6026:67:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":426,"name":"Identifier","src":"6104:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":427,"name":"Identifier","src":"6113:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":428,"name":"Identifier","src":"6120:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":429,"name":"Identifier","src":"6125:6:0"}],"id":430,"name":"FunctionCall","src":"6104:28:0"}],"id":431,"name":"EmitStatement","src":"6099:33:0"},{"attributes":{"functionReturnParameters":359},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":432,"name":"Literal","src":"6145:4:0"}],"id":433,"name":"Return","src":"6138:11:0"}],"id":434,"name":"Block","src":"5798:356:0"}],"id":435,"name":"FunctionDefinition","src":"5684:470:0"},{"attributes":{"constant":false,"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\nBeware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":146,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":463,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":436,"name":"ElementaryTypeName","src":"6789:7:0"}],"id":437,"name":"VariableDeclaration","src":"6789:16:0"},{"attributes":{"constant":false,"name":"_value","scope":463,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":438,"name":"ElementaryTypeName","src":"6807:7:0"}],"id":439,"name":"VariableDeclaration","src":"6807:14:0"}],"id":440,"name":"ParameterList","src":"6788:34:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":463,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":441,"name":"ElementaryTypeName","src":"6839:4:0"}],"id":442,"name":"VariableDeclaration","src":"6839:4:0"}],"id":443,"name":"ParameterList","src":"6838:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":444,"name":"Identifier","src":"6851:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":445,"name":"Identifier","src":"6859:3:0"}],"id":446,"name":"MemberAccess","src":"6859:10:0"}],"id":448,"name":"IndexAccess","src":"6851:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":437,"type":"address","value":"_spender"},"id":447,"name":"Identifier","src":"6871:8:0"}],"id":449,"name":"IndexAccess","src":"6851:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":439,"type":"uint256","value":"_value"},"id":450,"name":"Identifier","src":"6883:6:0"}],"id":451,"name":"Assignment","src":"6851:38:0"}],"id":452,"name":"ExpressionStatement","src":"6851:38:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"function (address,address,uint256)","value":"Approval"},"id":453,"name":"Identifier","src":"6900:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":454,"name":"Identifier","src":"6909:3:0"}],"id":455,"name":"MemberAccess","src":"6909:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":437,"type":"address","value":"_spender"},"id":456,"name":"Identifier","src":"6921:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":439,"type":"uint256","value":"_value"},"id":457,"name":"Identifier","src":"6931:6:0"}],"id":458,"name":"FunctionCall","src":"6900:38:0"}],"id":459,"name":"EmitStatement","src":"6895:43:0"},{"attributes":{"functionReturnParameters":443},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":460,"name":"Literal","src":"6951:4:0"}],"id":461,"name":"Return","src":"6944:11:0"}],"id":462,"name":"Block","src":"6845:115:0"}],"id":463,"name":"FunctionDefinition","src":"6772:188:0"},{"attributes":{"constant":true,"documentation":"@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param _owner address The address which owns the funds.\n@param _spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":582,"stateMutability":"view","superFunction":126,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":479,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":464,"name":"ElementaryTypeName","src":"7303:7:0"}],"id":465,"name":"VariableDeclaration","src":"7303:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":479,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":466,"name":"ElementaryTypeName","src":"7323:7:0"}],"id":467,"name":"VariableDeclaration","src":"7323:16:0"}],"id":468,"name":"ParameterList","src":"7297:47:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":479,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":469,"name":"ElementaryTypeName","src":"7378:7:0"}],"id":470,"name":"VariableDeclaration","src":"7378:7:0"}],"id":471,"name":"ParameterList","src":"7377:9:0"},{"children":[{"attributes":{"functionReturnParameters":471},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":472,"name":"Identifier","src":"7402:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"address","value":"_owner"},"id":473,"name":"Identifier","src":"7410:6:0"}],"id":474,"name":"IndexAccess","src":"7402:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":467,"type":"address","value":"_spender"},"id":475,"name":"Identifier","src":"7418:8:0"}],"id":476,"name":"IndexAccess","src":"7402:25:0"}],"id":477,"name":"Return","src":"7395:32:0"}],"id":478,"name":"Block","src":"7389:43:0"}],"id":479,"name":"FunctionDefinition","src":"7279:153:0"},{"attributes":{"constant":false,"documentation":"@dev Increase the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed[_spender] == 0. To increment\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _addedValue The amount of tokens to increase the allowance by.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"increaseApproval","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":521,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":480,"name":"ElementaryTypeName","src":"7915:7:0"}],"id":481,"name":"VariableDeclaration","src":"7915:16:0"},{"attributes":{"constant":false,"name":"_addedValue","scope":521,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":482,"name":"ElementaryTypeName","src":"7937:7:0"}],"id":483,"name":"VariableDeclaration","src":"7937:19:0"}],"id":484,"name":"ParameterList","src":"7909:51:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":521,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":485,"name":"ElementaryTypeName","src":"7985:4:0"}],"id":486,"name":"VariableDeclaration","src":"7985:4:0"}],"id":487,"name":"ParameterList","src":"7984:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":488,"name":"Identifier","src":"7999:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":489,"name":"Identifier","src":"8007:3:0"}],"id":490,"name":"MemberAccess","src":"8007:10:0"}],"id":492,"name":"IndexAccess","src":"7999:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":491,"name":"Identifier","src":"8019:8:0"}],"id":493,"name":"IndexAccess","src":"7999:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":246,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":494,"name":"Identifier","src":"8039:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":495,"name":"Identifier","src":"8047:3:0"}],"id":496,"name":"MemberAccess","src":"8047:10:0"}],"id":497,"name":"IndexAccess","src":"8039:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":498,"name":"Identifier","src":"8059:8:0"}],"id":499,"name":"IndexAccess","src":"8039:29:0"}],"id":500,"name":"MemberAccess","src":"8039:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"uint256","value":"_addedValue"},"id":501,"name":"Identifier","src":"8073:11:0"}],"id":502,"name":"FunctionCall","src":"8039:46:0"}],"id":503,"name":"TupleExpression","src":"8031:55:0"}],"id":504,"name":"Assignment","src":"7999:87:0"}],"id":505,"name":"ExpressionStatement","src":"7999:87:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"function (address,address,uint256)","value":"Approval"},"id":506,"name":"Identifier","src":"8097:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":507,"name":"Identifier","src":"8106:3:0"}],"id":508,"name":"MemberAccess","src":"8106:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":509,"name":"Identifier","src":"8118:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":510,"name":"Identifier","src":"8128:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":511,"name":"Identifier","src":"8136:3:0"}],"id":512,"name":"MemberAccess","src":"8136:10:0"}],"id":513,"name":"IndexAccess","src":"8128:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":514,"name":"Identifier","src":"8148:8:0"}],"id":515,"name":"IndexAccess","src":"8128:29:0"}],"id":516,"name":"FunctionCall","src":"8097:61:0"}],"id":517,"name":"EmitStatement","src":"8092:66:0"},{"attributes":{"functionReturnParameters":487},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":518,"name":"Literal","src":"8171:4:0"}],"id":519,"name":"Return","src":"8164:11:0"}],"id":520,"name":"Block","src":"7993:187:0"}],"id":521,"name":"FunctionDefinition","src":"7884:296:0"},{"attributes":{"constant":false,"documentation":"@dev Decrease the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed[_spender] == 0. To decrement\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _subtractedValue The amount of tokens to decrease the allowance by.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"decreaseApproval","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":581,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":522,"name":"ElementaryTypeName","src":"8668:7:0"}],"id":523,"name":"VariableDeclaration","src":"8668:16:0"},{"attributes":{"constant":false,"name":"_subtractedValue","scope":581,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":524,"name":"ElementaryTypeName","src":"8690:7:0"}],"id":525,"name":"VariableDeclaration","src":"8690:24:0"}],"id":526,"name":"ParameterList","src":"8662:56:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":581,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":527,"name":"ElementaryTypeName","src":"8743:4:0"}],"id":528,"name":"VariableDeclaration","src":"8743:4:0"}],"id":529,"name":"ParameterList","src":"8742:6:0"},{"children":[{"attributes":{"assignments":[531]},"children":[{"attributes":{"constant":false,"name":"oldValue","scope":581,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":530,"name":"ElementaryTypeName","src":"8757:7:0"}],"id":531,"name":"VariableDeclaration","src":"8757:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":532,"name":"Identifier","src":"8776:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":533,"name":"Identifier","src":"8784:3:0"}],"id":534,"name":"MemberAccess","src":"8784:10:0"}],"id":535,"name":"IndexAccess","src":"8776:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":536,"name":"Identifier","src":"8796:8:0"}],"id":537,"name":"IndexAccess","src":"8776:29:0"}],"id":538,"name":"VariableDeclarationStatement","src":"8757:48:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":525,"type":"uint256","value":"_subtractedValue"},"id":539,"name":"Identifier","src":"8815:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"uint256","value":"oldValue"},"id":540,"name":"Identifier","src":"8834:8:0"}],"id":541,"name":"BinaryOperation","src":"8815:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":542,"name":"Identifier","src":"8852:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":543,"name":"Identifier","src":"8860:3:0"}],"id":544,"name":"MemberAccess","src":"8860:10:0"}],"id":546,"name":"IndexAccess","src":"8852:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":545,"name":"Identifier","src":"8872:8:0"}],"id":547,"name":"IndexAccess","src":"8852:29:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":548,"name":"Literal","src":"8884:1:0"}],"id":549,"name":"Assignment","src":"8852:33:0"}],"id":550,"name":"ExpressionStatement","src":"8852:33:0"}],"id":551,"name":"Block","src":"8844:48:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":552,"name":"Identifier","src":"8906:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":553,"name":"Identifier","src":"8914:3:0"}],"id":554,"name":"MemberAccess","src":"8914:10:0"}],"id":556,"name":"IndexAccess","src":"8906:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":555,"name":"Identifier","src":"8926:8:0"}],"id":557,"name":"IndexAccess","src":"8906:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"uint256","value":"oldValue"},"id":558,"name":"Identifier","src":"8938:8:0"}],"id":559,"name":"MemberAccess","src":"8938:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":525,"type":"uint256","value":"_subtractedValue"},"id":560,"name":"Identifier","src":"8951:16:0"}],"id":561,"name":"FunctionCall","src":"8938:30:0"}],"id":562,"name":"Assignment","src":"8906:62:0"}],"id":563,"name":"ExpressionStatement","src":"8906:62:0"}],"id":564,"name":"Block","src":"8898:77:0"}],"id":565,"name":"IfStatement","src":"8811:164:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":154,"type":"function (address,address,uint256)","value":"Approval"},"id":566,"name":"Identifier","src":"8985:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":567,"name":"Identifier","src":"8994:3:0"}],"id":568,"name":"MemberAccess","src":"8994:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":569,"name":"Identifier","src":"9006:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":570,"name":"Identifier","src":"9016:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":571,"name":"Identifier","src":"9024:3:0"}],"id":572,"name":"MemberAccess","src":"9024:10:0"}],"id":573,"name":"IndexAccess","src":"9016:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":574,"name":"Identifier","src":"9036:8:0"}],"id":575,"name":"IndexAccess","src":"9016:29:0"}],"id":576,"name":"FunctionCall","src":"8985:61:0"}],"id":577,"name":"EmitStatement","src":"8980:66:0"},{"attributes":{"functionReturnParameters":529},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":578,"name":"Literal","src":"9059:4:0"}],"id":579,"name":"Return","src":"9052:11:0"}],"id":580,"name":"Block","src":"8751:317:0"}],"id":581,"name":"FunctionDefinition","src":"8637:431:0"}],"id":582,"name":"ContractDefinition","src":"5292:3779:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.","fullyImplemented":true,"linearizedBaseContracts":[639,85],"name":"Pausable","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":583,"name":"UserDefinedTypeName","src":"9207:7:0"}],"id":584,"name":"InheritanceSpecifier","src":"9207:7:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Pause"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":585,"name":"ParameterList","src":"9230:2:0"}],"id":586,"name":"EventDefinition","src":"9219:14:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Unpause"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":587,"name":"ParameterList","src":"9249:2:0"}],"id":588,"name":"EventDefinition","src":"9236:16:0"},{"attributes":{"constant":false,"name":"paused","scope":639,"stateVariable":true,"storageLocation":"default","type":"bool","visibility":"public"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":589,"name":"ElementaryTypeName","src":"9256:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":590,"name":"Literal","src":"9277:5:0"}],"id":591,"name":"VariableDeclaration","src":"9256:26:0"},{"attributes":{"documentation":"@dev Modifier to make a function callable only when the contract is not paused.","name":"whenNotPaused","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":592,"name":"ParameterList","src":"9407:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":593,"name":"Identifier","src":"9416:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":594,"name":"Identifier","src":"9425:6:0"}],"id":595,"name":"UnaryOperation","src":"9424:7:0"}],"id":596,"name":"FunctionCall","src":"9416:16:0"}],"id":597,"name":"ExpressionStatement","src":"9416:16:0"},{"id":598,"name":"PlaceholderStatement","src":"9438:1:0"}],"id":599,"name":"Block","src":"9410:34:0"}],"id":600,"name":"ModifierDefinition","src":"9385:59:0"},{"attributes":{"documentation":"@dev Modifier to make a function callable only when the contract is paused.","name":"whenPaused","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":601,"name":"ParameterList","src":"9560:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":602,"name":"Identifier","src":"9569:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":603,"name":"Identifier","src":"9577:6:0"}],"id":604,"name":"FunctionCall","src":"9569:15:0"}],"id":605,"name":"ExpressionStatement","src":"9569:15:0"},{"id":606,"name":"PlaceholderStatement","src":"9590:1:0"}],"id":607,"name":"Block","src":"9563:33:0"}],"id":608,"name":"ModifierDefinition","src":"9541:55:0"},{"attributes":{"constant":false,"documentation":"@dev called by the owner to pause, triggers stopped state","implemented":true,"isConstructor":false,"name":"pause","payable":false,"scope":639,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":609,"name":"ParameterList","src":"9689:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":614,"name":"ParameterList","src":"9723:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":610,"name":"Identifier","src":"9692:9:0"}],"id":611,"name":"ModifierInvocation","src":"9692:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":612,"name":"Identifier","src":"9702:13:0"}],"id":613,"name":"ModifierInvocation","src":"9702:13:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":615,"name":"Identifier","src":"9729:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":616,"name":"Literal","src":"9738:4:0"}],"id":617,"name":"Assignment","src":"9729:13:0"}],"id":618,"name":"ExpressionStatement","src":"9729:13:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"function ()","value":"Pause"},"id":619,"name":"Identifier","src":"9753:5:0"}],"id":620,"name":"FunctionCall","src":"9753:7:0"}],"id":621,"name":"EmitStatement","src":"9748:12:0"}],"id":622,"name":"Block","src":"9723:42:0"}],"id":623,"name":"FunctionDefinition","src":"9675:90:0"},{"attributes":{"constant":false,"documentation":"@dev called by the owner to unpause, returns to normal state","implemented":true,"isConstructor":false,"name":"unpause","payable":false,"scope":639,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":624,"name":"ParameterList","src":"9863:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":629,"name":"ParameterList","src":"9894:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":625,"name":"Identifier","src":"9866:9:0"}],"id":626,"name":"ModifierInvocation","src":"9866:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":608,"type":"modifier ()","value":"whenPaused"},"id":627,"name":"Identifier","src":"9876:10:0"}],"id":628,"name":"ModifierInvocation","src":"9876:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":630,"name":"Identifier","src":"9900:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":631,"name":"Literal","src":"9909:5:0"}],"id":632,"name":"Assignment","src":"9900:14:0"}],"id":633,"name":"ExpressionStatement","src":"9900:14:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":588,"type":"function ()","value":"Unpause"},"id":634,"name":"Identifier","src":"9925:7:0"}],"id":635,"name":"FunctionCall","src":"9925:9:0"}],"id":636,"name":"EmitStatement","src":"9920:14:0"}],"id":637,"name":"Block","src":"9894:45:0"}],"id":638,"name":"FunctionDefinition","src":"9847:92:0"}],"id":639,"name":"ContractDefinition","src":"9186:755:0"},{"attributes":{"contractDependencies":[85,115,155,339,582,639],"contractKind":"contract","documentation":"@title Pausable token\n@dev StandardToken modified with pausable transfers.*","fullyImplemented":true,"linearizedBaseContracts":[737,639,85,582,339,155,115],"name":"PausableToken","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"StandardToken","referencedDeclaration":582,"type":"contract StandardToken"},"id":640,"name":"UserDefinedTypeName","src":"10059:13:0"}],"id":641,"name":"InheritanceSpecifier","src":"10059:13:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Pausable","referencedDeclaration":639,"type":"contract Pausable"},"id":642,"name":"UserDefinedTypeName","src":"10074:8:0"}],"id":643,"name":"InheritanceSpecifier","src":"10074:8:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"transfer","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":326,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":661,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":644,"name":"ElementaryTypeName","src":"10111:7:0"}],"id":645,"name":"VariableDeclaration","src":"10111:11:0"},{"attributes":{"constant":false,"name":"_value","scope":661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":646,"name":"ElementaryTypeName","src":"10128:7:0"}],"id":647,"name":"VariableDeclaration","src":"10128:14:0"}],"id":648,"name":"ParameterList","src":"10105:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":661,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":651,"name":"ElementaryTypeName","src":"10189:4:0"}],"id":652,"name":"VariableDeclaration","src":"10189:4:0"}],"id":653,"name":"ParameterList","src":"10188:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":649,"name":"Identifier","src":"10162:13:0"}],"id":650,"name":"ModifierInvocation","src":"10162:13:0"},{"children":[{"attributes":{"functionReturnParameters":653},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":326,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3161,"type":"contract super PausableToken","value":"super"},"id":654,"name":"Identifier","src":"10210:5:0"}],"id":655,"name":"MemberAccess","src":"10210:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":645,"type":"address","value":"_to"},"id":656,"name":"Identifier","src":"10225:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":647,"type":"uint256","value":"_value"},"id":657,"name":"Identifier","src":"10230:6:0"}],"id":658,"name":"FunctionCall","src":"10210:27:0"}],"id":659,"name":"Return","src":"10203:34:0"}],"id":660,"name":"Block","src":"10197:45:0"}],"id":661,"name":"FunctionDefinition","src":"10088:154:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"transferFrom","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":435,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":682,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":662,"name":"ElementaryTypeName","src":"10273:7:0"}],"id":663,"name":"VariableDeclaration","src":"10273:13:0"},{"attributes":{"constant":false,"name":"_to","scope":682,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":664,"name":"ElementaryTypeName","src":"10292:7:0"}],"id":665,"name":"VariableDeclaration","src":"10292:11:0"},{"attributes":{"constant":false,"name":"_value","scope":682,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":666,"name":"ElementaryTypeName","src":"10309:7:0"}],"id":667,"name":"VariableDeclaration","src":"10309:14:0"}],"id":668,"name":"ParameterList","src":"10267:60:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":682,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":671,"name":"ElementaryTypeName","src":"10370:4:0"}],"id":672,"name":"VariableDeclaration","src":"10370:4:0"}],"id":673,"name":"ParameterList","src":"10369:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":669,"name":"Identifier","src":"10343:13:0"}],"id":670,"name":"ModifierInvocation","src":"10343:13:0"},{"children":[{"attributes":{"functionReturnParameters":673},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":435,"type":"function (address,address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3161,"type":"contract super PausableToken","value":"super"},"id":674,"name":"Identifier","src":"10391:5:0"}],"id":675,"name":"MemberAccess","src":"10391:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":663,"type":"address","value":"_from"},"id":676,"name":"Identifier","src":"10410:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":665,"type":"address","value":"_to"},"id":677,"name":"Identifier","src":"10417:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":667,"type":"uint256","value":"_value"},"id":678,"name":"Identifier","src":"10422:6:0"}],"id":679,"name":"FunctionCall","src":"10391:38:0"}],"id":680,"name":"Return","src":"10384:45:0"}],"id":681,"name":"Block","src":"10378:56:0"}],"id":682,"name":"FunctionDefinition","src":"10246:188:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"approve","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":463,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":700,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":683,"name":"ElementaryTypeName","src":"10460:7:0"}],"id":684,"name":"VariableDeclaration","src":"10460:16:0"},{"attributes":{"constant":false,"name":"_value","scope":700,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":685,"name":"ElementaryTypeName","src":"10482:7:0"}],"id":686,"name":"VariableDeclaration","src":"10482:14:0"}],"id":687,"name":"ParameterList","src":"10454:46:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":700,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":690,"name":"ElementaryTypeName","src":"10543:4:0"}],"id":691,"name":"VariableDeclaration","src":"10543:4:0"}],"id":692,"name":"ParameterList","src":"10542:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":688,"name":"Identifier","src":"10516:13:0"}],"id":689,"name":"ModifierInvocation","src":"10516:13:0"},{"children":[{"attributes":{"functionReturnParameters":692},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"approve","referencedDeclaration":463,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3161,"type":"contract super PausableToken","value":"super"},"id":693,"name":"Identifier","src":"10564:5:0"}],"id":694,"name":"MemberAccess","src":"10564:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":684,"type":"address","value":"_spender"},"id":695,"name":"Identifier","src":"10578:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":686,"type":"uint256","value":"_value"},"id":696,"name":"Identifier","src":"10588:6:0"}],"id":697,"name":"FunctionCall","src":"10564:31:0"}],"id":698,"name":"Return","src":"10557:38:0"}],"id":699,"name":"Block","src":"10551:49:0"}],"id":700,"name":"FunctionDefinition","src":"10438:162:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"increaseApproval","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":521,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":718,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":701,"name":"ElementaryTypeName","src":"10635:7:0"}],"id":702,"name":"VariableDeclaration","src":"10635:16:0"},{"attributes":{"constant":false,"name":"_addedValue","scope":718,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":703,"name":"ElementaryTypeName","src":"10657:4:0"}],"id":704,"name":"VariableDeclaration","src":"10657:16:0"}],"id":705,"name":"ParameterList","src":"10629:48:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":718,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":708,"name":"ElementaryTypeName","src":"10720:4:0"}],"id":709,"name":"VariableDeclaration","src":"10720:12:0"}],"id":710,"name":"ParameterList","src":"10719:14:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":706,"name":"Identifier","src":"10693:13:0"}],"id":707,"name":"ModifierInvocation","src":"10693:13:0"},{"children":[{"attributes":{"functionReturnParameters":710},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"increaseApproval","referencedDeclaration":521,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3161,"type":"contract super PausableToken","value":"super"},"id":711,"name":"Identifier","src":"10749:5:0"}],"id":712,"name":"MemberAccess","src":"10749:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":702,"type":"address","value":"_spender"},"id":713,"name":"Identifier","src":"10772:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":704,"type":"uint256","value":"_addedValue"},"id":714,"name":"Identifier","src":"10782:11:0"}],"id":715,"name":"FunctionCall","src":"10749:45:0"}],"id":716,"name":"Return","src":"10742:52:0"}],"id":717,"name":"Block","src":"10736:63:0"}],"id":718,"name":"FunctionDefinition","src":"10604:195:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"decreaseApproval","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":581,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":736,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":719,"name":"ElementaryTypeName","src":"10834:7:0"}],"id":720,"name":"VariableDeclaration","src":"10834:16:0"},{"attributes":{"constant":false,"name":"_subtractedValue","scope":736,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":721,"name":"ElementaryTypeName","src":"10856:4:0"}],"id":722,"name":"VariableDeclaration","src":"10856:21:0"}],"id":723,"name":"ParameterList","src":"10828:53:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":736,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":726,"name":"ElementaryTypeName","src":"10924:4:0"}],"id":727,"name":"VariableDeclaration","src":"10924:12:0"}],"id":728,"name":"ParameterList","src":"10923:14:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":724,"name":"Identifier","src":"10897:13:0"}],"id":725,"name":"ModifierInvocation","src":"10897:13:0"},{"children":[{"attributes":{"functionReturnParameters":728},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"decreaseApproval","referencedDeclaration":581,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3161,"type":"contract super PausableToken","value":"super"},"id":729,"name":"Identifier","src":"10953:5:0"}],"id":730,"name":"MemberAccess","src":"10953:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":720,"type":"address","value":"_spender"},"id":731,"name":"Identifier","src":"10976:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":722,"type":"uint256","value":"_subtractedValue"},"id":732,"name":"Identifier","src":"10986:16:0"}],"id":733,"name":"FunctionCall","src":"10953:50:0"}],"id":734,"name":"Return","src":"10946:57:0"}],"id":735,"name":"Block","src":"10940:68:0"}],"id":736,"name":"FunctionDefinition","src":"10803:205:0"}],"id":737,"name":"ContractDefinition","src":"10033:977:0"},{"attributes":{"contractDependencies":[115,339],"contractKind":"contract","documentation":"@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).","fullyImplemented":true,"linearizedBaseContracts":[805,339,115],"name":"BurnableToken","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BasicToken","referencedDeclaration":339,"type":"contract BasicToken"},"id":738,"name":"UserDefinedTypeName","src":"11130:10:0"}],"id":739,"name":"InheritanceSpecifier","src":"11130:10:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Burn"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"burner","scope":745,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":740,"name":"ElementaryTypeName","src":"11157:7:0"}],"id":741,"name":"VariableDeclaration","src":"11157:22:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":745,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":742,"name":"ElementaryTypeName","src":"11181:7:0"}],"id":743,"name":"VariableDeclaration","src":"11181:13:0"}],"id":744,"name":"ParameterList","src":"11156:39:0"}],"id":745,"name":"EventDefinition","src":"11146:50:0"},{"attributes":{"constant":false,"documentation":"@dev Burns a specific amount of tokens.\n@param _value The amount of token to be burned.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"burn","payable":false,"scope":805,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":757,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":746,"name":"ElementaryTypeName","src":"11324:7:0"}],"id":747,"name":"VariableDeclaration","src":"11324:14:0"}],"id":748,"name":"ParameterList","src":"11323:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":749,"name":"ParameterList","src":"11347:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":804,"type":"function (address,uint256)","value":"_burn"},"id":750,"name":"Identifier","src":"11353:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":751,"name":"Identifier","src":"11359:3:0"}],"id":752,"name":"MemberAccess","src":"11359:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":747,"type":"uint256","value":"_value"},"id":753,"name":"Identifier","src":"11371:6:0"}],"id":754,"name":"FunctionCall","src":"11353:25:0"}],"id":755,"name":"ExpressionStatement","src":"11353:25:0"}],"id":756,"name":"Block","src":"11347:36:0"}],"id":757,"name":"FunctionDefinition","src":"11310:73:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"_burn","payable":false,"scope":805,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_who","scope":804,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":758,"name":"ElementaryTypeName","src":"11402:7:0"}],"id":759,"name":"VariableDeclaration","src":"11402:12:0"},{"attributes":{"constant":false,"name":"_value","scope":804,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":760,"name":"ElementaryTypeName","src":"11416:7:0"}],"id":761,"name":"VariableDeclaration","src":"11416:14:0"}],"id":762,"name":"ParameterList","src":"11401:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":763,"name":"ParameterList","src":"11441:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":764,"name":"Identifier","src":"11447:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":765,"name":"Identifier","src":"11455:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":766,"name":"Identifier","src":"11465:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":767,"name":"Identifier","src":"11474:4:0"}],"id":768,"name":"IndexAccess","src":"11465:14:0"}],"id":769,"name":"BinaryOperation","src":"11455:24:0"}],"id":770,"name":"FunctionCall","src":"11447:33:0"}],"id":771,"name":"ExpressionStatement","src":"11447:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":772,"name":"Identifier","src":"11658:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":773,"name":"Identifier","src":"11667:4:0"}],"id":774,"name":"IndexAccess","src":"11658:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":775,"name":"Identifier","src":"11675:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":776,"name":"Identifier","src":"11684:4:0"}],"id":777,"name":"IndexAccess","src":"11675:14:0"}],"id":778,"name":"MemberAccess","src":"11675:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":779,"name":"Identifier","src":"11694:6:0"}],"id":780,"name":"FunctionCall","src":"11675:26:0"}],"id":781,"name":"Assignment","src":"11658:43:0"}],"id":782,"name":"ExpressionStatement","src":"11658:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":258,"type":"uint256","value":"totalSupply_"},"id":783,"name":"Identifier","src":"11707:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":258,"type":"uint256","value":"totalSupply_"},"id":784,"name":"Identifier","src":"11722:12:0"}],"id":785,"name":"MemberAccess","src":"11722:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":786,"name":"Identifier","src":"11739:6:0"}],"id":787,"name":"FunctionCall","src":"11722:24:0"}],"id":788,"name":"Assignment","src":"11707:39:0"}],"id":789,"name":"ExpressionStatement","src":"11707:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":745,"type":"function (address,uint256)","value":"Burn"},"id":790,"name":"Identifier","src":"11757:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":791,"name":"Identifier","src":"11762:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":792,"name":"Identifier","src":"11768:6:0"}],"id":793,"name":"FunctionCall","src":"11757:18:0"}],"id":794,"name":"EmitStatement","src":"11752:23:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":795,"name":"Identifier","src":"11786:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":796,"name":"Identifier","src":"11795:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":797,"name":"ElementaryTypeNameExpression","src":"11801:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":798,"name":"Literal","src":"11809:1:0"}],"id":799,"name":"FunctionCall","src":"11801:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":800,"name":"Identifier","src":"11813:6:0"}],"id":801,"name":"FunctionCall","src":"11786:34:0"}],"id":802,"name":"EmitStatement","src":"11781:39:0"}],"id":803,"name":"Block","src":"11441:384:0"}],"id":804,"name":"FunctionDefinition","src":"11387:438:0"}],"id":805,"name":"ContractDefinition","src":"11104:723:0"},{"attributes":{"contractDependencies":[85,115,155,339,582,639,737,805],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[891,805,737,639,85,582,339,155,115],"name":"RepublicToken","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"PausableToken","referencedDeclaration":737,"type":"contract PausableToken"},"id":806,"name":"UserDefinedTypeName","src":"11855:13:0"}],"id":807,"name":"InheritanceSpecifier","src":"11855:13:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BurnableToken","referencedDeclaration":805,"type":"contract BurnableToken"},"id":808,"name":"UserDefinedTypeName","src":"11870:13:0"}],"id":809,"name":"InheritanceSpecifier","src":"11870:13:0"},{"attributes":{"constant":true,"name":"name","scope":891,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":810,"name":"ElementaryTypeName","src":"11891:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"52657075626c696320546f6b656e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"Republic Token\"","value":"Republic Token"},"id":811,"name":"Literal","src":"11921:16:0"}],"id":812,"name":"VariableDeclaration","src":"11891:46:0"},{"attributes":{"constant":true,"name":"symbol","scope":891,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":813,"name":"ElementaryTypeName","src":"11943:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"52454e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"REN\"","value":"REN"},"id":814,"name":"Literal","src":"11975:5:0"}],"id":815,"name":"VariableDeclaration","src":"11943:37:0"},{"attributes":{"constant":true,"name":"decimals","scope":891,"stateVariable":true,"storageLocation":"default","type":"uint8","visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":816,"name":"ElementaryTypeName","src":"11986:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":817,"name":"Literal","src":"12019:2:0"}],"id":818,"name":"VariableDeclaration","src":"11986:35:0"},{"attributes":{"constant":true,"name":"INITIAL_SUPPLY","scope":891,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":819,"name":"ElementaryTypeName","src":"12027:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"31303030303030303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1000000000","value":"1000000000"},"id":820,"name":"Literal","src":"12068:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":821,"name":"Literal","src":"12081:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":822,"name":"ElementaryTypeNameExpression","src":"12085:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":818,"type":"uint8","value":"decimals"},"id":823,"name":"Identifier","src":"12093:8:0"}],"id":824,"name":"FunctionCall","src":"12085:17:0"}],"id":825,"name":"BinaryOperation","src":"12081:21:0"}],"id":826,"name":"BinaryOperation","src":"12068:34:0"}],"id":827,"name":"VariableDeclaration","src":"12027:75:0"},{"attributes":{"constant":false,"documentation":"@notice The RepublicToken Constructor.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":891,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":828,"name":"ParameterList","src":"12167:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":829,"name":"ParameterList","src":"12177:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":258,"type":"uint256","value":"totalSupply_"},"id":830,"name":"Identifier","src":"12187:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":827,"type":"uint256","value":"INITIAL_SUPPLY"},"id":831,"name":"Identifier","src":"12202:14:0"}],"id":832,"name":"Assignment","src":"12187:29:0"}],"id":833,"name":"ExpressionStatement","src":"12187:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":834,"name":"Identifier","src":"12226:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":835,"name":"Identifier","src":"12235:3:0"}],"id":836,"name":"MemberAccess","src":"12235:10:0"}],"id":837,"name":"IndexAccess","src":"12226:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":827,"type":"uint256","value":"INITIAL_SUPPLY"},"id":838,"name":"Identifier","src":"12249:14:0"}],"id":839,"name":"Assignment","src":"12226:37:0"}],"id":840,"name":"ExpressionStatement","src":"12226:37:0"}],"id":841,"name":"Block","src":"12177:93:0"}],"id":842,"name":"FunctionDefinition","src":"12156:114:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"transferTokens","payable":false,"scope":891,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"beneficiary","scope":890,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":843,"name":"ElementaryTypeName","src":"12300:7:0"}],"id":844,"name":"VariableDeclaration","src":"12300:19:0"},{"attributes":{"constant":false,"name":"amount","scope":890,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":845,"name":"ElementaryTypeName","src":"12321:7:0"}],"id":846,"name":"VariableDeclaration","src":"12321:14:0"}],"id":847,"name":"ParameterList","src":"12299:37:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":890,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":850,"name":"ElementaryTypeName","src":"12363:4:0"}],"id":851,"name":"VariableDeclaration","src":"12363:4:0"}],"id":852,"name":"ParameterList","src":"12362:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":848,"name":"Identifier","src":"12344:9:0"}],"id":849,"name":"ModifierInvocation","src":"12344:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3136,"type":"function (bool) pure","value":"require"},"id":853,"name":"Identifier","src":"12421:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":854,"name":"Identifier","src":"12429:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":855,"name":"Literal","src":"12438:1:0"}],"id":856,"name":"BinaryOperation","src":"12429:10:0"}],"id":857,"name":"FunctionCall","src":"12421:19:0"}],"id":858,"name":"ExpressionStatement","src":"12421:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":859,"name":"Identifier","src":"12451:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":860,"name":"Identifier","src":"12460:5:0"}],"id":861,"name":"IndexAccess","src":"12451:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":862,"name":"Identifier","src":"12469:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":863,"name":"Identifier","src":"12478:5:0"}],"id":864,"name":"IndexAccess","src":"12469:15:0"}],"id":865,"name":"MemberAccess","src":"12469:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":866,"name":"Identifier","src":"12489:6:0"}],"id":867,"name":"FunctionCall","src":"12469:27:0"}],"id":868,"name":"Assignment","src":"12451:45:0"}],"id":869,"name":"ExpressionStatement","src":"12451:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":870,"name":"Identifier","src":"12506:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":844,"type":"address","value":"beneficiary"},"id":871,"name":"Identifier","src":"12515:11:0"}],"id":872,"name":"IndexAccess","src":"12506:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":246,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"mapping(address => uint256)","value":"balances"},"id":873,"name":"Identifier","src":"12530:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":844,"type":"address","value":"beneficiary"},"id":874,"name":"Identifier","src":"12539:11:0"}],"id":875,"name":"IndexAccess","src":"12530:21:0"}],"id":876,"name":"MemberAccess","src":"12530:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":877,"name":"Identifier","src":"12556:6:0"}],"id":878,"name":"FunctionCall","src":"12530:33:0"}],"id":879,"name":"Assignment","src":"12506:57:0"}],"id":880,"name":"ExpressionStatement","src":"12506:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":881,"name":"Identifier","src":"12578:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":882,"name":"Identifier","src":"12587:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":844,"type":"address","value":"beneficiary"},"id":883,"name":"Identifier","src":"12594:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":884,"name":"Identifier","src":"12607:6:0"}],"id":885,"name":"FunctionCall","src":"12578:36:0"}],"id":886,"name":"EmitStatement","src":"12573:41:0"},{"attributes":{"functionReturnParameters":852},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":887,"name":"Literal","src":"12632:4:0"}],"id":888,"name":"Return","src":"12625:11:0"}],"id":889,"name":"Block","src":"12369:274:0"}],"id":890,"name":"FunctionDefinition","src":"12276:367:0"}],"id":891,"name":"ContractDefinition","src":"11829:816:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@notice LinkedList is a library for a circular double linked list.","fullyImplemented":true,"linearizedBaseContracts":[1310],"name":"LinkedList","scope":3119},"children":[{"attributes":{"constant":true,"name":"NULL","scope":1310,"stateVariable":true,"storageLocation":"default","type":"address","visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":892,"name":"ElementaryTypeName","src":"12903:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":893,"name":"Literal","src":"12934:3:0"}],"id":894,"name":"VariableDeclaration","src":"12903:34:0"},{"attributes":{"canonicalName":"LinkedList.Node","name":"Node","scope":1310,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"inList","scope":901,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":895,"name":"ElementaryTypeName","src":"13191:4:0"}],"id":896,"name":"VariableDeclaration","src":"13191:11:0"},{"attributes":{"constant":false,"name":"previous","scope":901,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":897,"name":"ElementaryTypeName","src":"13212:7:0"}],"id":898,"name":"VariableDeclaration","src":"13212:16:0"},{"attributes":{"constant":false,"name":"next","scope":901,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":899,"name":"ElementaryTypeName","src":"13238:7:0"}],"id":900,"name":"VariableDeclaration","src":"13238:12:0"}],"id":901,"name":"StructDefinition","src":"13169:88:0"},{"attributes":{"canonicalName":"LinkedList.List","name":"List","scope":1310,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"list","scope":906,"stateVariable":false,"storageLocation":"default","type":"mapping(address => struct LinkedList.Node)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => struct LinkedList.Node)"},"children":[{"attributes":{"name":"address","type":"address"},"id":902,"name":"ElementaryTypeName","src":"13464:7:0"},{"attributes":{"contractScope":null,"name":"Node","referencedDeclaration":901,"type":"struct LinkedList.Node"},"id":903,"name":"UserDefinedTypeName","src":"13475:4:0"}],"id":904,"name":"Mapping","src":"13455:25:0"}],"id":905,"name":"VariableDeclaration","src":"13455:30:0"}],"id":906,"name":"StructDefinition","src":"13433:59:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a new node before an existing node.\n    * @param self The list being used.\n@param target The existing node in the list.\n@param newNode The next node to insert before the target.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"insertBefore","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":990,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":907,"name":"UserDefinedTypeName","src":"13752:4:0"}],"id":908,"name":"VariableDeclaration","src":"13752:17:0"},{"attributes":{"constant":false,"name":"target","scope":990,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":909,"name":"ElementaryTypeName","src":"13771:7:0"}],"id":910,"name":"VariableDeclaration","src":"13771:14:0"},{"attributes":{"constant":false,"name":"newNode","scope":990,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":911,"name":"ElementaryTypeName","src":"13787:7:0"}],"id":912,"name":"VariableDeclaration","src":"13787:15:0"}],"id":913,"name":"ParameterList","src":"13751:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":914,"name":"ParameterList","src":"13813:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2c74e95a6be5dfe792dfbbbe5a9581b9fa5a7198f656393c11fa5be17a7cfe4","typeString":"literal_string \"already in list\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":915,"name":"Identifier","src":"13823:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":916,"name":"Identifier","src":"13832:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":917,"name":"Identifier","src":"13841:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":918,"name":"Identifier","src":"13847:7:0"}],"id":919,"name":"FunctionCall","src":"13832:23:0"}],"id":920,"name":"UnaryOperation","src":"13831:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"616c726561647920696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"already in list\"","value":"already in list"},"id":921,"name":"Literal","src":"13857:17:0"}],"id":922,"name":"FunctionCall","src":"13823:52:0"}],"id":923,"name":"ExpressionStatement","src":"13823:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":924,"name":"Identifier","src":"13885:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":925,"name":"Identifier","src":"13893:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":926,"name":"Identifier","src":"13902:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":927,"name":"Identifier","src":"13908:6:0"}],"id":928,"name":"FunctionCall","src":"13893:22:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":929,"name":"Identifier","src":"13919:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":930,"name":"Identifier","src":"13929:4:0"}],"id":931,"name":"BinaryOperation","src":"13919:14:0"}],"id":932,"name":"BinaryOperation","src":"13893:40:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":933,"name":"Literal","src":"13935:13:0"}],"id":934,"name":"FunctionCall","src":"13885:64:0"}],"id":935,"name":"ExpressionStatement","src":"13885:64:0"},{"attributes":{"assignments":[937]},"children":[{"attributes":{"constant":false,"name":"prev","scope":990,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":936,"name":"ElementaryTypeName","src":"14021:7:0"}],"id":937,"name":"VariableDeclaration","src":"14021:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":938,"name":"Identifier","src":"14036:4:0"}],"id":939,"name":"MemberAccess","src":"14036:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":940,"name":"Identifier","src":"14046:6:0"}],"id":941,"name":"IndexAccess","src":"14036:17:0"}],"id":942,"name":"MemberAccess","src":"14036:26:0"}],"id":943,"name":"VariableDeclarationStatement","src":"14021:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":944,"name":"Identifier","src":"14073:4:0"}],"id":947,"name":"MemberAccess","src":"14073:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":946,"name":"Identifier","src":"14083:7:0"}],"id":948,"name":"IndexAccess","src":"14073:18:0"}],"id":949,"name":"MemberAccess","src":"14073:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":950,"name":"Identifier","src":"14099:6:0"}],"id":951,"name":"Assignment","src":"14073:32:0"}],"id":952,"name":"ExpressionStatement","src":"14073:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":953,"name":"Identifier","src":"14115:4:0"}],"id":956,"name":"MemberAccess","src":"14115:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":955,"name":"Identifier","src":"14125:7:0"}],"id":957,"name":"IndexAccess","src":"14115:18:0"}],"id":958,"name":"MemberAccess","src":"14115:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":937,"type":"address","value":"prev"},"id":959,"name":"Identifier","src":"14145:4:0"}],"id":960,"name":"Assignment","src":"14115:34:0"}],"id":961,"name":"ExpressionStatement","src":"14115:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":962,"name":"Identifier","src":"14159:4:0"}],"id":965,"name":"MemberAccess","src":"14159:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":964,"name":"Identifier","src":"14169:6:0"}],"id":966,"name":"IndexAccess","src":"14159:17:0"}],"id":967,"name":"MemberAccess","src":"14159:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":968,"name":"Identifier","src":"14188:7:0"}],"id":969,"name":"Assignment","src":"14159:36:0"}],"id":970,"name":"ExpressionStatement","src":"14159:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":971,"name":"Identifier","src":"14205:4:0"}],"id":974,"name":"MemberAccess","src":"14205:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":937,"type":"address","value":"prev"},"id":973,"name":"Identifier","src":"14215:4:0"}],"id":975,"name":"IndexAccess","src":"14205:15:0"}],"id":976,"name":"MemberAccess","src":"14205:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":977,"name":"Identifier","src":"14228:7:0"}],"id":978,"name":"Assignment","src":"14205:30:0"}],"id":979,"name":"ExpressionStatement","src":"14205:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":980,"name":"Identifier","src":"14246:4:0"}],"id":983,"name":"MemberAccess","src":"14246:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":982,"name":"Identifier","src":"14256:7:0"}],"id":984,"name":"IndexAccess","src":"14246:18:0"}],"id":985,"name":"MemberAccess","src":"14246:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":986,"name":"Literal","src":"14274:4:0"}],"id":987,"name":"Assignment","src":"14246:32:0"}],"id":988,"name":"ExpressionStatement","src":"14246:32:0"}],"id":989,"name":"Block","src":"13813:472:0"}],"id":990,"name":"FunctionDefinition","src":"13730:555:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a new node after an existing node.\n    * @param self The list being used.\n@param target The existing node in the list.\n@param newNode The next node to insert after the target.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"insertAfter","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1074,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":991,"name":"UserDefinedTypeName","src":"14542:4:0"}],"id":992,"name":"VariableDeclaration","src":"14542:17:0"},{"attributes":{"constant":false,"name":"target","scope":1074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":993,"name":"ElementaryTypeName","src":"14561:7:0"}],"id":994,"name":"VariableDeclaration","src":"14561:14:0"},{"attributes":{"constant":false,"name":"newNode","scope":1074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":995,"name":"ElementaryTypeName","src":"14577:7:0"}],"id":996,"name":"VariableDeclaration","src":"14577:15:0"}],"id":997,"name":"ParameterList","src":"14541:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":998,"name":"ParameterList","src":"14603:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2c74e95a6be5dfe792dfbbbe5a9581b9fa5a7198f656393c11fa5be17a7cfe4","typeString":"literal_string \"already in list\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":999,"name":"Identifier","src":"14613:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1000,"name":"Identifier","src":"14622:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1001,"name":"Identifier","src":"14631:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1002,"name":"Identifier","src":"14637:7:0"}],"id":1003,"name":"FunctionCall","src":"14622:23:0"}],"id":1004,"name":"UnaryOperation","src":"14621:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"616c726561647920696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"already in list\"","value":"already in list"},"id":1005,"name":"Literal","src":"14647:17:0"}],"id":1006,"name":"FunctionCall","src":"14613:52:0"}],"id":1007,"name":"ExpressionStatement","src":"14613:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1008,"name":"Identifier","src":"14675:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1009,"name":"Identifier","src":"14683:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1010,"name":"Identifier","src":"14692:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1011,"name":"Identifier","src":"14698:6:0"}],"id":1012,"name":"FunctionCall","src":"14683:22:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1013,"name":"Identifier","src":"14709:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1014,"name":"Identifier","src":"14719:4:0"}],"id":1015,"name":"BinaryOperation","src":"14709:14:0"}],"id":1016,"name":"BinaryOperation","src":"14683:40:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1017,"name":"Literal","src":"14725:13:0"}],"id":1018,"name":"FunctionCall","src":"14675:64:0"}],"id":1019,"name":"ExpressionStatement","src":"14675:64:0"},{"attributes":{"assignments":[1021]},"children":[{"attributes":{"constant":false,"name":"n","scope":1074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1020,"name":"ElementaryTypeName","src":"14811:7:0"}],"id":1021,"name":"VariableDeclaration","src":"14811:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1022,"name":"Identifier","src":"14823:4:0"}],"id":1023,"name":"MemberAccess","src":"14823:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1024,"name":"Identifier","src":"14833:6:0"}],"id":1025,"name":"IndexAccess","src":"14823:17:0"}],"id":1026,"name":"MemberAccess","src":"14823:22:0"}],"id":1027,"name":"VariableDeclarationStatement","src":"14811:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1028,"name":"Identifier","src":"14856:4:0"}],"id":1031,"name":"MemberAccess","src":"14856:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1030,"name":"Identifier","src":"14866:7:0"}],"id":1032,"name":"IndexAccess","src":"14856:18:0"}],"id":1033,"name":"MemberAccess","src":"14856:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1034,"name":"Identifier","src":"14886:6:0"}],"id":1035,"name":"Assignment","src":"14856:36:0"}],"id":1036,"name":"ExpressionStatement","src":"14856:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1037,"name":"Identifier","src":"14902:4:0"}],"id":1040,"name":"MemberAccess","src":"14902:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1039,"name":"Identifier","src":"14912:7:0"}],"id":1041,"name":"IndexAccess","src":"14902:18:0"}],"id":1042,"name":"MemberAccess","src":"14902:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1021,"type":"address","value":"n"},"id":1043,"name":"Identifier","src":"14928:1:0"}],"id":1044,"name":"Assignment","src":"14902:27:0"}],"id":1045,"name":"ExpressionStatement","src":"14902:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1046,"name":"Identifier","src":"14939:4:0"}],"id":1049,"name":"MemberAccess","src":"14939:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1048,"name":"Identifier","src":"14949:6:0"}],"id":1050,"name":"IndexAccess","src":"14939:17:0"}],"id":1051,"name":"MemberAccess","src":"14939:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1052,"name":"Identifier","src":"14964:7:0"}],"id":1053,"name":"Assignment","src":"14939:32:0"}],"id":1054,"name":"ExpressionStatement","src":"14939:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1055,"name":"Identifier","src":"14981:4:0"}],"id":1058,"name":"MemberAccess","src":"14981:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1021,"type":"address","value":"n"},"id":1057,"name":"Identifier","src":"14991:1:0"}],"id":1059,"name":"IndexAccess","src":"14981:12:0"}],"id":1060,"name":"MemberAccess","src":"14981:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1061,"name":"Identifier","src":"15005:7:0"}],"id":1062,"name":"Assignment","src":"14981:31:0"}],"id":1063,"name":"ExpressionStatement","src":"14981:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1064,"name":"Identifier","src":"15023:4:0"}],"id":1067,"name":"MemberAccess","src":"15023:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1066,"name":"Identifier","src":"15033:7:0"}],"id":1068,"name":"IndexAccess","src":"15023:18:0"}],"id":1069,"name":"MemberAccess","src":"15023:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1070,"name":"Literal","src":"15051:4:0"}],"id":1071,"name":"Assignment","src":"15023:32:0"}],"id":1072,"name":"ExpressionStatement","src":"15023:32:0"}],"id":1073,"name":"Block","src":"14603:459:0"}],"id":1074,"name":"FunctionDefinition","src":"14521:541:0"},{"attributes":{"constant":false,"documentation":"@notice Remove a node from the list, and fix the previous and next\npointers that are pointing to the removed node. Removing anode that is not\nin the list will do nothing.\n    * @param self The list being using.\n@param node The node in the list to be removed.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"remove","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1145,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1075,"name":"UserDefinedTypeName","src":"15388:4:0"}],"id":1076,"name":"VariableDeclaration","src":"15388:17:0"},{"attributes":{"constant":false,"name":"node","scope":1145,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1077,"name":"ElementaryTypeName","src":"15407:7:0"}],"id":1078,"name":"VariableDeclaration","src":"15407:12:0"}],"id":1079,"name":"ParameterList","src":"15387:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":1080,"name":"ParameterList","src":"15430:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1081,"name":"Identifier","src":"15440:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1082,"name":"Identifier","src":"15448:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1083,"name":"Identifier","src":"15457:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1084,"name":"Identifier","src":"15463:4:0"}],"id":1085,"name":"FunctionCall","src":"15448:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1086,"name":"Literal","src":"15470:13:0"}],"id":1087,"name":"FunctionCall","src":"15440:44:0"}],"id":1088,"name":"ExpressionStatement","src":"15440:44:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1089,"name":"Identifier","src":"15498:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1090,"name":"Identifier","src":"15506:4:0"}],"id":1091,"name":"BinaryOperation","src":"15498:12:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":1080},"id":1092,"name":"Return","src":"15526:7:0"}],"id":1093,"name":"Block","src":"15512:31:0"}],"id":1094,"name":"IfStatement","src":"15494:49:0"},{"attributes":{"assignments":[1096]},"children":[{"attributes":{"constant":false,"name":"p","scope":1145,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1095,"name":"ElementaryTypeName","src":"15552:7:0"}],"id":1096,"name":"VariableDeclaration","src":"15552:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1097,"name":"Identifier","src":"15564:4:0"}],"id":1098,"name":"MemberAccess","src":"15564:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1099,"name":"Identifier","src":"15574:4:0"}],"id":1100,"name":"IndexAccess","src":"15564:15:0"}],"id":1101,"name":"MemberAccess","src":"15564:24:0"}],"id":1102,"name":"VariableDeclarationStatement","src":"15552:36:0"},{"attributes":{"assignments":[1104]},"children":[{"attributes":{"constant":false,"name":"n","scope":1145,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1103,"name":"ElementaryTypeName","src":"15598:7:0"}],"id":1104,"name":"VariableDeclaration","src":"15598:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1105,"name":"Identifier","src":"15610:4:0"}],"id":1106,"name":"MemberAccess","src":"15610:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1107,"name":"Identifier","src":"15620:4:0"}],"id":1108,"name":"IndexAccess","src":"15610:15:0"}],"id":1109,"name":"MemberAccess","src":"15610:20:0"}],"id":1110,"name":"VariableDeclarationStatement","src":"15598:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1111,"name":"Identifier","src":"15641:4:0"}],"id":1114,"name":"MemberAccess","src":"15641:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1096,"type":"address","value":"p"},"id":1113,"name":"Identifier","src":"15651:1:0"}],"id":1115,"name":"IndexAccess","src":"15641:12:0"}],"id":1116,"name":"MemberAccess","src":"15641:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1104,"type":"address","value":"n"},"id":1117,"name":"Identifier","src":"15661:1:0"}],"id":1118,"name":"Assignment","src":"15641:21:0"}],"id":1119,"name":"ExpressionStatement","src":"15641:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1120,"name":"Identifier","src":"15672:4:0"}],"id":1123,"name":"MemberAccess","src":"15672:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1104,"type":"address","value":"n"},"id":1122,"name":"Identifier","src":"15682:1:0"}],"id":1124,"name":"IndexAccess","src":"15672:12:0"}],"id":1125,"name":"MemberAccess","src":"15672:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1096,"type":"address","value":"p"},"id":1126,"name":"Identifier","src":"15696:1:0"}],"id":1127,"name":"Assignment","src":"15672:25:0"}],"id":1128,"name":"ExpressionStatement","src":"15672:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1129,"name":"Identifier","src":"15817:4:0"}],"id":1132,"name":"MemberAccess","src":"15817:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1131,"name":"Identifier","src":"15827:4:0"}],"id":1133,"name":"IndexAccess","src":"15817:15:0"}],"id":1134,"name":"MemberAccess","src":"15817:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1135,"name":"Literal","src":"15842:5:0"}],"id":1136,"name":"Assignment","src":"15817:30:0"}],"id":1137,"name":"ExpressionStatement","src":"15817:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1138,"name":"Identifier","src":"15864:4:0"}],"id":1139,"name":"MemberAccess","src":"15864:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1140,"name":"Identifier","src":"15874:4:0"}],"id":1141,"name":"IndexAccess","src":"15864:15:0"}],"id":1142,"name":"UnaryOperation","src":"15857:22:0"}],"id":1143,"name":"ExpressionStatement","src":"15857:22:0"}],"id":1144,"name":"Block","src":"15430:456:0"}],"id":1145,"name":"FunctionDefinition","src":"15372:514:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a node at the beginning of the list.\n    * @param self The list being used.\n@param node The node to insert at the beginning of the list.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"prepend","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1161,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1146,"name":"UserDefinedTypeName","src":"16094:4:0"}],"id":1147,"name":"VariableDeclaration","src":"16094:17:0"},{"attributes":{"constant":false,"name":"node","scope":1161,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1148,"name":"ElementaryTypeName","src":"16113:7:0"}],"id":1149,"name":"VariableDeclaration","src":"16113:12:0"}],"id":1150,"name":"ParameterList","src":"16093:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":1151,"name":"ParameterList","src":"16136:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":990,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertBefore"},"id":1152,"name":"Identifier","src":"16200:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1153,"name":"Identifier","src":"16213:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1247,"type":"function (struct LinkedList.List storage pointer) view returns (address)","value":"begin"},"id":1154,"name":"Identifier","src":"16219:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1155,"name":"Identifier","src":"16225:4:0"}],"id":1156,"name":"FunctionCall","src":"16219:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1149,"type":"address","value":"node"},"id":1157,"name":"Identifier","src":"16232:4:0"}],"id":1158,"name":"FunctionCall","src":"16200:37:0"}],"id":1159,"name":"ExpressionStatement","src":"16200:37:0"}],"id":1160,"name":"Block","src":"16136:108:0"}],"id":1161,"name":"FunctionDefinition","src":"16077:167:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a node at the end of the list.\n    * @param self The list being used.\n@param node The node to insert at the end of the list.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"append","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1177,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1162,"name":"UserDefinedTypeName","src":"16439:4:0"}],"id":1163,"name":"VariableDeclaration","src":"16439:17:0"},{"attributes":{"constant":false,"name":"node","scope":1177,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1164,"name":"ElementaryTypeName","src":"16458:7:0"}],"id":1165,"name":"VariableDeclaration","src":"16458:12:0"}],"id":1166,"name":"ParameterList","src":"16438:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":1167,"name":"ParameterList","src":"16481:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1074,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertAfter"},"id":1168,"name":"Identifier","src":"16545:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1163,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1169,"name":"Identifier","src":"16557:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1261,"type":"function (struct LinkedList.List storage pointer) view returns (address)","value":"end"},"id":1170,"name":"Identifier","src":"16563:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1163,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1171,"name":"Identifier","src":"16567:4:0"}],"id":1172,"name":"FunctionCall","src":"16563:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1165,"type":"address","value":"node"},"id":1173,"name":"Identifier","src":"16574:4:0"}],"id":1174,"name":"FunctionCall","src":"16545:34:0"}],"id":1175,"name":"ExpressionStatement","src":"16545:34:0"}],"id":1176,"name":"Block","src":"16481:105:0"}],"id":1177,"name":"FunctionDefinition","src":"16423:163:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"swap","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1217,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1178,"name":"UserDefinedTypeName","src":"16606:4:0"}],"id":1179,"name":"VariableDeclaration","src":"16606:17:0"},{"attributes":{"constant":false,"name":"left","scope":1217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1180,"name":"ElementaryTypeName","src":"16625:7:0"}],"id":1181,"name":"VariableDeclaration","src":"16625:12:0"},{"attributes":{"constant":false,"name":"right","scope":1217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1182,"name":"ElementaryTypeName","src":"16639:7:0"}],"id":1183,"name":"VariableDeclaration","src":"16639:13:0"}],"id":1184,"name":"ParameterList","src":"16605:48:0"},{"attributes":{"parameters":[null]},"children":[],"id":1185,"name":"ParameterList","src":"16663:0:0"},{"children":[{"attributes":{"assignments":[1187]},"children":[{"attributes":{"constant":false,"name":"previousRight","scope":1217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1186,"name":"ElementaryTypeName","src":"16742:7:0"}],"id":1187,"name":"VariableDeclaration","src":"16742:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1188,"name":"Identifier","src":"16766:4:0"}],"id":1189,"name":"MemberAccess","src":"16766:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1183,"type":"address","value":"right"},"id":1190,"name":"Identifier","src":"16776:5:0"}],"id":1191,"name":"IndexAccess","src":"16766:16:0"}],"id":1192,"name":"MemberAccess","src":"16766:25:0"}],"id":1193,"name":"VariableDeclarationStatement","src":"16742:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1145,"type":"function (struct LinkedList.List storage pointer,address)","value":"remove"},"id":1194,"name":"Identifier","src":"16801:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1195,"name":"Identifier","src":"16808:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1183,"type":"address","value":"right"},"id":1196,"name":"Identifier","src":"16814:5:0"}],"id":1197,"name":"FunctionCall","src":"16801:19:0"}],"id":1198,"name":"ExpressionStatement","src":"16801:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1074,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertAfter"},"id":1199,"name":"Identifier","src":"16830:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1200,"name":"Identifier","src":"16842:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"address","value":"left"},"id":1201,"name":"Identifier","src":"16848:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1183,"type":"address","value":"right"},"id":1202,"name":"Identifier","src":"16854:5:0"}],"id":1203,"name":"FunctionCall","src":"16830:30:0"}],"id":1204,"name":"ExpressionStatement","src":"16830:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1145,"type":"function (struct LinkedList.List storage pointer,address)","value":"remove"},"id":1205,"name":"Identifier","src":"16870:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1206,"name":"Identifier","src":"16877:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"address","value":"left"},"id":1207,"name":"Identifier","src":"16883:4:0"}],"id":1208,"name":"FunctionCall","src":"16870:18:0"}],"id":1209,"name":"ExpressionStatement","src":"16870:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1074,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertAfter"},"id":1210,"name":"Identifier","src":"16898:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1211,"name":"Identifier","src":"16910:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1187,"type":"address","value":"previousRight"},"id":1212,"name":"Identifier","src":"16916:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"address","value":"left"},"id":1213,"name":"Identifier","src":"16931:4:0"}],"id":1214,"name":"FunctionCall","src":"16898:38:0"}],"id":1215,"name":"ExpressionStatement","src":"16898:38:0"}],"id":1216,"name":"Block","src":"16663:280:0"}],"id":1217,"name":"FunctionDefinition","src":"16592:351:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"isInList","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1233,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1218,"name":"UserDefinedTypeName","src":"16967:4:0"}],"id":1219,"name":"VariableDeclaration","src":"16967:17:0"},{"attributes":{"constant":false,"name":"node","scope":1233,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1220,"name":"ElementaryTypeName","src":"16986:7:0"}],"id":1221,"name":"VariableDeclaration","src":"16986:12:0"}],"id":1222,"name":"ParameterList","src":"16966:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1233,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1223,"name":"ElementaryTypeName","src":"17023:4:0"}],"id":1224,"name":"VariableDeclaration","src":"17023:4:0"}],"id":1225,"name":"ParameterList","src":"17022:6:0"},{"children":[{"attributes":{"functionReturnParameters":1225},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1219,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1226,"name":"Identifier","src":"17046:4:0"}],"id":1227,"name":"MemberAccess","src":"17046:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1221,"type":"address","value":"node"},"id":1228,"name":"Identifier","src":"17056:4:0"}],"id":1229,"name":"IndexAccess","src":"17046:15:0"}],"id":1230,"name":"MemberAccess","src":"17046:22:0"}],"id":1231,"name":"Return","src":"17039:29:0"}],"id":1232,"name":"Block","src":"17029:46:0"}],"id":1233,"name":"FunctionDefinition","src":"16949:126:0"},{"attributes":{"constant":true,"documentation":"@notice Get the node at the beginning of a double linked list.\n    * @param self The list being used.\n    * @return A address identifying the node at the beginning of the double\nlinked list.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"begin","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1247,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1234,"name":"UserDefinedTypeName","src":"17326:4:0"}],"id":1235,"name":"VariableDeclaration","src":"17326:17:0"}],"id":1236,"name":"ParameterList","src":"17325:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1247,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1237,"name":"ElementaryTypeName","src":"17368:7:0"}],"id":1238,"name":"VariableDeclaration","src":"17368:7:0"}],"id":1239,"name":"ParameterList","src":"17367:9:0"},{"children":[{"attributes":{"functionReturnParameters":1239},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1235,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1240,"name":"Identifier","src":"17394:4:0"}],"id":1241,"name":"MemberAccess","src":"17394:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1242,"name":"Identifier","src":"17404:4:0"}],"id":1243,"name":"IndexAccess","src":"17394:15:0"}],"id":1244,"name":"MemberAccess","src":"17394:20:0"}],"id":1245,"name":"Return","src":"17387:27:0"}],"id":1246,"name":"Block","src":"17377:44:0"}],"id":1247,"name":"FunctionDefinition","src":"17311:110:0"},{"attributes":{"constant":true,"documentation":"@notice Get the node at the end of a double linked list.\n    * @param self The list being used.\n    * @return A address identifying the node at the end of the double linked\nlist.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"end","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1261,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1248,"name":"UserDefinedTypeName","src":"17658:4:0"}],"id":1249,"name":"VariableDeclaration","src":"17658:17:0"}],"id":1250,"name":"ParameterList","src":"17657:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1261,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1251,"name":"ElementaryTypeName","src":"17700:7:0"}],"id":1252,"name":"VariableDeclaration","src":"17700:7:0"}],"id":1253,"name":"ParameterList","src":"17699:9:0"},{"children":[{"attributes":{"functionReturnParameters":1253},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1249,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1254,"name":"Identifier","src":"17726:4:0"}],"id":1255,"name":"MemberAccess","src":"17726:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1256,"name":"Identifier","src":"17736:4:0"}],"id":1257,"name":"IndexAccess","src":"17726:15:0"}],"id":1258,"name":"MemberAccess","src":"17726:24:0"}],"id":1259,"name":"Return","src":"17719:31:0"}],"id":1260,"name":"Block","src":"17709:48:0"}],"id":1261,"name":"FunctionDefinition","src":"17645:112:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"next","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1285,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1262,"name":"UserDefinedTypeName","src":"17777:4:0"}],"id":1263,"name":"VariableDeclaration","src":"17777:17:0"},{"attributes":{"constant":false,"name":"node","scope":1285,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1264,"name":"ElementaryTypeName","src":"17796:7:0"}],"id":1265,"name":"VariableDeclaration","src":"17796:12:0"}],"id":1266,"name":"ParameterList","src":"17776:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1285,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1267,"name":"ElementaryTypeName","src":"17833:7:0"}],"id":1268,"name":"VariableDeclaration","src":"17833:7:0"}],"id":1269,"name":"ParameterList","src":"17832:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1270,"name":"Identifier","src":"17852:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1271,"name":"Identifier","src":"17860:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1263,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1272,"name":"Identifier","src":"17869:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1265,"type":"address","value":"node"},"id":1273,"name":"Identifier","src":"17875:4:0"}],"id":1274,"name":"FunctionCall","src":"17860:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1275,"name":"Literal","src":"17882:13:0"}],"id":1276,"name":"FunctionCall","src":"17852:44:0"}],"id":1277,"name":"ExpressionStatement","src":"17852:44:0"},{"attributes":{"functionReturnParameters":1269},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1263,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1278,"name":"Identifier","src":"17913:4:0"}],"id":1279,"name":"MemberAccess","src":"17913:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1265,"type":"address","value":"node"},"id":1280,"name":"Identifier","src":"17923:4:0"}],"id":1281,"name":"IndexAccess","src":"17913:15:0"}],"id":1282,"name":"MemberAccess","src":"17913:20:0"}],"id":1283,"name":"Return","src":"17906:27:0"}],"id":1284,"name":"Block","src":"17842:98:0"}],"id":1285,"name":"FunctionDefinition","src":"17763:177:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"previous","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1309,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1286,"name":"UserDefinedTypeName","src":"17964:4:0"}],"id":1287,"name":"VariableDeclaration","src":"17964:17:0"},{"attributes":{"constant":false,"name":"node","scope":1309,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1288,"name":"ElementaryTypeName","src":"17983:7:0"}],"id":1289,"name":"VariableDeclaration","src":"17983:12:0"}],"id":1290,"name":"ParameterList","src":"17963:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1309,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1291,"name":"ElementaryTypeName","src":"18020:7:0"}],"id":1292,"name":"VariableDeclaration","src":"18020:7:0"}],"id":1293,"name":"ParameterList","src":"18019:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1294,"name":"Identifier","src":"18039:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1295,"name":"Identifier","src":"18047:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1287,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1296,"name":"Identifier","src":"18056:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1289,"type":"address","value":"node"},"id":1297,"name":"Identifier","src":"18062:4:0"}],"id":1298,"name":"FunctionCall","src":"18047:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1299,"name":"Literal","src":"18069:13:0"}],"id":1300,"name":"FunctionCall","src":"18039:44:0"}],"id":1301,"name":"ExpressionStatement","src":"18039:44:0"},{"attributes":{"functionReturnParameters":1293},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1287,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1302,"name":"Identifier","src":"18100:4:0"}],"id":1303,"name":"MemberAccess","src":"18100:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1289,"type":"address","value":"node"},"id":1304,"name":"Identifier","src":"18110:4:0"}],"id":1305,"name":"IndexAccess","src":"18100:15:0"}],"id":1306,"name":"MemberAccess","src":"18100:24:0"}],"id":1307,"name":"Return","src":"18093:31:0"}],"id":1308,"name":"Block","src":"18029:102:0"}],"id":1309,"name":"FunctionDefinition","src":"17946:185:0"}],"id":1310,"name":"ContractDefinition","src":"12725:5409:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice This contract stores data and funds for the DarknodeRegistry\n contract. The data / fund logic and storage have been separated to improve\n upgradability.","fullyImplemented":true,"linearizedBaseContracts":[1588,85],"name":"DarknodeRegistryStore","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":1311,"name":"UserDefinedTypeName","src":"18341:7:0"}],"id":1312,"name":"InheritanceSpecifier","src":"18341:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":1588,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":1313,"name":"ElementaryTypeName","src":"18355:6:0"}],"id":1314,"name":"VariableDeclaration","src":"18355:21:0"},{"attributes":{"canonicalName":"DarknodeRegistryStore.Darknode","name":"Darknode","scope":1588,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"owner","scope":1325,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1315,"name":"ElementaryTypeName","src":"19030:7:0"}],"id":1316,"name":"VariableDeclaration","src":"19030:13:0"},{"attributes":{"constant":false,"name":"bond","scope":1325,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1317,"name":"ElementaryTypeName","src":"19230:7:0"}],"id":1318,"name":"VariableDeclaration","src":"19230:12:0"},{"attributes":{"constant":false,"name":"registeredAt","scope":1325,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1319,"name":"ElementaryTypeName","src":"19329:7:0"}],"id":1320,"name":"VariableDeclaration","src":"19329:20:0"},{"attributes":{"constant":false,"name":"deregisteredAt","scope":1325,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1321,"name":"ElementaryTypeName","src":"19438:7:0"}],"id":1322,"name":"VariableDeclaration","src":"19438:22:0"},{"attributes":{"constant":false,"name":"publicKey","scope":1325,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1323,"name":"ElementaryTypeName","src":"19731:5:0"}],"id":1324,"name":"VariableDeclaration","src":"19731:15:0"}],"id":1325,"name":"StructDefinition","src":"18757:996:0"},{"attributes":{"constant":false,"name":"darknodeRegistry","scope":1588,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct DarknodeRegistryStore.Darknode)","value":null,"visibility":"private"},"children":[{"attributes":{"type":"mapping(address => struct DarknodeRegistryStore.Darknode)"},"children":[{"attributes":{"name":"address","type":"address"},"id":1326,"name":"ElementaryTypeName","src":"19790:7:0"},{"attributes":{"contractScope":null,"name":"Darknode","referencedDeclaration":1325,"type":"struct DarknodeRegistryStore.Darknode"},"id":1327,"name":"UserDefinedTypeName","src":"19801:8:0"}],"id":1328,"name":"Mapping","src":"19782:28:0"}],"id":1329,"name":"VariableDeclaration","src":"19782:53:0"},{"attributes":{"constant":false,"name":"darknodes","scope":1588,"stateVariable":true,"storageLocation":"default","type":"struct LinkedList.List","value":null,"visibility":"private"},"children":[{"attributes":{"contractScope":null,"name":"LinkedList.List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1330,"name":"UserDefinedTypeName","src":"19841:15:0"}],"id":1331,"name":"VariableDeclaration","src":"19841:33:0"},{"attributes":{"constant":false,"name":"ren","scope":1588,"stateVariable":true,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1332,"name":"UserDefinedTypeName","src":"19903:13:0"}],"id":1333,"name":"VariableDeclaration","src":"19903:24:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.\n @param _ren The address of the RepublicToken contract.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":1349,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1334,"name":"ElementaryTypeName","src":"20132:6:0"}],"id":1335,"name":"VariableDeclaration","src":"20132:15:0"},{"attributes":{"constant":false,"name":"_ren","scope":1349,"stateVariable":false,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1336,"name":"UserDefinedTypeName","src":"20157:13:0"}],"id":1337,"name":"VariableDeclaration","src":"20157:18:0"}],"id":1338,"name":"ParameterList","src":"20122:59:0"},{"attributes":{"parameters":[null]},"children":[],"id":1339,"name":"ParameterList","src":"20189:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1314,"type":"string storage ref","value":"VERSION"},"id":1340,"name":"Identifier","src":"20199:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1335,"type":"string memory","value":"_VERSION"},"id":1341,"name":"Identifier","src":"20209:8:0"}],"id":1342,"name":"Assignment","src":"20199:18:0"}],"id":1343,"name":"ExpressionStatement","src":"20199:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RepublicToken"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1333,"type":"contract RepublicToken","value":"ren"},"id":1344,"name":"Identifier","src":"20227:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1337,"type":"contract RepublicToken","value":"_ren"},"id":1345,"name":"Identifier","src":"20233:4:0"}],"id":1346,"name":"Assignment","src":"20227:10:0"}],"id":1347,"name":"ExpressionStatement","src":"20227:10:0"}],"id":1348,"name":"Block","src":"20189:55:0"}],"id":1349,"name":"FunctionDefinition","src":"20111:133:0"},{"attributes":{"constant":false,"documentation":"@notice Instantiates a darknode and appends it to the darknodes\n linked-list.\n\n    /// @param _darknodeID The darknode's ID.\n @param _darknodeOwner The darknode's owner's address\n @param _bond The darknode's bond value\n @param _publicKey The darknode's public key\n @param _registeredAt The time stamp when the darknode is registered.\n @param _deregisteredAt The time stamp when the darknode is deregistered.","implemented":true,"isConstructor":false,"name":"appendDarknode","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1390,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1350,"name":"ElementaryTypeName","src":"20748:7:0"}],"id":1351,"name":"VariableDeclaration","src":"20748:19:0"},{"attributes":{"constant":false,"name":"_darknodeOwner","scope":1390,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1352,"name":"ElementaryTypeName","src":"20777:7:0"}],"id":1353,"name":"VariableDeclaration","src":"20777:22:0"},{"attributes":{"constant":false,"name":"_bond","scope":1390,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1354,"name":"ElementaryTypeName","src":"20809:7:0"}],"id":1355,"name":"VariableDeclaration","src":"20809:13:0"},{"attributes":{"constant":false,"name":"_publicKey","scope":1390,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1356,"name":"ElementaryTypeName","src":"20832:5:0"}],"id":1357,"name":"VariableDeclaration","src":"20832:16:0"},{"attributes":{"constant":false,"name":"_registeredAt","scope":1390,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1358,"name":"ElementaryTypeName","src":"20858:7:0"}],"id":1359,"name":"VariableDeclaration","src":"20858:21:0"},{"attributes":{"constant":false,"name":"_deregisteredAt","scope":1390,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1360,"name":"ElementaryTypeName","src":"20889:7:0"}],"id":1361,"name":"VariableDeclaration","src":"20889:23:0"}],"id":1362,"name":"ParameterList","src":"20738:180:0"},{"attributes":{"parameters":[null]},"children":[],"id":1365,"name":"ParameterList","src":"20938:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1363,"name":"Identifier","src":"20928:9:0"}],"id":1364,"name":"ModifierInvocation","src":"20928:9:0"},{"children":[{"attributes":{"assignments":[1367]},"children":[{"attributes":{"constant":false,"name":"darknode","scope":1390,"stateVariable":false,"storageLocation":"memory","type":"struct DarknodeRegistryStore.Darknode","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Darknode","referencedDeclaration":1325,"type":"struct DarknodeRegistryStore.Darknode"},"id":1366,"name":"UserDefinedTypeName","src":"20948:8:0"}],"id":1367,"name":"VariableDeclaration","src":"20948:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["owner","bond","publicKey","registeredAt","deregisteredAt"],"type":"struct DarknodeRegistryStore.Darknode memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"type(struct DarknodeRegistryStore.Darknode storage pointer)","value":"Darknode"},"id":1368,"name":"Identifier","src":"20975:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1353,"type":"address","value":"_darknodeOwner"},"id":1369,"name":"Identifier","src":"21005:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"uint256","value":"_bond"},"id":1370,"name":"Identifier","src":"21039:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1357,"type":"bytes calldata","value":"_publicKey"},"id":1371,"name":"Identifier","src":"21069:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1359,"type":"uint256","value":"_registeredAt"},"id":1372,"name":"Identifier","src":"21107:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1361,"type":"uint256","value":"_deregisteredAt"},"id":1373,"name":"Identifier","src":"21150:15:0"}],"id":1374,"name":"FunctionCall","src":"20975:201:0"}],"id":1375,"name":"VariableDeclarationStatement","src":"20948:228:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1376,"name":"Identifier","src":"21186:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1351,"type":"address","value":"_darknodeID"},"id":1377,"name":"Identifier","src":"21203:11:0"}],"id":1378,"name":"IndexAccess","src":"21186:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1367,"type":"struct DarknodeRegistryStore.Darknode memory","value":"darknode"},"id":1379,"name":"Identifier","src":"21218:8:0"}],"id":1380,"name":"Assignment","src":"21186:40:0"}],"id":1381,"name":"ExpressionStatement","src":"21186:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"append","referencedDeclaration":1177,"type":"function (struct LinkedList.List storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1382,"name":"Identifier","src":"21236:10:0"}],"id":1384,"name":"MemberAccess","src":"21236:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1385,"name":"Identifier","src":"21254:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1351,"type":"address","value":"_darknodeID"},"id":1386,"name":"Identifier","src":"21265:11:0"}],"id":1387,"name":"FunctionCall","src":"21236:41:0"}],"id":1388,"name":"ExpressionStatement","src":"21236:41:0"}],"id":1389,"name":"Block","src":"20938:346:0"}],"id":1390,"name":"FunctionDefinition","src":"20715:569:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the address of the first darknode in the store","implemented":true,"isConstructor":false,"name":"begin","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1391,"name":"ParameterList","src":"21375:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1403,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1394,"name":"ElementaryTypeName","src":"21410:7:0"}],"id":1395,"name":"VariableDeclaration","src":"21410:7:0"}],"id":1396,"name":"ParameterList","src":"21409:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1392,"name":"Identifier","src":"21392:9:0"}],"id":1393,"name":"ModifierInvocation","src":"21392:9:0"},{"children":[{"attributes":{"functionReturnParameters":1396},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"begin","referencedDeclaration":1247,"type":"function (struct LinkedList.List storage pointer) view returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1397,"name":"Identifier","src":"21436:10:0"}],"id":1398,"name":"MemberAccess","src":"21436:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1399,"name":"Identifier","src":"21453:9:0"}],"id":1400,"name":"FunctionCall","src":"21436:27:0"}],"id":1401,"name":"Return","src":"21429:34:0"}],"id":1402,"name":"Block","src":"21419:51:0"}],"id":1403,"name":"FunctionDefinition","src":"21361:109:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the address of the next darknode in the store after the\n given address.","implemented":true,"isConstructor":false,"name":"next","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1419,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1404,"name":"ElementaryTypeName","src":"21593:7:0"}],"id":1405,"name":"VariableDeclaration","src":"21593:18:0"}],"id":1406,"name":"ParameterList","src":"21592:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1419,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1409,"name":"ElementaryTypeName","src":"21645:7:0"}],"id":1410,"name":"VariableDeclaration","src":"21645:7:0"}],"id":1411,"name":"ParameterList","src":"21644:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1407,"name":"Identifier","src":"21627:9:0"}],"id":1408,"name":"ModifierInvocation","src":"21627:9:0"},{"children":[{"attributes":{"functionReturnParameters":1411},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":1285,"type":"function (struct LinkedList.List storage pointer,address) view returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1412,"name":"Identifier","src":"21671:10:0"}],"id":1413,"name":"MemberAccess","src":"21671:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1414,"name":"Identifier","src":"21687:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1405,"type":"address","value":"darknodeID"},"id":1415,"name":"Identifier","src":"21698:10:0"}],"id":1416,"name":"FunctionCall","src":"21671:38:0"}],"id":1417,"name":"Return","src":"21664:45:0"}],"id":1418,"name":"Block","src":"21654:62:0"}],"id":1419,"name":"FunctionDefinition","src":"21579:137:0"},{"attributes":{"constant":false,"documentation":"@notice Removes a darknode from the store and transfers its bond to the\n owner of this contract.","implemented":true,"isConstructor":false,"name":"removeDarknode","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1455,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1420,"name":"ElementaryTypeName","src":"21858:7:0"}],"id":1421,"name":"VariableDeclaration","src":"21858:18:0"}],"id":1422,"name":"ParameterList","src":"21857:20:0"},{"attributes":{"parameters":[null]},"children":[],"id":1425,"name":"ParameterList","src":"21897:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1423,"name":"Identifier","src":"21887:9:0"}],"id":1424,"name":"ModifierInvocation","src":"21887:9:0"},{"children":[{"attributes":{"assignments":[1427]},"children":[{"attributes":{"constant":false,"name":"bond","scope":1455,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1426,"name":"ElementaryTypeName","src":"21907:7:0"}],"id":1427,"name":"VariableDeclaration","src":"21907:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1428,"name":"Identifier","src":"21922:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1421,"type":"address","value":"darknodeID"},"id":1429,"name":"Identifier","src":"21939:10:0"}],"id":1430,"name":"IndexAccess","src":"21922:28:0"}],"id":1431,"name":"MemberAccess","src":"21922:33:0"}],"id":1432,"name":"VariableDeclarationStatement","src":"21907:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1433,"name":"Identifier","src":"21972:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1421,"type":"address","value":"darknodeID"},"id":1434,"name":"Identifier","src":"21989:10:0"}],"id":1435,"name":"IndexAccess","src":"21972:28:0"}],"id":1436,"name":"UnaryOperation","src":"21965:35:0"}],"id":1437,"name":"ExpressionStatement","src":"21965:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"remove","referencedDeclaration":1145,"type":"function (struct LinkedList.List storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1438,"name":"Identifier","src":"22010:10:0"}],"id":1440,"name":"MemberAccess","src":"22010:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1441,"name":"Identifier","src":"22028:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1421,"type":"address","value":"darknodeID"},"id":1442,"name":"Identifier","src":"22039:10:0"}],"id":1443,"name":"FunctionCall","src":"22010:40:0"}],"id":1444,"name":"ExpressionStatement","src":"22010:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cc04940ac6d40db26d0534ed979bd6744dc0f16532d0fa6ea6933afd295512d","typeString":"literal_string \"bond transfer failed\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1445,"name":"Identifier","src":"22060:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1333,"type":"contract RepublicToken","value":"ren"},"id":1446,"name":"Identifier","src":"22068:3:0"}],"id":1447,"name":"MemberAccess","src":"22068:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":1448,"name":"Identifier","src":"22081:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1427,"type":"uint256","value":"bond"},"id":1449,"name":"Identifier","src":"22088:4:0"}],"id":1450,"name":"FunctionCall","src":"22068:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"626f6e64207472616e73666572206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"bond transfer failed\"","value":"bond transfer failed"},"id":1451,"name":"Literal","src":"22095:22:0"}],"id":1452,"name":"FunctionCall","src":"22060:58:0"}],"id":1453,"name":"ExpressionStatement","src":"22060:58:0"}],"id":1454,"name":"Block","src":"21897:228:0"}],"id":1455,"name":"FunctionDefinition","src":"21834:291:0"},{"attributes":{"constant":false,"documentation":"@notice Updates the bond of the darknode. If the bond is being\n decreased, the difference is sent to the owner of this contract.","implemented":true,"isConstructor":false,"name":"updateDarknodeBond","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1495,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1456,"name":"ElementaryTypeName","src":"22303:7:0"}],"id":1457,"name":"VariableDeclaration","src":"22303:18:0"},{"attributes":{"constant":false,"name":"bond","scope":1495,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1458,"name":"ElementaryTypeName","src":"22323:7:0"}],"id":1459,"name":"VariableDeclaration","src":"22323:12:0"}],"id":1460,"name":"ParameterList","src":"22302:34:0"},{"attributes":{"parameters":[null]},"children":[],"id":1463,"name":"ParameterList","src":"22356:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1461,"name":"Identifier","src":"22346:9:0"}],"id":1462,"name":"ModifierInvocation","src":"22346:9:0"},{"children":[{"attributes":{"assignments":[1465]},"children":[{"attributes":{"constant":false,"name":"previousBond","scope":1495,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1464,"name":"ElementaryTypeName","src":"22366:7:0"}],"id":1465,"name":"VariableDeclaration","src":"22366:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1466,"name":"Identifier","src":"22389:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1457,"type":"address","value":"darknodeID"},"id":1467,"name":"Identifier","src":"22406:10:0"}],"id":1468,"name":"IndexAccess","src":"22389:28:0"}],"id":1469,"name":"MemberAccess","src":"22389:33:0"}],"id":1470,"name":"VariableDeclarationStatement","src":"22366:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1471,"name":"Identifier","src":"22432:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1457,"type":"address","value":"darknodeID"},"id":1472,"name":"Identifier","src":"22449:10:0"}],"id":1473,"name":"IndexAccess","src":"22432:28:0"}],"id":1474,"name":"MemberAccess","src":"22432:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1459,"type":"uint256","value":"bond"},"id":1475,"name":"Identifier","src":"22468:4:0"}],"id":1476,"name":"Assignment","src":"22432:40:0"}],"id":1477,"name":"ExpressionStatement","src":"22432:40:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1465,"type":"uint256","value":"previousBond"},"id":1478,"name":"Identifier","src":"22486:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1459,"type":"uint256","value":"bond"},"id":1479,"name":"Identifier","src":"22501:4:0"}],"id":1480,"name":"BinaryOperation","src":"22486:19:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_859d965cd8a876806d0b6c9875cebf869ded801d80d6e8bd1b9ed2f49fb96bd5","typeString":"literal_string \"cannot transfer bond\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1481,"name":"Identifier","src":"22521:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1333,"type":"contract RepublicToken","value":"ren"},"id":1482,"name":"Identifier","src":"22529:3:0"}],"id":1483,"name":"MemberAccess","src":"22529:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":1484,"name":"Identifier","src":"22542:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1465,"type":"uint256","value":"previousBond"},"id":1485,"name":"Identifier","src":"22549:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1459,"type":"uint256","value":"bond"},"id":1486,"name":"Identifier","src":"22564:4:0"}],"id":1487,"name":"BinaryOperation","src":"22549:19:0"}],"id":1488,"name":"FunctionCall","src":"22529:40:0"},{"attributes":{"argumentTypes":null,"hexvalue":"63616e6e6f74207472616e7366657220626f6e64","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"cannot transfer bond\"","value":"cannot transfer bond"},"id":1489,"name":"Literal","src":"22571:22:0"}],"id":1490,"name":"FunctionCall","src":"22521:73:0"}],"id":1491,"name":"ExpressionStatement","src":"22521:73:0"}],"id":1492,"name":"Block","src":"22507:98:0"}],"id":1493,"name":"IfStatement","src":"22482:123:0"}],"id":1494,"name":"Block","src":"22356:255:0"}],"id":1495,"name":"FunctionDefinition","src":"22275:336:0"},{"attributes":{"constant":false,"documentation":"@notice Updates the deregistration timestamp of a darknode.","implemented":true,"isConstructor":false,"name":"updateDarknodeDeregisteredAt","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1512,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1496,"name":"ElementaryTypeName","src":"22723:7:0"}],"id":1497,"name":"VariableDeclaration","src":"22723:18:0"},{"attributes":{"constant":false,"name":"deregisteredAt","scope":1512,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1498,"name":"ElementaryTypeName","src":"22743:7:0"}],"id":1499,"name":"VariableDeclaration","src":"22743:22:0"}],"id":1500,"name":"ParameterList","src":"22722:44:0"},{"attributes":{"parameters":[null]},"children":[],"id":1503,"name":"ParameterList","src":"22786:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1501,"name":"Identifier","src":"22776:9:0"}],"id":1502,"name":"ModifierInvocation","src":"22776:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"deregisteredAt","referencedDeclaration":1322,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1504,"name":"Identifier","src":"22796:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1497,"type":"address","value":"darknodeID"},"id":1505,"name":"Identifier","src":"22813:10:0"}],"id":1506,"name":"IndexAccess","src":"22796:28:0"}],"id":1507,"name":"MemberAccess","src":"22796:43:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1499,"type":"uint256","value":"deregisteredAt"},"id":1508,"name":"Identifier","src":"22842:14:0"}],"id":1509,"name":"Assignment","src":"22796:60:0"}],"id":1510,"name":"ExpressionStatement","src":"22796:60:0"}],"id":1511,"name":"Block","src":"22786:77:0"}],"id":1512,"name":"FunctionDefinition","src":"22685:178:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the owner of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeOwner","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1527,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1513,"name":"ElementaryTypeName","src":"22947:7:0"}],"id":1514,"name":"VariableDeclaration","src":"22947:18:0"}],"id":1515,"name":"ParameterList","src":"22946:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1527,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1518,"name":"ElementaryTypeName","src":"23000:7:0"}],"id":1519,"name":"VariableDeclaration","src":"23000:7:0"}],"id":1520,"name":"ParameterList","src":"22999:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1516,"name":"Identifier","src":"22981:9:0"}],"id":1517,"name":"ModifierInvocation","src":"22981:9:0"},{"children":[{"attributes":{"functionReturnParameters":1520},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"owner","referencedDeclaration":1316,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1521,"name":"Identifier","src":"23026:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1514,"type":"address","value":"darknodeID"},"id":1522,"name":"Identifier","src":"23043:10:0"}],"id":1523,"name":"IndexAccess","src":"23026:28:0"}],"id":1524,"name":"MemberAccess","src":"23026:34:0"}],"id":1525,"name":"Return","src":"23019:41:0"}],"id":1526,"name":"Block","src":"23009:58:0"}],"id":1527,"name":"FunctionDefinition","src":"22924:143:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the bond of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeBond","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1542,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1528,"name":"ElementaryTypeName","src":"23149:7:0"}],"id":1529,"name":"VariableDeclaration","src":"23149:18:0"}],"id":1530,"name":"ParameterList","src":"23148:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1542,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1533,"name":"ElementaryTypeName","src":"23202:7:0"}],"id":1534,"name":"VariableDeclaration","src":"23202:7:0"}],"id":1535,"name":"ParameterList","src":"23201:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1531,"name":"Identifier","src":"23183:9:0"}],"id":1532,"name":"ModifierInvocation","src":"23183:9:0"},{"children":[{"attributes":{"functionReturnParameters":1535},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1536,"name":"Identifier","src":"23228:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1529,"type":"address","value":"darknodeID"},"id":1537,"name":"Identifier","src":"23245:10:0"}],"id":1538,"name":"IndexAccess","src":"23228:28:0"}],"id":1539,"name":"MemberAccess","src":"23228:33:0"}],"id":1540,"name":"Return","src":"23221:40:0"}],"id":1541,"name":"Block","src":"23211:57:0"}],"id":1542,"name":"FunctionDefinition","src":"23127:141:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the registration time of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeRegisteredAt","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1557,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1543,"name":"ElementaryTypeName","src":"23371:7:0"}],"id":1544,"name":"VariableDeclaration","src":"23371:18:0"}],"id":1545,"name":"ParameterList","src":"23370:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1557,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1548,"name":"ElementaryTypeName","src":"23424:7:0"}],"id":1549,"name":"VariableDeclaration","src":"23424:7:0"}],"id":1550,"name":"ParameterList","src":"23423:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1546,"name":"Identifier","src":"23405:9:0"}],"id":1547,"name":"ModifierInvocation","src":"23405:9:0"},{"children":[{"attributes":{"functionReturnParameters":1550},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"registeredAt","referencedDeclaration":1320,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1551,"name":"Identifier","src":"23450:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1544,"type":"address","value":"darknodeID"},"id":1552,"name":"Identifier","src":"23467:10:0"}],"id":1553,"name":"IndexAccess","src":"23450:28:0"}],"id":1554,"name":"MemberAccess","src":"23450:41:0"}],"id":1555,"name":"Return","src":"23443:48:0"}],"id":1556,"name":"Block","src":"23433:65:0"}],"id":1557,"name":"FunctionDefinition","src":"23341:157:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the deregistration time of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeDeregisteredAt","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1572,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1558,"name":"ElementaryTypeName","src":"23605:7:0"}],"id":1559,"name":"VariableDeclaration","src":"23605:18:0"}],"id":1560,"name":"ParameterList","src":"23604:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1572,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1563,"name":"ElementaryTypeName","src":"23658:7:0"}],"id":1564,"name":"VariableDeclaration","src":"23658:7:0"}],"id":1565,"name":"ParameterList","src":"23657:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1561,"name":"Identifier","src":"23639:9:0"}],"id":1562,"name":"ModifierInvocation","src":"23639:9:0"},{"children":[{"attributes":{"functionReturnParameters":1565},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"deregisteredAt","referencedDeclaration":1322,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1566,"name":"Identifier","src":"23684:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1559,"type":"address","value":"darknodeID"},"id":1567,"name":"Identifier","src":"23701:10:0"}],"id":1568,"name":"IndexAccess","src":"23684:28:0"}],"id":1569,"name":"MemberAccess","src":"23684:43:0"}],"id":1570,"name":"Return","src":"23677:50:0"}],"id":1571,"name":"Block","src":"23667:67:0"}],"id":1572,"name":"FunctionDefinition","src":"23573:161:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the encryption public key of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodePublicKey","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1587,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1573,"name":"ElementaryTypeName","src":"23838:7:0"}],"id":1574,"name":"VariableDeclaration","src":"23838:18:0"}],"id":1575,"name":"ParameterList","src":"23837:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1587,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1578,"name":"ElementaryTypeName","src":"23891:5:0"}],"id":1579,"name":"VariableDeclaration","src":"23891:5:0"}],"id":1580,"name":"ParameterList","src":"23890:7:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1576,"name":"Identifier","src":"23872:9:0"}],"id":1577,"name":"ModifierInvocation","src":"23872:9:0"},{"children":[{"attributes":{"functionReturnParameters":1580},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"publicKey","referencedDeclaration":1324,"type":"bytes storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1581,"name":"Identifier","src":"23915:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1574,"type":"address","value":"darknodeID"},"id":1582,"name":"Identifier","src":"23932:10:0"}],"id":1583,"name":"IndexAccess","src":"23915:28:0"}],"id":1584,"name":"MemberAccess","src":"23915:38:0"}],"id":1585,"name":"Return","src":"23908:45:0"}],"id":1586,"name":"Block","src":"23898:62:0"}],"id":1587,"name":"FunctionDefinition","src":"23811:149:0"}],"id":1588,"name":"ContractDefinition","src":"18307:5655:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice DarknodeRegistry is responsible for the registration and\n deregistration of Darknodes.","fullyImplemented":true,"linearizedBaseContracts":[2648,85],"name":"DarknodeRegistry","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":1589,"name":"UserDefinedTypeName","src":"24095:7:0"}],"id":1590,"name":"InheritanceSpecifier","src":"24095:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":2648,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":1591,"name":"ElementaryTypeName","src":"24109:6:0"}],"id":1592,"name":"VariableDeclaration","src":"24109:21:0"},{"attributes":{"canonicalName":"DarknodeRegistry.Epoch","name":"Epoch","scope":2648,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"epochhash","scope":1597,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1593,"name":"ElementaryTypeName","src":"24425:7:0"}],"id":1594,"name":"VariableDeclaration","src":"24425:17:0"},{"attributes":{"constant":false,"name":"blocknumber","scope":1597,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1595,"name":"ElementaryTypeName","src":"24452:7:0"}],"id":1596,"name":"VariableDeclaration","src":"24452:19:0"}],"id":1597,"name":"StructDefinition","src":"24402:76:0"},{"attributes":{"constant":false,"name":"numDarknodes","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1598,"name":"ElementaryTypeName","src":"24484:7:0"}],"id":1599,"name":"VariableDeclaration","src":"24484:27:0"},{"attributes":{"constant":false,"name":"numDarknodesNextEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1600,"name":"ElementaryTypeName","src":"24517:7:0"}],"id":1601,"name":"VariableDeclaration","src":"24517:36:0"},{"attributes":{"constant":false,"name":"numDarknodesPreviousEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1602,"name":"ElementaryTypeName","src":"24559:7:0"}],"id":1603,"name":"VariableDeclaration","src":"24559:40:0"},{"attributes":{"constant":false,"name":"minimumBond","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1604,"name":"ElementaryTypeName","src":"24655:7:0"}],"id":1605,"name":"VariableDeclaration","src":"24655:26:0"},{"attributes":{"constant":false,"name":"minimumPodSize","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1606,"name":"ElementaryTypeName","src":"24687:7:0"}],"id":1607,"name":"VariableDeclaration","src":"24687:29:0"},{"attributes":{"constant":false,"name":"minimumEpochInterval","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1608,"name":"ElementaryTypeName","src":"24722:7:0"}],"id":1609,"name":"VariableDeclaration","src":"24722:35:0"},{"attributes":{"constant":false,"name":"slasher","scope":2648,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":1610,"name":"ElementaryTypeName","src":"24763:7:0"}],"id":1611,"name":"VariableDeclaration","src":"24763:22:0"},{"attributes":{"constant":false,"name":"nextMinimumBond","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1612,"name":"ElementaryTypeName","src":"24956:7:0"}],"id":1613,"name":"VariableDeclaration","src":"24956:30:0"},{"attributes":{"constant":false,"name":"nextMinimumPodSize","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1614,"name":"ElementaryTypeName","src":"24992:7:0"}],"id":1615,"name":"VariableDeclaration","src":"24992:33:0"},{"attributes":{"constant":false,"name":"nextMinimumEpochInterval","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1616,"name":"ElementaryTypeName","src":"25031:7:0"}],"id":1617,"name":"VariableDeclaration","src":"25031:39:0"},{"attributes":{"constant":false,"name":"nextSlasher","scope":2648,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":1618,"name":"ElementaryTypeName","src":"25076:7:0"}],"id":1619,"name":"VariableDeclaration","src":"25076:26:0"},{"attributes":{"constant":false,"name":"currentEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"struct DarknodeRegistry.Epoch","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Epoch","referencedDeclaration":1597,"type":"struct DarknodeRegistry.Epoch"},"id":1620,"name":"UserDefinedTypeName","src":"25148:5:0"}],"id":1621,"name":"VariableDeclaration","src":"25148:25:0"},{"attributes":{"constant":false,"name":"previousEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"struct DarknodeRegistry.Epoch","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Epoch","referencedDeclaration":1597,"type":"struct DarknodeRegistry.Epoch"},"id":1622,"name":"UserDefinedTypeName","src":"25179:5:0"}],"id":1623,"name":"VariableDeclaration","src":"25179:26:0"},{"attributes":{"constant":false,"name":"ren","scope":2648,"stateVariable":true,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1624,"name":"UserDefinedTypeName","src":"25274:13:0"}],"id":1625,"name":"VariableDeclaration","src":"25274:24:0"},{"attributes":{"constant":false,"name":"store","scope":2648,"stateVariable":true,"storageLocation":"default","type":"contract DarknodeRegistryStore","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistryStore","referencedDeclaration":1588,"type":"contract DarknodeRegistryStore"},"id":1626,"name":"UserDefinedTypeName","src":"25376:21:0"}],"id":1627,"name":"VariableDeclaration","src":"25376:34:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a darknode is registered.\n @param _darknodeID The darknode ID that was registered.\n @param _bond The amount of REN that was transferred as bond.","name":"LogDarknodeRegistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_darknodeID","scope":1633,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1628,"name":"ElementaryTypeName","src":"25633:7:0"}],"id":1629,"name":"VariableDeclaration","src":"25633:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"_bond","scope":1633,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1630,"name":"ElementaryTypeName","src":"25654:7:0"}],"id":1631,"name":"VariableDeclaration","src":"25654:13:0"}],"id":1632,"name":"ParameterList","src":"25632:36:0"}],"id":1633,"name":"EventDefinition","src":"25605:64:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a darknode is deregistered.\n @param _darknodeID The darknode ID that was deregistered.","name":"LogDarknodeDeregistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_darknodeID","scope":1637,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1634,"name":"ElementaryTypeName","src":"25828:7:0"}],"id":1635,"name":"VariableDeclaration","src":"25828:19:0"}],"id":1636,"name":"ParameterList","src":"25827:21:0"}],"id":1637,"name":"EventDefinition","src":"25798:51:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a refund has been made.\n @param _owner The address that was refunded.\n @param _amount The amount of REN that was refunded.","name":"LogDarknodeOwnerRefunded"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_owner","scope":1643,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1638,"name":"ElementaryTypeName","src":"26052:7:0"}],"id":1639,"name":"VariableDeclaration","src":"26052:14:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1643,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1640,"name":"ElementaryTypeName","src":"26068:7:0"}],"id":1641,"name":"VariableDeclaration","src":"26068:15:0"}],"id":1642,"name":"ParameterList","src":"26051:33:0"}],"id":1643,"name":"EventDefinition","src":"26021:64:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a new epoch has begun.","name":"LogNewEpoch"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1644,"name":"ParameterList","src":"26160:2:0"}],"id":1645,"name":"EventDefinition","src":"26143:20:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a constructor parameter has been updated.","name":"LogMinimumBondUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousMinimumBond","scope":1651,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1646,"name":"ElementaryTypeName","src":"26268:7:0"}],"id":1647,"name":"VariableDeclaration","src":"26268:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextMinimumBond","scope":1651,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1648,"name":"ElementaryTypeName","src":"26297:7:0"}],"id":1649,"name":"VariableDeclaration","src":"26297:23:0"}],"id":1650,"name":"ParameterList","src":"26267:54:0"}],"id":1651,"name":"EventDefinition","src":"26240:82:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogMinimumPodSizeUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousMinimumPodSize","scope":1657,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1652,"name":"ElementaryTypeName","src":"26358:7:0"}],"id":1653,"name":"VariableDeclaration","src":"26358:30:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextMinimumPodSize","scope":1657,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1654,"name":"ElementaryTypeName","src":"26390:7:0"}],"id":1655,"name":"VariableDeclaration","src":"26390:26:0"}],"id":1656,"name":"ParameterList","src":"26357:60:0"}],"id":1657,"name":"EventDefinition","src":"26327:91:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogMinimumEpochIntervalUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousMinimumEpochInterval","scope":1663,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1658,"name":"ElementaryTypeName","src":"26460:7:0"}],"id":1659,"name":"VariableDeclaration","src":"26460:36:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextMinimumEpochInterval","scope":1663,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1660,"name":"ElementaryTypeName","src":"26498:7:0"}],"id":1661,"name":"VariableDeclaration","src":"26498:32:0"}],"id":1662,"name":"ParameterList","src":"26459:72:0"}],"id":1663,"name":"EventDefinition","src":"26423:109:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogSlasherUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousSlasher","scope":1669,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1664,"name":"ElementaryTypeName","src":"26561:7:0"}],"id":1665,"name":"VariableDeclaration","src":"26561:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextSlasher","scope":1669,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1666,"name":"ElementaryTypeName","src":"26586:7:0"}],"id":1667,"name":"VariableDeclaration","src":"26586:19:0"}],"id":1668,"name":"ParameterList","src":"26560:46:0"}],"id":1669,"name":"EventDefinition","src":"26537:70:0"},{"attributes":{"documentation":"@notice Only allow the owner that registered the darknode to pass.","name":"onlyDarknodeOwner","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1686,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1670,"name":"ElementaryTypeName","src":"26715:7:0"}],"id":1671,"name":"VariableDeclaration","src":"26715:19:0"}],"id":1672,"name":"ParameterList","src":"26714:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_831f12230b75eb89b16a9643851b495cabcf2cc09c176ca1a6f98ca413f7a341","typeString":"literal_string \"must be darknode owner\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1673,"name":"Identifier","src":"26746:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1674,"name":"Identifier","src":"26754:5:0"}],"id":1675,"name":"MemberAccess","src":"26754:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1671,"type":"address","value":"_darknodeID"},"id":1676,"name":"Identifier","src":"26774:11:0"}],"id":1677,"name":"FunctionCall","src":"26754:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":1678,"name":"Identifier","src":"26790:3:0"}],"id":1679,"name":"MemberAccess","src":"26790:10:0"}],"id":1680,"name":"BinaryOperation","src":"26754:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d757374206265206461726b6e6f6465206f776e6572","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be darknode owner\"","value":"must be darknode owner"},"id":1681,"name":"Literal","src":"26802:24:0"}],"id":1682,"name":"FunctionCall","src":"26746:81:0"}],"id":1683,"name":"ExpressionStatement","src":"26746:81:0"},{"id":1684,"name":"PlaceholderStatement","src":"26837:1:0"}],"id":1685,"name":"Block","src":"26736:109:0"}],"id":1686,"name":"ModifierDefinition","src":"26688:157:0"},{"attributes":{"documentation":"@notice Only allow unregistered darknodes.","name":"onlyRefunded","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1699,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1687,"name":"ElementaryTypeName","src":"26924:7:0"}],"id":1688,"name":"VariableDeclaration","src":"26924:19:0"}],"id":1689,"name":"ParameterList","src":"26923:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149ca671aef3cc8634c748e8de5c177049eb721378103c16e11a6afd3213db7b","typeString":"literal_string \"must be refunded or never registered\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1690,"name":"Identifier","src":"26955:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2435,"type":"function (address) view returns (bool)","value":"isRefunded"},"id":1691,"name":"Identifier","src":"26963:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1688,"type":"address","value":"_darknodeID"},"id":1692,"name":"Identifier","src":"26974:11:0"}],"id":1693,"name":"FunctionCall","src":"26963:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d75737420626520726566756e646564206f72206e657665722072656769737465726564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be refunded or never registered\"","value":"must be refunded or never registered"},"id":1694,"name":"Literal","src":"26988:38:0"}],"id":1695,"name":"FunctionCall","src":"26955:72:0"}],"id":1696,"name":"ExpressionStatement","src":"26955:72:0"},{"id":1697,"name":"PlaceholderStatement","src":"27037:1:0"}],"id":1698,"name":"Block","src":"26945:100:0"}],"id":1699,"name":"ModifierDefinition","src":"26902:143:0"},{"attributes":{"documentation":"@notice Only allow refundable darknodes.","name":"onlyRefundable","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1712,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1700,"name":"ElementaryTypeName","src":"27124:7:0"}],"id":1701,"name":"VariableDeclaration","src":"27124:19:0"}],"id":1702,"name":"ParameterList","src":"27123:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ad5b476938769c593e29df585d22f106bae979def8bfff763442542e2fb97c7","typeString":"literal_string \"must be deregistered for at least one epoch\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1703,"name":"Identifier","src":"27155:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2455,"type":"function (address) view returns (bool)","value":"isRefundable"},"id":1704,"name":"Identifier","src":"27163:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1701,"type":"address","value":"_darknodeID"},"id":1705,"name":"Identifier","src":"27176:11:0"}],"id":1706,"name":"FunctionCall","src":"27163:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d7573742062652064657265676973746572656420666f72206174206c65617374206f6e652065706f6368","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be deregistered for at least one epoch\"","value":"must be deregistered for at least one epoch"},"id":1707,"name":"Literal","src":"27190:45:0"}],"id":1708,"name":"FunctionCall","src":"27155:81:0"}],"id":1709,"name":"ExpressionStatement","src":"27155:81:0"},{"id":1710,"name":"PlaceholderStatement","src":"27246:1:0"}],"id":1711,"name":"Block","src":"27145:109:0"}],"id":1712,"name":"ModifierDefinition","src":"27100:154:0"},{"attributes":{"documentation":"@notice Only allowed registered nodes without a pending deregistration to\n deregister","name":"onlyDeregisterable","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1725,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1713,"name":"ElementaryTypeName","src":"27389:7:0"}],"id":1714,"name":"VariableDeclaration","src":"27389:19:0"}],"id":1715,"name":"ParameterList","src":"27388:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca73111039bd6419843e4c0e5ab9c6f6d6f96c0339a4d266c0ef9fad587b157c","typeString":"literal_string \"must be deregisterable\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1716,"name":"Identifier","src":"27420:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2405,"type":"function (address) view returns (bool)","value":"isDeregisterable"},"id":1717,"name":"Identifier","src":"27428:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1714,"type":"address","value":"_darknodeID"},"id":1718,"name":"Identifier","src":"27445:11:0"}],"id":1719,"name":"FunctionCall","src":"27428:29:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d757374206265206465726567697374657261626c65","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be deregisterable\"","value":"must be deregisterable"},"id":1720,"name":"Literal","src":"27459:24:0"}],"id":1721,"name":"FunctionCall","src":"27420:64:0"}],"id":1722,"name":"ExpressionStatement","src":"27420:64:0"},{"id":1723,"name":"PlaceholderStatement","src":"27494:1:0"}],"id":1724,"name":"Block","src":"27410:92:0"}],"id":1725,"name":"ModifierDefinition","src":"27361:141:0"},{"attributes":{"documentation":"@notice Only allow the Slasher contract.","name":"onlySlasher","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1726,"name":"ParameterList","src":"27577:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc240e18317024af31d37af20ea09ca37fa45f27d1cc2454389fa60d0d22b21a","typeString":"literal_string \"must be slasher\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1727,"name":"Identifier","src":"27590:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":1728,"name":"Identifier","src":"27598:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":1729,"name":"Identifier","src":"27609:3:0"}],"id":1730,"name":"MemberAccess","src":"27609:10:0"}],"id":1731,"name":"BinaryOperation","src":"27598:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d75737420626520736c6173686572","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be slasher\"","value":"must be slasher"},"id":1732,"name":"Literal","src":"27621:17:0"}],"id":1733,"name":"FunctionCall","src":"27590:49:0"}],"id":1734,"name":"ExpressionStatement","src":"27590:49:0"},{"id":1735,"name":"PlaceholderStatement","src":"27649:1:0"}],"id":1736,"name":"Block","src":"27580:77:0"}],"id":1737,"name":"ModifierDefinition","src":"27557:100:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.\n @param _renAddress The address of the RepublicToken contract.\n @param _storeAddress The address of the DarknodeRegistryStore contract.\n @param _minimumBond The minimum bond amount that can be submitted by a\n        Darknode.\n @param _minimumPodSize The minimum size of a Darknode pod.\n @param _minimumEpochInterval The minimum number of blocks between\n        epochs.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":1816,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1738,"name":"ElementaryTypeName","src":"28216:6:0"}],"id":1739,"name":"VariableDeclaration","src":"28216:15:0"},{"attributes":{"constant":false,"name":"_renAddress","scope":1816,"stateVariable":false,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1740,"name":"UserDefinedTypeName","src":"28241:13:0"}],"id":1741,"name":"VariableDeclaration","src":"28241:25:0"},{"attributes":{"constant":false,"name":"_storeAddress","scope":1816,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistryStore","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistryStore","referencedDeclaration":1588,"type":"contract DarknodeRegistryStore"},"id":1742,"name":"UserDefinedTypeName","src":"28276:21:0"}],"id":1743,"name":"VariableDeclaration","src":"28276:35:0"},{"attributes":{"constant":false,"name":"_minimumBond","scope":1816,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1744,"name":"ElementaryTypeName","src":"28321:7:0"}],"id":1745,"name":"VariableDeclaration","src":"28321:20:0"},{"attributes":{"constant":false,"name":"_minimumPodSize","scope":1816,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1746,"name":"ElementaryTypeName","src":"28351:7:0"}],"id":1747,"name":"VariableDeclaration","src":"28351:23:0"},{"attributes":{"constant":false,"name":"_minimumEpochInterval","scope":1816,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1748,"name":"ElementaryTypeName","src":"28384:7:0"}],"id":1749,"name":"VariableDeclaration","src":"28384:29:0"}],"id":1750,"name":"ParameterList","src":"28206:213:0"},{"attributes":{"parameters":[null]},"children":[],"id":1751,"name":"ParameterList","src":"28427:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1592,"type":"string storage ref","value":"VERSION"},"id":1752,"name":"Identifier","src":"28437:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1739,"type":"string memory","value":"_VERSION"},"id":1753,"name":"Identifier","src":"28447:8:0"}],"id":1754,"name":"Assignment","src":"28437:18:0"}],"id":1755,"name":"ExpressionStatement","src":"28437:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract DarknodeRegistryStore"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1756,"name":"Identifier","src":"28466:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1743,"type":"contract DarknodeRegistryStore","value":"_storeAddress"},"id":1757,"name":"Identifier","src":"28474:13:0"}],"id":1758,"name":"Assignment","src":"28466:21:0"}],"id":1759,"name":"ExpressionStatement","src":"28466:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RepublicToken"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":1760,"name":"Identifier","src":"28497:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1741,"type":"contract RepublicToken","value":"_renAddress"},"id":1761,"name":"Identifier","src":"28503:11:0"}],"id":1762,"name":"Assignment","src":"28497:17:0"}],"id":1763,"name":"ExpressionStatement","src":"28497:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1764,"name":"Identifier","src":"28525:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1745,"type":"uint256","value":"_minimumBond"},"id":1765,"name":"Identifier","src":"28539:12:0"}],"id":1766,"name":"Assignment","src":"28525:26:0"}],"id":1767,"name":"ExpressionStatement","src":"28525:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1768,"name":"Identifier","src":"28561:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1769,"name":"Identifier","src":"28579:11:0"}],"id":1770,"name":"Assignment","src":"28561:29:0"}],"id":1771,"name":"ExpressionStatement","src":"28561:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1772,"name":"Identifier","src":"28601:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1747,"type":"uint256","value":"_minimumPodSize"},"id":1773,"name":"Identifier","src":"28618:15:0"}],"id":1774,"name":"Assignment","src":"28601:32:0"}],"id":1775,"name":"ExpressionStatement","src":"28601:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1776,"name":"Identifier","src":"28643:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1777,"name":"Identifier","src":"28664:14:0"}],"id":1778,"name":"Assignment","src":"28643:35:0"}],"id":1779,"name":"ExpressionStatement","src":"28643:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1780,"name":"Identifier","src":"28689:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1749,"type":"uint256","value":"_minimumEpochInterval"},"id":1781,"name":"Identifier","src":"28712:21:0"}],"id":1782,"name":"Assignment","src":"28689:44:0"}],"id":1783,"name":"ExpressionStatement","src":"28689:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":1784,"name":"Identifier","src":"28743:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1785,"name":"Identifier","src":"28770:20:0"}],"id":1786,"name":"Assignment","src":"28743:47:0"}],"id":1787,"name":"ExpressionStatement","src":"28743:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistry.Epoch storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1788,"name":"Identifier","src":"28801:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["epochhash","blocknumber"],"type":"struct DarknodeRegistry.Epoch memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1597,"type":"type(struct DarknodeRegistry.Epoch storage pointer)","value":"Epoch"},"id":1789,"name":"Identifier","src":"28816:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":1790,"name":"ElementaryTypeNameExpression","src":"28847:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3124,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1791,"name":"Identifier","src":"28855:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3123,"type":"block","value":"block"},"id":1792,"name":"Identifier","src":"28865:5:0"}],"id":1793,"name":"MemberAccess","src":"28865:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1794,"name":"Literal","src":"28880:1:0"}],"id":1795,"name":"BinaryOperation","src":"28865:16:0"}],"id":1796,"name":"FunctionCall","src":"28855:27:0"}],"id":1797,"name":"FunctionCall","src":"28847:36:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3123,"type":"block","value":"block"},"id":1798,"name":"Identifier","src":"28910:5:0"}],"id":1799,"name":"MemberAccess","src":"28910:12:0"}],"id":1800,"name":"FunctionCall","src":"28816:117:0"}],"id":1801,"name":"Assignment","src":"28801:132:0"}],"id":1802,"name":"ExpressionStatement","src":"28801:132:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":1803,"name":"Identifier","src":"28943:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1804,"name":"Literal","src":"28958:1:0"}],"id":1805,"name":"Assignment","src":"28943:16:0"}],"id":1806,"name":"ExpressionStatement","src":"28943:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1807,"name":"Identifier","src":"28969:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1808,"name":"Literal","src":"28993:1:0"}],"id":1809,"name":"Assignment","src":"28969:25:0"}],"id":1810,"name":"ExpressionStatement","src":"28969:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"numDarknodesPreviousEpoch"},"id":1811,"name":"Identifier","src":"29004:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1812,"name":"Literal","src":"29032:1:0"}],"id":1813,"name":"Assignment","src":"29004:29:0"}],"id":1814,"name":"ExpressionStatement","src":"29004:29:0"}],"id":1815,"name":"Block","src":"28427:613:0"}],"id":1816,"name":"FunctionDefinition","src":"28195:845:0"},{"attributes":{"constant":false,"documentation":"@notice Register a darknode and transfer the bond to this contract. The\n caller must provide a public encryption key for the darknode as well as\n a bond in REN. The bond must be provided as an ERC20 allowance. The dark\n node will remain pending registration until the next epoch. Only after\n this period can the darknode be deregistered. The caller of this method\n will be stored as the owner of the darknode.\n\n    /// @param _darknodeID The darknode ID that will be registered.\n @param _publicKey The public key of the darknode. It is stored to allow\n        other darknodes and traders to encrypt messages to the trader.\n @param _bond The bond that will be paid. It must be greater than, or\n        equal to, the minimum bond.","implemented":true,"isConstructor":false,"name":"register","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1882,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1817,"name":"ElementaryTypeName","src":"29871:7:0"}],"id":1818,"name":"VariableDeclaration","src":"29871:19:0"},{"attributes":{"constant":false,"name":"_publicKey","scope":1882,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1819,"name":"ElementaryTypeName","src":"29892:5:0"}],"id":1820,"name":"VariableDeclaration","src":"29892:16:0"},{"attributes":{"constant":false,"name":"_bond","scope":1882,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1821,"name":"ElementaryTypeName","src":"29910:7:0"}],"id":1822,"name":"VariableDeclaration","src":"29910:13:0"}],"id":1823,"name":"ParameterList","src":"29870:54:0"},{"attributes":{"parameters":[null]},"children":[],"id":1827,"name":"ParameterList","src":"29960:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1699,"type":"modifier (address)","value":"onlyRefunded"},"id":1824,"name":"Identifier","src":"29934:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1818,"type":"address","value":"_darknodeID"},"id":1825,"name":"Identifier","src":"29947:11:0"}],"id":1826,"name":"ModifierInvocation","src":"29934:25:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8c49a5b7ee80762b0bf0a6f537d269ccf12880b08be1c89ed8f8d3f0d7dae8e","typeString":"literal_string \"insufficient bond\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1828,"name":"Identifier","src":"29995:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1829,"name":"Identifier","src":"30003:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1830,"name":"Identifier","src":"30012:11:0"}],"id":1831,"name":"BinaryOperation","src":"30003:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e73756666696369656e7420626f6e64","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"insufficient bond\"","value":"insufficient bond"},"id":1832,"name":"Literal","src":"30025:19:0"}],"id":1833,"name":"FunctionCall","src":"29995:50:0"}],"id":1834,"name":"ExpressionStatement","src":"29995:50:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cc04940ac6d40db26d0534ed979bd6744dc0f16532d0fa6ea6933afd295512d","typeString":"literal_string \"bond transfer failed\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1835,"name":"Identifier","src":"30126:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":682,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":1836,"name":"Identifier","src":"30134:3:0"}],"id":1837,"name":"MemberAccess","src":"30134:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":1838,"name":"Identifier","src":"30151:3:0"}],"id":1839,"name":"MemberAccess","src":"30151:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_DarknodeRegistry_$2648","typeString":"contract DarknodeRegistry"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1840,"name":"ElementaryTypeNameExpression","src":"30163:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3170,"type":"contract DarknodeRegistry","value":"this"},"id":1841,"name":"Identifier","src":"30171:4:0"}],"id":1842,"name":"FunctionCall","src":"30163:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1843,"name":"Identifier","src":"30178:5:0"}],"id":1844,"name":"FunctionCall","src":"30134:50:0"},{"attributes":{"argumentTypes":null,"hexvalue":"626f6e64207472616e73666572206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"bond transfer failed\"","value":"bond transfer failed"},"id":1845,"name":"Literal","src":"30186:22:0"}],"id":1846,"name":"FunctionCall","src":"30126:83:0"}],"id":1847,"name":"ExpressionStatement","src":"30126:83:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":1848,"name":"Identifier","src":"30219:3:0"}],"id":1850,"name":"MemberAccess","src":"30219:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_DarknodeRegistryStore_$1588","typeString":"contract DarknodeRegistryStore"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1851,"name":"ElementaryTypeNameExpression","src":"30232:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1852,"name":"Identifier","src":"30240:5:0"}],"id":1853,"name":"FunctionCall","src":"30232:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1854,"name":"Identifier","src":"30248:5:0"}],"id":1855,"name":"FunctionCall","src":"30219:35:0"}],"id":1856,"name":"ExpressionStatement","src":"30219:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"appendDarknode","referencedDeclaration":1390,"type":"function (address,address,uint256,bytes memory,uint256,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1857,"name":"Identifier","src":"30312:5:0"}],"id":1859,"name":"MemberAccess","src":"30312:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1818,"type":"address","value":"_darknodeID"},"id":1860,"name":"Identifier","src":"30346:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":1861,"name":"Identifier","src":"30371:3:0"}],"id":1862,"name":"MemberAccess","src":"30371:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1863,"name":"Identifier","src":"30395:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1820,"type":"bytes calldata","value":"_publicKey"},"id":1864,"name":"Identifier","src":"30414:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1865,"name":"Identifier","src":"30438:12:0"}],"id":1866,"name":"MemberAccess","src":"30438:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1867,"name":"Identifier","src":"30465:20:0"}],"id":1868,"name":"BinaryOperation","src":"30438:47:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1869,"name":"Literal","src":"30499:1:0"}],"id":1870,"name":"FunctionCall","src":"30312:198:0"}],"id":1871,"name":"ExpressionStatement","src":"30312:198:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1872,"name":"Identifier","src":"30521:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1873,"name":"Literal","src":"30546:1:0"}],"id":1874,"name":"Assignment","src":"30521:26:0"}],"id":1875,"name":"ExpressionStatement","src":"30521:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1633,"type":"function (address,uint256)","value":"LogDarknodeRegistered"},"id":1876,"name":"Identifier","src":"30589:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1818,"type":"address","value":"_darknodeID"},"id":1877,"name":"Identifier","src":"30611:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1878,"name":"Identifier","src":"30624:5:0"}],"id":1879,"name":"FunctionCall","src":"30589:41:0"}],"id":1880,"name":"EmitStatement","src":"30584:46:0"}],"id":1881,"name":"Block","src":"29960:677:0"}],"id":1882,"name":"FunctionDefinition","src":"29853:784:0"},{"attributes":{"constant":false,"documentation":"@notice Deregister a darknode. The darknode will not be deregistered\n until the end of the epoch. After another epoch, the bond can be\n refunded by calling the refund method.\n @param _darknodeID The darknode ID that will be deregistered. The caller\n        of this method store.darknodeRegisteredAt(_darknodeID) must be","implemented":true,"isConstructor":false,"name":"deregister","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1912,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1883,"name":"ElementaryTypeName","src":"31062:7:0"}],"id":1884,"name":"VariableDeclaration","src":"31062:19:0"}],"id":1885,"name":"ParameterList","src":"31061:21:0"},{"attributes":{"parameters":[null]},"children":[],"id":1892,"name":"ParameterList","src":"31155:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1725,"type":"modifier (address)","value":"onlyDeregisterable"},"id":1886,"name":"Identifier","src":"31092:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1887,"name":"Identifier","src":"31111:11:0"}],"id":1888,"name":"ModifierInvocation","src":"31092:31:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1686,"type":"modifier (address)","value":"onlyDarknodeOwner"},"id":1889,"name":"Identifier","src":"31124:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1890,"name":"Identifier","src":"31142:11:0"}],"id":1891,"name":"ModifierInvocation","src":"31124:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"updateDarknodeDeregisteredAt","referencedDeclaration":1512,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1893,"name":"Identifier","src":"31213:5:0"}],"id":1895,"name":"MemberAccess","src":"31213:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1896,"name":"Identifier","src":"31248:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1897,"name":"Identifier","src":"31261:12:0"}],"id":1898,"name":"MemberAccess","src":"31261:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1899,"name":"Identifier","src":"31288:20:0"}],"id":1900,"name":"BinaryOperation","src":"31261:47:0"}],"id":1901,"name":"FunctionCall","src":"31213:96:0"}],"id":1902,"name":"ExpressionStatement","src":"31213:96:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1903,"name":"Identifier","src":"31319:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1904,"name":"Literal","src":"31344:1:0"}],"id":1905,"name":"Assignment","src":"31319:26:0"}],"id":1906,"name":"ExpressionStatement","src":"31319:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1637,"type":"function (address)","value":"LogDarknodeDeregistered"},"id":1907,"name":"Identifier","src":"31386:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1908,"name":"Identifier","src":"31410:11:0"}],"id":1909,"name":"FunctionCall","src":"31386:36:0"}],"id":1910,"name":"EmitStatement","src":"31381:41:0"}],"id":1911,"name":"Block","src":"31155:274:0"}],"id":1912,"name":"FunctionDefinition","src":"31042:387:0"},{"attributes":{"constant":false,"documentation":"@notice Progress the epoch if it is possible to do so. This captures\n the current timestamp and current blockhash and overrides the current\n epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"epoch","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1913,"name":"ParameterList","src":"31619:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":1914,"name":"ParameterList","src":"31631:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":1915,"name":"Identifier","src":"31645:13:0"}],"id":1916,"name":"MemberAccess","src":"31645:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1917,"name":"Literal","src":"31674:1:0"}],"id":1918,"name":"BinaryOperation","src":"31645:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_184185fc4f52082e3f1f3b59d30c9129121ff44ea1c6f83aba8c34d5744370c9","typeString":"literal_string \"not authorized (first epochs)\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1919,"name":"Identifier","src":"31766:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":1920,"name":"Identifier","src":"31774:3:0"}],"id":1921,"name":"MemberAccess","src":"31774:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":1922,"name":"Identifier","src":"31788:5:0"}],"id":1923,"name":"BinaryOperation","src":"31774:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420617574686f72697a6564202866697273742065706f63687329","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not authorized (first epochs)\"","value":"not authorized (first epochs)"},"id":1924,"name":"Literal","src":"31795:31:0"}],"id":1925,"name":"FunctionCall","src":"31766:61:0"}],"id":1926,"name":"ExpressionStatement","src":"31766:61:0"}],"id":1927,"name":"Block","src":"31677:161:0"}],"id":1928,"name":"IfStatement","src":"31641:197:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e9d2ed9fe74e3b8f1d51a47e68fbdf2be4c6b276d1bc037bb009b66201d9fd93","typeString":"literal_string \"epoch interval has not passed\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":1929,"name":"Identifier","src":"31902:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3123,"type":"block","value":"block"},"id":1930,"name":"Identifier","src":"31910:5:0"}],"id":1931,"name":"MemberAccess","src":"31910:12:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1932,"name":"Identifier","src":"31926:12:0"}],"id":1933,"name":"MemberAccess","src":"31926:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1934,"name":"Identifier","src":"31953:20:0"}],"id":1935,"name":"BinaryOperation","src":"31926:47:0"}],"id":1936,"name":"BinaryOperation","src":"31910:63:0"},{"attributes":{"argumentTypes":null,"hexvalue":"65706f636820696e74657276616c20686173206e6f7420706173736564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"epoch interval has not passed\"","value":"epoch interval has not passed"},"id":1937,"name":"Literal","src":"31975:31:0"}],"id":1938,"name":"FunctionCall","src":"31902:105:0"}],"id":1939,"name":"ExpressionStatement","src":"31902:105:0"},{"attributes":{"assignments":[1941]},"children":[{"attributes":{"constant":false,"name":"epochhash","scope":2031,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1940,"name":"ElementaryTypeName","src":"32017:7:0"}],"id":1941,"name":"VariableDeclaration","src":"32017:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":1942,"name":"ElementaryTypeNameExpression","src":"32037:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3124,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1943,"name":"Identifier","src":"32045:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3123,"type":"block","value":"block"},"id":1944,"name":"Identifier","src":"32055:5:0"}],"id":1945,"name":"MemberAccess","src":"32055:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1946,"name":"Literal","src":"32070:1:0"}],"id":1947,"name":"BinaryOperation","src":"32055:16:0"}],"id":1948,"name":"FunctionCall","src":"32045:27:0"}],"id":1949,"name":"FunctionCall","src":"32037:36:0"}],"id":1950,"name":"VariableDeclarationStatement","src":"32017:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistry.Epoch storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":1951,"name":"Identifier","src":"32131:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1952,"name":"Identifier","src":"32147:12:0"}],"id":1953,"name":"Assignment","src":"32131:28:0"}],"id":1954,"name":"ExpressionStatement","src":"32131:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistry.Epoch storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1955,"name":"Identifier","src":"32169:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["epochhash","blocknumber"],"type":"struct DarknodeRegistry.Epoch memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1597,"type":"type(struct DarknodeRegistry.Epoch storage pointer)","value":"Epoch"},"id":1956,"name":"Identifier","src":"32184:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1941,"type":"uint256","value":"epochhash"},"id":1957,"name":"Identifier","src":"32215:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3123,"type":"block","value":"block"},"id":1958,"name":"Identifier","src":"32251:5:0"}],"id":1959,"name":"MemberAccess","src":"32251:12:0"}],"id":1960,"name":"FunctionCall","src":"32184:90:0"}],"id":1961,"name":"Assignment","src":"32169:105:0"}],"id":1962,"name":"ExpressionStatement","src":"32169:105:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"numDarknodesPreviousEpoch"},"id":1963,"name":"Identifier","src":"32328:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":1964,"name":"Identifier","src":"32356:12:0"}],"id":1965,"name":"Assignment","src":"32328:40:0"}],"id":1966,"name":"ExpressionStatement","src":"32328:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":1967,"name":"Identifier","src":"32378:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1968,"name":"Identifier","src":"32393:21:0"}],"id":1969,"name":"Assignment","src":"32378:36:0"}],"id":1970,"name":"ExpressionStatement","src":"32378:36:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1971,"name":"Identifier","src":"32504:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1972,"name":"Identifier","src":"32523:11:0"}],"id":1973,"name":"BinaryOperation","src":"32504:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1974,"name":"Identifier","src":"32550:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1975,"name":"Identifier","src":"32564:15:0"}],"id":1976,"name":"Assignment","src":"32550:29:0"}],"id":1977,"name":"ExpressionStatement","src":"32550:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1651,"type":"function (uint256,uint256)","value":"LogMinimumBondUpdated"},"id":1978,"name":"Identifier","src":"32598:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1979,"name":"Identifier","src":"32620:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1980,"name":"Identifier","src":"32633:15:0"}],"id":1981,"name":"FunctionCall","src":"32598:51:0"}],"id":1982,"name":"EmitStatement","src":"32593:56:0"}],"id":1983,"name":"Block","src":"32536:124:0"}],"id":1984,"name":"IfStatement","src":"32500:160:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1985,"name":"Identifier","src":"32673:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1986,"name":"Identifier","src":"32695:14:0"}],"id":1987,"name":"BinaryOperation","src":"32673:36:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1988,"name":"Identifier","src":"32725:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1989,"name":"Identifier","src":"32742:18:0"}],"id":1990,"name":"Assignment","src":"32725:35:0"}],"id":1991,"name":"ExpressionStatement","src":"32725:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1657,"type":"function (uint256,uint256)","value":"LogMinimumPodSizeUpdated"},"id":1992,"name":"Identifier","src":"32779:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1993,"name":"Identifier","src":"32804:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1994,"name":"Identifier","src":"32820:18:0"}],"id":1995,"name":"FunctionCall","src":"32779:60:0"}],"id":1996,"name":"EmitStatement","src":"32774:65:0"}],"id":1997,"name":"Block","src":"32711:139:0"}],"id":1998,"name":"IfStatement","src":"32669:181:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":1999,"name":"Identifier","src":"32863:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2000,"name":"Identifier","src":"32891:20:0"}],"id":2001,"name":"BinaryOperation","src":"32863:48:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2002,"name":"Identifier","src":"32927:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":2003,"name":"Identifier","src":"32950:24:0"}],"id":2004,"name":"Assignment","src":"32927:47:0"}],"id":2005,"name":"ExpressionStatement","src":"32927:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1663,"type":"function (uint256,uint256)","value":"LogMinimumEpochIntervalUpdated"},"id":2006,"name":"Identifier","src":"32993:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2007,"name":"Identifier","src":"33024:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":2008,"name":"Identifier","src":"33046:24:0"}],"id":2009,"name":"FunctionCall","src":"32993:78:0"}],"id":2010,"name":"EmitStatement","src":"32988:83:0"}],"id":2011,"name":"Block","src":"32913:169:0"}],"id":2012,"name":"IfStatement","src":"32859:223:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2013,"name":"Identifier","src":"33095:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":2014,"name":"Identifier","src":"33110:7:0"}],"id":2015,"name":"BinaryOperation","src":"33095:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":2016,"name":"Identifier","src":"33133:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2017,"name":"Identifier","src":"33143:11:0"}],"id":2018,"name":"Assignment","src":"33133:21:0"}],"id":2019,"name":"ExpressionStatement","src":"33133:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1669,"type":"function (address,address)","value":"LogSlasherUpdated"},"id":2020,"name":"Identifier","src":"33173:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":2021,"name":"Identifier","src":"33191:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2022,"name":"Identifier","src":"33200:11:0"}],"id":2023,"name":"FunctionCall","src":"33173:39:0"}],"id":2024,"name":"EmitStatement","src":"33168:44:0"}],"id":2025,"name":"Block","src":"33119:104:0"}],"id":2026,"name":"IfStatement","src":"33091:132:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":1645,"type":"function ()","value":"LogNewEpoch"},"id":2027,"name":"Identifier","src":"33263:11:0"}],"id":2028,"name":"FunctionCall","src":"33263:13:0"}],"id":2029,"name":"EmitStatement","src":"33258:18:0"}],"id":2030,"name":"Block","src":"31631:1652:0"}],"id":2031,"name":"FunctionDefinition","src":"31605:1678:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to transfer ownership of the\n DarknodeRegistryStore.\n @param _newOwner The address to transfer the ownership to.","implemented":true,"isConstructor":false,"name":"transferStoreOwnership","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":2045,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2032,"name":"ElementaryTypeName","src":"33490:7:0"}],"id":2033,"name":"VariableDeclaration","src":"33490:17:0"}],"id":2034,"name":"ParameterList","src":"33489:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":2037,"name":"ParameterList","src":"33528:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2035,"name":"Identifier","src":"33518:9:0"}],"id":2036,"name":"ModifierInvocation","src":"33518:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferOwnership","referencedDeclaration":61,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2038,"name":"Identifier","src":"33538:5:0"}],"id":2040,"name":"MemberAccess","src":"33538:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2033,"type":"address","value":"_newOwner"},"id":2041,"name":"Identifier","src":"33562:9:0"}],"id":2042,"name":"FunctionCall","src":"33538:34:0"}],"id":2043,"name":"ExpressionStatement","src":"33538:34:0"}],"id":2044,"name":"Block","src":"33528:51:0"}],"id":2045,"name":"FunctionDefinition","src":"33458:121:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to update the minimum bond.\n @param _nextMinimumBond The minimum bond amount that can be submitted by\n        a darknode.","implemented":true,"isConstructor":false,"name":"updateMinimumBond","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_nextMinimumBond","scope":2057,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2046,"name":"ElementaryTypeName","src":"33790:7:0"}],"id":2047,"name":"VariableDeclaration","src":"33790:24:0"}],"id":2048,"name":"ParameterList","src":"33789:26:0"},{"attributes":{"parameters":[null]},"children":[],"id":2051,"name":"ParameterList","src":"33835:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2049,"name":"Identifier","src":"33825:9:0"}],"id":2050,"name":"ModifierInvocation","src":"33825:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":2052,"name":"Identifier","src":"33883:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2047,"type":"uint256","value":"_nextMinimumBond"},"id":2053,"name":"Identifier","src":"33901:16:0"}],"id":2054,"name":"Assignment","src":"33883:34:0"}],"id":2055,"name":"ExpressionStatement","src":"33883:34:0"}],"id":2056,"name":"Block","src":"33835:89:0"}],"id":2057,"name":"FunctionDefinition","src":"33763:161:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to update the minimum pod size.\n @param _nextMinimumPodSize The minimum size of a pod.","implemented":true,"isConstructor":false,"name":"updateMinimumPodSize","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_nextMinimumPodSize","scope":2069,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2058,"name":"ElementaryTypeName","src":"34096:7:0"}],"id":2059,"name":"VariableDeclaration","src":"34096:27:0"}],"id":2060,"name":"ParameterList","src":"34095:29:0"},{"attributes":{"parameters":[null]},"children":[],"id":2063,"name":"ParameterList","src":"34144:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2061,"name":"Identifier","src":"34134:9:0"}],"id":2062,"name":"ModifierInvocation","src":"34134:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":2064,"name":"Identifier","src":"34192:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2059,"type":"uint256","value":"_nextMinimumPodSize"},"id":2065,"name":"Identifier","src":"34213:19:0"}],"id":2066,"name":"Assignment","src":"34192:40:0"}],"id":2067,"name":"ExpressionStatement","src":"34192:40:0"}],"id":2068,"name":"Block","src":"34144:95:0"}],"id":2069,"name":"FunctionDefinition","src":"34066:173:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to update the minimum epoch interval.\n @param _nextMinimumEpochInterval The minimum number of blocks between epochs.","implemented":true,"isConstructor":false,"name":"updateMinimumEpochInterval","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_nextMinimumEpochInterval","scope":2081,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2070,"name":"ElementaryTypeName","src":"34447:7:0"}],"id":2071,"name":"VariableDeclaration","src":"34447:33:0"}],"id":2072,"name":"ParameterList","src":"34446:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":2075,"name":"ParameterList","src":"34501:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2073,"name":"Identifier","src":"34491:9:0"}],"id":2074,"name":"ModifierInvocation","src":"34491:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":2076,"name":"Identifier","src":"34549:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"_nextMinimumEpochInterval"},"id":2077,"name":"Identifier","src":"34576:25:0"}],"id":2078,"name":"Assignment","src":"34549:52:0"}],"id":2079,"name":"ExpressionStatement","src":"34549:52:0"}],"id":2080,"name":"Block","src":"34501:107:0"}],"id":2081,"name":"FunctionDefinition","src":"34411:197:0"},{"attributes":{"constant":false,"documentation":"@notice Allow the contract owner to update the DarknodeSlasher contract\n address.\n @param _slasher The new slasher address.","implemented":true,"isConstructor":false,"name":"updateSlasher","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_slasher","scope":2093,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2082,"name":"ElementaryTypeName","src":"34783:7:0"}],"id":2083,"name":"VariableDeclaration","src":"34783:16:0"}],"id":2084,"name":"ParameterList","src":"34782:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":2087,"name":"ParameterList","src":"34820:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2085,"name":"Identifier","src":"34810:9:0"}],"id":2086,"name":"ModifierInvocation","src":"34810:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2088,"name":"Identifier","src":"34830:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2083,"type":"address","value":"_slasher"},"id":2089,"name":"Identifier","src":"34844:8:0"}],"id":2090,"name":"Assignment","src":"34830:22:0"}],"id":2091,"name":"ExpressionStatement","src":"34830:22:0"}],"id":2092,"name":"Block","src":"34820:39:0"}],"id":2093,"name":"FunctionDefinition","src":"34760:99:0"},{"attributes":{"constant":false,"documentation":"@notice Allow the DarknodeSlasher contract to slash half of a darknode's\n bond and deregister it. The bond is distributed as follows:\n   1/2 is kept by the guilty prover\n   1/8 is rewarded to the first challenger\n   1/8 is rewarded to the second challenger\n   1/4 becomes unassigned\n @param _prover The guilty prover whose bond is being slashed\n @param _challenger1 The first of the two darknodes who submitted the challenge\n @param _challenger2 The second of the two darknodes who submitted the challenge","implemented":true,"isConstructor":false,"name":"slash","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_prover","scope":2170,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2094,"name":"ElementaryTypeName","src":"35450:7:0"}],"id":2095,"name":"VariableDeclaration","src":"35450:15:0"},{"attributes":{"constant":false,"name":"_challenger1","scope":2170,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2096,"name":"ElementaryTypeName","src":"35467:7:0"}],"id":2097,"name":"VariableDeclaration","src":"35467:20:0"},{"attributes":{"constant":false,"name":"_challenger2","scope":2170,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2098,"name":"ElementaryTypeName","src":"35489:7:0"}],"id":2099,"name":"VariableDeclaration","src":"35489:20:0"}],"id":2100,"name":"ParameterList","src":"35449:61:0"},{"attributes":{"parameters":[null]},"children":[],"id":2103,"name":"ParameterList","src":"35552:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1737,"type":"modifier ()","value":"onlySlasher"},"id":2101,"name":"Identifier","src":"35536:11:0"}],"id":2102,"name":"ModifierInvocation","src":"35536:11:0"},{"children":[{"attributes":{"assignments":[2105]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2104,"name":"ElementaryTypeName","src":"35562:7:0"}],"id":2105,"name":"VariableDeclaration","src":"35562:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeBond","referencedDeclaration":1542,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2106,"name":"Identifier","src":"35580:5:0"}],"id":2107,"name":"MemberAccess","src":"35580:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2108,"name":"Identifier","src":"35599:7:0"}],"id":2109,"name":"FunctionCall","src":"35580:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2110,"name":"Literal","src":"35610:1:0"}],"id":2111,"name":"BinaryOperation","src":"35580:31:0"}],"id":2112,"name":"VariableDeclarationStatement","src":"35562:49:0"},{"attributes":{"assignments":[2114]},"children":[{"attributes":{"constant":false,"name":"reward","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2113,"name":"ElementaryTypeName","src":"35621:7:0"}],"id":2114,"name":"VariableDeclaration","src":"35621:14:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"uint256","value":"penalty"},"id":2115,"name":"Identifier","src":"35638:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":2116,"name":"Literal","src":"35648:1:0"}],"id":2117,"name":"BinaryOperation","src":"35638:11:0"}],"id":2118,"name":"VariableDeclarationStatement","src":"35621:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"updateDarknodeBond","referencedDeclaration":1495,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2119,"name":"Identifier","src":"35715:5:0"}],"id":2121,"name":"MemberAccess","src":"35715:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2122,"name":"Identifier","src":"35740:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"uint256","value":"penalty"},"id":2123,"name":"Identifier","src":"35749:7:0"}],"id":2124,"name":"FunctionCall","src":"35715:42:0"}],"id":2125,"name":"ExpressionStatement","src":"35715:42:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2405,"type":"function (address) view returns (bool)","value":"isDeregisterable"},"id":2126,"name":"Identifier","src":"35844:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2127,"name":"Identifier","src":"35861:7:0"}],"id":2128,"name":"FunctionCall","src":"35844:25:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"updateDarknodeDeregisteredAt","referencedDeclaration":1512,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2129,"name":"Identifier","src":"35885:5:0"}],"id":2131,"name":"MemberAccess","src":"35885:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2132,"name":"Identifier","src":"35920:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2133,"name":"Identifier","src":"35929:12:0"}],"id":2134,"name":"MemberAccess","src":"35929:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2135,"name":"Identifier","src":"35956:20:0"}],"id":2136,"name":"BinaryOperation","src":"35929:47:0"}],"id":2137,"name":"FunctionCall","src":"35885:92:0"}],"id":2138,"name":"ExpressionStatement","src":"35885:92:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":2139,"name":"Identifier","src":"35991:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2140,"name":"Literal","src":"36016:1:0"}],"id":2141,"name":"Assignment","src":"35991:26:0"}],"id":2142,"name":"ExpressionStatement","src":"35991:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1637,"type":"function (address)","value":"LogDarknodeDeregistered"},"id":2143,"name":"Identifier","src":"36036:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2144,"name":"Identifier","src":"36060:7:0"}],"id":2145,"name":"FunctionCall","src":"36036:32:0"}],"id":2146,"name":"EmitStatement","src":"36031:37:0"}],"id":2147,"name":"Block","src":"35871:208:0"}],"id":2148,"name":"IfStatement","src":"35840:239:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":2149,"name":"Identifier","src":"36206:3:0"}],"id":2151,"name":"MemberAccess","src":"36206:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2152,"name":"Identifier","src":"36219:5:0"}],"id":2153,"name":"MemberAccess","src":"36219:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"address","value":"_challenger1"},"id":2154,"name":"Identifier","src":"36239:12:0"}],"id":2155,"name":"FunctionCall","src":"36219:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2114,"type":"uint256","value":"reward"},"id":2156,"name":"Identifier","src":"36254:6:0"}],"id":2157,"name":"FunctionCall","src":"36206:55:0"}],"id":2158,"name":"ExpressionStatement","src":"36206:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":2159,"name":"Identifier","src":"36271:3:0"}],"id":2161,"name":"MemberAccess","src":"36271:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2162,"name":"Identifier","src":"36284:5:0"}],"id":2163,"name":"MemberAccess","src":"36284:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2099,"type":"address","value":"_challenger2"},"id":2164,"name":"Identifier","src":"36304:12:0"}],"id":2165,"name":"FunctionCall","src":"36284:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2114,"type":"uint256","value":"reward"},"id":2166,"name":"Identifier","src":"36319:6:0"}],"id":2167,"name":"FunctionCall","src":"36271:55:0"}],"id":2168,"name":"ExpressionStatement","src":"36271:55:0"}],"id":2169,"name":"Block","src":"35552:781:0"}],"id":2170,"name":"FunctionDefinition","src":"35435:898:0"},{"attributes":{"constant":false,"documentation":"@notice Refund the bond of a deregistered darknode. This will make the\n darknode available for registration again. Anyone can call this function\n but the bond will always be refunded to the darknode owner.\n\n    /// @param _darknodeID The darknode ID that will be refunded. The caller\n        of this method must be the owner of this darknode.","implemented":true,"isConstructor":false,"name":"refund","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2211,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2171,"name":"ElementaryTypeName","src":"36734:7:0"}],"id":2172,"name":"VariableDeclaration","src":"36734:19:0"}],"id":2173,"name":"ParameterList","src":"36733:21:0"},{"attributes":{"parameters":[null]},"children":[],"id":2177,"name":"ParameterList","src":"36792:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1712,"type":"modifier (address)","value":"onlyRefundable"},"id":2174,"name":"Identifier","src":"36764:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2175,"name":"Identifier","src":"36779:11:0"}],"id":2176,"name":"ModifierInvocation","src":"36764:27:0"},{"children":[{"attributes":{"assignments":[2179]},"children":[{"attributes":{"constant":false,"name":"darknodeOwner","scope":2211,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2178,"name":"ElementaryTypeName","src":"36802:7:0"}],"id":2179,"name":"VariableDeclaration","src":"36802:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2180,"name":"Identifier","src":"36826:5:0"}],"id":2181,"name":"MemberAccess","src":"36826:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2182,"name":"Identifier","src":"36846:11:0"}],"id":2183,"name":"FunctionCall","src":"36826:32:0"}],"id":2184,"name":"VariableDeclarationStatement","src":"36802:56:0"},{"attributes":{"assignments":[2186]},"children":[{"attributes":{"constant":false,"name":"amount","scope":2211,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2185,"name":"ElementaryTypeName","src":"36905:7:0"}],"id":2186,"name":"VariableDeclaration","src":"36905:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeBond","referencedDeclaration":1542,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2187,"name":"Identifier","src":"36922:5:0"}],"id":2188,"name":"MemberAccess","src":"36922:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2189,"name":"Identifier","src":"36941:11:0"}],"id":2190,"name":"FunctionCall","src":"36922:31:0"}],"id":2191,"name":"VariableDeclarationStatement","src":"36905:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"removeDarknode","referencedDeclaration":1455,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2192,"name":"Identifier","src":"37012:5:0"}],"id":2194,"name":"MemberAccess","src":"37012:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2195,"name":"Identifier","src":"37033:11:0"}],"id":2196,"name":"FunctionCall","src":"37012:33:0"}],"id":2197,"name":"ExpressionStatement","src":"37012:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":2198,"name":"Identifier","src":"37104:3:0"}],"id":2200,"name":"MemberAccess","src":"37104:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2179,"type":"address","value":"darknodeOwner"},"id":2201,"name":"Identifier","src":"37117:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2186,"type":"uint256","value":"amount"},"id":2202,"name":"Identifier","src":"37132:6:0"}],"id":2203,"name":"FunctionCall","src":"37104:35:0"}],"id":2204,"name":"ExpressionStatement","src":"37104:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1643,"type":"function (address,uint256)","value":"LogDarknodeOwnerRefunded"},"id":2205,"name":"Identifier","src":"37181:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2179,"type":"address","value":"darknodeOwner"},"id":2206,"name":"Identifier","src":"37206:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2186,"type":"uint256","value":"amount"},"id":2207,"name":"Identifier","src":"37221:6:0"}],"id":2208,"name":"FunctionCall","src":"37181:47:0"}],"id":2209,"name":"EmitStatement","src":"37176:52:0"}],"id":2210,"name":"Block","src":"36792:443:0"}],"id":2211,"name":"FunctionDefinition","src":"36718:517:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves the address of the account that registered a darknode.\n @param _darknodeID The ID of the darknode to retrieve the owner for.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodeOwner","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2224,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2212,"name":"ElementaryTypeName","src":"37425:7:0"}],"id":2213,"name":"VariableDeclaration","src":"37425:19:0"}],"id":2214,"name":"ParameterList","src":"37424:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2224,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2215,"name":"ElementaryTypeName","src":"37469:7:0"}],"id":2216,"name":"VariableDeclaration","src":"37469:7:0"}],"id":2217,"name":"ParameterList","src":"37468:9:0"},{"children":[{"attributes":{"functionReturnParameters":2217},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2218,"name":"Identifier","src":"37495:5:0"}],"id":2219,"name":"MemberAccess","src":"37495:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2213,"type":"address","value":"_darknodeID"},"id":2220,"name":"Identifier","src":"37515:11:0"}],"id":2221,"name":"FunctionCall","src":"37495:32:0"}],"id":2222,"name":"Return","src":"37488:39:0"}],"id":2223,"name":"Block","src":"37478:56:0"}],"id":2224,"name":"FunctionDefinition","src":"37399:135:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves the bond amount of a darknode in 10^-18 REN.\n @param _darknodeID The ID of the darknode to retrieve the bond for.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodeBond","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2237,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2225,"name":"ElementaryTypeName","src":"37712:7:0"}],"id":2226,"name":"VariableDeclaration","src":"37712:19:0"}],"id":2227,"name":"ParameterList","src":"37711:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2237,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2228,"name":"ElementaryTypeName","src":"37756:7:0"}],"id":2229,"name":"VariableDeclaration","src":"37756:7:0"}],"id":2230,"name":"ParameterList","src":"37755:9:0"},{"children":[{"attributes":{"functionReturnParameters":2230},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeBond","referencedDeclaration":1542,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2231,"name":"Identifier","src":"37782:5:0"}],"id":2232,"name":"MemberAccess","src":"37782:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2226,"type":"address","value":"_darknodeID"},"id":2233,"name":"Identifier","src":"37801:11:0"}],"id":2234,"name":"FunctionCall","src":"37782:31:0"}],"id":2235,"name":"Return","src":"37775:38:0"}],"id":2236,"name":"Block","src":"37765:55:0"}],"id":2237,"name":"FunctionDefinition","src":"37687:133:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves the encryption public key of the darknode.\n @param _darknodeID The ID of the darknode to retrieve the public key for.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodePublicKey","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2250,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2238,"name":"ElementaryTypeName","src":"38007:7:0"}],"id":2239,"name":"VariableDeclaration","src":"38007:19:0"}],"id":2240,"name":"ParameterList","src":"38006:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2250,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2241,"name":"ElementaryTypeName","src":"38051:5:0"}],"id":2242,"name":"VariableDeclaration","src":"38051:5:0"}],"id":2243,"name":"ParameterList","src":"38050:7:0"},{"children":[{"attributes":{"functionReturnParameters":2243},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodePublicKey","referencedDeclaration":1587,"type":"function (address) view external returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2244,"name":"Identifier","src":"38075:5:0"}],"id":2245,"name":"MemberAccess","src":"38075:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2239,"type":"address","value":"_darknodeID"},"id":2246,"name":"Identifier","src":"38099:11:0"}],"id":2247,"name":"FunctionCall","src":"38075:36:0"}],"id":2248,"name":"Return","src":"38068:43:0"}],"id":2249,"name":"Block","src":"38058:60:0"}],"id":2250,"name":"FunctionDefinition","src":"37977:141:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves a list of darknodes which are registered for the\n current epoch.\n @param _start A darknode ID used as an offset for the list. If _start is\n        0x0, the first dark node will be used. _start won't be\n        included it is not registered for the epoch.\n @param _count The number of darknodes to retrieve starting from _start.\n        If _count is 0, all of the darknodes from _start are\n        retrieved. If _count is more than the remaining number of\n        registered darknodes, the rest of the list will contain\n        0x0s.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodes","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_start","scope":2280,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2251,"name":"ElementaryTypeName","src":"38768:7:0"}],"id":2252,"name":"VariableDeclaration","src":"38768:14:0"},{"attributes":{"constant":false,"name":"_count","scope":2280,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2253,"name":"ElementaryTypeName","src":"38784:7:0"}],"id":2254,"name":"VariableDeclaration","src":"38784:14:0"}],"id":2255,"name":"ParameterList","src":"38767:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2280,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2256,"name":"ElementaryTypeName","src":"38823:7:0"}],"id":2257,"name":"ArrayTypeName","src":"38823:9:0"}],"id":2258,"name":"VariableDeclaration","src":"38823:9:0"}],"id":2259,"name":"ParameterList","src":"38822:11:0"},{"children":[{"attributes":{"assignments":[2261]},"children":[{"attributes":{"constant":false,"name":"count","scope":2280,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2260,"name":"ElementaryTypeName","src":"38844:7:0"}],"id":2261,"name":"VariableDeclaration","src":"38844:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2254,"type":"uint256","value":"_count"},"id":2262,"name":"Identifier","src":"38860:6:0"}],"id":2263,"name":"VariableDeclarationStatement","src":"38844:22:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2261,"type":"uint256","value":"count"},"id":2264,"name":"Identifier","src":"38880:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2265,"name":"Literal","src":"38889:1:0"}],"id":2266,"name":"BinaryOperation","src":"38880:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2261,"type":"uint256","value":"count"},"id":2267,"name":"Identifier","src":"38906:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":2268,"name":"Identifier","src":"38914:12:0"}],"id":2269,"name":"Assignment","src":"38906:20:0"}],"id":2270,"name":"ExpressionStatement","src":"38906:20:0"}],"id":2271,"name":"Block","src":"38892:45:0"}],"id":2272,"name":"IfStatement","src":"38876:61:0"},{"attributes":{"functionReturnParameters":2259},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":2647,"type":"function (address,uint256,bool) view returns (address[] memory)","value":"getDarknodesFromEpochs"},"id":2273,"name":"Identifier","src":"38953:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2252,"type":"address","value":"_start"},"id":2274,"name":"Identifier","src":"38976:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2261,"type":"uint256","value":"count"},"id":2275,"name":"Identifier","src":"38984:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":2276,"name":"Literal","src":"38991:5:0"}],"id":2277,"name":"FunctionCall","src":"38953:44:0"}],"id":2278,"name":"Return","src":"38946:51:0"}],"id":2279,"name":"Block","src":"38834:170:0"}],"id":2280,"name":"FunctionDefinition","src":"38746:258:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves a list of darknodes which were registered for the\n previous epoch. See `getDarknodes` for the parameter documentation.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getPreviousDarknodes","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_start","scope":2310,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2281,"name":"ElementaryTypeName","src":"39192:7:0"}],"id":2282,"name":"VariableDeclaration","src":"39192:14:0"},{"attributes":{"constant":false,"name":"_count","scope":2310,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2283,"name":"ElementaryTypeName","src":"39208:7:0"}],"id":2284,"name":"VariableDeclaration","src":"39208:14:0"}],"id":2285,"name":"ParameterList","src":"39191:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2310,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2286,"name":"ElementaryTypeName","src":"39247:7:0"}],"id":2287,"name":"ArrayTypeName","src":"39247:9:0"}],"id":2288,"name":"VariableDeclaration","src":"39247:9:0"}],"id":2289,"name":"ParameterList","src":"39246:11:0"},{"children":[{"attributes":{"assignments":[2291]},"children":[{"attributes":{"constant":false,"name":"count","scope":2310,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2290,"name":"ElementaryTypeName","src":"39268:7:0"}],"id":2291,"name":"VariableDeclaration","src":"39268:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2284,"type":"uint256","value":"_count"},"id":2292,"name":"Identifier","src":"39284:6:0"}],"id":2293,"name":"VariableDeclarationStatement","src":"39268:22:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2291,"type":"uint256","value":"count"},"id":2294,"name":"Identifier","src":"39304:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2295,"name":"Literal","src":"39313:1:0"}],"id":2296,"name":"BinaryOperation","src":"39304:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2291,"type":"uint256","value":"count"},"id":2297,"name":"Identifier","src":"39330:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"numDarknodesPreviousEpoch"},"id":2298,"name":"Identifier","src":"39338:25:0"}],"id":2299,"name":"Assignment","src":"39330:33:0"}],"id":2300,"name":"ExpressionStatement","src":"39330:33:0"}],"id":2301,"name":"Block","src":"39316:58:0"}],"id":2302,"name":"IfStatement","src":"39300:74:0"},{"attributes":{"functionReturnParameters":2289},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":2647,"type":"function (address,uint256,bool) view returns (address[] memory)","value":"getDarknodesFromEpochs"},"id":2303,"name":"Identifier","src":"39390:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2282,"type":"address","value":"_start"},"id":2304,"name":"Identifier","src":"39413:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2291,"type":"uint256","value":"count"},"id":2305,"name":"Identifier","src":"39421:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":2306,"name":"Literal","src":"39428:4:0"}],"id":2307,"name":"FunctionCall","src":"39390:43:0"}],"id":2308,"name":"Return","src":"39383:50:0"}],"id":2309,"name":"Block","src":"39258:182:0"}],"id":2310,"name":"FunctionDefinition","src":"39162:278:0"},{"attributes":{"constant":true,"documentation":"@notice Returns whether a darknode is scheduled to become registered\n at next epoch.\n @param _darknodeID The ID of the darknode to return","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isPendingRegistration","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2334,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2311,"name":"ElementaryTypeName","src":"39637:7:0"}],"id":2312,"name":"VariableDeclaration","src":"39637:19:0"}],"id":2313,"name":"ParameterList","src":"39636:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2334,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2314,"name":"ElementaryTypeName","src":"39681:4:0"}],"id":2315,"name":"VariableDeclaration","src":"39681:4:0"}],"id":2316,"name":"ParameterList","src":"39680:6:0"},{"children":[{"attributes":{"assignments":[2318]},"children":[{"attributes":{"constant":false,"name":"registeredAt","scope":2334,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2317,"name":"ElementaryTypeName","src":"39697:7:0"}],"id":2318,"name":"VariableDeclaration","src":"39697:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeRegisteredAt","referencedDeclaration":1557,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2319,"name":"Identifier","src":"39720:5:0"}],"id":2320,"name":"MemberAccess","src":"39720:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2312,"type":"address","value":"_darknodeID"},"id":2321,"name":"Identifier","src":"39747:11:0"}],"id":2322,"name":"FunctionCall","src":"39720:39:0"}],"id":2323,"name":"VariableDeclarationStatement","src":"39697:62:0"},{"attributes":{"functionReturnParameters":2316},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2318,"type":"uint256","value":"registeredAt"},"id":2324,"name":"Identifier","src":"39776:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2325,"name":"Literal","src":"39792:1:0"}],"id":2326,"name":"BinaryOperation","src":"39776:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2318,"type":"uint256","value":"registeredAt"},"id":2327,"name":"Identifier","src":"39797:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2328,"name":"Identifier","src":"39812:12:0"}],"id":2329,"name":"MemberAccess","src":"39812:24:0"}],"id":2330,"name":"BinaryOperation","src":"39797:39:0"}],"id":2331,"name":"BinaryOperation","src":"39776:60:0"}],"id":2332,"name":"Return","src":"39769:67:0"}],"id":2333,"name":"Block","src":"39687:156:0"}],"id":2334,"name":"FunctionDefinition","src":"39606:237:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the pending deregistered state. In\n this state a darknode is still considered registered.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isPendingDeregistration","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2358,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2335,"name":"ElementaryTypeName","src":"40023:7:0"}],"id":2336,"name":"VariableDeclaration","src":"40023:19:0"}],"id":2337,"name":"ParameterList","src":"40022:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2358,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2338,"name":"ElementaryTypeName","src":"40067:4:0"}],"id":2339,"name":"VariableDeclaration","src":"40067:4:0"}],"id":2340,"name":"ParameterList","src":"40066:6:0"},{"children":[{"attributes":{"assignments":[2342]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2358,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2341,"name":"ElementaryTypeName","src":"40083:7:0"}],"id":2342,"name":"VariableDeclaration","src":"40083:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2343,"name":"Identifier","src":"40108:5:0"}],"id":2344,"name":"MemberAccess","src":"40108:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2336,"type":"address","value":"_darknodeID"},"id":2345,"name":"Identifier","src":"40137:11:0"}],"id":2346,"name":"FunctionCall","src":"40108:41:0"}],"id":2347,"name":"VariableDeclarationStatement","src":"40083:66:0"},{"attributes":{"functionReturnParameters":2340},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2342,"type":"uint256","value":"deregisteredAt"},"id":2348,"name":"Identifier","src":"40166:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2349,"name":"Literal","src":"40184:1:0"}],"id":2350,"name":"BinaryOperation","src":"40166:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2342,"type":"uint256","value":"deregisteredAt"},"id":2351,"name":"Identifier","src":"40189:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2352,"name":"Identifier","src":"40206:12:0"}],"id":2353,"name":"MemberAccess","src":"40206:24:0"}],"id":2354,"name":"BinaryOperation","src":"40189:41:0"}],"id":2355,"name":"BinaryOperation","src":"40166:64:0"}],"id":2356,"name":"Return","src":"40159:71:0"}],"id":2357,"name":"Block","src":"40073:164:0"}],"id":2358,"name":"FunctionDefinition","src":"39990:247:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the deregistered state.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isDeregistered","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2382,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2359,"name":"ElementaryTypeName","src":"40335:7:0"}],"id":2360,"name":"VariableDeclaration","src":"40335:19:0"}],"id":2361,"name":"ParameterList","src":"40334:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2382,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2362,"name":"ElementaryTypeName","src":"40377:4:0"}],"id":2363,"name":"VariableDeclaration","src":"40377:4:0"}],"id":2364,"name":"ParameterList","src":"40376:6:0"},{"children":[{"attributes":{"assignments":[2366]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2382,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2365,"name":"ElementaryTypeName","src":"40393:7:0"}],"id":2366,"name":"VariableDeclaration","src":"40393:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2367,"name":"Identifier","src":"40418:5:0"}],"id":2368,"name":"MemberAccess","src":"40418:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2360,"type":"address","value":"_darknodeID"},"id":2369,"name":"Identifier","src":"40447:11:0"}],"id":2370,"name":"FunctionCall","src":"40418:41:0"}],"id":2371,"name":"VariableDeclarationStatement","src":"40393:66:0"},{"attributes":{"functionReturnParameters":2364},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2366,"type":"uint256","value":"deregisteredAt"},"id":2372,"name":"Identifier","src":"40476:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2373,"name":"Literal","src":"40494:1:0"}],"id":2374,"name":"BinaryOperation","src":"40476:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2366,"type":"uint256","value":"deregisteredAt"},"id":2375,"name":"Identifier","src":"40499:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2376,"name":"Identifier","src":"40517:12:0"}],"id":2377,"name":"MemberAccess","src":"40517:24:0"}],"id":2378,"name":"BinaryOperation","src":"40499:42:0"}],"id":2379,"name":"BinaryOperation","src":"40476:65:0"}],"id":2380,"name":"Return","src":"40469:72:0"}],"id":2381,"name":"Block","src":"40383:165:0"}],"id":2382,"name":"FunctionDefinition","src":"40311:237:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode can be deregistered. This is true if the\n darknodes is in the registered state and has not attempted to\n deregister yet.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isDeregisterable","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2405,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2383,"name":"ElementaryTypeName","src":"40753:7:0"}],"id":2384,"name":"VariableDeclaration","src":"40753:19:0"}],"id":2385,"name":"ParameterList","src":"40752:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2405,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2386,"name":"ElementaryTypeName","src":"40795:4:0"}],"id":2387,"name":"VariableDeclaration","src":"40795:4:0"}],"id":2388,"name":"ParameterList","src":"40794:6:0"},{"children":[{"attributes":{"assignments":[2390]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2405,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2389,"name":"ElementaryTypeName","src":"40811:7:0"}],"id":2390,"name":"VariableDeclaration","src":"40811:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2391,"name":"Identifier","src":"40836:5:0"}],"id":2392,"name":"MemberAccess","src":"40836:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2384,"type":"address","value":"_darknodeID"},"id":2393,"name":"Identifier","src":"40865:11:0"}],"id":2394,"name":"FunctionCall","src":"40836:41:0"}],"id":2395,"name":"VariableDeclarationStatement","src":"40811:66:0"},{"attributes":{"functionReturnParameters":2388},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2468,"type":"function (address) view returns (bool)","value":"isRegistered"},"id":2396,"name":"Identifier","src":"41050:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2384,"type":"address","value":"_darknodeID"},"id":2397,"name":"Identifier","src":"41063:11:0"}],"id":2398,"name":"FunctionCall","src":"41050:25:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2390,"type":"uint256","value":"deregisteredAt"},"id":2399,"name":"Identifier","src":"41079:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2400,"name":"Literal","src":"41097:1:0"}],"id":2401,"name":"BinaryOperation","src":"41079:19:0"}],"id":2402,"name":"BinaryOperation","src":"41050:48:0"}],"id":2403,"name":"Return","src":"41043:55:0"}],"id":2404,"name":"Block","src":"40801:304:0"}],"id":2405,"name":"FunctionDefinition","src":"40727:378:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the refunded state. This is true\n for darknodes that have never been registered, or darknodes that have\n been deregistered and refunded.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRefunded","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2435,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2406,"name":"ElementaryTypeName","src":"41326:7:0"}],"id":2407,"name":"VariableDeclaration","src":"41326:19:0"}],"id":2408,"name":"ParameterList","src":"41325:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2435,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2409,"name":"ElementaryTypeName","src":"41368:4:0"}],"id":2410,"name":"VariableDeclaration","src":"41368:4:0"}],"id":2411,"name":"ParameterList","src":"41367:6:0"},{"children":[{"attributes":{"assignments":[2413]},"children":[{"attributes":{"constant":false,"name":"registeredAt","scope":2435,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2412,"name":"ElementaryTypeName","src":"41384:7:0"}],"id":2413,"name":"VariableDeclaration","src":"41384:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeRegisteredAt","referencedDeclaration":1557,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2414,"name":"Identifier","src":"41407:5:0"}],"id":2415,"name":"MemberAccess","src":"41407:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2407,"type":"address","value":"_darknodeID"},"id":2416,"name":"Identifier","src":"41434:11:0"}],"id":2417,"name":"FunctionCall","src":"41407:39:0"}],"id":2418,"name":"VariableDeclarationStatement","src":"41384:62:0"},{"attributes":{"assignments":[2420]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2435,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2419,"name":"ElementaryTypeName","src":"41456:7:0"}],"id":2420,"name":"VariableDeclaration","src":"41456:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2421,"name":"Identifier","src":"41481:5:0"}],"id":2422,"name":"MemberAccess","src":"41481:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2407,"type":"address","value":"_darknodeID"},"id":2423,"name":"Identifier","src":"41510:11:0"}],"id":2424,"name":"FunctionCall","src":"41481:41:0"}],"id":2425,"name":"VariableDeclarationStatement","src":"41456:66:0"},{"attributes":{"functionReturnParameters":2411},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2413,"type":"uint256","value":"registeredAt"},"id":2426,"name":"Identifier","src":"41539:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2427,"name":"Literal","src":"41555:1:0"}],"id":2428,"name":"BinaryOperation","src":"41539:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2420,"type":"uint256","value":"deregisteredAt"},"id":2429,"name":"Identifier","src":"41560:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2430,"name":"Literal","src":"41578:1:0"}],"id":2431,"name":"BinaryOperation","src":"41560:19:0"}],"id":2432,"name":"BinaryOperation","src":"41539:40:0"}],"id":2433,"name":"Return","src":"41532:47:0"}],"id":2434,"name":"Block","src":"41374:212:0"}],"id":2435,"name":"FunctionDefinition","src":"41306:280:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is refundable. This is true for darknodes\n that have been in the deregistered state for one full epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRefundable","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2455,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2436,"name":"ElementaryTypeName","src":"41763:7:0"}],"id":2437,"name":"VariableDeclaration","src":"41763:19:0"}],"id":2438,"name":"ParameterList","src":"41762:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2455,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2439,"name":"ElementaryTypeName","src":"41805:4:0"}],"id":2440,"name":"VariableDeclaration","src":"41805:4:0"}],"id":2441,"name":"ParameterList","src":"41804:6:0"},{"children":[{"attributes":{"functionReturnParameters":2441},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2382,"type":"function (address) view returns (bool)","value":"isDeregistered"},"id":2442,"name":"Identifier","src":"41828:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2437,"type":"address","value":"_darknodeID"},"id":2443,"name":"Identifier","src":"41843:11:0"}],"id":2444,"name":"FunctionCall","src":"41828:27:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2445,"name":"Identifier","src":"41859:5:0"}],"id":2446,"name":"MemberAccess","src":"41859:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2437,"type":"address","value":"_darknodeID"},"id":2447,"name":"Identifier","src":"41888:11:0"}],"id":2448,"name":"FunctionCall","src":"41859:41:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":2449,"name":"Identifier","src":"41904:13:0"}],"id":2450,"name":"MemberAccess","src":"41904:25:0"}],"id":2451,"name":"BinaryOperation","src":"41859:70:0"}],"id":2452,"name":"BinaryOperation","src":"41828:101:0"}],"id":2453,"name":"Return","src":"41821:108:0"}],"id":2454,"name":"Block","src":"41811:125:0"}],"id":2455,"name":"FunctionDefinition","src":"41741:195:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the registered state.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRegistered","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2468,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2456,"name":"ElementaryTypeName","src":"42030:7:0"}],"id":2457,"name":"VariableDeclaration","src":"42030:19:0"}],"id":2458,"name":"ParameterList","src":"42029:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2468,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2459,"name":"ElementaryTypeName","src":"42072:4:0"}],"id":2460,"name":"VariableDeclaration","src":"42072:4:0"}],"id":2461,"name":"ParameterList","src":"42071:6:0"},{"children":[{"attributes":{"functionReturnParameters":2461},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Epoch_$1597_storage","typeString":"struct DarknodeRegistry.Epoch storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":2531,"type":"function (address,struct DarknodeRegistry.Epoch memory) view returns (bool)","value":"isRegisteredInEpoch"},"id":2462,"name":"Identifier","src":"42095:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2457,"type":"address","value":"_darknodeID"},"id":2463,"name":"Identifier","src":"42115:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2464,"name":"Identifier","src":"42128:12:0"}],"id":2465,"name":"FunctionCall","src":"42095:46:0"}],"id":2466,"name":"Return","src":"42088:53:0"}],"id":2467,"name":"Block","src":"42078:70:0"}],"id":2468,"name":"FunctionDefinition","src":"42008:140:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode was in the registered state last epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRegisteredInPreviousEpoch","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2481,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2469,"name":"ElementaryTypeName","src":"42269:7:0"}],"id":2470,"name":"VariableDeclaration","src":"42269:19:0"}],"id":2471,"name":"ParameterList","src":"42268:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2481,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2472,"name":"ElementaryTypeName","src":"42311:4:0"}],"id":2473,"name":"VariableDeclaration","src":"42311:4:0"}],"id":2474,"name":"ParameterList","src":"42310:6:0"},{"children":[{"attributes":{"functionReturnParameters":2474},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Epoch_$1597_storage","typeString":"struct DarknodeRegistry.Epoch storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":2531,"type":"function (address,struct DarknodeRegistry.Epoch memory) view returns (bool)","value":"isRegisteredInEpoch"},"id":2475,"name":"Identifier","src":"42334:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2470,"type":"address","value":"_darknodeID"},"id":2476,"name":"Identifier","src":"42354:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":2477,"name":"Identifier","src":"42367:13:0"}],"id":2478,"name":"FunctionCall","src":"42334:47:0"}],"id":2479,"name":"Return","src":"42327:54:0"}],"id":2480,"name":"Block","src":"42317:71:0"}],"id":2481,"name":"FunctionDefinition","src":"42232:156:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode was in the registered state for a given\n epoch.\n @param _darknodeID The ID of the darknode\n @param _epoch One of currentEpoch, previousEpoch","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRegisteredInEpoch","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2531,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2482,"name":"ElementaryTypeName","src":"42623:7:0"}],"id":2483,"name":"VariableDeclaration","src":"42623:19:0"},{"attributes":{"constant":false,"name":"_epoch","scope":2531,"stateVariable":false,"storageLocation":"default","type":"struct DarknodeRegistry.Epoch","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Epoch","referencedDeclaration":1597,"type":"struct DarknodeRegistry.Epoch"},"id":2484,"name":"UserDefinedTypeName","src":"42644:5:0"}],"id":2485,"name":"VariableDeclaration","src":"42644:12:0"}],"id":2486,"name":"ParameterList","src":"42622:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2531,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2487,"name":"ElementaryTypeName","src":"42680:4:0"}],"id":2488,"name":"VariableDeclaration","src":"42680:4:0"}],"id":2489,"name":"ParameterList","src":"42679:6:0"},{"children":[{"attributes":{"assignments":[2491]},"children":[{"attributes":{"constant":false,"name":"registeredAt","scope":2531,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2490,"name":"ElementaryTypeName","src":"42696:7:0"}],"id":2491,"name":"VariableDeclaration","src":"42696:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeRegisteredAt","referencedDeclaration":1557,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2492,"name":"Identifier","src":"42719:5:0"}],"id":2493,"name":"MemberAccess","src":"42719:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2483,"type":"address","value":"_darknodeID"},"id":2494,"name":"Identifier","src":"42746:11:0"}],"id":2495,"name":"FunctionCall","src":"42719:39:0"}],"id":2496,"name":"VariableDeclarationStatement","src":"42696:62:0"},{"attributes":{"assignments":[2498]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2531,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2497,"name":"ElementaryTypeName","src":"42768:7:0"}],"id":2498,"name":"VariableDeclaration","src":"42768:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2499,"name":"Identifier","src":"42793:5:0"}],"id":2500,"name":"MemberAccess","src":"42793:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2483,"type":"address","value":"_darknodeID"},"id":2501,"name":"Identifier","src":"42822:11:0"}],"id":2502,"name":"FunctionCall","src":"42793:41:0"}],"id":2503,"name":"VariableDeclarationStatement","src":"42768:66:0"},{"attributes":{"assignments":[2505]},"children":[{"attributes":{"constant":false,"name":"registered","scope":2531,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2504,"name":"ElementaryTypeName","src":"42844:4:0"}],"id":2505,"name":"VariableDeclaration","src":"42844:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2491,"type":"uint256","value":"registeredAt"},"id":2506,"name":"Identifier","src":"42862:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2507,"name":"Literal","src":"42878:1:0"}],"id":2508,"name":"BinaryOperation","src":"42862:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2491,"type":"uint256","value":"registeredAt"},"id":2509,"name":"Identifier","src":"42883:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2485,"type":"struct DarknodeRegistry.Epoch memory","value":"_epoch"},"id":2510,"name":"Identifier","src":"42899:6:0"}],"id":2511,"name":"MemberAccess","src":"42899:18:0"}],"id":2512,"name":"BinaryOperation","src":"42883:34:0"}],"id":2513,"name":"BinaryOperation","src":"42862:55:0"}],"id":2514,"name":"VariableDeclarationStatement","src":"42844:73:0"},{"attributes":{"assignments":[2516]},"children":[{"attributes":{"constant":false,"name":"notDeregistered","scope":2531,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2515,"name":"ElementaryTypeName","src":"42927:4:0"}],"id":2516,"name":"VariableDeclaration","src":"42927:20:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"uint256","value":"deregisteredAt"},"id":2517,"name":"Identifier","src":"42950:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2518,"name":"Literal","src":"42968:1:0"}],"id":2519,"name":"BinaryOperation","src":"42950:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"uint256","value":"deregisteredAt"},"id":2520,"name":"Identifier","src":"42973:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2485,"type":"struct DarknodeRegistry.Epoch memory","value":"_epoch"},"id":2521,"name":"Identifier","src":"42990:6:0"}],"id":2522,"name":"MemberAccess","src":"42990:18:0"}],"id":2523,"name":"BinaryOperation","src":"42973:35:0"}],"id":2524,"name":"BinaryOperation","src":"42950:58:0"}],"id":2525,"name":"VariableDeclarationStatement","src":"42927:81:0"},{"attributes":{"functionReturnParameters":2489},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2505,"type":"bool","value":"registered"},"id":2526,"name":"Identifier","src":"43159:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2516,"type":"bool","value":"notDeregistered"},"id":2527,"name":"Identifier","src":"43173:15:0"}],"id":2528,"name":"BinaryOperation","src":"43159:29:0"}],"id":2529,"name":"Return","src":"43152:36:0"}],"id":2530,"name":"Block","src":"42686:509:0"}],"id":2531,"name":"FunctionDefinition","src":"42594:601:0"},{"attributes":{"constant":true,"documentation":"@notice Returns a list of darknodes registered for either the current\n or the previous epoch. See `getDarknodes` for documentation on the\n parameters `_start` and `_count`.\n @param _usePreviousEpoch If true, use the previous epoch, otherwise use\n        the current epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodesFromEpochs","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_start","scope":2647,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2532,"name":"ElementaryTypeName","src":"43542:7:0"}],"id":2533,"name":"VariableDeclaration","src":"43542:14:0"},{"attributes":{"constant":false,"name":"_count","scope":2647,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2534,"name":"ElementaryTypeName","src":"43558:7:0"}],"id":2535,"name":"VariableDeclaration","src":"43558:14:0"},{"attributes":{"constant":false,"name":"_usePreviousEpoch","scope":2647,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2536,"name":"ElementaryTypeName","src":"43574:4:0"}],"id":2537,"name":"VariableDeclaration","src":"43574:22:0"}],"id":2538,"name":"ParameterList","src":"43541:56:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2647,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2539,"name":"ElementaryTypeName","src":"43620:7:0"}],"id":2540,"name":"ArrayTypeName","src":"43620:9:0"}],"id":2541,"name":"VariableDeclaration","src":"43620:9:0"}],"id":2542,"name":"ParameterList","src":"43619:11:0"},{"children":[{"attributes":{"assignments":[2544]},"children":[{"attributes":{"constant":false,"name":"count","scope":2647,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2543,"name":"ElementaryTypeName","src":"43641:7:0"}],"id":2544,"name":"VariableDeclaration","src":"43641:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2535,"type":"uint256","value":"_count"},"id":2545,"name":"Identifier","src":"43657:6:0"}],"id":2546,"name":"VariableDeclarationStatement","src":"43641:22:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2547,"name":"Identifier","src":"43677:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2548,"name":"Literal","src":"43686:1:0"}],"id":2549,"name":"BinaryOperation","src":"43677:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2550,"name":"Identifier","src":"43703:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":2551,"name":"Identifier","src":"43711:12:0"}],"id":2552,"name":"Assignment","src":"43703:20:0"}],"id":2553,"name":"ExpressionStatement","src":"43703:20:0"}],"id":2554,"name":"Block","src":"43689:45:0"}],"id":2555,"name":"IfStatement","src":"43673:61:0"},{"attributes":{"assignments":[2559]},"children":[{"attributes":{"constant":false,"name":"nodes","scope":2647,"stateVariable":false,"storageLocation":"memory","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2557,"name":"ElementaryTypeName","src":"43744:7:0"}],"id":2558,"name":"ArrayTypeName","src":"43744:9:0"}],"id":2559,"name":"VariableDeclaration","src":"43744:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"function (uint256) pure returns (address[] memory)"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2560,"name":"ElementaryTypeName","src":"43773:7:0"}],"id":2561,"name":"ArrayTypeName","src":"43773:9:0"}],"id":2562,"name":"NewExpression","src":"43769:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2563,"name":"Identifier","src":"43783:5:0"}],"id":2564,"name":"FunctionCall","src":"43769:20:0"}],"id":2565,"name":"VariableDeclarationStatement","src":"43744:45:0"},{"attributes":{"assignments":[2567]},"children":[{"attributes":{"constant":false,"name":"n","scope":2647,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2566,"name":"ElementaryTypeName","src":"43849:7:0"}],"id":2567,"name":"VariableDeclaration","src":"43849:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2568,"name":"Literal","src":"43861:1:0"}],"id":2569,"name":"VariableDeclarationStatement","src":"43849:13:0"},{"attributes":{"assignments":[2571]},"children":[{"attributes":{"constant":false,"name":"next","scope":2647,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2570,"name":"ElementaryTypeName","src":"43872:7:0"}],"id":2571,"name":"VariableDeclaration","src":"43872:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2533,"type":"address","value":"_start"},"id":2572,"name":"Identifier","src":"43887:6:0"}],"id":2573,"name":"VariableDeclarationStatement","src":"43872:21:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2574,"name":"Identifier","src":"43907:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":2575,"name":"Literal","src":"43915:3:0"}],"id":2576,"name":"BinaryOperation","src":"43907:11:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2577,"name":"Identifier","src":"43934:4:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"begin","referencedDeclaration":1403,"type":"function () view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2578,"name":"Identifier","src":"43941:5:0"}],"id":2579,"name":"MemberAccess","src":"43941:11:0"}],"id":2580,"name":"FunctionCall","src":"43941:13:0"}],"id":2581,"name":"Assignment","src":"43934:20:0"}],"id":2582,"name":"ExpressionStatement","src":"43934:20:0"}],"id":2583,"name":"Block","src":"43920:45:0"}],"id":2584,"name":"IfStatement","src":"43903:62:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2567,"type":"uint256","value":"n"},"id":2585,"name":"Identifier","src":"44052:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2586,"name":"Identifier","src":"44056:5:0"}],"id":2587,"name":"BinaryOperation","src":"44052:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2588,"name":"Identifier","src":"44081:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":2589,"name":"Literal","src":"44089:3:0"}],"id":2590,"name":"BinaryOperation","src":"44081:11:0"},{"children":[{"id":2591,"name":"Break","src":"44112:5:0"}],"id":2592,"name":"Block","src":"44094:38:0"}],"id":2593,"name":"IfStatement","src":"44077:55:0"},{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"includeNext","scope":2647,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2594,"name":"ElementaryTypeName","src":"44213:4:0"}],"id":2595,"name":"VariableDeclaration","src":"44213:16:0"}],"id":2596,"name":"VariableDeclarationStatement","src":"44213:16:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2537,"type":"bool","value":"_usePreviousEpoch"},"id":2597,"name":"Identifier","src":"44247:17:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2595,"type":"bool","value":"includeNext"},"id":2598,"name":"Identifier","src":"44284:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2481,"type":"function (address) view returns (bool)","value":"isRegisteredInPreviousEpoch"},"id":2599,"name":"Identifier","src":"44298:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2600,"name":"Identifier","src":"44326:4:0"}],"id":2601,"name":"FunctionCall","src":"44298:33:0"}],"id":2602,"name":"Assignment","src":"44284:47:0"}],"id":2603,"name":"ExpressionStatement","src":"44284:47:0"}],"id":2604,"name":"Block","src":"44266:80:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2595,"type":"bool","value":"includeNext"},"id":2605,"name":"Identifier","src":"44370:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2468,"type":"function (address) view returns (bool)","value":"isRegistered"},"id":2606,"name":"Identifier","src":"44384:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2607,"name":"Identifier","src":"44397:4:0"}],"id":2608,"name":"FunctionCall","src":"44384:18:0"}],"id":2609,"name":"Assignment","src":"44370:32:0"}],"id":2610,"name":"ExpressionStatement","src":"44370:32:0"}],"id":2611,"name":"Block","src":"44352:65:0"}],"id":2612,"name":"IfStatement","src":"44243:174:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2595,"type":"bool","value":"includeNext"},"id":2613,"name":"Identifier","src":"44435:11:0"}],"id":2614,"name":"UnaryOperation","src":"44434:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2615,"name":"Identifier","src":"44466:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":1419,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2616,"name":"Identifier","src":"44473:5:0"}],"id":2617,"name":"MemberAccess","src":"44473:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2618,"name":"Identifier","src":"44484:4:0"}],"id":2619,"name":"FunctionCall","src":"44473:16:0"}],"id":2620,"name":"Assignment","src":"44466:23:0"}],"id":2621,"name":"ExpressionStatement","src":"44466:23:0"},{"id":2622,"name":"Continue","src":"44507:8:0"}],"id":2623,"name":"Block","src":"44448:82:0"}],"id":2624,"name":"IfStatement","src":"44430:100:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2559,"type":"address[] memory","value":"nodes"},"id":2625,"name":"Identifier","src":"44543:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2567,"type":"uint256","value":"n"},"id":2626,"name":"Identifier","src":"44549:1:0"}],"id":2627,"name":"IndexAccess","src":"44543:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2628,"name":"Identifier","src":"44554:4:0"}],"id":2629,"name":"Assignment","src":"44543:15:0"}],"id":2630,"name":"ExpressionStatement","src":"44543:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2631,"name":"Identifier","src":"44572:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":1419,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2632,"name":"Identifier","src":"44579:5:0"}],"id":2633,"name":"MemberAccess","src":"44579:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2634,"name":"Identifier","src":"44590:4:0"}],"id":2635,"name":"FunctionCall","src":"44579:16:0"}],"id":2636,"name":"Assignment","src":"44572:23:0"}],"id":2637,"name":"ExpressionStatement","src":"44572:23:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2567,"type":"uint256","value":"n"},"id":2638,"name":"Identifier","src":"44609:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2639,"name":"Literal","src":"44614:1:0"}],"id":2640,"name":"Assignment","src":"44609:6:0"}],"id":2641,"name":"ExpressionStatement","src":"44609:6:0"}],"id":2642,"name":"Block","src":"44063:563:0"}],"id":2643,"name":"WhileStatement","src":"44045:581:0"},{"attributes":{"functionReturnParameters":2542},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2559,"type":"address[] memory","value":"nodes"},"id":2644,"name":"Identifier","src":"44642:5:0"}],"id":2645,"name":"Return","src":"44635:12:0"}],"id":2646,"name":"Block","src":"43631:1023:0"}],"id":2647,"name":"FunctionDefinition","src":"43510:1144:0"}],"id":2648,"name":"ContractDefinition","src":"24066:20590:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Math\n@dev Assorted math operations","fullyImplemented":true,"linearizedBaseContracts":[2717],"name":"Math","scope":3119},"children":[{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"max64","payable":false,"scope":2717,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":2665,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2649,"name":"ElementaryTypeName","src":"44746:6:0"}],"id":2650,"name":"VariableDeclaration","src":"44746:8:0"},{"attributes":{"constant":false,"name":"b","scope":2665,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2651,"name":"ElementaryTypeName","src":"44756:6:0"}],"id":2652,"name":"VariableDeclaration","src":"44756:8:0"}],"id":2653,"name":"ParameterList","src":"44745:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2665,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2654,"name":"ElementaryTypeName","src":"44789:6:0"}],"id":2655,"name":"VariableDeclaration","src":"44789:6:0"}],"id":2656,"name":"ParameterList","src":"44788:8:0"},{"children":[{"attributes":{"functionReturnParameters":2656},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2650,"type":"uint64","value":"a"},"id":2657,"name":"Identifier","src":"44810:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2652,"type":"uint64","value":"b"},"id":2658,"name":"Identifier","src":"44815:1:0"}],"id":2659,"name":"BinaryOperation","src":"44810:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2650,"type":"uint64","value":"a"},"id":2660,"name":"Identifier","src":"44819:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2652,"type":"uint64","value":"b"},"id":2661,"name":"Identifier","src":"44823:1:0"}],"id":2662,"name":"Conditional","src":"44810:14:0"}],"id":2663,"name":"Return","src":"44803:21:0"}],"id":2664,"name":"Block","src":"44797:32:0"}],"id":2665,"name":"FunctionDefinition","src":"44731:98:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"min64","payable":false,"scope":2717,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":2682,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2666,"name":"ElementaryTypeName","src":"44848:6:0"}],"id":2667,"name":"VariableDeclaration","src":"44848:8:0"},{"attributes":{"constant":false,"name":"b","scope":2682,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2668,"name":"ElementaryTypeName","src":"44858:6:0"}],"id":2669,"name":"VariableDeclaration","src":"44858:8:0"}],"id":2670,"name":"ParameterList","src":"44847:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2682,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2671,"name":"ElementaryTypeName","src":"44891:6:0"}],"id":2672,"name":"VariableDeclaration","src":"44891:6:0"}],"id":2673,"name":"ParameterList","src":"44890:8:0"},{"children":[{"attributes":{"functionReturnParameters":2673},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2667,"type":"uint64","value":"a"},"id":2674,"name":"Identifier","src":"44912:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2669,"type":"uint64","value":"b"},"id":2675,"name":"Identifier","src":"44916:1:0"}],"id":2676,"name":"BinaryOperation","src":"44912:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2667,"type":"uint64","value":"a"},"id":2677,"name":"Identifier","src":"44920:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2669,"type":"uint64","value":"b"},"id":2678,"name":"Identifier","src":"44924:1:0"}],"id":2679,"name":"Conditional","src":"44912:13:0"}],"id":2680,"name":"Return","src":"44905:20:0"}],"id":2681,"name":"Block","src":"44899:31:0"}],"id":2682,"name":"FunctionDefinition","src":"44833:97:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"max256","payable":false,"scope":2717,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":2699,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2683,"name":"ElementaryTypeName","src":"44950:7:0"}],"id":2684,"name":"VariableDeclaration","src":"44950:9:0"},{"attributes":{"constant":false,"name":"b","scope":2699,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2685,"name":"ElementaryTypeName","src":"44961:7:0"}],"id":2686,"name":"VariableDeclaration","src":"44961:9:0"}],"id":2687,"name":"ParameterList","src":"44949:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2699,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2688,"name":"ElementaryTypeName","src":"44995:7:0"}],"id":2689,"name":"VariableDeclaration","src":"44995:7:0"}],"id":2690,"name":"ParameterList","src":"44994:9:0"},{"children":[{"attributes":{"functionReturnParameters":2690},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2684,"type":"uint256","value":"a"},"id":2691,"name":"Identifier","src":"45017:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2686,"type":"uint256","value":"b"},"id":2692,"name":"Identifier","src":"45022:1:0"}],"id":2693,"name":"BinaryOperation","src":"45017:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2684,"type":"uint256","value":"a"},"id":2694,"name":"Identifier","src":"45026:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2686,"type":"uint256","value":"b"},"id":2695,"name":"Identifier","src":"45030:1:0"}],"id":2696,"name":"Conditional","src":"45017:14:0"}],"id":2697,"name":"Return","src":"45010:21:0"}],"id":2698,"name":"Block","src":"45004:32:0"}],"id":2699,"name":"FunctionDefinition","src":"44934:102:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"min256","payable":false,"scope":2717,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":2716,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2700,"name":"ElementaryTypeName","src":"45056:7:0"}],"id":2701,"name":"VariableDeclaration","src":"45056:9:0"},{"attributes":{"constant":false,"name":"b","scope":2716,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2702,"name":"ElementaryTypeName","src":"45067:7:0"}],"id":2703,"name":"VariableDeclaration","src":"45067:9:0"}],"id":2704,"name":"ParameterList","src":"45055:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2716,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2705,"name":"ElementaryTypeName","src":"45101:7:0"}],"id":2706,"name":"VariableDeclaration","src":"45101:7:0"}],"id":2707,"name":"ParameterList","src":"45100:9:0"},{"children":[{"attributes":{"functionReturnParameters":2707},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"uint256","value":"a"},"id":2708,"name":"Identifier","src":"45123:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2703,"type":"uint256","value":"b"},"id":2709,"name":"Identifier","src":"45127:1:0"}],"id":2710,"name":"BinaryOperation","src":"45123:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2701,"type":"uint256","value":"a"},"id":2711,"name":"Identifier","src":"45131:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2703,"type":"uint256","value":"b"},"id":2712,"name":"Identifier","src":"45135:1:0"}],"id":2713,"name":"Conditional","src":"45123:13:0"}],"id":2714,"name":"Return","src":"45116:20:0"}],"id":2715,"name":"Block","src":"45110:31:0"}],"id":2716,"name":"FunctionDefinition","src":"45040:101:0"}],"id":2717,"name":"ContractDefinition","src":"44714:429:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@notice Implements safeTransfer, safeTransferFrom and\n safeApprove for CompatibleERC20.\n\n/// See https://github.com/ethereum/solidity/issues/4116\n\n/// This library allows interacting with ERC20 tokens that implement any of\n these interfaces:\n\n/// (1) transfer returns true on success, false on failure\n (2) transfer returns true on success, reverts on failure\n (3) transfer returns nothing on success, reverts on failure\n\n/// Additionally, safeTransferFromWithFees will return the final token\n value received after accounting for token fees.","fullyImplemented":true,"linearizedBaseContracts":[2867],"name":"CompatibleERC20Functions","scope":3119},"children":[{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":247,"type":"library SafeMath"},"id":2718,"name":"UserDefinedTypeName","src":"45763:8:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":2719,"name":"ElementaryTypeName","src":"45776:7:0"}],"id":2720,"name":"UsingForDirective","src":"45757:27:0"},{"attributes":{"constant":false,"documentation":"@notice Calls transfer on the token and reverts if the call fails.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeTransfer","payable":false,"scope":2867,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":2744,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2721,"name":"ElementaryTypeName","src":"45887:7:0"}],"id":2722,"name":"VariableDeclaration","src":"45887:13:0"},{"attributes":{"constant":false,"name":"to","scope":2744,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2723,"name":"ElementaryTypeName","src":"45902:7:0"}],"id":2724,"name":"VariableDeclaration","src":"45902:10:0"},{"attributes":{"constant":false,"name":"amount","scope":2744,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2725,"name":"ElementaryTypeName","src":"45914:7:0"}],"id":2726,"name":"VariableDeclaration","src":"45914:14:0"}],"id":2727,"name":"ParameterList","src":"45886:43:0"},{"attributes":{"parameters":[null]},"children":[],"id":2728,"name":"ParameterList","src":"45939:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":2874,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":2729,"name":"Identifier","src":"45949:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2722,"type":"address","value":"token"},"id":2730,"name":"Identifier","src":"45965:5:0"}],"id":2731,"name":"FunctionCall","src":"45949:22:0"}],"id":2732,"name":"MemberAccess","src":"45949:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2724,"type":"address","value":"to"},"id":2733,"name":"Identifier","src":"45981:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2726,"type":"uint256","value":"amount"},"id":2734,"name":"Identifier","src":"45985:6:0"}],"id":2735,"name":"FunctionCall","src":"45949:43:0"}],"id":2736,"name":"ExpressionStatement","src":"45949:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":2737,"name":"Identifier","src":"46002:7:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"function () pure returns (bool)","value":"previousReturnValue"},"id":2738,"name":"Identifier","src":"46010:19:0"}],"id":2739,"name":"FunctionCall","src":"46010:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"7472616e73666572206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"transfer failed\"","value":"transfer failed"},"id":2740,"name":"Literal","src":"46033:17:0"}],"id":2741,"name":"FunctionCall","src":"46002:49:0"}],"id":2742,"name":"ExpressionStatement","src":"46002:49:0"}],"id":2743,"name":"Block","src":"45939:119:0"}],"id":2744,"name":"FunctionDefinition","src":"45865:193:0"},{"attributes":{"constant":false,"documentation":"@notice Calls transferFrom on the token and reverts if the call fails.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeTransferFrom","payable":false,"scope":2867,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":2771,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2745,"name":"ElementaryTypeName","src":"46169:7:0"}],"id":2746,"name":"VariableDeclaration","src":"46169:13:0"},{"attributes":{"constant":false,"name":"from","scope":2771,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2747,"name":"ElementaryTypeName","src":"46184:7:0"}],"id":2748,"name":"VariableDeclaration","src":"46184:12:0"},{"attributes":{"constant":false,"name":"to","scope":2771,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2749,"name":"ElementaryTypeName","src":"46198:7:0"}],"id":2750,"name":"VariableDeclaration","src":"46198:10:0"},{"attributes":{"constant":false,"name":"amount","scope":2771,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2751,"name":"ElementaryTypeName","src":"46210:7:0"}],"id":2752,"name":"VariableDeclaration","src":"46210:14:0"}],"id":2753,"name":"ParameterList","src":"46168:57:0"},{"attributes":{"parameters":[null]},"children":[],"id":2754,"name":"ParameterList","src":"46235:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":2883,"type":"function (address,address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":2755,"name":"Identifier","src":"46245:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2746,"type":"address","value":"token"},"id":2756,"name":"Identifier","src":"46261:5:0"}],"id":2757,"name":"FunctionCall","src":"46245:22:0"}],"id":2758,"name":"MemberAccess","src":"46245:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2748,"type":"address","value":"from"},"id":2759,"name":"Identifier","src":"46281:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2750,"type":"address","value":"to"},"id":2760,"name":"Identifier","src":"46287:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2752,"type":"uint256","value":"amount"},"id":2761,"name":"Identifier","src":"46291:6:0"}],"id":2762,"name":"FunctionCall","src":"46245:53:0"}],"id":2763,"name":"ExpressionStatement","src":"46245:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3","typeString":"literal_string \"transferFrom failed\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":2764,"name":"Identifier","src":"46308:7:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"function () pure returns (bool)","value":"previousReturnValue"},"id":2765,"name":"Identifier","src":"46316:19:0"}],"id":2766,"name":"FunctionCall","src":"46316:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"7472616e7366657246726f6d206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"transferFrom failed\"","value":"transferFrom failed"},"id":2767,"name":"Literal","src":"46339:21:0"}],"id":2768,"name":"FunctionCall","src":"46308:53:0"}],"id":2769,"name":"ExpressionStatement","src":"46308:53:0"}],"id":2770,"name":"Block","src":"46235:133:0"}],"id":2771,"name":"FunctionDefinition","src":"46143:225:0"},{"attributes":{"constant":false,"documentation":"@notice Calls approve on the token and reverts if the call fails.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeApprove","payable":false,"scope":2867,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":2795,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2772,"name":"ElementaryTypeName","src":"46469:7:0"}],"id":2773,"name":"VariableDeclaration","src":"46469:13:0"},{"attributes":{"constant":false,"name":"spender","scope":2795,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2774,"name":"ElementaryTypeName","src":"46484:7:0"}],"id":2775,"name":"VariableDeclaration","src":"46484:15:0"},{"attributes":{"constant":false,"name":"amount","scope":2795,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2776,"name":"ElementaryTypeName","src":"46501:7:0"}],"id":2777,"name":"VariableDeclaration","src":"46501:14:0"}],"id":2778,"name":"ParameterList","src":"46468:48:0"},{"attributes":{"parameters":[null]},"children":[],"id":2779,"name":"ParameterList","src":"46526:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"approve","referencedDeclaration":2890,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":2780,"name":"Identifier","src":"46536:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2773,"type":"address","value":"token"},"id":2781,"name":"Identifier","src":"46552:5:0"}],"id":2782,"name":"FunctionCall","src":"46536:22:0"}],"id":2783,"name":"MemberAccess","src":"46536:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2775,"type":"address","value":"spender"},"id":2784,"name":"Identifier","src":"46567:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2777,"type":"uint256","value":"amount"},"id":2785,"name":"Identifier","src":"46576:6:0"}],"id":2786,"name":"FunctionCall","src":"46536:47:0"}],"id":2787,"name":"ExpressionStatement","src":"46536:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69ab7f66ce454a3f8b5143239ba623f1d94f81bb9bd3a1f7a83880ee53504f33","typeString":"literal_string \"approve failed\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":2788,"name":"Identifier","src":"46593:7:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"function () pure returns (bool)","value":"previousReturnValue"},"id":2789,"name":"Identifier","src":"46601:19:0"}],"id":2790,"name":"FunctionCall","src":"46601:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"617070726f7665206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"approve failed\"","value":"approve failed"},"id":2791,"name":"Literal","src":"46624:16:0"}],"id":2792,"name":"FunctionCall","src":"46593:48:0"}],"id":2793,"name":"ExpressionStatement","src":"46593:48:0"}],"id":2794,"name":"Block","src":"46526:122:0"}],"id":2795,"name":"FunctionDefinition","src":"46448:200:0"},{"attributes":{"constant":false,"documentation":"@notice Calls transferFrom on the token, reverts if the call fails and\n returns the value transferred after fees.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeTransferFromWithFees","payable":false,"scope":2867,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":2851,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2796,"name":"ElementaryTypeName","src":"46817:7:0"}],"id":2797,"name":"VariableDeclaration","src":"46817:13:0"},{"attributes":{"constant":false,"name":"from","scope":2851,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2798,"name":"ElementaryTypeName","src":"46832:7:0"}],"id":2799,"name":"VariableDeclaration","src":"46832:12:0"},{"attributes":{"constant":false,"name":"to","scope":2851,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2800,"name":"ElementaryTypeName","src":"46846:7:0"}],"id":2801,"name":"VariableDeclaration","src":"46846:10:0"},{"attributes":{"constant":false,"name":"amount","scope":2851,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2802,"name":"ElementaryTypeName","src":"46858:7:0"}],"id":2803,"name":"VariableDeclaration","src":"46858:14:0"}],"id":2804,"name":"ParameterList","src":"46816:57:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2851,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2805,"name":"ElementaryTypeName","src":"46892:7:0"}],"id":2806,"name":"VariableDeclaration","src":"46892:7:0"}],"id":2807,"name":"ParameterList","src":"46891:9:0"},{"children":[{"attributes":{"assignments":[2809]},"children":[{"attributes":{"constant":false,"name":"balancesBefore","scope":2851,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2808,"name":"ElementaryTypeName","src":"46911:7:0"}],"id":2809,"name":"VariableDeclaration","src":"46911:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOf","referencedDeclaration":2902,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":2810,"name":"Identifier","src":"46936:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2797,"type":"address","value":"token"},"id":2811,"name":"Identifier","src":"46952:5:0"}],"id":2812,"name":"FunctionCall","src":"46936:22:0"}],"id":2813,"name":"MemberAccess","src":"46936:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2801,"type":"address","value":"to"},"id":2814,"name":"Identifier","src":"46969:2:0"}],"id":2815,"name":"FunctionCall","src":"46936:36:0"}],"id":2816,"name":"VariableDeclarationStatement","src":"46911:61:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":2883,"type":"function (address,address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":2817,"name":"Identifier","src":"46982:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2797,"type":"address","value":"token"},"id":2818,"name":"Identifier","src":"46998:5:0"}],"id":2819,"name":"FunctionCall","src":"46982:22:0"}],"id":2820,"name":"MemberAccess","src":"46982:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2799,"type":"address","value":"from"},"id":2821,"name":"Identifier","src":"47018:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2801,"type":"address","value":"to"},"id":2822,"name":"Identifier","src":"47024:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2803,"type":"uint256","value":"amount"},"id":2823,"name":"Identifier","src":"47028:6:0"}],"id":2824,"name":"FunctionCall","src":"46982:53:0"}],"id":2825,"name":"ExpressionStatement","src":"46982:53:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab0f731885d207443b1e545c1c7e7ed7ac9b6ea503774981a1bcc8ac01b461c3","typeString":"literal_string \"transferFrom failed\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":2826,"name":"Identifier","src":"47045:7:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"function () pure returns (bool)","value":"previousReturnValue"},"id":2827,"name":"Identifier","src":"47053:19:0"}],"id":2828,"name":"FunctionCall","src":"47053:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"7472616e7366657246726f6d206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"transferFrom failed\"","value":"transferFrom failed"},"id":2829,"name":"Literal","src":"47076:21:0"}],"id":2830,"name":"FunctionCall","src":"47045:53:0"}],"id":2831,"name":"ExpressionStatement","src":"47045:53:0"},{"attributes":{"assignments":[2833]},"children":[{"attributes":{"constant":false,"name":"balancesAfter","scope":2851,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2832,"name":"ElementaryTypeName","src":"47108:7:0"}],"id":2833,"name":"VariableDeclaration","src":"47108:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOf","referencedDeclaration":2902,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":2834,"name":"Identifier","src":"47132:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2797,"type":"address","value":"token"},"id":2835,"name":"Identifier","src":"47148:5:0"}],"id":2836,"name":"FunctionCall","src":"47132:22:0"}],"id":2837,"name":"MemberAccess","src":"47132:32:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2801,"type":"address","value":"to"},"id":2838,"name":"Identifier","src":"47165:2:0"}],"id":2839,"name":"FunctionCall","src":"47132:36:0"}],"id":2840,"name":"VariableDeclarationStatement","src":"47108:60:0"},{"attributes":{"functionReturnParameters":2807},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"min256","referencedDeclaration":2716,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2717,"type":"type(library Math)","value":"Math"},"id":2841,"name":"Identifier","src":"47185:4:0"}],"id":2842,"name":"MemberAccess","src":"47185:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2803,"type":"uint256","value":"amount"},"id":2843,"name":"Identifier","src":"47197:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":222,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2833,"type":"uint256","value":"balancesAfter"},"id":2844,"name":"Identifier","src":"47205:13:0"}],"id":2845,"name":"MemberAccess","src":"47205:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2809,"type":"uint256","value":"balancesBefore"},"id":2846,"name":"Identifier","src":"47223:14:0"}],"id":2847,"name":"FunctionCall","src":"47205:33:0"}],"id":2848,"name":"FunctionCall","src":"47185:54:0"}],"id":2849,"name":"Return","src":"47178:61:0"}],"id":2850,"name":"Block","src":"46901:345:0"}],"id":2851,"name":"FunctionDefinition","src":"46783:463:0"},{"attributes":{"constant":true,"documentation":"@notice Checks the return value of the previous function. Returns true\n if the previous function returned 32 non-zero bytes or returned zero\n bytes.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"previousReturnValue","payable":false,"scope":2867,"stateMutability":"pure","superFunction":null,"visibility":"private"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":2852,"name":"ParameterList","src":"47451:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2866,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2853,"name":"ElementaryTypeName","src":"47476:4:0"}],"id":2854,"name":"VariableDeclaration","src":"47476:4:0"}],"id":2855,"name":"ParameterList","src":"47475:6:0"},{"children":[{"attributes":{"assignments":[2857]},"children":[{"attributes":{"constant":false,"name":"returnData","scope":2866,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2856,"name":"ElementaryTypeName","src":"47496:7:0"}],"id":2857,"name":"VariableDeclaration","src":"47496:18:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2858,"name":"Literal","src":"47517:1:0"}],"id":2859,"name":"VariableDeclarationStatement","src":"47496:22:0"},{"attributes":{"externalReferences":[{"returnData":{"declaration":2857,"isOffset":false,"isSlot":false,"src":"47798:10:0","valueSize":1}},{"returnData":{"declaration":2857,"isOffset":false,"isSlot":false,"src":"48080:10:0","valueSize":1}}],"operations":"{\n    switch returndatasize()\n    case 0 {\n        returnData := 1\n    }\n    case 32 {\n        returndatacopy(0x0, 0x0, 32)\n        returnData := mload(0x0)\n    }\n    default {\n    }\n}"},"children":[],"id":2860,"name":"InlineAssembly","src":"47529:687:0"},{"attributes":{"functionReturnParameters":2855},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2857,"type":"uint256","value":"returnData"},"id":2861,"name":"Identifier","src":"48217:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2862,"name":"Literal","src":"48231:1:0"}],"id":2863,"name":"BinaryOperation","src":"48217:15:0"}],"id":2864,"name":"Return","src":"48210:22:0"}],"id":2865,"name":"Block","src":"47486:753:0"}],"id":2866,"name":"FunctionDefinition","src":"47423:816:0"}],"id":2867,"name":"ContractDefinition","src":"45718:2523:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@notice ERC20 interface which doesn't specify the return type for transfer,\n transferFrom and approve.","fullyImplemented":false,"linearizedBaseContracts":[2928],"name":"CompatibleERC20","scope":3119},"children":[{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":2928,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":2874,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2868,"name":"ElementaryTypeName","src":"48441:7:0"}],"id":2869,"name":"VariableDeclaration","src":"48441:10:0"},{"attributes":{"constant":false,"name":"value","scope":2874,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2870,"name":"ElementaryTypeName","src":"48453:7:0"}],"id":2871,"name":"VariableDeclaration","src":"48453:13:0"}],"id":2872,"name":"ParameterList","src":"48440:27:0"},{"attributes":{"parameters":[null]},"children":[],"id":2873,"name":"ParameterList","src":"48476:0:0"}],"id":2874,"name":"FunctionDefinition","src":"48423:54:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":2928,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":2883,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2875,"name":"ElementaryTypeName","src":"48504:7:0"}],"id":2876,"name":"VariableDeclaration","src":"48504:12:0"},{"attributes":{"constant":false,"name":"to","scope":2883,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2877,"name":"ElementaryTypeName","src":"48518:7:0"}],"id":2878,"name":"VariableDeclaration","src":"48518:10:0"},{"attributes":{"constant":false,"name":"value","scope":2883,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2879,"name":"ElementaryTypeName","src":"48530:7:0"}],"id":2880,"name":"VariableDeclaration","src":"48530:13:0"}],"id":2881,"name":"ParameterList","src":"48503:41:0"},{"attributes":{"parameters":[null]},"children":[],"id":2882,"name":"ParameterList","src":"48553:0:0"}],"id":2883,"name":"FunctionDefinition","src":"48482:72:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":2928,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":2890,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2884,"name":"ElementaryTypeName","src":"48576:7:0"}],"id":2885,"name":"VariableDeclaration","src":"48576:15:0"},{"attributes":{"constant":false,"name":"value","scope":2890,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2886,"name":"ElementaryTypeName","src":"48593:7:0"}],"id":2887,"name":"VariableDeclaration","src":"48593:13:0"}],"id":2888,"name":"ParameterList","src":"48575:32:0"},{"attributes":{"parameters":[null]},"children":[],"id":2889,"name":"ParameterList","src":"48616:0:0"}],"id":2890,"name":"FunctionDefinition","src":"48559:58:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":2928,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":2891,"name":"ParameterList","src":"48663:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2895,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2892,"name":"ElementaryTypeName","src":"48689:7:0"}],"id":2893,"name":"VariableDeclaration","src":"48689:7:0"}],"id":2894,"name":"ParameterList","src":"48688:9:0"}],"id":2895,"name":"FunctionDefinition","src":"48643:55:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":2928,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"who","scope":2902,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2896,"name":"ElementaryTypeName","src":"48722:7:0"}],"id":2897,"name":"VariableDeclaration","src":"48722:11:0"}],"id":2898,"name":"ParameterList","src":"48721:13:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2902,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2899,"name":"ElementaryTypeName","src":"48758:7:0"}],"id":2900,"name":"VariableDeclaration","src":"48758:7:0"}],"id":2901,"name":"ParameterList","src":"48757:9:0"}],"id":2902,"name":"FunctionDefinition","src":"48703:64:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":2928,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"owner","scope":2911,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2903,"name":"ElementaryTypeName","src":"48791:7:0"}],"id":2904,"name":"VariableDeclaration","src":"48791:13:0"},{"attributes":{"constant":false,"name":"spender","scope":2911,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2905,"name":"ElementaryTypeName","src":"48806:7:0"}],"id":2906,"name":"VariableDeclaration","src":"48806:15:0"}],"id":2907,"name":"ParameterList","src":"48790:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2911,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2908,"name":"ElementaryTypeName","src":"48846:7:0"}],"id":2909,"name":"VariableDeclaration","src":"48846:7:0"}],"id":2910,"name":"ParameterList","src":"48845:9:0"}],"id":2911,"name":"FunctionDefinition","src":"48772:83:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":2919,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2912,"name":"ElementaryTypeName","src":"48875:7:0"}],"id":2913,"name":"VariableDeclaration","src":"48875:20:0"},{"attributes":{"constant":false,"indexed":true,"name":"to","scope":2919,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2914,"name":"ElementaryTypeName","src":"48897:7:0"}],"id":2915,"name":"VariableDeclaration","src":"48897:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":2919,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2916,"name":"ElementaryTypeName","src":"48917:7:0"}],"id":2917,"name":"VariableDeclaration","src":"48917:13:0"}],"id":2918,"name":"ParameterList","src":"48874:57:0"}],"id":2919,"name":"EventDefinition","src":"48860:72:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"owner","scope":2927,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2920,"name":"ElementaryTypeName","src":"48952:7:0"}],"id":2921,"name":"VariableDeclaration","src":"48952:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"spender","scope":2927,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2922,"name":"ElementaryTypeName","src":"48975:7:0"}],"id":2923,"name":"VariableDeclaration","src":"48975:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":2927,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2924,"name":"ElementaryTypeName","src":"49000:7:0"}],"id":2925,"name":"VariableDeclaration","src":"49000:13:0"}],"id":2926,"name":"ParameterList","src":"48951:63:0"}],"id":2927,"name":"EventDefinition","src":"48937:78:0"}],"id":2928,"name":"ContractDefinition","src":"48353:664:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice The DarknodeRewardVault contract is responsible for holding fees\n for darknodes for settling orders. Fees can be withdrawn to the address of\n the darknode's operator. Fees can be in ETH or in ERC20 tokens.\n Docs: https://github.com/republicprotocol/republic-sol/blob/master/docs/02-darknode-reward-vault.md","fullyImplemented":true,"linearizedBaseContracts":[3118,85],"name":"DarknodeRewardVault","scope":3119},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":2929,"name":"UserDefinedTypeName","src":"49379:7:0"}],"id":2930,"name":"InheritanceSpecifier","src":"49379:7:0"},{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":247,"type":"library SafeMath"},"id":2931,"name":"UserDefinedTypeName","src":"49399:8:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":2932,"name":"ElementaryTypeName","src":"49412:7:0"}],"id":2933,"name":"UsingForDirective","src":"49393:27:0"},{"children":[{"attributes":{"contractScope":null,"name":"CompatibleERC20Functions","referencedDeclaration":2867,"type":"library CompatibleERC20Functions"},"id":2934,"name":"UserDefinedTypeName","src":"49431:24:0"},{"attributes":{"contractScope":null,"name":"CompatibleERC20","referencedDeclaration":2928,"type":"contract CompatibleERC20"},"id":2935,"name":"UserDefinedTypeName","src":"49460:15:0"}],"id":2936,"name":"UsingForDirective","src":"49425:51:0"},{"attributes":{"constant":false,"name":"VERSION","scope":3118,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":2937,"name":"ElementaryTypeName","src":"49482:6:0"}],"id":2938,"name":"VariableDeclaration","src":"49482:21:0"},{"attributes":{"constant":true,"name":"ETHEREUM","scope":3118,"stateVariable":true,"storageLocation":"default","type":"address","visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":2939,"name":"ElementaryTypeName","src":"49598:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"address","value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"id":2940,"name":"Literal","src":"49633:42:0"}],"id":2941,"name":"VariableDeclaration","src":"49598:77:0"},{"attributes":{"constant":false,"name":"darknodeRegistry","scope":3118,"stateVariable":true,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":2942,"name":"UserDefinedTypeName","src":"49682:16:0"}],"id":2943,"name":"VariableDeclaration","src":"49682:40:0"},{"attributes":{"constant":false,"name":"darknodeBalances","scope":3118,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":2944,"name":"ElementaryTypeName","src":"49737:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":2945,"name":"ElementaryTypeName","src":"49756:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":2946,"name":"ElementaryTypeName","src":"49767:7:0"}],"id":2947,"name":"Mapping","src":"49748:27:0"}],"id":2948,"name":"Mapping","src":"49729:47:0"}],"id":2949,"name":"VariableDeclaration","src":"49729:71:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogDarknodeRegistryUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousDarknodeRegistry","scope":2955,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":2950,"name":"UserDefinedTypeName","src":"49840:16:0"}],"id":2951,"name":"VariableDeclaration","src":"49840:41:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextDarknodeRegistry","scope":2955,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":2952,"name":"UserDefinedTypeName","src":"49883:16:0"}],"id":2953,"name":"VariableDeclaration","src":"49883:37:0"}],"id":2954,"name":"ParameterList","src":"49839:82:0"}],"id":2955,"name":"EventDefinition","src":"49807:115:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.\n @param _darknodeRegistry The DarknodeRegistry contract that is used by\n        the vault to lookup Darknode owners.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":3118,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":2971,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":2956,"name":"ElementaryTypeName","src":"50185:6:0"}],"id":2957,"name":"VariableDeclaration","src":"50185:15:0"},{"attributes":{"constant":false,"name":"_darknodeRegistry","scope":2971,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":2958,"name":"UserDefinedTypeName","src":"50202:16:0"}],"id":2959,"name":"VariableDeclaration","src":"50202:34:0"}],"id":2960,"name":"ParameterList","src":"50184:53:0"},{"attributes":{"parameters":[null]},"children":[],"id":2961,"name":"ParameterList","src":"50245:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2938,"type":"string storage ref","value":"VERSION"},"id":2962,"name":"Identifier","src":"50255:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2957,"type":"string memory","value":"_VERSION"},"id":2963,"name":"Identifier","src":"50265:8:0"}],"id":2964,"name":"Assignment","src":"50255:18:0"}],"id":2965,"name":"ExpressionStatement","src":"50255:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract DarknodeRegistry"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2943,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":2966,"name":"Identifier","src":"50283:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2959,"type":"contract DarknodeRegistry","value":"_darknodeRegistry"},"id":2967,"name":"Identifier","src":"50302:17:0"}],"id":2968,"name":"Assignment","src":"50283:36:0"}],"id":2969,"name":"ExpressionStatement","src":"50283:36:0"}],"id":2970,"name":"Block","src":"50245:81:0"}],"id":2971,"name":"FunctionDefinition","src":"50173:153:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"updateDarknodeRegistry","payable":false,"scope":3118,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newDarknodeRegistry","scope":2988,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":2972,"name":"UserDefinedTypeName","src":"50364:16:0"}],"id":2973,"name":"VariableDeclaration","src":"50364:37:0"}],"id":2974,"name":"ParameterList","src":"50363:39:0"},{"attributes":{"parameters":[null]},"children":[],"id":2977,"name":"ParameterList","src":"50420:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2975,"name":"Identifier","src":"50410:9:0"}],"id":2976,"name":"ModifierInvocation","src":"50410:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_DarknodeRegistry_$2648","typeString":"contract DarknodeRegistry"},{"typeIdentifier":"t_contract$_DarknodeRegistry_$2648","typeString":"contract DarknodeRegistry"}],"overloadedDeclarations":[null],"referencedDeclaration":2955,"type":"function (contract DarknodeRegistry,contract DarknodeRegistry)","value":"LogDarknodeRegistryUpdated"},"id":2978,"name":"Identifier","src":"50435:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2943,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":2979,"name":"Identifier","src":"50462:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2973,"type":"contract DarknodeRegistry","value":"_newDarknodeRegistry"},"id":2980,"name":"Identifier","src":"50480:20:0"}],"id":2981,"name":"FunctionCall","src":"50435:66:0"}],"id":2982,"name":"EmitStatement","src":"50430:71:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract DarknodeRegistry"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2943,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":2983,"name":"Identifier","src":"50511:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2973,"type":"contract DarknodeRegistry","value":"_newDarknodeRegistry"},"id":2984,"name":"Identifier","src":"50530:20:0"}],"id":2985,"name":"Assignment","src":"50511:39:0"}],"id":2986,"name":"ExpressionStatement","src":"50511:39:0"}],"id":2987,"name":"Block","src":"50420:137:0"}],"id":2988,"name":"FunctionDefinition","src":"50332:225:0"},{"attributes":{"constant":false,"documentation":"@notice Deposit fees into the vault for a Darknode. The Darknode\n registration is not checked (to reduce gas fees); the caller must be\n careful not to call this function for a Darknode that is not registered\n otherwise any fees deposited to that Darknode can be withdrawn by a\n malicious adversary (by registering the Darknode before the honest\n party and claiming ownership).\n\n    /// @param _darknode The address of the Darknode that will receive the\n        fees.\n @param _token The address of the ERC20 token being used to pay the fee.\n        A special address is used for Ether.\n @param _value The amount of fees in the smallest unit of the token.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"deposit","payable":true,"scope":3118,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknode","scope":3055,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2989,"name":"ElementaryTypeName","src":"51312:7:0"}],"id":2990,"name":"VariableDeclaration","src":"51312:17:0"},{"attributes":{"constant":false,"name":"_token","scope":3055,"stateVariable":false,"storageLocation":"default","type":"contract ERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"ERC20","referencedDeclaration":155,"type":"contract ERC20"},"id":2991,"name":"UserDefinedTypeName","src":"51331:5:0"}],"id":2992,"name":"VariableDeclaration","src":"51331:12:0"},{"attributes":{"constant":false,"name":"_value","scope":3055,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2993,"name":"ElementaryTypeName","src":"51345:7:0"}],"id":2994,"name":"VariableDeclaration","src":"51345:14:0"}],"id":2995,"name":"ParameterList","src":"51311:49:0"},{"attributes":{"parameters":[null]},"children":[],"id":2996,"name":"ParameterList","src":"51376:0:0"},{"children":[{"attributes":{"assignments":[2998]},"children":[{"attributes":{"constant":false,"name":"receivedValue","scope":3055,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2997,"name":"ElementaryTypeName","src":"51386:7:0"}],"id":2998,"name":"VariableDeclaration","src":"51386:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2994,"type":"uint256","value":"_value"},"id":2999,"name":"Identifier","src":"51410:6:0"}],"id":3000,"name":"VariableDeclarationStatement","src":"51386:30:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$155","typeString":"contract ERC20"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":3001,"name":"ElementaryTypeNameExpression","src":"51430:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"contract ERC20","value":"_token"},"id":3002,"name":"Identifier","src":"51438:6:0"}],"id":3003,"name":"FunctionCall","src":"51430:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2941,"type":"address","value":"ETHEREUM"},"id":3004,"name":"Identifier","src":"51449:8:0"}],"id":3005,"name":"BinaryOperation","src":"51430:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aae2e5544f09aaffda0298fe5719e1a62873173ba4fa1df2253c2940bcf38085","typeString":"literal_string \"mismatched ether value\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":3006,"name":"Identifier","src":"51473:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":3007,"name":"Identifier","src":"51481:3:0"}],"id":3008,"name":"MemberAccess","src":"51481:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2994,"type":"uint256","value":"_value"},"id":3009,"name":"Identifier","src":"51494:6:0"}],"id":3010,"name":"BinaryOperation","src":"51481:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d69736d6174636865642065746865722076616c7565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"mismatched ether value\"","value":"mismatched ether value"},"id":3011,"name":"Literal","src":"51502:24:0"}],"id":3012,"name":"FunctionCall","src":"51473:54:0"}],"id":3013,"name":"ExpressionStatement","src":"51473:54:0"}],"id":3014,"name":"Block","src":"51459:79:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d9a0ee387e848f57a76af1770668fe555b87b8c807d399cae75591de4ad7901","typeString":"literal_string \"unexpected ether value\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":3015,"name":"Identifier","src":"51558:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":3016,"name":"Identifier","src":"51566:3:0"}],"id":3017,"name":"MemberAccess","src":"51566:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3018,"name":"Literal","src":"51579:1:0"}],"id":3019,"name":"BinaryOperation","src":"51566:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"756e65787065637465642065746865722076616c7565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"unexpected ether value\"","value":"unexpected ether value"},"id":3020,"name":"Literal","src":"51582:24:0"}],"id":3021,"name":"FunctionCall","src":"51558:49:0"}],"id":3022,"name":"ExpressionStatement","src":"51558:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2998,"type":"uint256","value":"receivedValue"},"id":3023,"name":"Identifier","src":"51621:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"safeTransferFromWithFees","referencedDeclaration":2851,"type":"function (address,address,address,uint256) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$155","typeString":"contract ERC20"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":3024,"name":"Identifier","src":"51637:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"contract ERC20","value":"_token"},"id":3025,"name":"Identifier","src":"51653:6:0"}],"id":3026,"name":"FunctionCall","src":"51637:23:0"}],"id":3027,"name":"MemberAccess","src":"51637:48:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3133,"type":"msg","value":"msg"},"id":3028,"name":"Identifier","src":"51686:3:0"}],"id":3029,"name":"MemberAccess","src":"51686:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_DarknodeRewardVault_$3118","typeString":"contract DarknodeRewardVault"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":3030,"name":"ElementaryTypeNameExpression","src":"51698:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3178,"type":"contract DarknodeRewardVault","value":"this"},"id":3031,"name":"Identifier","src":"51706:4:0"}],"id":3032,"name":"FunctionCall","src":"51698:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2994,"type":"uint256","value":"_value"},"id":3033,"name":"Identifier","src":"51713:6:0"}],"id":3034,"name":"FunctionCall","src":"51637:83:0"}],"id":3035,"name":"Assignment","src":"51621:99:0"}],"id":3036,"name":"ExpressionStatement","src":"51621:99:0"}],"id":3037,"name":"Block","src":"51544:187:0"}],"id":3038,"name":"IfStatement","src":"51426:305:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2949,"type":"mapping(address => mapping(address => uint256))","value":"darknodeBalances"},"id":3039,"name":"Identifier","src":"51740:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2990,"type":"address","value":"_darknode"},"id":3040,"name":"Identifier","src":"51757:9:0"}],"id":3042,"name":"IndexAccess","src":"51740:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"contract ERC20","value":"_token"},"id":3041,"name":"Identifier","src":"51768:6:0"}],"id":3043,"name":"IndexAccess","src":"51740:35:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":246,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2949,"type":"mapping(address => mapping(address => uint256))","value":"darknodeBalances"},"id":3044,"name":"Identifier","src":"51778:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2990,"type":"address","value":"_darknode"},"id":3045,"name":"Identifier","src":"51795:9:0"}],"id":3046,"name":"IndexAccess","src":"51778:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2992,"type":"contract ERC20","value":"_token"},"id":3047,"name":"Identifier","src":"51806:6:0"}],"id":3048,"name":"IndexAccess","src":"51778:35:0"}],"id":3049,"name":"MemberAccess","src":"51778:39:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2998,"type":"uint256","value":"receivedValue"},"id":3050,"name":"Identifier","src":"51818:13:0"}],"id":3051,"name":"FunctionCall","src":"51778:54:0"}],"id":3052,"name":"Assignment","src":"51740:92:0"}],"id":3053,"name":"ExpressionStatement","src":"51740:92:0"}],"id":3054,"name":"Block","src":"51376:463:0"}],"id":3055,"name":"FunctionDefinition","src":"51295:544:0"},{"attributes":{"constant":false,"documentation":"@notice Withdraw fees earned by a Darknode. The fees will be sent to\n the owner of the Darknode. If a Darknode is not registered the fees\n cannot be withdrawn.\n\n    /// @param _darknode The address of the Darknode whose fees are being\n        withdrawn. The owner of this Darknode will receive the fees.\n @param _token The address of the ERC20 token to withdraw.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"withdraw","payable":false,"scope":3118,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknode","scope":3117,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3056,"name":"ElementaryTypeName","src":"52269:7:0"}],"id":3057,"name":"VariableDeclaration","src":"52269:17:0"},{"attributes":{"constant":false,"name":"_token","scope":3117,"stateVariable":false,"storageLocation":"default","type":"contract ERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"ERC20","referencedDeclaration":155,"type":"contract ERC20"},"id":3058,"name":"UserDefinedTypeName","src":"52288:5:0"}],"id":3059,"name":"VariableDeclaration","src":"52288:12:0"}],"id":3060,"name":"ParameterList","src":"52268:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":3061,"name":"ParameterList","src":"52309:0:0"},{"children":[{"attributes":{"assignments":[3063]},"children":[{"attributes":{"constant":false,"name":"darknodeOwner","scope":3117,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3062,"name":"ElementaryTypeName","src":"52319:7:0"}],"id":3063,"name":"VariableDeclaration","src":"52319:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"getDarknodeOwner","referencedDeclaration":2224,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2943,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":3064,"name":"Identifier","src":"52343:16:0"}],"id":3065,"name":"MemberAccess","src":"52343:33:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":3066,"name":"ElementaryTypeNameExpression","src":"52377:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3057,"type":"address","value":"_darknode"},"id":3067,"name":"Identifier","src":"52385:9:0"}],"id":3068,"name":"FunctionCall","src":"52377:18:0"}],"id":3069,"name":"FunctionCall","src":"52343:53:0"}],"id":3070,"name":"VariableDeclarationStatement","src":"52319:77:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c790fcc7516cfa146c3c07a005d290d38dc63b9712b8a88294a34c3910a723b","typeString":"literal_string \"invalid darknode owner\""}],"overloadedDeclarations":[3136,3137],"referencedDeclaration":3137,"type":"function (bool,string memory) pure","value":"require"},"id":3071,"name":"Identifier","src":"52407:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3063,"type":"address","value":"darknodeOwner"},"id":3072,"name":"Identifier","src":"52415:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":3073,"name":"Literal","src":"52432:3:0"}],"id":3074,"name":"BinaryOperation","src":"52415:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e76616c6964206461726b6e6f6465206f776e6572","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"invalid darknode owner\"","value":"invalid darknode owner"},"id":3075,"name":"Literal","src":"52437:24:0"}],"id":3076,"name":"FunctionCall","src":"52407:55:0"}],"id":3077,"name":"ExpressionStatement","src":"52407:55:0"},{"attributes":{"assignments":[3079]},"children":[{"attributes":{"constant":false,"name":"value","scope":3117,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3078,"name":"ElementaryTypeName","src":"52473:7:0"}],"id":3079,"name":"VariableDeclaration","src":"52473:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2949,"type":"mapping(address => mapping(address => uint256))","value":"darknodeBalances"},"id":3080,"name":"Identifier","src":"52489:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3057,"type":"address","value":"_darknode"},"id":3081,"name":"Identifier","src":"52506:9:0"}],"id":3082,"name":"IndexAccess","src":"52489:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"contract ERC20","value":"_token"},"id":3083,"name":"Identifier","src":"52517:6:0"}],"id":3084,"name":"IndexAccess","src":"52489:35:0"}],"id":3085,"name":"VariableDeclarationStatement","src":"52473:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2949,"type":"mapping(address => mapping(address => uint256))","value":"darknodeBalances"},"id":3086,"name":"Identifier","src":"52534:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3057,"type":"address","value":"_darknode"},"id":3087,"name":"Identifier","src":"52551:9:0"}],"id":3089,"name":"IndexAccess","src":"52534:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"contract ERC20","value":"_token"},"id":3088,"name":"Identifier","src":"52562:6:0"}],"id":3090,"name":"IndexAccess","src":"52534:35:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3091,"name":"Literal","src":"52572:1:0"}],"id":3092,"name":"Assignment","src":"52534:39:0"}],"id":3093,"name":"ExpressionStatement","src":"52534:39:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$155","typeString":"contract ERC20"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":3094,"name":"ElementaryTypeNameExpression","src":"52588:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"contract ERC20","value":"_token"},"id":3095,"name":"Identifier","src":"52596:6:0"}],"id":3096,"name":"FunctionCall","src":"52588:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2941,"type":"address","value":"ETHEREUM"},"id":3097,"name":"Identifier","src":"52607:8:0"}],"id":3098,"name":"BinaryOperation","src":"52588:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3063,"type":"address","value":"darknodeOwner"},"id":3099,"name":"Identifier","src":"52631:13:0"}],"id":3101,"name":"MemberAccess","src":"52631:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3079,"type":"uint256","value":"value"},"id":3102,"name":"Identifier","src":"52654:5:0"}],"id":3103,"name":"FunctionCall","src":"52631:29:0"}],"id":3104,"name":"ExpressionStatement","src":"52631:29:0"}],"id":3105,"name":"Block","src":"52617:54:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"safeTransfer","referencedDeclaration":2744,"type":"function (address,address,uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract CompatibleERC20","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$155","typeString":"contract ERC20"}],"overloadedDeclarations":[null],"referencedDeclaration":2928,"type":"type(contract CompatibleERC20)","value":"CompatibleERC20"},"id":3106,"name":"Identifier","src":"52691:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"contract ERC20","value":"_token"},"id":3107,"name":"Identifier","src":"52707:6:0"}],"id":3108,"name":"FunctionCall","src":"52691:23:0"}],"id":3109,"name":"MemberAccess","src":"52691:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3063,"type":"address","value":"darknodeOwner"},"id":3110,"name":"Identifier","src":"52728:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3079,"type":"uint256","value":"value"},"id":3111,"name":"Identifier","src":"52743:5:0"}],"id":3112,"name":"FunctionCall","src":"52691:58:0"}],"id":3113,"name":"ExpressionStatement","src":"52691:58:0"}],"id":3114,"name":"Block","src":"52677:83:0"}],"id":3115,"name":"IfStatement","src":"52584:176:0"}],"id":3116,"name":"Block","src":"52309:457:0"}],"id":3117,"name":"FunctionDefinition","src":"52251:515:0"}],"id":3118,"name":"ContractDefinition","src":"49347:3422:0"}],"id":3119,"name":"SourceUnit","src":"0:52769:0"}}