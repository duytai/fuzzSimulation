{"name":"DarknodeSlasher","address":"0x04ed8f5730dd4d2b2064cdb6a5bffc26a72962f2","source":"pragma solidity ^0.4.24;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n  using SafeMath for uint256;\n\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/issues/20\n * Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is ERC20, BasicToken {\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    returns (bool)\n  {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address _owner,\n    address _spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(\n    address _spender,\n    uint256 _addedValue\n  )\n    public\n    returns (bool)\n  {\n    allowed[msg.sender][_spender] = (\n      allowed[msg.sender][_spender].add(_addedValue));\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(\n    address _spender,\n    uint256 _subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    uint256 oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n}\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}\n\n/**\n * @title Pausable token\n * @dev StandardToken modified with pausable transfers.\n **/\ncontract PausableToken is StandardToken, Pausable {\n\n  function transfer(\n    address _to,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.transfer(_to, _value);\n  }\n\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.transferFrom(_from, _to, _value);\n  }\n\n  function approve(\n    address _spender,\n    uint256 _value\n  )\n    public\n    whenNotPaused\n    returns (bool)\n  {\n    return super.approve(_spender, _value);\n  }\n\n  function increaseApproval(\n    address _spender,\n    uint _addedValue\n  )\n    public\n    whenNotPaused\n    returns (bool success)\n  {\n    return super.increaseApproval(_spender, _addedValue);\n  }\n\n  function decreaseApproval(\n    address _spender,\n    uint _subtractedValue\n  )\n    public\n    whenNotPaused\n    returns (bool success)\n  {\n    return super.decreaseApproval(_spender, _subtractedValue);\n  }\n}\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is BasicToken {\n\n  event Burn(address indexed burner, uint256 value);\n\n  /**\n   * @dev Burns a specific amount of tokens.\n   * @param _value The amount of token to be burned.\n   */\n  function burn(uint256 _value) public {\n    _burn(msg.sender, _value);\n  }\n\n  function _burn(address _who, uint256 _value) internal {\n    require(_value <= balances[_who]);\n    // no need to require value <= totalSupply, since that would imply the\n    // sender's balance is greater than the totalSupply, which *should* be an assertion failure\n\n    balances[_who] = balances[_who].sub(_value);\n    totalSupply_ = totalSupply_.sub(_value);\n    emit Burn(_who, _value);\n    emit Transfer(_who, address(0), _value);\n  }\n}\n\ncontract RepublicToken is PausableToken, BurnableToken {\n\n    string public constant name = \"Republic Token\";\n    string public constant symbol = \"REN\";\n    uint8 public constant decimals = 18;\n    uint256 public constant INITIAL_SUPPLY = 1000000000 * 10**uint256(decimals);\n\n    /// @notice The RepublicToken Constructor.\n    constructor() public {\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n    }\n\n    function transferTokens(address beneficiary, uint256 amount) public onlyOwner returns (bool) {\n        /* solium-disable error-reason */\n        require(amount > 0);\n\n        balances[owner] = balances[owner].sub(amount);\n        balances[beneficiary] = balances[beneficiary].add(amount);\n        emit Transfer(owner, beneficiary, amount);\n\n        return true;\n    }\n}\n\n/**\n * @notice LinkedList is a library for a circular double linked list.\n */\nlibrary LinkedList {\n\n    /*\n    * @notice A permanent NULL node (0x0) in the circular double linked list.\n    * NULL.next is the head, and NULL.previous is the tail.\n    */\n    address public constant NULL = 0x0;\n\n    /**\n    * @notice A node points to the node before it, and the node after it. If\n    * node.previous = NULL, then the node is the head of the list. If\n    * node.next = NULL, then the node is the tail of the list.\n    */\n    struct Node {\n        bool inList;\n        address previous;\n        address next;\n    }\n\n    /**\n    * @notice LinkedList uses a mapping from address to nodes. Each address\n    * uniquely identifies a node, and in this way they are used like pointers.\n    */\n    struct List {\n        mapping (address => Node) list;\n    }\n\n    /**\n    * @notice Insert a new node before an existing node.\n    *\n    * @param self The list being used.\n    * @param target The existing node in the list.\n    * @param newNode The next node to insert before the target.\n    */\n    function insertBefore(List storage self, address target, address newNode) internal {\n        require(!isInList(self, newNode), \"already in list\");\n        require(isInList(self, target) || target == NULL, \"not in list\");\n\n        // It is expected that this value is sometimes NULL.\n        address prev = self.list[target].previous;\n\n        self.list[newNode].next = target;\n        self.list[newNode].previous = prev;\n        self.list[target].previous = newNode;\n        self.list[prev].next = newNode;\n\n        self.list[newNode].inList = true;\n    }\n\n    /**\n    * @notice Insert a new node after an existing node.\n    *\n    * @param self The list being used.\n    * @param target The existing node in the list.\n    * @param newNode The next node to insert after the target.\n    */\n    function insertAfter(List storage self, address target, address newNode) internal {\n        require(!isInList(self, newNode), \"already in list\");\n        require(isInList(self, target) || target == NULL, \"not in list\");\n\n        // It is expected that this value is sometimes NULL.\n        address n = self.list[target].next;\n\n        self.list[newNode].previous = target;\n        self.list[newNode].next = n;\n        self.list[target].next = newNode;\n        self.list[n].previous = newNode;\n\n        self.list[newNode].inList = true;\n    }\n\n    /**\n    * @notice Remove a node from the list, and fix the previous and next\n    * pointers that are pointing to the removed node. Removing anode that is not\n    * in the list will do nothing.\n    *\n    * @param self The list being using.\n    * @param node The node in the list to be removed.\n    */\n    function remove(List storage self, address node) internal {\n        require(isInList(self, node), \"not in list\");\n        if (node == NULL) {\n            return;\n        }\n        address p = self.list[node].previous;\n        address n = self.list[node].next;\n\n        self.list[p].next = n;\n        self.list[n].previous = p;\n\n        // Deleting the node should set this value to false, but we set it here for\n        // explicitness.\n        self.list[node].inList = false;\n        delete self.list[node];\n    }\n\n    /**\n    * @notice Insert a node at the beginning of the list.\n    *\n    * @param self The list being used.\n    * @param node The node to insert at the beginning of the list.\n    */\n    function prepend(List storage self, address node) internal {\n        // isInList(node) is checked in insertBefore\n\n        insertBefore(self, begin(self), node);\n    }\n\n    /**\n    * @notice Insert a node at the end of the list.\n    *\n    * @param self The list being used.\n    * @param node The node to insert at the end of the list.\n    */\n    function append(List storage self, address node) internal {\n        // isInList(node) is checked in insertBefore\n\n        insertAfter(self, end(self), node);\n    }\n\n    function swap(List storage self, address left, address right) internal {\n        // isInList(left) and isInList(right) are checked in remove\n\n        address previousRight = self.list[right].previous;\n        remove(self, right);\n        insertAfter(self, left, right);\n        remove(self, left);\n        insertAfter(self, previousRight, left);\n    }\n\n    function isInList(List storage self, address node) internal view returns (bool) {\n        return self.list[node].inList;\n    }\n\n    /**\n    * @notice Get the node at the beginning of a double linked list.\n    *\n    * @param self The list being used.\n    *\n    * @return A address identifying the node at the beginning of the double\n    * linked list.\n    */\n    function begin(List storage self) internal view returns (address) {\n        return self.list[NULL].next;\n    }\n\n    /**\n    * @notice Get the node at the end of a double linked list.\n    *\n    * @param self The list being used.\n    *\n    * @return A address identifying the node at the end of the double linked\n    * list.\n    */\n    function end(List storage self) internal view returns (address) {\n        return self.list[NULL].previous;\n    }\n\n    function next(List storage self, address node) internal view returns (address) {\n        require(isInList(self, node), \"not in list\");\n        return self.list[node].next;\n    }\n\n    function previous(List storage self, address node) internal view returns (address) {\n        require(isInList(self, node), \"not in list\");\n        return self.list[node].previous;\n    }\n\n}\n\n/// @notice This contract stores data and funds for the DarknodeRegistry\n/// contract. The data / fund logic and storage have been separated to improve\n/// upgradability.\ncontract DarknodeRegistryStore is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    /// @notice Darknodes are stored in the darknode struct. The owner is the\n    /// address that registered the darknode, the bond is the amount of REN that\n    /// was transferred during registration, and the public key is the\n    /// encryption key that should be used when sending sensitive information to\n    /// the darknode.\n    struct Darknode {\n        // The owner of a Darknode is the address that called the register\n        // function. The owner is the only address that is allowed to\n        // deregister the Darknode, unless the Darknode is slashed for\n        // malicious behavior.\n        address owner;\n\n        // The bond is the amount of REN submitted as a bond by the Darknode.\n        // This amount is reduced when the Darknode is slashed for malicious\n        // behavior.\n        uint256 bond;\n\n        // The block number at which the Darknode is considered registered.\n        uint256 registeredAt;\n\n        // The block number at which the Darknode is considered deregistered.\n        uint256 deregisteredAt;\n\n        // The public key used by this Darknode for encrypting sensitive data\n        // off chain. It is assumed that the Darknode has access to the\n        // respective private key, and that there is an agreement on the format\n        // of the public key.\n        bytes publicKey;\n    }\n\n    /// Registry data.\n    mapping(address => Darknode) private darknodeRegistry;\n    LinkedList.List private darknodes;\n\n    // RepublicToken.\n    RepublicToken public ren;\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    /// @param _ren The address of the RepublicToken contract.\n    constructor(\n        string _VERSION,\n        RepublicToken _ren\n    ) public {\n        VERSION = _VERSION;\n        ren = _ren;\n    }\n\n    /// @notice Instantiates a darknode and appends it to the darknodes\n    /// linked-list.\n    ///\n    /// @param _darknodeID The darknode's ID.\n    /// @param _darknodeOwner The darknode's owner's address\n    /// @param _bond The darknode's bond value\n    /// @param _publicKey The darknode's public key\n    /// @param _registeredAt The time stamp when the darknode is registered.\n    /// @param _deregisteredAt The time stamp when the darknode is deregistered.\n    function appendDarknode(\n        address _darknodeID,\n        address _darknodeOwner,\n        uint256 _bond,\n        bytes _publicKey,\n        uint256 _registeredAt,\n        uint256 _deregisteredAt\n    ) external onlyOwner {\n        Darknode memory darknode = Darknode({\n            owner: _darknodeOwner,\n            bond: _bond,\n            publicKey: _publicKey,\n            registeredAt: _registeredAt,\n            deregisteredAt: _deregisteredAt\n        });\n        darknodeRegistry[_darknodeID] = darknode;\n        LinkedList.append(darknodes, _darknodeID);\n    }\n\n    /// @notice Returns the address of the first darknode in the store\n    function begin() external view onlyOwner returns(address) {\n        return LinkedList.begin(darknodes);\n    }\n\n    /// @notice Returns the address of the next darknode in the store after the\n    /// given address.\n    function next(address darknodeID) external view onlyOwner returns(address) {\n        return LinkedList.next(darknodes, darknodeID);\n    }\n\n    /// @notice Removes a darknode from the store and transfers its bond to the\n    /// owner of this contract.\n    function removeDarknode(address darknodeID) external onlyOwner {\n        uint256 bond = darknodeRegistry[darknodeID].bond;\n        delete darknodeRegistry[darknodeID];\n        LinkedList.remove(darknodes, darknodeID);\n        require(ren.transfer(owner, bond), \"bond transfer failed\");\n    }\n\n    /// @notice Updates the bond of the darknode. If the bond is being\n    /// decreased, the difference is sent to the owner of this contract.\n    function updateDarknodeBond(address darknodeID, uint256 bond) external onlyOwner {\n        uint256 previousBond = darknodeRegistry[darknodeID].bond;\n        darknodeRegistry[darknodeID].bond = bond;\n        if (previousBond > bond) {\n            require(ren.transfer(owner, previousBond - bond), \"cannot transfer bond\");\n        }\n    }\n\n    /// @notice Updates the deregistration timestamp of a darknode.\n    function updateDarknodeDeregisteredAt(address darknodeID, uint256 deregisteredAt) external onlyOwner {\n        darknodeRegistry[darknodeID].deregisteredAt = deregisteredAt;\n    }\n\n    /// @notice Returns the owner of a given darknode.\n    function darknodeOwner(address darknodeID) external view onlyOwner returns (address) {\n        return darknodeRegistry[darknodeID].owner;\n    }\n\n    /// @notice Returns the bond of a given darknode.\n    function darknodeBond(address darknodeID) external view onlyOwner returns (uint256) {\n        return darknodeRegistry[darknodeID].bond;\n    }\n\n    /// @notice Returns the registration time of a given darknode.\n    function darknodeRegisteredAt(address darknodeID) external view onlyOwner returns (uint256) {\n        return darknodeRegistry[darknodeID].registeredAt;\n    }\n\n    /// @notice Returns the deregistration time of a given darknode.\n    function darknodeDeregisteredAt(address darknodeID) external view onlyOwner returns (uint256) {\n        return darknodeRegistry[darknodeID].deregisteredAt;\n    }\n\n    /// @notice Returns the encryption public key of a given darknode.\n    function darknodePublicKey(address darknodeID) external view onlyOwner returns (bytes) {\n        return darknodeRegistry[darknodeID].publicKey;\n    }\n}\n\n/// @notice DarknodeRegistry is responsible for the registration and\n/// deregistration of Darknodes.\ncontract DarknodeRegistry is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    /// @notice Darknode pods are shuffled after a fixed number of blocks.\n    /// An Epoch stores an epoch hash used as an (insecure) RNG seed, and the\n    /// blocknumber which restricts when the next epoch can be called.\n    struct Epoch {\n        uint256 epochhash;\n        uint256 blocknumber;\n    }\n\n    uint256 public numDarknodes;\n    uint256 public numDarknodesNextEpoch;\n    uint256 public numDarknodesPreviousEpoch;\n\n    /// Variables used to parameterize behavior.\n    uint256 public minimumBond;\n    uint256 public minimumPodSize;\n    uint256 public minimumEpochInterval;\n    address public slasher;\n\n    /// When one of the above variables is modified, it is only updated when the\n    /// next epoch is called. These variables store the values for the next epoch.\n    uint256 public nextMinimumBond;\n    uint256 public nextMinimumPodSize;\n    uint256 public nextMinimumEpochInterval;\n    address public nextSlasher;\n\n    /// The current and previous epoch\n    Epoch public currentEpoch;\n    Epoch public previousEpoch;\n\n    /// Republic ERC20 token contract used to transfer bonds.\n    RepublicToken public ren;\n\n    /// Darknode Registry Store is the storage contract for darknodes.\n    DarknodeRegistryStore public store;\n\n    /// @notice Emitted when a darknode is registered.\n    /// @param _darknodeID The darknode ID that was registered.\n    /// @param _bond The amount of REN that was transferred as bond.\n    event LogDarknodeRegistered(address _darknodeID, uint256 _bond);\n\n    /// @notice Emitted when a darknode is deregistered.\n    /// @param _darknodeID The darknode ID that was deregistered.\n    event LogDarknodeDeregistered(address _darknodeID);\n\n    /// @notice Emitted when a refund has been made.\n    /// @param _owner The address that was refunded.\n    /// @param _amount The amount of REN that was refunded.\n    event LogDarknodeOwnerRefunded(address _owner, uint256 _amount);\n\n    /// @notice Emitted when a new epoch has begun.\n    event LogNewEpoch();\n\n    /// @notice Emitted when a constructor parameter has been updated.\n    event LogMinimumBondUpdated(uint256 previousMinimumBond, uint256 nextMinimumBond);\n    event LogMinimumPodSizeUpdated(uint256 previousMinimumPodSize, uint256 nextMinimumPodSize);\n    event LogMinimumEpochIntervalUpdated(uint256 previousMinimumEpochInterval, uint256 nextMinimumEpochInterval);\n    event LogSlasherUpdated(address previousSlasher, address nextSlasher);\n\n    /// @notice Only allow the owner that registered the darknode to pass.\n    modifier onlyDarknodeOwner(address _darknodeID) {\n        require(store.darknodeOwner(_darknodeID) == msg.sender, \"must be darknode owner\");\n        _;\n    }\n\n    /// @notice Only allow unregistered darknodes.\n    modifier onlyRefunded(address _darknodeID) {\n        require(isRefunded(_darknodeID), \"must be refunded or never registered\");\n        _;\n    }\n\n    /// @notice Only allow refundable darknodes.\n    modifier onlyRefundable(address _darknodeID) {\n        require(isRefundable(_darknodeID), \"must be deregistered for at least one epoch\");\n        _;\n    }\n\n    /// @notice Only allowed registered nodes without a pending deregistration to\n    /// deregister\n    modifier onlyDeregisterable(address _darknodeID) {\n        require(isDeregisterable(_darknodeID), \"must be deregisterable\");\n        _;\n    }\n\n    /// @notice Only allow the Slasher contract.\n    modifier onlySlasher() {\n        require(slasher == msg.sender, \"must be slasher\");\n        _;\n    }\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    /// @param _renAddress The address of the RepublicToken contract.\n    /// @param _storeAddress The address of the DarknodeRegistryStore contract.\n    /// @param _minimumBond The minimum bond amount that can be submitted by a\n    ///        Darknode.\n    /// @param _minimumPodSize The minimum size of a Darknode pod.\n    /// @param _minimumEpochInterval The minimum number of blocks between\n    ///        epochs.\n    constructor(\n        string _VERSION,\n        RepublicToken _renAddress,\n        DarknodeRegistryStore _storeAddress,\n        uint256 _minimumBond,\n        uint256 _minimumPodSize,\n        uint256 _minimumEpochInterval\n    ) public {\n        VERSION = _VERSION;\n\n        store = _storeAddress;\n        ren = _renAddress;\n\n        minimumBond = _minimumBond;\n        nextMinimumBond = minimumBond;\n\n        minimumPodSize = _minimumPodSize;\n        nextMinimumPodSize = minimumPodSize;\n\n        minimumEpochInterval = _minimumEpochInterval;\n        nextMinimumEpochInterval = minimumEpochInterval;\n\n        currentEpoch = Epoch({\n            epochhash: uint256(blockhash(block.number - 1)),\n            blocknumber: block.number\n        });\n        numDarknodes = 0;\n        numDarknodesNextEpoch = 0;\n        numDarknodesPreviousEpoch = 0;\n    }\n\n    /// @notice Register a darknode and transfer the bond to this contract. The\n    /// caller must provide a public encryption key for the darknode as well as\n    /// a bond in REN. The bond must be provided as an ERC20 allowance. The dark\n    /// node will remain pending registration until the next epoch. Only after\n    /// this period can the darknode be deregistered. The caller of this method\n    /// will be stored as the owner of the darknode.\n    ///\n    /// @param _darknodeID The darknode ID that will be registered.\n    /// @param _publicKey The public key of the darknode. It is stored to allow\n    ///        other darknodes and traders to encrypt messages to the trader.\n    /// @param _bond The bond that will be paid. It must be greater than, or\n    ///        equal to, the minimum bond.\n    function register(address _darknodeID, bytes _publicKey, uint256 _bond) external onlyRefunded(_darknodeID) {\n        // REN allowance\n        require(_bond >= minimumBond, \"insufficient bond\");\n        // require(ren.allowance(msg.sender, address(this)) >= _bond);\n        require(ren.transferFrom(msg.sender, address(this), _bond), \"bond transfer failed\");\n        ren.transfer(address(store), _bond);\n\n        // Flag this darknode for registration\n        store.appendDarknode(\n            _darknodeID,\n            msg.sender,\n            _bond,\n            _publicKey,\n            currentEpoch.blocknumber + minimumEpochInterval,\n            0\n        );\n\n        numDarknodesNextEpoch += 1;\n\n        // Emit an event.\n        emit LogDarknodeRegistered(_darknodeID, _bond);\n    }\n\n    /// @notice Deregister a darknode. The darknode will not be deregistered\n    /// until the end of the epoch. After another epoch, the bond can be\n    /// refunded by calling the refund method.\n    /// @param _darknodeID The darknode ID that will be deregistered. The caller\n    ///        of this method store.darknodeRegisteredAt(_darknodeID) must be\n    //         the owner of this darknode.\n    function deregister(address _darknodeID) external onlyDeregisterable(_darknodeID) onlyDarknodeOwner(_darknodeID) {\n        // Flag the darknode for deregistration\n        store.updateDarknodeDeregisteredAt(_darknodeID, currentEpoch.blocknumber + minimumEpochInterval);\n        numDarknodesNextEpoch -= 1;\n\n        // Emit an event\n        emit LogDarknodeDeregistered(_darknodeID);\n    }\n\n    /// @notice Progress the epoch if it is possible to do so. This captures\n    /// the current timestamp and current blockhash and overrides the current\n    /// epoch.\n    function epoch() external {\n        if (previousEpoch.blocknumber == 0) {\n            // The first epoch must be called by the owner of the contract\n            require(msg.sender == owner, \"not authorized (first epochs)\");\n        }\n\n        // Require that the epoch interval has passed\n        require(block.number >= currentEpoch.blocknumber + minimumEpochInterval, \"epoch interval has not passed\");\n        uint256 epochhash = uint256(blockhash(block.number - 1));\n\n        // Update the epoch hash and timestamp\n        previousEpoch = currentEpoch;\n        currentEpoch = Epoch({\n            epochhash: epochhash,\n            blocknumber: block.number\n        });\n\n        // Update the registry information\n        numDarknodesPreviousEpoch = numDarknodes;\n        numDarknodes = numDarknodesNextEpoch;\n\n        // If any update functions have been called, update the values now\n        if (nextMinimumBond != minimumBond) {\n            minimumBond = nextMinimumBond;\n            emit LogMinimumBondUpdated(minimumBond, nextMinimumBond);\n        }\n        if (nextMinimumPodSize != minimumPodSize) {\n            minimumPodSize = nextMinimumPodSize;\n            emit LogMinimumPodSizeUpdated(minimumPodSize, nextMinimumPodSize);\n        }\n        if (nextMinimumEpochInterval != minimumEpochInterval) {\n            minimumEpochInterval = nextMinimumEpochInterval;\n            emit LogMinimumEpochIntervalUpdated(minimumEpochInterval, nextMinimumEpochInterval);\n        }\n        if (nextSlasher != slasher) {\n            slasher = nextSlasher;\n            emit LogSlasherUpdated(slasher, nextSlasher);\n        }\n\n        // Emit an event\n        emit LogNewEpoch();\n    }\n\n    /// @notice Allows the contract owner to transfer ownership of the\n    /// DarknodeRegistryStore.\n    /// @param _newOwner The address to transfer the ownership to.\n    function transferStoreOwnership(address _newOwner) external onlyOwner {\n        store.transferOwnership(_newOwner);\n    }\n\n    /// @notice Allows the contract owner to update the minimum bond.\n    /// @param _nextMinimumBond The minimum bond amount that can be submitted by\n    ///        a darknode.\n    function updateMinimumBond(uint256 _nextMinimumBond) external onlyOwner {\n        // Will be updated next epoch\n        nextMinimumBond = _nextMinimumBond;\n    }\n\n    /// @notice Allows the contract owner to update the minimum pod size.\n    /// @param _nextMinimumPodSize The minimum size of a pod.\n    function updateMinimumPodSize(uint256 _nextMinimumPodSize) external onlyOwner {\n        // Will be updated next epoch\n        nextMinimumPodSize = _nextMinimumPodSize;\n    }\n\n    /// @notice Allows the contract owner to update the minimum epoch interval.\n    /// @param _nextMinimumEpochInterval The minimum number of blocks between epochs.\n    function updateMinimumEpochInterval(uint256 _nextMinimumEpochInterval) external onlyOwner {\n        // Will be updated next epoch\n        nextMinimumEpochInterval = _nextMinimumEpochInterval;\n    }\n\n    /// @notice Allow the contract owner to update the DarknodeSlasher contract\n    /// address.\n    /// @param _slasher The new slasher address.\n    function updateSlasher(address _slasher) external onlyOwner {\n        nextSlasher = _slasher;\n    }\n\n    /// @notice Allow the DarknodeSlasher contract to slash half of a darknode's\n    /// bond and deregister it. The bond is distributed as follows:\n    ///   1/2 is kept by the guilty prover\n    ///   1/8 is rewarded to the first challenger\n    ///   1/8 is rewarded to the second challenger\n    ///   1/4 becomes unassigned\n    /// @param _prover The guilty prover whose bond is being slashed\n    /// @param _challenger1 The first of the two darknodes who submitted the challenge\n    /// @param _challenger2 The second of the two darknodes who submitted the challenge\n    function slash(address _prover, address _challenger1, address _challenger2)\n        external\n        onlySlasher\n    {\n        uint256 penalty = store.darknodeBond(_prover) / 2;\n        uint256 reward = penalty / 4;\n\n        // Slash the bond of the failed prover in half\n        store.updateDarknodeBond(_prover, penalty);\n\n        // If the darknode has not been deregistered then deregister it\n        if (isDeregisterable(_prover)) {\n            store.updateDarknodeDeregisteredAt(_prover, currentEpoch.blocknumber + minimumEpochInterval);\n            numDarknodesNextEpoch -= 1;\n            emit LogDarknodeDeregistered(_prover);\n        }\n\n        // Reward the challengers with less than the penalty so that it is not\n        // worth challenging yourself\n        ren.transfer(store.darknodeOwner(_challenger1), reward);\n        ren.transfer(store.darknodeOwner(_challenger2), reward);\n    }\n\n    /// @notice Refund the bond of a deregistered darknode. This will make the\n    /// darknode available for registration again. Anyone can call this function\n    /// but the bond will always be refunded to the darknode owner.\n    ///\n    /// @param _darknodeID The darknode ID that will be refunded. The caller\n    ///        of this method must be the owner of this darknode.\n    function refund(address _darknodeID) external onlyRefundable(_darknodeID) {\n        address darknodeOwner = store.darknodeOwner(_darknodeID);\n\n        // Remember the bond amount\n        uint256 amount = store.darknodeBond(_darknodeID);\n\n        // Erase the darknode from the registry\n        store.removeDarknode(_darknodeID);\n\n        // Refund the owner by transferring REN\n        ren.transfer(darknodeOwner, amount);\n\n        // Emit an event.\n        emit LogDarknodeOwnerRefunded(darknodeOwner, amount);\n    }\n\n    /// @notice Retrieves the address of the account that registered a darknode.\n    /// @param _darknodeID The ID of the darknode to retrieve the owner for.\n    function getDarknodeOwner(address _darknodeID) external view returns (address) {\n        return store.darknodeOwner(_darknodeID);\n    }\n\n    /// @notice Retrieves the bond amount of a darknode in 10^-18 REN.\n    /// @param _darknodeID The ID of the darknode to retrieve the bond for.\n    function getDarknodeBond(address _darknodeID) external view returns (uint256) {\n        return store.darknodeBond(_darknodeID);\n    }\n\n    /// @notice Retrieves the encryption public key of the darknode.\n    /// @param _darknodeID The ID of the darknode to retrieve the public key for.\n    function getDarknodePublicKey(address _darknodeID) external view returns (bytes) {\n        return store.darknodePublicKey(_darknodeID);\n    }\n\n    /// @notice Retrieves a list of darknodes which are registered for the\n    /// current epoch.\n    /// @param _start A darknode ID used as an offset for the list. If _start is\n    ///        0x0, the first dark node will be used. _start won't be\n    ///        included it is not registered for the epoch.\n    /// @param _count The number of darknodes to retrieve starting from _start.\n    ///        If _count is 0, all of the darknodes from _start are\n    ///        retrieved. If _count is more than the remaining number of\n    ///        registered darknodes, the rest of the list will contain\n    ///        0x0s.\n    function getDarknodes(address _start, uint256 _count) external view returns (address[]) {\n        uint256 count = _count;\n        if (count == 0) {\n            count = numDarknodes;\n        }\n        return getDarknodesFromEpochs(_start, count, false);\n    }\n\n    /// @notice Retrieves a list of darknodes which were registered for the\n    /// previous epoch. See `getDarknodes` for the parameter documentation.\n    function getPreviousDarknodes(address _start, uint256 _count) external view returns (address[]) {\n        uint256 count = _count;\n        if (count == 0) {\n            count = numDarknodesPreviousEpoch;\n        }\n        return getDarknodesFromEpochs(_start, count, true);\n    }\n\n    /// @notice Returns whether a darknode is scheduled to become registered\n    /// at next epoch.\n    /// @param _darknodeID The ID of the darknode to return\n    function isPendingRegistration(address _darknodeID) external view returns (bool) {\n        uint256 registeredAt = store.darknodeRegisteredAt(_darknodeID);\n        return registeredAt != 0 && registeredAt > currentEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode is in the pending deregistered state. In\n    /// this state a darknode is still considered registered.\n    function isPendingDeregistration(address _darknodeID) external view returns (bool) {\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        return deregisteredAt != 0 && deregisteredAt > currentEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode is in the deregistered state.\n    function isDeregistered(address _darknodeID) public view returns (bool) {\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        return deregisteredAt != 0 && deregisteredAt <= currentEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode can be deregistered. This is true if the\n    /// darknodes is in the registered state and has not attempted to\n    /// deregister yet.\n    function isDeregisterable(address _darknodeID) public view returns (bool) {\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        // The Darknode is currently in the registered state and has not been\n        // transitioned to the pending deregistration, or deregistered, state\n        return isRegistered(_darknodeID) && deregisteredAt == 0;\n    }\n\n    /// @notice Returns if a darknode is in the refunded state. This is true\n    /// for darknodes that have never been registered, or darknodes that have\n    /// been deregistered and refunded.\n    function isRefunded(address _darknodeID) public view returns (bool) {\n        uint256 registeredAt = store.darknodeRegisteredAt(_darknodeID);\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        return registeredAt == 0 && deregisteredAt == 0;\n    }\n\n    /// @notice Returns if a darknode is refundable. This is true for darknodes\n    /// that have been in the deregistered state for one full epoch.\n    function isRefundable(address _darknodeID) public view returns (bool) {\n        return isDeregistered(_darknodeID) && store.darknodeDeregisteredAt(_darknodeID) <= previousEpoch.blocknumber;\n    }\n\n    /// @notice Returns if a darknode is in the registered state.\n    function isRegistered(address _darknodeID) public view returns (bool) {\n        return isRegisteredInEpoch(_darknodeID, currentEpoch);\n    }\n\n    /// @notice Returns if a darknode was in the registered state last epoch.\n    function isRegisteredInPreviousEpoch(address _darknodeID) public view returns (bool) {\n        return isRegisteredInEpoch(_darknodeID, previousEpoch);\n    }\n\n    /// @notice Returns if a darknode was in the registered state for a given\n    /// epoch.\n    /// @param _darknodeID The ID of the darknode\n    /// @param _epoch One of currentEpoch, previousEpoch\n    function isRegisteredInEpoch(address _darknodeID, Epoch _epoch) private view returns (bool) {\n        uint256 registeredAt = store.darknodeRegisteredAt(_darknodeID);\n        uint256 deregisteredAt = store.darknodeDeregisteredAt(_darknodeID);\n        bool registered = registeredAt != 0 && registeredAt <= _epoch.blocknumber;\n        bool notDeregistered = deregisteredAt == 0 || deregisteredAt > _epoch.blocknumber;\n        // The Darknode has been registered and has not yet been deregistered,\n        // although it might be pending deregistration\n        return registered && notDeregistered;\n    }\n\n    /// @notice Returns a list of darknodes registered for either the current\n    /// or the previous epoch. See `getDarknodes` for documentation on the\n    /// parameters `_start` and `_count`.\n    /// @param _usePreviousEpoch If true, use the previous epoch, otherwise use\n    ///        the current epoch.\n    function getDarknodesFromEpochs(address _start, uint256 _count, bool _usePreviousEpoch) private view returns (address[]) {\n        uint256 count = _count;\n        if (count == 0) {\n            count = numDarknodes;\n        }\n\n        address[] memory nodes = new address[](count);\n\n        // Begin with the first node in the list\n        uint256 n = 0;\n        address next = _start;\n        if (next == 0x0) {\n            next = store.begin();\n        }\n\n        // Iterate until all registered Darknodes have been collected\n        while (n < count) {\n            if (next == 0x0) {\n                break;\n            }\n            // Only include Darknodes that are currently registered\n            bool includeNext;\n            if (_usePreviousEpoch) {\n                includeNext = isRegisteredInPreviousEpoch(next);\n            } else {\n                includeNext = isRegistered(next);\n            }\n            if (!includeNext) {\n                next = store.next(next);\n                continue;\n            }\n            nodes[n] = next;\n            next = store.next(next);\n            n += 1;\n        }\n        return nodes;\n    }\n}\n\n/// @notice The BrokerVerifier interface defines the functions that a settlement\n/// layer's broker verifier contract must implement.\ninterface BrokerVerifier {\n\n    /// @notice The function signature that will be called when a trader opens\n    /// an order.\n    ///\n    /// @param _trader The trader requesting the withdrawal.\n    /// @param _signature The 65-byte signature from the broker.\n    /// @param _orderID The 32-byte order ID.\n    function verifyOpenSignature(\n        address _trader,\n        bytes _signature,\n        bytes32 _orderID\n    ) external returns (bool);\n}\n\n/// @notice The Settlement interface defines the functions that a settlement\n/// layer must implement.\n/// Docs: https://github.com/republicprotocol/republic-sol/blob/nightly/docs/05-settlement.md\ninterface Settlement {\n    function submitOrder(\n        bytes _details,\n        uint64 _settlementID,\n        uint64 _tokens,\n        uint256 _price,\n        uint256 _volume,\n        uint256 _minimumVolume\n    ) external;\n\n    function submissionGasPriceLimit() external view returns (uint256);\n\n    function settle(\n        bytes32 _buyID,\n        bytes32 _sellID\n    ) external;\n\n    /// @notice orderStatus should return the status of the order, which should\n    /// be:\n    ///     0  - Order not seen before\n    ///     1  - Order details submitted\n    ///     >1 - Order settled, or settlement no longer possible\n    function orderStatus(bytes32 _orderID) external view returns (uint8);\n}\n\n/// @notice SettlementRegistry allows a Settlement layer to register the\n/// contracts used for match settlement and for broker signature verification.\ncontract SettlementRegistry is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    struct SettlementDetails {\n        bool registered;\n        Settlement settlementContract;\n        BrokerVerifier brokerVerifierContract;\n    }\n\n    // Settlement IDs are 64-bit unsigned numbers\n    mapping(uint64 => SettlementDetails) public settlementDetails;\n\n    // Events\n    event LogSettlementRegistered(uint64 settlementID, Settlement settlementContract, BrokerVerifier brokerVerifierContract);\n    event LogSettlementUpdated(uint64 settlementID, Settlement settlementContract, BrokerVerifier brokerVerifierContract);\n    event LogSettlementDeregistered(uint64 settlementID);\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    constructor(string _VERSION) public {\n        VERSION = _VERSION;\n    }\n\n    /// @notice Returns the settlement contract of a settlement layer.\n    function settlementRegistration(uint64 _settlementID) external view returns (bool) {\n        return settlementDetails[_settlementID].registered;\n    }\n\n    /// @notice Returns the settlement contract of a settlement layer.\n    function settlementContract(uint64 _settlementID) external view returns (Settlement) {\n        return settlementDetails[_settlementID].settlementContract;\n    }\n\n    /// @notice Returns the broker verifier contract of a settlement layer.\n    function brokerVerifierContract(uint64 _settlementID) external view returns (BrokerVerifier) {\n        return settlementDetails[_settlementID].brokerVerifierContract;\n    }\n\n    /// @param _settlementID A unique 64-bit settlement identifier.\n    /// @param _settlementContract The address to use for settling matches.\n    /// @param _brokerVerifierContract The decimals to use for verifying\n    ///        broker signatures.\n    function registerSettlement(uint64 _settlementID, Settlement _settlementContract, BrokerVerifier _brokerVerifierContract) public onlyOwner {\n        bool alreadyRegistered = settlementDetails[_settlementID].registered;\n        \n        settlementDetails[_settlementID] = SettlementDetails({\n            registered: true,\n            settlementContract: _settlementContract,\n            brokerVerifierContract: _brokerVerifierContract\n        });\n\n        if (alreadyRegistered) {\n            emit LogSettlementUpdated(_settlementID, _settlementContract, _brokerVerifierContract);\n        } else {\n            emit LogSettlementRegistered(_settlementID, _settlementContract, _brokerVerifierContract);\n        }\n    }\n\n    /// @notice Deregisteres a settlement layer, clearing the details.\n    /// @param _settlementID The unique 64-bit settlement identifier.\n    function deregisterSettlement(uint64 _settlementID) external onlyOwner {\n        require(settlementDetails[_settlementID].registered, \"not registered\");\n\n        delete settlementDetails[_settlementID];\n\n        emit LogSettlementDeregistered(_settlementID);\n    }\n}\n\n/**\n * @title Eliptic curve signature operations\n * @dev Based on https://gist.github.com/axic/5b33912c6f61ae6fd96d6c4a47afde6d\n * TODO Remove this library once solidity supports passing a signature to ecrecover.\n * See https://github.com/ethereum/solidity/issues/864\n */\n\nlibrary ECRecovery {\n\n  /**\n   * @dev Recover signer address from a message by using their signature\n   * @param hash bytes32 message, the hash is the signed message. What is recovered is the signer address.\n   * @param sig bytes signature, the signature is generated using web3.eth.sign()\n   */\n  function recover(bytes32 hash, bytes sig)\n    internal\n    pure\n    returns (address)\n  {\n    bytes32 r;\n    bytes32 s;\n    uint8 v;\n\n    // Check the signature length\n    if (sig.length != 65) {\n      return (address(0));\n    }\n\n    // Divide the signature in r, s and v variables\n    // ecrecover takes the signature parameters, and the only way to get them\n    // currently is to use assembly.\n    // solium-disable-next-line security/no-inline-assembly\n    assembly {\n      r := mload(add(sig, 32))\n      s := mload(add(sig, 64))\n      v := byte(0, mload(add(sig, 96)))\n    }\n\n    // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\n    if (v < 27) {\n      v += 27;\n    }\n\n    // If the version is correct return the signer address\n    if (v != 27 && v != 28) {\n      return (address(0));\n    } else {\n      // solium-disable-next-line arg-overflow\n      return ecrecover(hash, v, r, s);\n    }\n  }\n\n  /**\n   * toEthSignedMessageHash\n   * @dev prefix a bytes32 value with \"\\x19Ethereum Signed Message:\"\n   * and hash the result\n   */\n  function toEthSignedMessageHash(bytes32 hash)\n    internal\n    pure\n    returns (bytes32)\n  {\n    // 32 is the length in bytes of hash,\n    // enforced by the type signature above\n    return keccak256(\n      abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)\n    );\n  }\n}\n\nlibrary Utils {\n\n    /**\n     * @notice Converts a number to its string/bytes representation\n     *\n     * @param _v the uint to convert\n     */\n    function uintToBytes(uint256 _v) internal pure returns (bytes) {\n        uint256 v = _v;\n        if (v == 0) {\n            return \"0\";\n        }\n\n        uint256 digits = 0;\n        uint256 v2 = v;\n        while (v2 > 0) {\n            v2 /= 10;\n            digits += 1;\n        }\n\n        bytes memory result = new bytes(digits);\n\n        for (uint256 i = 0; i < digits; i++) {\n            result[digits - i - 1] = bytes1((v % 10) + 48);\n            v /= 10;\n        }\n\n        return result;\n    }\n\n    /**\n     * @notice Retrieves the address from a signature\n     *\n     * @param _hash the message that was signed (any length of bytes)\n     * @param _signature the signature (65 bytes)\n     */\n    function addr(bytes _hash, bytes _signature) internal pure returns (address) {\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n\";\n        bytes memory encoded = abi.encodePacked(prefix, uintToBytes(_hash.length), _hash);\n        bytes32 prefixedHash = keccak256(encoded);\n\n        return ECRecovery.recover(prefixedHash, _signature);\n    }\n\n}\n\n/// @notice The Orderbook contract stores the state and priority of orders and\n/// allows the Darknodes to easily reach consensus. Eventually, this contract\n/// will only store a subset of order states, such as cancellation, to improve\n/// the throughput of orders.\ncontract Orderbook is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    /// @notice OrderState enumerates the possible states of an order. All\n    /// orders default to the Undefined state.\n    enum OrderState {Undefined, Open, Confirmed, Canceled}\n\n    /// @notice Order stores a subset of the public data associated with an order.\n    struct Order {\n        OrderState state;     // State of the order\n        address trader;       // Trader that owns the order\n        address confirmer;    // Darknode that confirmed the order in a match\n        uint64 settlementID;  // The settlement that signed the order opening\n        uint256 priority;     // Logical time priority of this order\n        uint256 blockNumber;  // Block number of the most recent state change\n        bytes32 matchedOrder; // Order confirmed in a match with this order\n    }\n\n    RepublicToken public ren;\n    DarknodeRegistry public darknodeRegistry;\n    SettlementRegistry public settlementRegistry;\n\n    bytes32[] private orderbook;\n\n    // Order details are exposed through directly accessing this mapping, or\n    // through the getter functions below for each of the order's fields.\n    mapping(bytes32 => Order) public orders;\n\n    event LogFeeUpdated(uint256 previousFee, uint256 nextFee);\n    event LogDarknodeRegistryUpdated(DarknodeRegistry previousDarknodeRegistry, DarknodeRegistry nextDarknodeRegistry);\n\n    /// @notice Only allow registered dark nodes.\n    modifier onlyDarknode(address _sender) {\n        require(darknodeRegistry.isRegistered(address(_sender)), \"must be registered darknode\");\n        _;\n    }\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    /// @param _renAddress The address of the RepublicToken contract.\n    /// @param _darknodeRegistry The address of the DarknodeRegistry contract.\n    /// @param _settlementRegistry The address of the SettlementRegistry\n    ///        contract.\n    constructor(\n        string _VERSION,\n        RepublicToken _renAddress,\n        DarknodeRegistry _darknodeRegistry,\n        SettlementRegistry _settlementRegistry\n    ) public {\n        VERSION = _VERSION;\n        ren = _renAddress;\n        darknodeRegistry = _darknodeRegistry;\n        settlementRegistry = _settlementRegistry;\n    }\n\n    /// @notice Allows the owner to update the address of the DarknodeRegistry\n    /// contract.\n    function updateDarknodeRegistry(DarknodeRegistry _newDarknodeRegistry) external onlyOwner {\n        emit LogDarknodeRegistryUpdated(darknodeRegistry, _newDarknodeRegistry);\n        darknodeRegistry = _newDarknodeRegistry;\n    }\n\n    /// @notice Open an order in the orderbook. The order must be in the\n    /// Undefined state.\n    ///\n    /// @param _signature Signature of the message that defines the trader. The\n    ///        message is \"Republic Protocol: open: {orderId}\".\n    /// @param _orderID The hash of the order.\n    function openOrder(uint64 _settlementID, bytes _signature, bytes32 _orderID) external {\n        require(orders[_orderID].state == OrderState.Undefined, \"invalid order status\");\n\n        address trader = msg.sender;\n\n        // Verify the order signature\n        require(settlementRegistry.settlementRegistration(_settlementID), \"settlement not registered\");\n        BrokerVerifier brokerVerifier = settlementRegistry.brokerVerifierContract(_settlementID);\n        require(brokerVerifier.verifyOpenSignature(trader, _signature, _orderID), \"invalid broker signature\");\n\n        orders[_orderID] = Order({\n            state: OrderState.Open,\n            trader: trader,\n            confirmer: 0x0,\n            settlementID: _settlementID,\n            priority: orderbook.length + 1,\n            blockNumber: block.number,\n            matchedOrder: 0x0\n        });\n\n        orderbook.push(_orderID);\n    }\n\n    /// @notice Confirm an order match between orders. The confirmer must be a\n    /// registered Darknode and the orders must be in the Open state. A\n    /// malicious confirmation by a Darknode will result in a bond slash of the\n    /// Darknode.\n    ///\n    /// @param _orderID The hash of the order.\n    /// @param _matchedOrderID The hashes of the matching order.\n    function confirmOrder(bytes32 _orderID, bytes32 _matchedOrderID) external onlyDarknode(msg.sender) {\n        require(orders[_orderID].state == OrderState.Open, \"invalid order status\");\n        require(orders[_matchedOrderID].state == OrderState.Open, \"invalid order status\");\n\n        orders[_orderID].state = OrderState.Confirmed;\n        orders[_orderID].confirmer = msg.sender;\n        orders[_orderID].matchedOrder = _matchedOrderID;\n        orders[_orderID].blockNumber = block.number;\n\n        orders[_matchedOrderID].state = OrderState.Confirmed;\n        orders[_matchedOrderID].confirmer = msg.sender;\n        orders[_matchedOrderID].matchedOrder = _orderID;\n        orders[_matchedOrderID].blockNumber = block.number;\n    }\n\n    /// @notice Cancel an open order in the orderbook. An order can be cancelled\n    /// by the trader who opened the order, or by the broker verifier contract.\n    /// This allows the settlement layer to implement their own logic for\n    /// cancelling orders without trader interaction (e.g. to ban a trader from\n    /// a specific darkpool, or to use multiple order-matching platforms)\n    ///\n    /// @param _orderID The hash of the order.\n    function cancelOrder(bytes32 _orderID) external {\n        require(orders[_orderID].state == OrderState.Open, \"invalid order state\");\n\n        // Require the msg.sender to be the trader or the broker verifier\n        address brokerVerifier = address(settlementRegistry.brokerVerifierContract(orders[_orderID].settlementID));\n        require(msg.sender == orders[_orderID].trader || msg.sender == brokerVerifier, \"not authorized\");\n\n        orders[_orderID].state = OrderState.Canceled;\n        orders[_orderID].blockNumber = block.number;\n    }\n\n    /// @notice returns status of the given orderID.\n    function orderState(bytes32 _orderID) external view returns (OrderState) {\n        return orders[_orderID].state;\n    }\n\n    /// @notice returns a list of matched orders to the given orderID.\n    function orderMatch(bytes32 _orderID) external view returns (bytes32) {\n        return orders[_orderID].matchedOrder;\n    }\n\n    /// @notice returns the priority of the given orderID.\n    /// The priority is the index of the order in the orderbook.\n    function orderPriority(bytes32 _orderID) external view returns (uint256) {\n        return orders[_orderID].priority;\n    }\n\n    /// @notice returns the trader of the given orderID.\n    /// Trader is the one who signs the message and does the actual trading.\n    function orderTrader(bytes32 _orderID) external view returns (address) {\n        return orders[_orderID].trader;\n    }\n\n    /// @notice returns the darknode address which confirms the given orderID.\n    function orderConfirmer(bytes32 _orderID) external view returns (address) {\n        return orders[_orderID].confirmer;\n    }\n\n    /// @notice returns the block number when the order being last modified.\n    function orderBlockNumber(bytes32 _orderID) external view returns (uint256) {\n        return orders[_orderID].blockNumber;\n    }\n\n    /// @notice returns the block depth of the orderId\n    function orderDepth(bytes32 _orderID) external view returns (uint256) {\n        if (orders[_orderID].blockNumber == 0) {\n            return 0;\n        }\n        return (block.number - orders[_orderID].blockNumber);\n    }\n\n    /// @notice returns the number of orders in the orderbook\n    function ordersCount() external view returns (uint256) {\n        return orderbook.length;\n    }\n\n    /// @notice returns order details of the orders starting from the offset.\n    function getOrders(uint256 _offset, uint256 _limit) external view returns (bytes32[], address[], uint8[]) {\n        if (_offset >= orderbook.length) {\n            return;\n        }\n\n        // If the provided limit is more than the number of orders after the offset,\n        // decrease the limit\n        uint256 limit = _limit;\n        if (_offset + limit > orderbook.length) {\n            limit = orderbook.length - _offset;\n        }\n\n        bytes32[] memory orderIDs = new bytes32[](limit);\n        address[] memory traderAddresses = new address[](limit);\n        uint8[] memory states = new uint8[](limit);\n\n        for (uint256 i = 0; i < limit; i++) {\n            bytes32 order = orderbook[i + _offset];\n            orderIDs[i] = order;\n            traderAddresses[i] = orders[order].trader;\n            states[i] = uint8(orders[order].state);\n        }\n\n        return (orderIDs, traderAddresses, states);\n    }\n}\n\n/// @notice A library for calculating and verifying order match details\nlibrary SettlementUtils {\n\n    struct OrderDetails {\n        uint64 settlementID;\n        uint64 tokens;\n        uint256 price;\n        uint256 volume;\n        uint256 minimumVolume;\n    }\n\n    /// @notice Calculates the ID of the order.\n    /// @param details Order details that are not required for settlement\n    ///        execution. They are combined as a single byte array.\n    /// @param order The order details required for settlement execution.\n    function hashOrder(bytes details, OrderDetails memory order) internal pure returns (bytes32) {\n        return keccak256(\n            abi.encodePacked(\n                details,\n                order.settlementID,\n                order.tokens,\n                order.price,\n                order.volume,\n                order.minimumVolume\n            )\n        );\n    }\n\n    /// @notice Verifies that two orders match when considering the tokens,\n    /// price, volumes / minimum volumes and settlement IDs. verifyMatchDetails is used\n    /// my the DarknodeSlasher to verify challenges. Settlement layers may also\n    /// use this function.\n    /// @dev When verifying two orders for settlement, you should also:\n    ///   1) verify the orders have been confirmed together\n    ///   2) verify the orders' traders are distinct\n    /// @param _buy The buy order details.\n    /// @param _sell The sell order details.\n    function verifyMatchDetails(OrderDetails memory _buy, OrderDetails memory _sell) internal pure returns (bool) {\n\n        // Buy and sell tokens should match\n        if (!verifyTokens(_buy.tokens, _sell.tokens)) {\n            return false;\n        }\n\n        // Buy price should be greater than sell price\n        if (_buy.price < _sell.price) {\n            return false;\n        }\n\n        // // Buy volume should be greater than sell minimum volume\n        if (_buy.volume < _sell.minimumVolume) {\n            return false;\n        }\n\n        // Sell volume should be greater than buy minimum volume\n        if (_sell.volume < _buy.minimumVolume) {\n            return false;\n        }\n\n        // Require that the orders were submitted to the same settlement layer\n        if (_buy.settlementID != _sell.settlementID) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /// @notice Verifies that two token requirements can be matched and that the\n    /// tokens are formatted correctly.\n    /// @param _buyTokens The buy token details.\n    /// @param _sellToken The sell token details.\n    function verifyTokens(uint64 _buyTokens, uint64 _sellToken) internal pure returns (bool) {\n        return ((\n                uint32(_buyTokens) == uint32(_sellToken >> 32)) && (\n                uint32(_sellToken) == uint32(_buyTokens >> 32)) && (\n                uint32(_buyTokens >> 32) <= uint32(_buyTokens))\n        );\n    }\n}\n\n/// @notice Allows order confirmations to be challenged, penalizing darknodes\n/// who have confirmed two mismatched orders.\ncontract DarknodeSlasher is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    DarknodeRegistry public trustedDarknodeRegistry;\n    Orderbook public trustedOrderbook;\n\n    mapping(bytes32 => bool) public orderSubmitted;\n    mapping(bytes32 => mapping(bytes32 => bool)) public challengeSubmitted;\n    mapping(bytes32 => SettlementUtils.OrderDetails) public orderDetails;\n    mapping(bytes32 => address) public challengers;\n\n    /// @notice Restricts calling a function to registered or deregistered darknodes\n    modifier onlyDarknode() {\n        require(\n            trustedDarknodeRegistry.isRegistered(msg.sender) ||\n            trustedDarknodeRegistry.isDeregistered(msg.sender),\n            \"must be darknode\");\n        _;\n    }\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    /// @param _darknodeRegistry The address of the DarknodeRegistry contract\n    /// @param _orderbook The address of the Orderbook contract\n    constructor(string _VERSION, DarknodeRegistry _darknodeRegistry, Orderbook _orderbook) public {\n        VERSION = _VERSION;\n        trustedDarknodeRegistry = _darknodeRegistry;\n        trustedOrderbook = _orderbook;\n    }\n\n    /// @notice Submits the details for one of the two orders of a challenge.\n    /// The details are required to verify that the orders should not have been\n    /// matched together. The parameters are the same as `submitOrder` in the\n    /// Settlement interface.\n    function submitChallengeOrder(\n        bytes details,\n        uint64 settlementID,\n        uint64 tokens,\n        uint256 price,\n        uint256 volume,\n        uint256 minimumVolume\n    ) external onlyDarknode {\n        SettlementUtils.OrderDetails memory order = SettlementUtils.OrderDetails({\n            settlementID: settlementID,\n            tokens: tokens,\n            price: price,\n            volume: volume,\n            minimumVolume: minimumVolume\n        });\n\n        // Hash the order\n        bytes32 orderID = SettlementUtils.hashOrder(details, order);\n\n        // Check the order details haven't already been submitted\n        require(!orderSubmitted[orderID], \"already submitted\");\n\n        // Store the order details and the challenger\n        orderDetails[orderID] = order;\n        challengers[orderID] = msg.sender;\n        orderSubmitted[orderID] = true;\n    }\n\n    /// @notice Submits a challenge for two orders. This challenge is a claim\n    /// that two orders were confirmed that should not have been confirmed.\n    /// Before calling this method, `submitOrder` must be called for both the\n    /// `_buyID` and `_sellID` orders.\n    ///\n    /// @param _buyID The order ID of a buy order that was maliciously\n    ///        confirmed with the `_sellID`.\n    /// @param _sellID The order ID of a sell order that was maliciously\n    ///        confirmed with the `_buyID`.\n    function submitChallenge(bytes32 _buyID, bytes32 _sellID) external {\n        // Check that the match hasn't been submitted previously\n        require(!challengeSubmitted[_buyID][_sellID], \"already challenged\");\n\n        // Check that the order details have been submitted\n        require(orderSubmitted[_buyID], \"details unavailable\");\n        require(orderSubmitted[_sellID], \"details unavailable\");\n\n        // Check that the orders were submitted to one another\n        require(trustedOrderbook.orderMatch(_buyID) == _sellID, \"unconfirmed orders\");\n\n        // The challenge is valid if 1) the order details (prices, volumes,\n        // settlement IDs or tokens) are not compatible, or if 2) the orders\n        // where submitted by the same trader.\n        bool mismatchedDetails = !SettlementUtils.verifyMatchDetails(orderDetails[_buyID], orderDetails[_sellID]);\n        bool nondistinctTrader = trustedOrderbook.orderTrader(_buyID) == trustedOrderbook.orderTrader(_sellID);\n        require(mismatchedDetails || nondistinctTrader, \"invalid challenge\");\n\n        // Retrieve the guilty confirmer\n        address confirmer = trustedOrderbook.orderConfirmer(_buyID);\n\n        // Store that challenge has been submitted\n        challengeSubmitted[_buyID][_sellID] = true;\n        challengeSubmitted[_sellID][_buyID] = true;\n\n        // Slash the bond of the confirmer\n        trustedDarknodeRegistry.slash(confirmer, challengers[_buyID], challengers[_sellID]);\n    }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[],\"name\":\"trustedOrderbook\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderSubmitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyID\",\"type\":\"bytes32\"},{\"name\":\"_sellID\",\"type\":\"bytes32\"}],\"name\":\"submitChallenge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"challengeSubmitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderDetails\",\"outputs\":[{\"name\":\"settlementID\",\"type\":\"uint64\"},{\"name\":\"tokens\",\"type\":\"uint64\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"volume\",\"type\":\"uint256\"},{\"name\":\"minimumVolume\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"details\",\"type\":\"bytes\"},{\"name\":\"settlementID\",\"type\":\"uint64\"},{\"name\":\"tokens\",\"type\":\"uint64\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"volume\",\"type\":\"uint256\"},{\"name\":\"minimumVolume\",\"type\":\"uint256\"}],\"name\":\"submitChallengeOrder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"challengers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"trustedDarknodeRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_VERSION\",\"type\":\"string\"},{\"name\":\"_darknodeRegistry\",\"type\":\"address\"},{\"name\":\"_orderbook\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","bin":"60806040523480156200001157600080fd5b5060405162001d3838038062001d38833981018060405281019080805182019291906020018051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260019080519060200190620000a592919062000131565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001e0565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017457805160ff1916838001178555620001a5565b82800160010185558215620001a5579182015b82811115620001a457825182559160200191906001019062000187565b5b509050620001b49190620001b8565b5090565b620001dd91905b80821115620001d9576000816000905550600101620001bf565b5090565b90565b611b4880620001f06000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806326cf660d146100bf5780634778a5be146101165780634d4582a11461015f578063715018a61461019e5780638c8b6fc5146101b55780638da5cb5b1461020c578063a3c50b3214610263578063c41c33af146102ec578063f2fde38b1461036d578063fc322d73146103b0578063fc722b2b14610421578063ffa1ad7414610478575b600080fd5b3480156100cb57600080fd5b506100d4610508565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012257600080fd5b50610145600480360381019080803560001916906020019092919050505061052e565b604051808215151515815260200191505060405180910390f35b34801561016b57600080fd5b5061019c6004803603810190808035600019169060200190929190803560001916906020019092919050505061054e565b005b3480156101aa57600080fd5b506101b3610f71565b005b3480156101c157600080fd5b506101f260048036038101908080356000191690602001909291908035600019169060200190929190505050611073565b604051808215151515815260200191505060405180910390f35b34801561021857600080fd5b506102216110a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026f57600080fd5b5061029260048036038101908080356000191690602001909291905050506110c7565b604051808667ffffffffffffffff1667ffffffffffffffff1681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156102f857600080fd5b5061036b600480360381019080803590602001908201803590602001919091929391929390803567ffffffffffffffff169060200190929190803567ffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050611125565b005b34801561037957600080fd5b506103ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e8565b005b3480156103bc57600080fd5b506103df600480360381019080803560001916906020019092919050505061164f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042d57600080fd5b50610436611682565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561048457600080fd5b5061048d6116a8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104cd5780820151818401526020810190506104b2565b50505050905090810190601f1680156104fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b60008060006005600086600019166000191681526020019081526020016000206000856000191660001916815260200190815260200160002060009054906101000a900460ff1615151561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f616c7265616479206368616c6c656e676564000000000000000000000000000081525060200191505060405180910390fd5b60046000866000191660001916815260200190815260200160002060009054906101000a900460ff1615156106a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f64657461696c7320756e617661696c61626c650000000000000000000000000081525060200191505060405180910390fd5b60046000856000191660001916815260200190815260200160002060009054906101000a900460ff161515610744576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f64657461696c7320756e617661696c61626c650000000000000000000000000081525060200191505060405180910390fd5b8360001916600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663af3e8a40876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b505050506040513d602081101561080c57600080fd5b810190808051906020019092919050505060001916141515610896576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f756e636f6e6669726d6564206f7264657273000000000000000000000000000081525060200191505060405180910390fd5b6109f060066000876000191660001916815260200190815260200160002060a060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505060066000876000191660001916815260200190815260200160002060a060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050611746565b159250600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b1a08010856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610a8c57600080fd5b505af1158015610aa0573d6000803e3d6000fd5b505050506040513d6020811015610ab657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b1a08010876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d6020811015610ba057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161491508280610bd35750815b1515610c47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f696e76616c6964206368616c6c656e676500000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631107c3f7866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610ce057600080fd5b505af1158015610cf4573d6000803e3d6000fd5b505050506040513d6020811015610d0a57600080fd5b8101908080519060200190929190505050905060016005600087600019166000191681526020019081526020016000206000866000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016005600086600019166000191681526020019081526020016000206000876000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663563bf2648260076000896000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660076000896000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610f5257600080fd5b505af1158015610f66573d6000803e3d6000fd5b505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fcc57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16908060010154908060020154908060030154905085565b61112d611ad8565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b505050506040513d602081101561121657600080fd5b8101908080519060200190929190505050806113265750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638020fc1f336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b505050506040513d602081101561131457600080fd5b81019080805190602001909291905050505b151561139a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6d757374206265206461726b6e6f64650000000000000000000000000000000081525060200191505060405180910390fd5b60a0604051908101604052808867ffffffffffffffff1681526020018767ffffffffffffffff16815260200186815260200185815260200184815250915061141489898080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050836117ed565b905060046000826000191660001916815260200190815260200160002060009054906101000a900460ff161515156114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f616c7265616479207375626d697474656400000000000000000000000000000081525060200191505060405180910390fd5b8160066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015560608201518160020155608082015181600301559050503360076000836000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160046000836000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561164357600080fd5b61164c81611960565b50565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561173e5780601f106117135761010080835404028352916020019161173e565b820191906000526020600020905b81548152906001019060200180831161172157829003601f168201915b505050505081565b600061175a83602001518360200151611a5a565b151561176957600090506117e7565b81604001518360400151101561178257600090506117e7565b81608001518360600151101561179b57600090506117e7565b8260800151826060015110156117b457600090506117e7565b816000015167ffffffffffffffff16836000015167ffffffffffffffff161415156117e257600090506117e7565b600190505b92915050565b600082826000015183602001518460400151856060015186608001516040516020018087805190602001908083835b602083101515611841578051825260208201915060208101905060208303925061181c565b6001836020036101000a0380198251168184511680821785525050505050509050018667ffffffffffffffff1667ffffffffffffffff1678010000000000000000000000000000000000000000000000000281526008018567ffffffffffffffff1667ffffffffffffffff16780100000000000000000000000000000000000000000000000002815260080184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310151561192b5780518252602082019150602081019050602083039250611906565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561199c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060208267ffffffffffffffff169060020a900463ffffffff168363ffffffff16148015611aa6575060208367ffffffffffffffff169060020a900463ffffffff168263ffffffff16145b8015611ad057508263ffffffff1660208467ffffffffffffffff169060020a900463ffffffff1611155b905092915050565b60a060405190810160405280600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160008152602001600081526020016000815250905600a165627a7a72305820982b6530390bee71453daf69f19b978974ca5203479976a88edb277e1dd4ac200029","bin-runtime":"6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806326cf660d146100bf5780634778a5be146101165780634d4582a11461015f578063715018a61461019e5780638c8b6fc5146101b55780638da5cb5b1461020c578063a3c50b3214610263578063c41c33af146102ec578063f2fde38b1461036d578063fc322d73146103b0578063fc722b2b14610421578063ffa1ad7414610478575b600080fd5b3480156100cb57600080fd5b506100d4610508565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012257600080fd5b50610145600480360381019080803560001916906020019092919050505061052e565b604051808215151515815260200191505060405180910390f35b34801561016b57600080fd5b5061019c6004803603810190808035600019169060200190929190803560001916906020019092919050505061054e565b005b3480156101aa57600080fd5b506101b3610f71565b005b3480156101c157600080fd5b506101f260048036038101908080356000191690602001909291908035600019169060200190929190505050611073565b604051808215151515815260200191505060405180910390f35b34801561021857600080fd5b506102216110a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026f57600080fd5b5061029260048036038101908080356000191690602001909291905050506110c7565b604051808667ffffffffffffffff1667ffffffffffffffff1681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156102f857600080fd5b5061036b600480360381019080803590602001908201803590602001919091929391929390803567ffffffffffffffff169060200190929190803567ffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050611125565b005b34801561037957600080fd5b506103ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e8565b005b3480156103bc57600080fd5b506103df600480360381019080803560001916906020019092919050505061164f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042d57600080fd5b50610436611682565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561048457600080fd5b5061048d6116a8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104cd5780820151818401526020810190506104b2565b50505050905090810190601f1680156104fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b60008060006005600086600019166000191681526020019081526020016000206000856000191660001916815260200190815260200160002060009054906101000a900460ff1615151561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f616c7265616479206368616c6c656e676564000000000000000000000000000081525060200191505060405180910390fd5b60046000866000191660001916815260200190815260200160002060009054906101000a900460ff1615156106a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f64657461696c7320756e617661696c61626c650000000000000000000000000081525060200191505060405180910390fd5b60046000856000191660001916815260200190815260200160002060009054906101000a900460ff161515610744576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f64657461696c7320756e617661696c61626c650000000000000000000000000081525060200191505060405180910390fd5b8360001916600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663af3e8a40876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b505050506040513d602081101561080c57600080fd5b810190808051906020019092919050505060001916141515610896576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f756e636f6e6669726d6564206f7264657273000000000000000000000000000081525060200191505060405180910390fd5b6109f060066000876000191660001916815260200190815260200160002060a060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505060066000876000191660001916815260200190815260200160002060a060405190810160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050611746565b159250600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b1a08010856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610a8c57600080fd5b505af1158015610aa0573d6000803e3d6000fd5b505050506040513d6020811015610ab657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b1a08010876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d6020811015610ba057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161491508280610bd35750815b1515610c47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f696e76616c6964206368616c6c656e676500000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631107c3f7866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610ce057600080fd5b505af1158015610cf4573d6000803e3d6000fd5b505050506040513d6020811015610d0a57600080fd5b8101908080519060200190929190505050905060016005600087600019166000191681526020019081526020016000206000866000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016005600086600019166000191681526020019081526020016000206000876000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663563bf2648260076000896000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660076000896000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610f5257600080fd5b505af1158015610f66573d6000803e3d6000fd5b505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fcc57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16908060010154908060020154908060030154905085565b61112d611ad8565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b505050506040513d602081101561121657600080fd5b8101908080519060200190929190505050806113265750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638020fc1f336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156112ea57600080fd5b505af11580156112fe573d6000803e3d6000fd5b505050506040513d602081101561131457600080fd5b81019080805190602001909291905050505b151561139a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6d757374206265206461726b6e6f64650000000000000000000000000000000081525060200191505060405180910390fd5b60a0604051908101604052808867ffffffffffffffff1681526020018767ffffffffffffffff16815260200186815260200185815260200184815250915061141489898080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050836117ed565b905060046000826000191660001916815260200190815260200160002060009054906101000a900460ff161515156114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f616c7265616479207375626d697474656400000000000000000000000000000081525060200191505060405180910390fd5b8160066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001015560608201518160020155608082015181600301559050503360076000836000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160046000836000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561164357600080fd5b61164c81611960565b50565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561173e5780601f106117135761010080835404028352916020019161173e565b820191906000526020600020905b81548152906001019060200180831161172157829003601f168201915b505050505081565b600061175a83602001518360200151611a5a565b151561176957600090506117e7565b81604001518360400151101561178257600090506117e7565b81608001518360600151101561179b57600090506117e7565b8260800151826060015110156117b457600090506117e7565b816000015167ffffffffffffffff16836000015167ffffffffffffffff161415156117e257600090506117e7565b600190505b92915050565b600082826000015183602001518460400151856060015186608001516040516020018087805190602001908083835b602083101515611841578051825260208201915060208101905060208303925061181c565b6001836020036101000a0380198251168184511680821785525050505050509050018667ffffffffffffffff1667ffffffffffffffff1678010000000000000000000000000000000000000000000000000281526008018567ffffffffffffffff1667ffffffffffffffff16780100000000000000000000000000000000000000000000000002815260080184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310151561192b5780518252602082019150602081019050602083039250611906565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561199c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060208267ffffffffffffffff169060020a900463ffffffff168363ffffffff16148015611aa6575060208367ffffffffffffffff169060020a900463ffffffff168263ffffffff16145b8015611ad057508263ffffffff1660208467ffffffffffffffff169060020a900463ffffffff1611155b905092915050565b60a060405190810160405280600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160008152602001600081526020016000815250905600a165627a7a72305820982b6530390bee71453daf69f19b978974ca5203479976a88edb277e1dd4ac200029","srcmap":"64416:4386:0:-;;;65442:221;8:9:-1;5:2;;;30:1;27;20:12;5:2;65442:221:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:10;566:5;;:18;;;;;;;;;;;;;;;;;;65556:8;65546:7;:18;;;;;;;;;;;;:::i;:::-;;65600:17;65574:23;;:43;;;;;;;;;;;;;;;;;;65646:10;65627:16;;:29;;;;;;;;;;;;;;;;;;65442:221;;;64416:4386;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","srcmap-runtime":"64416:4386:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64580:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64580:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;64620:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64620:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67333:1467;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67333:1467:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:111:0;;;;;;64672:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64672:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;64748:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64748:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65935:880;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65935:880:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;64822:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64822:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64527:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64527:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;64458:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64458:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;64458:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;64580:33;;;;;;;;;;;;;:::o;64620:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;67333:1467::-;68094:22;68209;68441:17;67484:18;:26;67503:6;67484:26;;;;;;;;;;;;;;;;;:35;67511:7;67484:35;;;;;;;;;;;;;;;;;;;;;;;;;;;67483:36;67475:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67621:14;:22;67636:6;67621:22;;;;;;;;;;;;;;;;;;;;;;;;;;;67613:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67685:14;:23;67700:7;67685:23;;;;;;;;;;;;;;;;;;;;;;;;;;;67677:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67853:7;67814:46;;;:16;;;;;;;;;;;:27;;;67842:6;67814:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67814:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;67814:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;67814:35:0;;;;;;;;;;;;;;;;:46;;;;67806:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68120:79;68155:12;:20;68168:6;68155:20;;;;;;;;;;;;;;;;;68120:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68177:12;:21;68190:7;68177:21;;;;;;;;;;;;;;;;;68120:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;:79::i;:::-;68119:80;68094:105;;68274:16;;;;;;;;;;;:28;;;68303:7;68274:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68274:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;68274:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;68274:37:0;;;;;;;;;;;;;;;;68234:77;;:16;;;;;;;;;;;:28;;;68263:6;68234:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68234:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;68234:36:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;68234:36:0;;;;;;;;;;;;;;;;:77;;;68209:102;;68329:17;:38;;;;68350:17;68329:38;68321:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68461:16;;;;;;;;;;;:31;;;68493:6;68461:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68461:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;68461:39:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;68461:39:0;;;;;;;;;;;;;;;;68441:59;;68600:4;68562:18;:26;68581:6;68562:26;;;;;;;;;;;;;;;;;:35;68589:7;68562:35;;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;68652:4;68614:18;:27;68633:7;68614:27;;;;;;;;;;;;;;;;;:35;68642:6;68614:35;;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;68710:23;;;;;;;;;;;:29;;;68740:9;68751:11;:19;68763:6;68751:19;;;;;;;;;;;;;;;;;;;;;;;;;;;68772:11;:20;68784:7;68772:20;;;;;;;;;;;;;;;;;;;;;;;;;;;68710:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68710:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;68710:83:0;;;;67333:1467;;;;;:::o;1000:111::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;1076:5;;;;;;;;;;;1057:25;;;;;;;;;;;;1104:1;1088:5;;:18;;;;;;;;;;;;;;;;;;1000:111::o;64672:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;237:20::-;;;;;;;;;;;;;:::o;64748:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;65935:880::-;66156:41;;:::i;:::-;66441:15;65015:23;;;;;;;;;;;:36;;;65052:10;65015:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65015:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;65015:48:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;65015:48:0;;;;;;;;;;;;;;;;:114;;;;65079:23;;;;;;;;;;;:38;;;65118:10;65079:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65079:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;65079:50:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;65079:50:0;;;;;;;;;;;;;;;;65015:114;64994:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66200:204;;;;;;;;;66257:12;66200:204;;;;;;66291:6;66200:204;;;;;;66318:5;66200:204;;;;66345:6;66200:204;;;;66380:13;66200:204;;;66156:248;;66459:41;66485:7;;66459:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66494:5;66459:25;:41::i;:::-;66441:59;;66586:14;:23;66601:7;66586:23;;;;;;;;;;;;;;;;;;;;;;;;;;;66585:24;66577:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66720:5;66696:12;:21;66709:7;66696:21;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66758:10;66735:11;:20;66747:7;66735:20;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;66804:4;66778:14;:23;66793:7;66778:23;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;65935:880;;;;;;;;;:::o;1273:103::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;1342:29;1361:9;1342:18;:29::i;:::-;1273:103;:::o;64822:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;64527:47::-;;;;;;;;;;;;;:::o;64458:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;62851:884::-;62955:4;63021:39;63034:4;:11;;;63047:5;:12;;;63021;:39::i;:::-;63020:40;63016:83;;;63083:5;63076:12;;;;63016:83;63181:5;:11;;;63168:4;:10;;;:24;63164:67;;;63215:5;63208:12;;;;63164:67;63327:5;:19;;;63313:4;:11;;;:33;63309:76;;;63369:5;63362:12;;;;63309:76;63479:4;:18;;;63464:5;:12;;;:33;63460:76;;;63520:5;63513:12;;;;63460:76;63650:5;:18;;;63629:39;;:4;:17;;;:39;;;;63625:82;;;63691:5;63684:12;;;;63625:82;63724:4;63717:11;;62851:884;;;;;:::o;61934:367::-;62018:7;62101;62126:5;:18;;;62162:5;:12;;;62192:5;:11;;;62221:5;:12;;;62251:5;:19;;;62067:217;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;62067:217:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;62067:217:0;;;62044:250;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;62044:250:0;;;;;;;;;;;;;;;;62037:257;;61934:367;;;;:::o;1511:171::-;1602:1;1581:23;;:9;:23;;;;1573:32;;;;;;;;1644:9;1616:38;;1637:5;;;;;;;;;;;1616:38;;;;;;;;;;;;1668:9;1660:5;;:17;;;;;;;;;;;;;;;;;;1511:171;:::o;63961:327::-;64044:4;64129:2;64115:10;:16;;;;;;;64086:46;;64093:10;64086:46;;;64068:134;;;;;64198:2;64184:10;:16;;;;;;;64155:46;;64162:10;64155:46;;;64068:134;:203;;;;;64259:10;64224:46;;64245:2;64231:10;:16;;;;;;;64224:46;;;;64068:203;64060:221;;63961:327;;;;:::o;64416:4386::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0x04ed8f5730dd4d2b2064cdb6a5bffc26a72962f2_DarknodeSlasher.sol","exportedSymbols":{"BasicToken":[299],"BrokerVerifier":[2660],"BurnableToken":[805],"DarknodeRegistry":[2648],"DarknodeRegistryStore":[1588],"DarknodeSlasher":[4017],"ECRecovery":[2929],"ERC20":[339],"ERC20Basic":[115],"LinkedList":[1310],"Orderbook":[3632],"Ownable":[85],"Pausable":[639],"PausableToken":[737],"RepublicToken":[891],"SafeMath":[207],"Settlement":[2695],"SettlementRegistry":[2850],"SettlementUtils":[3774],"StandardToken":[582],"Utils":[3050]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".","fullyImplemented":true,"linearizedBaseContracts":[85],"name":"Ownable","scope":4018},"children":[{"attributes":{"constant":false,"name":"owner","scope":85,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":2,"name":"ElementaryTypeName","src":"237:7:0"}],"id":3,"name":"VariableDeclaration","src":"237:20:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipRenounced"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":7,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4,"name":"ElementaryTypeName","src":"288:7:0"}],"id":5,"name":"VariableDeclaration","src":"288:29:0"}],"id":6,"name":"ParameterList","src":"287:31:0"}],"id":7,"name":"EventDefinition","src":"263:56:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipTransferred"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":13,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":8,"name":"ElementaryTypeName","src":"354:7:0"}],"id":9,"name":"VariableDeclaration","src":"354:29:0"},{"attributes":{"constant":false,"indexed":true,"name":"newOwner","scope":13,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":10,"name":"ElementaryTypeName","src":"389:7:0"}],"id":11,"name":"VariableDeclaration","src":"389:24:0"}],"id":12,"name":"ParameterList","src":"348:69:0"}],"id":13,"name":"EventDefinition","src":"322:96:0"},{"attributes":{"constant":false,"documentation":"@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":14,"name":"ParameterList","src":"550:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":15,"name":"ParameterList","src":"560:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":16,"name":"Identifier","src":"566:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":17,"name":"Identifier","src":"574:3:0"}],"id":18,"name":"MemberAccess","src":"574:10:0"}],"id":19,"name":"Assignment","src":"566:18:0"}],"id":20,"name":"ExpressionStatement","src":"566:18:0"}],"id":21,"name":"Block","src":"560:29:0"}],"id":22,"name":"FunctionDefinition","src":"539:50:0"},{"attributes":{"documentation":"@dev Throws if called by any account other than the owner.","name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":23,"name":"ParameterList","src":"687:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":24,"name":"Identifier","src":"696:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":25,"name":"Identifier","src":"704:3:0"}],"id":26,"name":"MemberAccess","src":"704:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":27,"name":"Identifier","src":"718:5:0"}],"id":28,"name":"BinaryOperation","src":"704:19:0"}],"id":29,"name":"FunctionCall","src":"696:28:0"}],"id":30,"name":"ExpressionStatement","src":"696:28:0"},{"id":31,"name":"PlaceholderStatement","src":"730:1:0"}],"id":32,"name":"Block","src":"690:46:0"}],"id":33,"name":"ModifierDefinition","src":"669:67:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.","implemented":true,"isConstructor":false,"name":"renounceOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":34,"name":"ParameterList","src":"1026:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":37,"name":"ParameterList","src":"1046:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":35,"name":"Identifier","src":"1036:9:0"}],"id":36,"name":"ModifierInvocation","src":"1036:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"function (address)","value":"OwnershipRenounced"},"id":38,"name":"Identifier","src":"1057:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":39,"name":"Identifier","src":"1076:5:0"}],"id":40,"name":"FunctionCall","src":"1057:25:0"}],"id":41,"name":"EmitStatement","src":"1052:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":42,"name":"Identifier","src":"1088:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":43,"name":"ElementaryTypeNameExpression","src":"1096:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":44,"name":"Literal","src":"1104:1:0"}],"id":45,"name":"FunctionCall","src":"1096:10:0"}],"id":46,"name":"Assignment","src":"1088:18:0"}],"id":47,"name":"ExpressionStatement","src":"1088:18:0"}],"id":48,"name":"Block","src":"1046:65:0"}],"id":49,"name":"FunctionDefinition","src":"1000:111:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":61,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":50,"name":"ElementaryTypeName","src":"1300:7:0"}],"id":51,"name":"VariableDeclaration","src":"1300:17:0"}],"id":52,"name":"ParameterList","src":"1299:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":55,"name":"ParameterList","src":"1336:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":53,"name":"Identifier","src":"1326:9:0"}],"id":54,"name":"ModifierInvocation","src":"1326:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":84,"type":"function (address)","value":"_transferOwnership"},"id":56,"name":"Identifier","src":"1342:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":51,"type":"address","value":"_newOwner"},"id":57,"name":"Identifier","src":"1361:9:0"}],"id":58,"name":"FunctionCall","src":"1342:29:0"}],"id":59,"name":"ExpressionStatement","src":"1342:29:0"}],"id":60,"name":"Block","src":"1336:40:0"}],"id":61,"name":"FunctionDefinition","src":"1273:103:0"},{"attributes":{"constant":false,"documentation":"@dev Transfers control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"_transferOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":84,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":62,"name":"ElementaryTypeName","src":"1539:7:0"}],"id":63,"name":"VariableDeclaration","src":"1539:17:0"}],"id":64,"name":"ParameterList","src":"1538:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":65,"name":"ParameterList","src":"1567:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":66,"name":"Identifier","src":"1573:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":67,"name":"Identifier","src":"1581:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":68,"name":"ElementaryTypeNameExpression","src":"1594:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":69,"name":"Literal","src":"1602:1:0"}],"id":70,"name":"FunctionCall","src":"1594:10:0"}],"id":71,"name":"BinaryOperation","src":"1581:23:0"}],"id":72,"name":"FunctionCall","src":"1573:32:0"}],"id":73,"name":"ExpressionStatement","src":"1573:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"function (address,address)","value":"OwnershipTransferred"},"id":74,"name":"Identifier","src":"1616:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":75,"name":"Identifier","src":"1637:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":76,"name":"Identifier","src":"1644:9:0"}],"id":77,"name":"FunctionCall","src":"1616:38:0"}],"id":78,"name":"EmitStatement","src":"1611:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":79,"name":"Identifier","src":"1660:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":80,"name":"Identifier","src":"1668:9:0"}],"id":81,"name":"Assignment","src":"1660:17:0"}],"id":82,"name":"ExpressionStatement","src":"1660:17:0"}],"id":83,"name":"Block","src":"1567:115:0"}],"id":84,"name":"FunctionDefinition","src":"1511:171:0"}],"id":85,"name":"ContractDefinition","src":"216:1468:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title ERC20Basic\n@dev Simpler version of ERC20 interface\nSee https://github.com/ethereum/EIPs/issues/179","fullyImplemented":false,"linearizedBaseContracts":[115],"name":"ERC20Basic","scope":4018},"children":[{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":115,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":86,"name":"ParameterList","src":"1853:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":90,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":87,"name":"ElementaryTypeName","src":"1877:7:0"}],"id":88,"name":"VariableDeclaration","src":"1877:7:0"}],"id":89,"name":"ParameterList","src":"1876:9:0"}],"id":90,"name":"FunctionDefinition","src":"1833:53:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":115,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"who","scope":97,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":91,"name":"ElementaryTypeName","src":"1908:7:0"}],"id":92,"name":"VariableDeclaration","src":"1908:11:0"}],"id":93,"name":"ParameterList","src":"1907:13:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":97,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":94,"name":"ElementaryTypeName","src":"1942:7:0"}],"id":95,"name":"VariableDeclaration","src":"1942:7:0"}],"id":96,"name":"ParameterList","src":"1941:9:0"}],"id":97,"name":"FunctionDefinition","src":"1889:62:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":115,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":106,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":98,"name":"ElementaryTypeName","src":"1972:7:0"}],"id":99,"name":"VariableDeclaration","src":"1972:10:0"},{"attributes":{"constant":false,"name":"value","scope":106,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":100,"name":"ElementaryTypeName","src":"1984:7:0"}],"id":101,"name":"VariableDeclaration","src":"1984:13:0"}],"id":102,"name":"ParameterList","src":"1971:27:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":106,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":103,"name":"ElementaryTypeName","src":"2015:4:0"}],"id":104,"name":"VariableDeclaration","src":"2015:4:0"}],"id":105,"name":"ParameterList","src":"2014:6:0"}],"id":106,"name":"FunctionDefinition","src":"1954:67:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":114,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":107,"name":"ElementaryTypeName","src":"2039:7:0"}],"id":108,"name":"VariableDeclaration","src":"2039:20:0"},{"attributes":{"constant":false,"indexed":true,"name":"to","scope":114,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":109,"name":"ElementaryTypeName","src":"2061:7:0"}],"id":110,"name":"VariableDeclaration","src":"2061:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":114,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":111,"name":"ElementaryTypeName","src":"2081:7:0"}],"id":112,"name":"VariableDeclaration","src":"2081:13:0"}],"id":113,"name":"ParameterList","src":"2038:57:0"}],"id":114,"name":"EventDefinition","src":"2024:72:0"}],"id":115,"name":"ContractDefinition","src":"1809:289:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title SafeMath\n@dev Math operations with safety checks that throw on error","fullyImplemented":true,"linearizedBaseContracts":[207],"name":"SafeMath","scope":4018},"children":[{"attributes":{"constant":true,"documentation":"@dev Multiplies two numbers, throws on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"mul","payable":false,"scope":207,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":148,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":116,"name":"ElementaryTypeName","src":"2289:7:0"}],"id":117,"name":"VariableDeclaration","src":"2289:9:0"},{"attributes":{"constant":false,"name":"b","scope":148,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":118,"name":"ElementaryTypeName","src":"2300:7:0"}],"id":119,"name":"VariableDeclaration","src":"2300:9:0"}],"id":120,"name":"ParameterList","src":"2288:22:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":148,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":121,"name":"ElementaryTypeName","src":"2334:7:0"}],"id":122,"name":"VariableDeclaration","src":"2334:9:0"}],"id":123,"name":"ParameterList","src":"2333:11:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":117,"type":"uint256","value":"a"},"id":124,"name":"Identifier","src":"2560:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":125,"name":"Literal","src":"2565:1:0"}],"id":126,"name":"BinaryOperation","src":"2560:6:0"},{"children":[{"attributes":{"functionReturnParameters":123},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":127,"name":"Literal","src":"2583:1:0"}],"id":128,"name":"Return","src":"2576:8:0"}],"id":129,"name":"Block","src":"2568:23:0"}],"id":130,"name":"IfStatement","src":"2556:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":122,"type":"uint256","value":"c"},"id":131,"name":"Identifier","src":"2597:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":117,"type":"uint256","value":"a"},"id":132,"name":"Identifier","src":"2601:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":119,"type":"uint256","value":"b"},"id":133,"name":"Identifier","src":"2605:1:0"}],"id":134,"name":"BinaryOperation","src":"2601:5:0"}],"id":135,"name":"Assignment","src":"2597:9:0"}],"id":136,"name":"ExpressionStatement","src":"2597:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":4021,"type":"function (bool) pure","value":"assert"},"id":137,"name":"Identifier","src":"2612:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":122,"type":"uint256","value":"c"},"id":138,"name":"Identifier","src":"2619:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":117,"type":"uint256","value":"a"},"id":139,"name":"Identifier","src":"2623:1:0"}],"id":140,"name":"BinaryOperation","src":"2619:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":119,"type":"uint256","value":"b"},"id":141,"name":"Identifier","src":"2628:1:0"}],"id":142,"name":"BinaryOperation","src":"2619:10:0"}],"id":143,"name":"FunctionCall","src":"2612:18:0"}],"id":144,"name":"ExpressionStatement","src":"2612:18:0"},{"attributes":{"functionReturnParameters":123},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":122,"type":"uint256","value":"c"},"id":145,"name":"Identifier","src":"2643:1:0"}],"id":146,"name":"Return","src":"2636:8:0"}],"id":147,"name":"Block","src":"2345:304:0"}],"id":148,"name":"FunctionDefinition","src":"2276:373:0"},{"attributes":{"constant":true,"documentation":"@dev Integer division of two numbers, truncating the quotient.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"div","payable":false,"scope":207,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":149,"name":"ElementaryTypeName","src":"2744:7:0"}],"id":150,"name":"VariableDeclaration","src":"2744:9:0"},{"attributes":{"constant":false,"name":"b","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":151,"name":"ElementaryTypeName","src":"2755:7:0"}],"id":152,"name":"VariableDeclaration","src":"2755:9:0"}],"id":153,"name":"ParameterList","src":"2743:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":154,"name":"ElementaryTypeName","src":"2789:7:0"}],"id":155,"name":"VariableDeclaration","src":"2789:7:0"}],"id":156,"name":"ParameterList","src":"2788:9:0"},{"children":[{"attributes":{"functionReturnParameters":156},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":150,"type":"uint256","value":"a"},"id":157,"name":"Identifier","src":"2993:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":152,"type":"uint256","value":"b"},"id":158,"name":"Identifier","src":"2997:1:0"}],"id":159,"name":"BinaryOperation","src":"2993:5:0"}],"id":160,"name":"Return","src":"2986:12:0"}],"id":161,"name":"Block","src":"2798:205:0"}],"id":162,"name":"FunctionDefinition","src":"2731:272:0"},{"attributes":{"constant":true,"documentation":"@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).","implemented":true,"isConstructor":false,"modifiers":[null],"name":"sub","payable":false,"scope":207,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":182,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":163,"name":"ElementaryTypeName","src":"3128:7:0"}],"id":164,"name":"VariableDeclaration","src":"3128:9:0"},{"attributes":{"constant":false,"name":"b","scope":182,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":165,"name":"ElementaryTypeName","src":"3139:7:0"}],"id":166,"name":"VariableDeclaration","src":"3139:9:0"}],"id":167,"name":"ParameterList","src":"3127:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":182,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":168,"name":"ElementaryTypeName","src":"3173:7:0"}],"id":169,"name":"VariableDeclaration","src":"3173:7:0"}],"id":170,"name":"ParameterList","src":"3172:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":4021,"type":"function (bool) pure","value":"assert"},"id":171,"name":"Identifier","src":"3188:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":166,"type":"uint256","value":"b"},"id":172,"name":"Identifier","src":"3195:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":164,"type":"uint256","value":"a"},"id":173,"name":"Identifier","src":"3200:1:0"}],"id":174,"name":"BinaryOperation","src":"3195:6:0"}],"id":175,"name":"FunctionCall","src":"3188:14:0"}],"id":176,"name":"ExpressionStatement","src":"3188:14:0"},{"attributes":{"functionReturnParameters":170},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":164,"type":"uint256","value":"a"},"id":177,"name":"Identifier","src":"3215:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":166,"type":"uint256","value":"b"},"id":178,"name":"Identifier","src":"3219:1:0"}],"id":179,"name":"BinaryOperation","src":"3215:5:0"}],"id":180,"name":"Return","src":"3208:12:0"}],"id":181,"name":"Block","src":"3182:43:0"}],"id":182,"name":"FunctionDefinition","src":"3115:110:0"},{"attributes":{"constant":true,"documentation":"@dev Adds two numbers, throws on overflow.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":207,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":183,"name":"ElementaryTypeName","src":"3300:7:0"}],"id":184,"name":"VariableDeclaration","src":"3300:9:0"},{"attributes":{"constant":false,"name":"b","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":185,"name":"ElementaryTypeName","src":"3311:7:0"}],"id":186,"name":"VariableDeclaration","src":"3311:9:0"}],"id":187,"name":"ParameterList","src":"3299:22:0"},{"children":[{"attributes":{"constant":false,"name":"c","scope":206,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":188,"name":"ElementaryTypeName","src":"3345:7:0"}],"id":189,"name":"VariableDeclaration","src":"3345:9:0"}],"id":190,"name":"ParameterList","src":"3344:11:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":189,"type":"uint256","value":"c"},"id":191,"name":"Identifier","src":"3362:1:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":184,"type":"uint256","value":"a"},"id":192,"name":"Identifier","src":"3366:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":186,"type":"uint256","value":"b"},"id":193,"name":"Identifier","src":"3370:1:0"}],"id":194,"name":"BinaryOperation","src":"3366:5:0"}],"id":195,"name":"Assignment","src":"3362:9:0"}],"id":196,"name":"ExpressionStatement","src":"3362:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":4021,"type":"function (bool) pure","value":"assert"},"id":197,"name":"Identifier","src":"3377:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":189,"type":"uint256","value":"c"},"id":198,"name":"Identifier","src":"3384:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":184,"type":"uint256","value":"a"},"id":199,"name":"Identifier","src":"3389:1:0"}],"id":200,"name":"BinaryOperation","src":"3384:6:0"}],"id":201,"name":"FunctionCall","src":"3377:14:0"}],"id":202,"name":"ExpressionStatement","src":"3377:14:0"},{"attributes":{"functionReturnParameters":190},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":189,"type":"uint256","value":"c"},"id":203,"name":"Identifier","src":"3404:1:0"}],"id":204,"name":"Return","src":"3397:8:0"}],"id":205,"name":"Block","src":"3356:54:0"}],"id":206,"name":"FunctionDefinition","src":"3287:123:0"}],"id":207,"name":"ContractDefinition","src":"2190:1222:0"},{"attributes":{"contractDependencies":[115],"contractKind":"contract","documentation":"@title Basic token\n@dev Basic version of StandardToken, with no allowances.","fullyImplemented":true,"linearizedBaseContracts":[299,115],"name":"BasicToken","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":115,"type":"contract ERC20Basic"},"id":208,"name":"UserDefinedTypeName","src":"3527:10:0"}],"id":209,"name":"InheritanceSpecifier","src":"3527:10:0"},{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":207,"type":"library SafeMath"},"id":210,"name":"UserDefinedTypeName","src":"3548:8:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":211,"name":"ElementaryTypeName","src":"3561:7:0"}],"id":212,"name":"UsingForDirective","src":"3542:27:0"},{"attributes":{"constant":false,"name":"balances","scope":299,"stateVariable":true,"storageLocation":"default","type":"mapping(address => uint256)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":213,"name":"ElementaryTypeName","src":"3581:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":214,"name":"ElementaryTypeName","src":"3592:7:0"}],"id":215,"name":"Mapping","src":"3573:27:0"}],"id":216,"name":"VariableDeclaration","src":"3573:36:0"},{"attributes":{"constant":false,"name":"totalSupply_","scope":299,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":217,"name":"ElementaryTypeName","src":"3614:7:0"}],"id":218,"name":"VariableDeclaration","src":"3614:20:0"},{"attributes":{"constant":true,"documentation":"@dev Total number of tokens in existence","implemented":true,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":299,"stateMutability":"view","superFunction":90,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":219,"name":"ParameterList","src":"3715:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":226,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":220,"name":"ElementaryTypeName","src":"3739:7:0"}],"id":221,"name":"VariableDeclaration","src":"3739:7:0"}],"id":222,"name":"ParameterList","src":"3738:9:0"},{"children":[{"attributes":{"functionReturnParameters":222},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"totalSupply_"},"id":223,"name":"Identifier","src":"3761:12:0"}],"id":224,"name":"Return","src":"3754:19:0"}],"id":225,"name":"Block","src":"3748:30:0"}],"id":226,"name":"FunctionDefinition","src":"3695:83:0"},{"attributes":{"constant":false,"documentation":"@dev Transfer token for a specified address\n@param _to The address to transfer to.\n@param _value The amount to be transferred.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":299,"stateMutability":"nonpayable","superFunction":106,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":286,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":227,"name":"ElementaryTypeName","src":"3950:7:0"}],"id":228,"name":"VariableDeclaration","src":"3950:11:0"},{"attributes":{"constant":false,"name":"_value","scope":286,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":229,"name":"ElementaryTypeName","src":"3963:7:0"}],"id":230,"name":"VariableDeclaration","src":"3963:14:0"}],"id":231,"name":"ParameterList","src":"3949:29:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":286,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":232,"name":"ElementaryTypeName","src":"3995:4:0"}],"id":233,"name":"VariableDeclaration","src":"3995:4:0"}],"id":234,"name":"ParameterList","src":"3994:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":235,"name":"Identifier","src":"4007:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":228,"type":"address","value":"_to"},"id":236,"name":"Identifier","src":"4015:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":237,"name":"ElementaryTypeNameExpression","src":"4022:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":238,"name":"Literal","src":"4030:1:0"}],"id":239,"name":"FunctionCall","src":"4022:10:0"}],"id":240,"name":"BinaryOperation","src":"4015:17:0"}],"id":241,"name":"FunctionCall","src":"4007:26:0"}],"id":242,"name":"ExpressionStatement","src":"4007:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":243,"name":"Identifier","src":"4039:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":230,"type":"uint256","value":"_value"},"id":244,"name":"Identifier","src":"4047:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":245,"name":"Identifier","src":"4057:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":246,"name":"Identifier","src":"4066:3:0"}],"id":247,"name":"MemberAccess","src":"4066:10:0"}],"id":248,"name":"IndexAccess","src":"4057:20:0"}],"id":249,"name":"BinaryOperation","src":"4047:30:0"}],"id":250,"name":"FunctionCall","src":"4039:39:0"}],"id":251,"name":"ExpressionStatement","src":"4039:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":252,"name":"Identifier","src":"4085:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":253,"name":"Identifier","src":"4094:3:0"}],"id":254,"name":"MemberAccess","src":"4094:10:0"}],"id":255,"name":"IndexAccess","src":"4085:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":182,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":256,"name":"Identifier","src":"4108:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":257,"name":"Identifier","src":"4117:3:0"}],"id":258,"name":"MemberAccess","src":"4117:10:0"}],"id":259,"name":"IndexAccess","src":"4108:20:0"}],"id":260,"name":"MemberAccess","src":"4108:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":230,"type":"uint256","value":"_value"},"id":261,"name":"Identifier","src":"4133:6:0"}],"id":262,"name":"FunctionCall","src":"4108:32:0"}],"id":263,"name":"Assignment","src":"4085:55:0"}],"id":264,"name":"ExpressionStatement","src":"4085:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":265,"name":"Identifier","src":"4146:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":228,"type":"address","value":"_to"},"id":266,"name":"Identifier","src":"4155:3:0"}],"id":267,"name":"IndexAccess","src":"4146:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":206,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":268,"name":"Identifier","src":"4162:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":228,"type":"address","value":"_to"},"id":269,"name":"Identifier","src":"4171:3:0"}],"id":270,"name":"IndexAccess","src":"4162:13:0"}],"id":271,"name":"MemberAccess","src":"4162:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":230,"type":"uint256","value":"_value"},"id":272,"name":"Identifier","src":"4180:6:0"}],"id":273,"name":"FunctionCall","src":"4162:25:0"}],"id":274,"name":"Assignment","src":"4146:41:0"}],"id":275,"name":"ExpressionStatement","src":"4146:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":276,"name":"Identifier","src":"4198:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":277,"name":"Identifier","src":"4207:3:0"}],"id":278,"name":"MemberAccess","src":"4207:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":228,"type":"address","value":"_to"},"id":279,"name":"Identifier","src":"4219:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":230,"type":"uint256","value":"_value"},"id":280,"name":"Identifier","src":"4224:6:0"}],"id":281,"name":"FunctionCall","src":"4198:33:0"}],"id":282,"name":"EmitStatement","src":"4193:38:0"},{"attributes":{"functionReturnParameters":234},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":283,"name":"Literal","src":"4244:4:0"}],"id":284,"name":"Return","src":"4237:11:0"}],"id":285,"name":"Block","src":"4001:252:0"}],"id":286,"name":"FunctionDefinition","src":"3932:321:0"},{"attributes":{"constant":true,"documentation":"@dev Gets the balance of the specified address.\n@param _owner The address to query the the balance of.\n@return An uint256 representing the amount owned by the passed address.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":299,"stateMutability":"view","superFunction":97,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":298,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":287,"name":"ElementaryTypeName","src":"4474:7:0"}],"id":288,"name":"VariableDeclaration","src":"4474:14:0"}],"id":289,"name":"ParameterList","src":"4473:16:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":298,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":290,"name":"ElementaryTypeName","src":"4511:7:0"}],"id":291,"name":"VariableDeclaration","src":"4511:7:0"}],"id":292,"name":"ParameterList","src":"4510:9:0"},{"children":[{"attributes":{"functionReturnParameters":292},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":293,"name":"Identifier","src":"4533:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"address","value":"_owner"},"id":294,"name":"Identifier","src":"4542:6:0"}],"id":295,"name":"IndexAccess","src":"4533:16:0"}],"id":296,"name":"Return","src":"4526:23:0"}],"id":297,"name":"Block","src":"4520:34:0"}],"id":298,"name":"FunctionDefinition","src":"4455:99:0"}],"id":299,"name":"ContractDefinition","src":"3504:1053:0"},{"attributes":{"contractDependencies":[115],"contractKind":"contract","documentation":"@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20","fullyImplemented":false,"linearizedBaseContracts":[339,115],"name":"ERC20","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":115,"type":"contract ERC20Basic"},"id":300,"name":"UserDefinedTypeName","src":"4666:10:0"}],"id":301,"name":"InheritanceSpecifier","src":"4666:10:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":339,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"owner","scope":310,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":302,"name":"ElementaryTypeName","src":"4700:7:0"}],"id":303,"name":"VariableDeclaration","src":"4700:13:0"},{"attributes":{"constant":false,"name":"spender","scope":310,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":304,"name":"ElementaryTypeName","src":"4715:7:0"}],"id":305,"name":"VariableDeclaration","src":"4715:15:0"}],"id":306,"name":"ParameterList","src":"4699:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":310,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":307,"name":"ElementaryTypeName","src":"4757:7:0"}],"id":308,"name":"VariableDeclaration","src":"4757:7:0"}],"id":309,"name":"ParameterList","src":"4756:9:0"}],"id":310,"name":"FunctionDefinition","src":"4681:85:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":339,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":321,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":311,"name":"ElementaryTypeName","src":"4792:7:0"}],"id":312,"name":"VariableDeclaration","src":"4792:12:0"},{"attributes":{"constant":false,"name":"to","scope":321,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":313,"name":"ElementaryTypeName","src":"4806:7:0"}],"id":314,"name":"VariableDeclaration","src":"4806:10:0"},{"attributes":{"constant":false,"name":"value","scope":321,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":315,"name":"ElementaryTypeName","src":"4818:7:0"}],"id":316,"name":"VariableDeclaration","src":"4818:13:0"}],"id":317,"name":"ParameterList","src":"4791:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":321,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":318,"name":"ElementaryTypeName","src":"4853:4:0"}],"id":319,"name":"VariableDeclaration","src":"4853:4:0"}],"id":320,"name":"ParameterList","src":"4852:6:0"}],"id":321,"name":"FunctionDefinition","src":"4770:89:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":339,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":330,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":322,"name":"ElementaryTypeName","src":"4880:7:0"}],"id":323,"name":"VariableDeclaration","src":"4880:15:0"},{"attributes":{"constant":false,"name":"value","scope":330,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":324,"name":"ElementaryTypeName","src":"4897:7:0"}],"id":325,"name":"VariableDeclaration","src":"4897:13:0"}],"id":326,"name":"ParameterList","src":"4879:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":330,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":327,"name":"ElementaryTypeName","src":"4928:4:0"}],"id":328,"name":"VariableDeclaration","src":"4928:4:0"}],"id":329,"name":"ParameterList","src":"4927:6:0"}],"id":330,"name":"FunctionDefinition","src":"4863:71:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"owner","scope":338,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":331,"name":"ElementaryTypeName","src":"4957:7:0"}],"id":332,"name":"VariableDeclaration","src":"4957:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"spender","scope":338,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":333,"name":"ElementaryTypeName","src":"4984:7:0"}],"id":334,"name":"VariableDeclaration","src":"4984:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":338,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":335,"name":"ElementaryTypeName","src":"5013:7:0"}],"id":336,"name":"VariableDeclaration","src":"5013:13:0"}],"id":337,"name":"ParameterList","src":"4951:79:0"}],"id":338,"name":"EventDefinition","src":"4937:94:0"}],"id":339,"name":"ContractDefinition","src":"4648:385:0"},{"attributes":{"contractDependencies":[115,299,339],"contractKind":"contract","documentation":"@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\nhttps://github.com/ethereum/EIPs/issues/20\nBased on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol","fullyImplemented":true,"linearizedBaseContracts":[582,299,339,115],"name":"StandardToken","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ERC20","referencedDeclaration":339,"type":"contract ERC20"},"id":340,"name":"UserDefinedTypeName","src":"5318:5:0"}],"id":341,"name":"InheritanceSpecifier","src":"5318:5:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BasicToken","referencedDeclaration":299,"type":"contract BasicToken"},"id":342,"name":"UserDefinedTypeName","src":"5325:10:0"}],"id":343,"name":"InheritanceSpecifier","src":"5325:10:0"},{"attributes":{"constant":false,"name":"allowed","scope":582,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(address => uint256))","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => mapping(address => uint256))"},"children":[{"attributes":{"name":"address","type":"address"},"id":344,"name":"ElementaryTypeName","src":"5350:7:0"},{"attributes":{"type":"mapping(address => uint256)"},"children":[{"attributes":{"name":"address","type":"address"},"id":345,"name":"ElementaryTypeName","src":"5370:7:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":346,"name":"ElementaryTypeName","src":"5381:7:0"}],"id":347,"name":"Mapping","src":"5361:28:0"}],"id":348,"name":"Mapping","src":"5341:49:0"}],"id":349,"name":"VariableDeclaration","src":"5341:66:0"},{"attributes":{"constant":false,"documentation":"@dev Transfer tokens from one address to another\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint256 the amount of tokens to be transferred","implemented":true,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":321,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":435,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":350,"name":"ElementaryTypeName","src":"5711:7:0"}],"id":351,"name":"VariableDeclaration","src":"5711:13:0"},{"attributes":{"constant":false,"name":"_to","scope":435,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":352,"name":"ElementaryTypeName","src":"5730:7:0"}],"id":353,"name":"VariableDeclaration","src":"5730:11:0"},{"attributes":{"constant":false,"name":"_value","scope":435,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":354,"name":"ElementaryTypeName","src":"5747:7:0"}],"id":355,"name":"VariableDeclaration","src":"5747:14:0"}],"id":356,"name":"ParameterList","src":"5705:60:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":435,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":357,"name":"ElementaryTypeName","src":"5790:4:0"}],"id":358,"name":"VariableDeclaration","src":"5790:4:0"}],"id":359,"name":"ParameterList","src":"5789:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":360,"name":"Identifier","src":"5804:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":361,"name":"Identifier","src":"5812:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":362,"name":"ElementaryTypeNameExpression","src":"5819:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":363,"name":"Literal","src":"5827:1:0"}],"id":364,"name":"FunctionCall","src":"5819:10:0"}],"id":365,"name":"BinaryOperation","src":"5812:17:0"}],"id":366,"name":"FunctionCall","src":"5804:26:0"}],"id":367,"name":"ExpressionStatement","src":"5804:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":368,"name":"Identifier","src":"5836:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":369,"name":"Identifier","src":"5844:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":370,"name":"Identifier","src":"5854:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":371,"name":"Identifier","src":"5863:5:0"}],"id":372,"name":"IndexAccess","src":"5854:15:0"}],"id":373,"name":"BinaryOperation","src":"5844:25:0"}],"id":374,"name":"FunctionCall","src":"5836:34:0"}],"id":375,"name":"ExpressionStatement","src":"5836:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":376,"name":"Identifier","src":"5876:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":377,"name":"Identifier","src":"5884:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":378,"name":"Identifier","src":"5894:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":379,"name":"Identifier","src":"5902:5:0"}],"id":380,"name":"IndexAccess","src":"5894:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":381,"name":"Identifier","src":"5909:3:0"}],"id":382,"name":"MemberAccess","src":"5909:10:0"}],"id":383,"name":"IndexAccess","src":"5894:26:0"}],"id":384,"name":"BinaryOperation","src":"5884:36:0"}],"id":385,"name":"FunctionCall","src":"5876:45:0"}],"id":386,"name":"ExpressionStatement","src":"5876:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":387,"name":"Identifier","src":"5928:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":388,"name":"Identifier","src":"5937:5:0"}],"id":389,"name":"IndexAccess","src":"5928:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":182,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":390,"name":"Identifier","src":"5946:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":391,"name":"Identifier","src":"5955:5:0"}],"id":392,"name":"IndexAccess","src":"5946:15:0"}],"id":393,"name":"MemberAccess","src":"5946:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":394,"name":"Identifier","src":"5966:6:0"}],"id":395,"name":"FunctionCall","src":"5946:27:0"}],"id":396,"name":"Assignment","src":"5928:45:0"}],"id":397,"name":"ExpressionStatement","src":"5928:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":398,"name":"Identifier","src":"5979:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":399,"name":"Identifier","src":"5988:3:0"}],"id":400,"name":"IndexAccess","src":"5979:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":206,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":401,"name":"Identifier","src":"5995:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":402,"name":"Identifier","src":"6004:3:0"}],"id":403,"name":"IndexAccess","src":"5995:13:0"}],"id":404,"name":"MemberAccess","src":"5995:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":405,"name":"Identifier","src":"6013:6:0"}],"id":406,"name":"FunctionCall","src":"5995:25:0"}],"id":407,"name":"Assignment","src":"5979:41:0"}],"id":408,"name":"ExpressionStatement","src":"5979:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":409,"name":"Identifier","src":"6026:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":410,"name":"Identifier","src":"6034:5:0"}],"id":413,"name":"IndexAccess","src":"6026:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":411,"name":"Identifier","src":"6041:3:0"}],"id":412,"name":"MemberAccess","src":"6041:10:0"}],"id":414,"name":"IndexAccess","src":"6026:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":182,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":415,"name":"Identifier","src":"6055:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":416,"name":"Identifier","src":"6063:5:0"}],"id":417,"name":"IndexAccess","src":"6055:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":418,"name":"Identifier","src":"6070:3:0"}],"id":419,"name":"MemberAccess","src":"6070:10:0"}],"id":420,"name":"IndexAccess","src":"6055:26:0"}],"id":421,"name":"MemberAccess","src":"6055:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":422,"name":"Identifier","src":"6086:6:0"}],"id":423,"name":"FunctionCall","src":"6055:38:0"}],"id":424,"name":"Assignment","src":"6026:67:0"}],"id":425,"name":"ExpressionStatement","src":"6026:67:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":426,"name":"Identifier","src":"6104:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"address","value":"_from"},"id":427,"name":"Identifier","src":"6113:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":353,"type":"address","value":"_to"},"id":428,"name":"Identifier","src":"6120:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":355,"type":"uint256","value":"_value"},"id":429,"name":"Identifier","src":"6125:6:0"}],"id":430,"name":"FunctionCall","src":"6104:28:0"}],"id":431,"name":"EmitStatement","src":"6099:33:0"},{"attributes":{"functionReturnParameters":359},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":432,"name":"Literal","src":"6145:4:0"}],"id":433,"name":"Return","src":"6138:11:0"}],"id":434,"name":"Block","src":"5798:356:0"}],"id":435,"name":"FunctionDefinition","src":"5684:470:0"},{"attributes":{"constant":false,"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\nBeware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":330,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":463,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":436,"name":"ElementaryTypeName","src":"6789:7:0"}],"id":437,"name":"VariableDeclaration","src":"6789:16:0"},{"attributes":{"constant":false,"name":"_value","scope":463,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":438,"name":"ElementaryTypeName","src":"6807:7:0"}],"id":439,"name":"VariableDeclaration","src":"6807:14:0"}],"id":440,"name":"ParameterList","src":"6788:34:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":463,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":441,"name":"ElementaryTypeName","src":"6839:4:0"}],"id":442,"name":"VariableDeclaration","src":"6839:4:0"}],"id":443,"name":"ParameterList","src":"6838:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":444,"name":"Identifier","src":"6851:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":445,"name":"Identifier","src":"6859:3:0"}],"id":446,"name":"MemberAccess","src":"6859:10:0"}],"id":448,"name":"IndexAccess","src":"6851:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":437,"type":"address","value":"_spender"},"id":447,"name":"Identifier","src":"6871:8:0"}],"id":449,"name":"IndexAccess","src":"6851:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":439,"type":"uint256","value":"_value"},"id":450,"name":"Identifier","src":"6883:6:0"}],"id":451,"name":"Assignment","src":"6851:38:0"}],"id":452,"name":"ExpressionStatement","src":"6851:38:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":338,"type":"function (address,address,uint256)","value":"Approval"},"id":453,"name":"Identifier","src":"6900:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":454,"name":"Identifier","src":"6909:3:0"}],"id":455,"name":"MemberAccess","src":"6909:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":437,"type":"address","value":"_spender"},"id":456,"name":"Identifier","src":"6921:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":439,"type":"uint256","value":"_value"},"id":457,"name":"Identifier","src":"6931:6:0"}],"id":458,"name":"FunctionCall","src":"6900:38:0"}],"id":459,"name":"EmitStatement","src":"6895:43:0"},{"attributes":{"functionReturnParameters":443},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":460,"name":"Literal","src":"6951:4:0"}],"id":461,"name":"Return","src":"6944:11:0"}],"id":462,"name":"Block","src":"6845:115:0"}],"id":463,"name":"FunctionDefinition","src":"6772:188:0"},{"attributes":{"constant":true,"documentation":"@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param _owner address The address which owns the funds.\n@param _spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":582,"stateMutability":"view","superFunction":310,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_owner","scope":479,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":464,"name":"ElementaryTypeName","src":"7303:7:0"}],"id":465,"name":"VariableDeclaration","src":"7303:14:0"},{"attributes":{"constant":false,"name":"_spender","scope":479,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":466,"name":"ElementaryTypeName","src":"7323:7:0"}],"id":467,"name":"VariableDeclaration","src":"7323:16:0"}],"id":468,"name":"ParameterList","src":"7297:47:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":479,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":469,"name":"ElementaryTypeName","src":"7378:7:0"}],"id":470,"name":"VariableDeclaration","src":"7378:7:0"}],"id":471,"name":"ParameterList","src":"7377:9:0"},{"children":[{"attributes":{"functionReturnParameters":471},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":472,"name":"Identifier","src":"7402:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":465,"type":"address","value":"_owner"},"id":473,"name":"Identifier","src":"7410:6:0"}],"id":474,"name":"IndexAccess","src":"7402:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":467,"type":"address","value":"_spender"},"id":475,"name":"Identifier","src":"7418:8:0"}],"id":476,"name":"IndexAccess","src":"7402:25:0"}],"id":477,"name":"Return","src":"7395:32:0"}],"id":478,"name":"Block","src":"7389:43:0"}],"id":479,"name":"FunctionDefinition","src":"7279:153:0"},{"attributes":{"constant":false,"documentation":"@dev Increase the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed[_spender] == 0. To increment\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _addedValue The amount of tokens to increase the allowance by.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"increaseApproval","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":521,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":480,"name":"ElementaryTypeName","src":"7915:7:0"}],"id":481,"name":"VariableDeclaration","src":"7915:16:0"},{"attributes":{"constant":false,"name":"_addedValue","scope":521,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":482,"name":"ElementaryTypeName","src":"7937:7:0"}],"id":483,"name":"VariableDeclaration","src":"7937:19:0"}],"id":484,"name":"ParameterList","src":"7909:51:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":521,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":485,"name":"ElementaryTypeName","src":"7985:4:0"}],"id":486,"name":"VariableDeclaration","src":"7985:4:0"}],"id":487,"name":"ParameterList","src":"7984:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":488,"name":"Identifier","src":"7999:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":489,"name":"Identifier","src":"8007:3:0"}],"id":490,"name":"MemberAccess","src":"8007:10:0"}],"id":492,"name":"IndexAccess","src":"7999:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":491,"name":"Identifier","src":"8019:8:0"}],"id":493,"name":"IndexAccess","src":"7999:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":206,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":494,"name":"Identifier","src":"8039:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":495,"name":"Identifier","src":"8047:3:0"}],"id":496,"name":"MemberAccess","src":"8047:10:0"}],"id":497,"name":"IndexAccess","src":"8039:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":498,"name":"Identifier","src":"8059:8:0"}],"id":499,"name":"IndexAccess","src":"8039:29:0"}],"id":500,"name":"MemberAccess","src":"8039:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":483,"type":"uint256","value":"_addedValue"},"id":501,"name":"Identifier","src":"8073:11:0"}],"id":502,"name":"FunctionCall","src":"8039:46:0"}],"id":503,"name":"TupleExpression","src":"8031:55:0"}],"id":504,"name":"Assignment","src":"7999:87:0"}],"id":505,"name":"ExpressionStatement","src":"7999:87:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":338,"type":"function (address,address,uint256)","value":"Approval"},"id":506,"name":"Identifier","src":"8097:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":507,"name":"Identifier","src":"8106:3:0"}],"id":508,"name":"MemberAccess","src":"8106:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":509,"name":"Identifier","src":"8118:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":510,"name":"Identifier","src":"8128:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":511,"name":"Identifier","src":"8136:3:0"}],"id":512,"name":"MemberAccess","src":"8136:10:0"}],"id":513,"name":"IndexAccess","src":"8128:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":481,"type":"address","value":"_spender"},"id":514,"name":"Identifier","src":"8148:8:0"}],"id":515,"name":"IndexAccess","src":"8128:29:0"}],"id":516,"name":"FunctionCall","src":"8097:61:0"}],"id":517,"name":"EmitStatement","src":"8092:66:0"},{"attributes":{"functionReturnParameters":487},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":518,"name":"Literal","src":"8171:4:0"}],"id":519,"name":"Return","src":"8164:11:0"}],"id":520,"name":"Block","src":"7993:187:0"}],"id":521,"name":"FunctionDefinition","src":"7884:296:0"},{"attributes":{"constant":false,"documentation":"@dev Decrease the amount of tokens that an owner allowed to a spender.\napprove should be called when allowed[_spender] == 0. To decrement\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _subtractedValue The amount of tokens to decrease the allowance by.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"decreaseApproval","payable":false,"scope":582,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":581,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":522,"name":"ElementaryTypeName","src":"8668:7:0"}],"id":523,"name":"VariableDeclaration","src":"8668:16:0"},{"attributes":{"constant":false,"name":"_subtractedValue","scope":581,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":524,"name":"ElementaryTypeName","src":"8690:7:0"}],"id":525,"name":"VariableDeclaration","src":"8690:24:0"}],"id":526,"name":"ParameterList","src":"8662:56:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":581,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":527,"name":"ElementaryTypeName","src":"8743:4:0"}],"id":528,"name":"VariableDeclaration","src":"8743:4:0"}],"id":529,"name":"ParameterList","src":"8742:6:0"},{"children":[{"attributes":{"assignments":[531]},"children":[{"attributes":{"constant":false,"name":"oldValue","scope":581,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":530,"name":"ElementaryTypeName","src":"8757:7:0"}],"id":531,"name":"VariableDeclaration","src":"8757:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":532,"name":"Identifier","src":"8776:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":533,"name":"Identifier","src":"8784:3:0"}],"id":534,"name":"MemberAccess","src":"8784:10:0"}],"id":535,"name":"IndexAccess","src":"8776:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":536,"name":"Identifier","src":"8796:8:0"}],"id":537,"name":"IndexAccess","src":"8776:29:0"}],"id":538,"name":"VariableDeclarationStatement","src":"8757:48:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":525,"type":"uint256","value":"_subtractedValue"},"id":539,"name":"Identifier","src":"8815:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"uint256","value":"oldValue"},"id":540,"name":"Identifier","src":"8834:8:0"}],"id":541,"name":"BinaryOperation","src":"8815:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":542,"name":"Identifier","src":"8852:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":543,"name":"Identifier","src":"8860:3:0"}],"id":544,"name":"MemberAccess","src":"8860:10:0"}],"id":546,"name":"IndexAccess","src":"8852:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":545,"name":"Identifier","src":"8872:8:0"}],"id":547,"name":"IndexAccess","src":"8852:29:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":548,"name":"Literal","src":"8884:1:0"}],"id":549,"name":"Assignment","src":"8852:33:0"}],"id":550,"name":"ExpressionStatement","src":"8852:33:0"}],"id":551,"name":"Block","src":"8844:48:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":552,"name":"Identifier","src":"8906:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":553,"name":"Identifier","src":"8914:3:0"}],"id":554,"name":"MemberAccess","src":"8914:10:0"}],"id":556,"name":"IndexAccess","src":"8906:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":555,"name":"Identifier","src":"8926:8:0"}],"id":557,"name":"IndexAccess","src":"8906:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":182,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":531,"type":"uint256","value":"oldValue"},"id":558,"name":"Identifier","src":"8938:8:0"}],"id":559,"name":"MemberAccess","src":"8938:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":525,"type":"uint256","value":"_subtractedValue"},"id":560,"name":"Identifier","src":"8951:16:0"}],"id":561,"name":"FunctionCall","src":"8938:30:0"}],"id":562,"name":"Assignment","src":"8906:62:0"}],"id":563,"name":"ExpressionStatement","src":"8906:62:0"}],"id":564,"name":"Block","src":"8898:77:0"}],"id":565,"name":"IfStatement","src":"8811:164:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":338,"type":"function (address,address,uint256)","value":"Approval"},"id":566,"name":"Identifier","src":"8985:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":567,"name":"Identifier","src":"8994:3:0"}],"id":568,"name":"MemberAccess","src":"8994:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":569,"name":"Identifier","src":"9006:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(address => uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":349,"type":"mapping(address => mapping(address => uint256))","value":"allowed"},"id":570,"name":"Identifier","src":"9016:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":571,"name":"Identifier","src":"9024:3:0"}],"id":572,"name":"MemberAccess","src":"9024:10:0"}],"id":573,"name":"IndexAccess","src":"9016:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":523,"type":"address","value":"_spender"},"id":574,"name":"Identifier","src":"9036:8:0"}],"id":575,"name":"IndexAccess","src":"9016:29:0"}],"id":576,"name":"FunctionCall","src":"8985:61:0"}],"id":577,"name":"EmitStatement","src":"8980:66:0"},{"attributes":{"functionReturnParameters":529},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":578,"name":"Literal","src":"9059:4:0"}],"id":579,"name":"Return","src":"9052:11:0"}],"id":580,"name":"Block","src":"8751:317:0"}],"id":581,"name":"FunctionDefinition","src":"8637:431:0"}],"id":582,"name":"ContractDefinition","src":"5292:3779:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.","fullyImplemented":true,"linearizedBaseContracts":[639,85],"name":"Pausable","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":583,"name":"UserDefinedTypeName","src":"9207:7:0"}],"id":584,"name":"InheritanceSpecifier","src":"9207:7:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Pause"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":585,"name":"ParameterList","src":"9230:2:0"}],"id":586,"name":"EventDefinition","src":"9219:14:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Unpause"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":587,"name":"ParameterList","src":"9249:2:0"}],"id":588,"name":"EventDefinition","src":"9236:16:0"},{"attributes":{"constant":false,"name":"paused","scope":639,"stateVariable":true,"storageLocation":"default","type":"bool","visibility":"public"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":589,"name":"ElementaryTypeName","src":"9256:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":590,"name":"Literal","src":"9277:5:0"}],"id":591,"name":"VariableDeclaration","src":"9256:26:0"},{"attributes":{"documentation":"@dev Modifier to make a function callable only when the contract is not paused.","name":"whenNotPaused","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":592,"name":"ParameterList","src":"9407:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":593,"name":"Identifier","src":"9416:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":594,"name":"Identifier","src":"9425:6:0"}],"id":595,"name":"UnaryOperation","src":"9424:7:0"}],"id":596,"name":"FunctionCall","src":"9416:16:0"}],"id":597,"name":"ExpressionStatement","src":"9416:16:0"},{"id":598,"name":"PlaceholderStatement","src":"9438:1:0"}],"id":599,"name":"Block","src":"9410:34:0"}],"id":600,"name":"ModifierDefinition","src":"9385:59:0"},{"attributes":{"documentation":"@dev Modifier to make a function callable only when the contract is paused.","name":"whenPaused","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":601,"name":"ParameterList","src":"9560:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":602,"name":"Identifier","src":"9569:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":603,"name":"Identifier","src":"9577:6:0"}],"id":604,"name":"FunctionCall","src":"9569:15:0"}],"id":605,"name":"ExpressionStatement","src":"9569:15:0"},{"id":606,"name":"PlaceholderStatement","src":"9590:1:0"}],"id":607,"name":"Block","src":"9563:33:0"}],"id":608,"name":"ModifierDefinition","src":"9541:55:0"},{"attributes":{"constant":false,"documentation":"@dev called by the owner to pause, triggers stopped state","implemented":true,"isConstructor":false,"name":"pause","payable":false,"scope":639,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":609,"name":"ParameterList","src":"9689:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":614,"name":"ParameterList","src":"9723:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":610,"name":"Identifier","src":"9692:9:0"}],"id":611,"name":"ModifierInvocation","src":"9692:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":612,"name":"Identifier","src":"9702:13:0"}],"id":613,"name":"ModifierInvocation","src":"9702:13:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":615,"name":"Identifier","src":"9729:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":616,"name":"Literal","src":"9738:4:0"}],"id":617,"name":"Assignment","src":"9729:13:0"}],"id":618,"name":"ExpressionStatement","src":"9729:13:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":586,"type":"function ()","value":"Pause"},"id":619,"name":"Identifier","src":"9753:5:0"}],"id":620,"name":"FunctionCall","src":"9753:7:0"}],"id":621,"name":"EmitStatement","src":"9748:12:0"}],"id":622,"name":"Block","src":"9723:42:0"}],"id":623,"name":"FunctionDefinition","src":"9675:90:0"},{"attributes":{"constant":false,"documentation":"@dev called by the owner to unpause, returns to normal state","implemented":true,"isConstructor":false,"name":"unpause","payable":false,"scope":639,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":624,"name":"ParameterList","src":"9863:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":629,"name":"ParameterList","src":"9894:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":625,"name":"Identifier","src":"9866:9:0"}],"id":626,"name":"ModifierInvocation","src":"9866:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":608,"type":"modifier ()","value":"whenPaused"},"id":627,"name":"Identifier","src":"9876:10:0"}],"id":628,"name":"ModifierInvocation","src":"9876:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bool","value":"paused"},"id":630,"name":"Identifier","src":"9900:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":631,"name":"Literal","src":"9909:5:0"}],"id":632,"name":"Assignment","src":"9900:14:0"}],"id":633,"name":"ExpressionStatement","src":"9900:14:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":588,"type":"function ()","value":"Unpause"},"id":634,"name":"Identifier","src":"9925:7:0"}],"id":635,"name":"FunctionCall","src":"9925:9:0"}],"id":636,"name":"EmitStatement","src":"9920:14:0"}],"id":637,"name":"Block","src":"9894:45:0"}],"id":638,"name":"FunctionDefinition","src":"9847:92:0"}],"id":639,"name":"ContractDefinition","src":"9186:755:0"},{"attributes":{"contractDependencies":[85,115,299,339,582,639],"contractKind":"contract","documentation":"@title Pausable token\n@dev StandardToken modified with pausable transfers.*","fullyImplemented":true,"linearizedBaseContracts":[737,639,85,582,299,339,115],"name":"PausableToken","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"StandardToken","referencedDeclaration":582,"type":"contract StandardToken"},"id":640,"name":"UserDefinedTypeName","src":"10059:13:0"}],"id":641,"name":"InheritanceSpecifier","src":"10059:13:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Pausable","referencedDeclaration":639,"type":"contract Pausable"},"id":642,"name":"UserDefinedTypeName","src":"10074:8:0"}],"id":643,"name":"InheritanceSpecifier","src":"10074:8:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"transfer","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":286,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_to","scope":661,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":644,"name":"ElementaryTypeName","src":"10111:7:0"}],"id":645,"name":"VariableDeclaration","src":"10111:11:0"},{"attributes":{"constant":false,"name":"_value","scope":661,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":646,"name":"ElementaryTypeName","src":"10128:7:0"}],"id":647,"name":"VariableDeclaration","src":"10128:14:0"}],"id":648,"name":"ParameterList","src":"10105:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":661,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":651,"name":"ElementaryTypeName","src":"10189:4:0"}],"id":652,"name":"VariableDeclaration","src":"10189:4:0"}],"id":653,"name":"ParameterList","src":"10188:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":649,"name":"Identifier","src":"10162:13:0"}],"id":650,"name":"ModifierInvocation","src":"10162:13:0"},{"children":[{"attributes":{"functionReturnParameters":653},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":286,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"contract super PausableToken","value":"super"},"id":654,"name":"Identifier","src":"10210:5:0"}],"id":655,"name":"MemberAccess","src":"10210:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":645,"type":"address","value":"_to"},"id":656,"name":"Identifier","src":"10225:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":647,"type":"uint256","value":"_value"},"id":657,"name":"Identifier","src":"10230:6:0"}],"id":658,"name":"FunctionCall","src":"10210:27:0"}],"id":659,"name":"Return","src":"10203:34:0"}],"id":660,"name":"Block","src":"10197:45:0"}],"id":661,"name":"FunctionDefinition","src":"10088:154:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"transferFrom","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":435,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_from","scope":682,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":662,"name":"ElementaryTypeName","src":"10273:7:0"}],"id":663,"name":"VariableDeclaration","src":"10273:13:0"},{"attributes":{"constant":false,"name":"_to","scope":682,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":664,"name":"ElementaryTypeName","src":"10292:7:0"}],"id":665,"name":"VariableDeclaration","src":"10292:11:0"},{"attributes":{"constant":false,"name":"_value","scope":682,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":666,"name":"ElementaryTypeName","src":"10309:7:0"}],"id":667,"name":"VariableDeclaration","src":"10309:14:0"}],"id":668,"name":"ParameterList","src":"10267:60:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":682,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":671,"name":"ElementaryTypeName","src":"10370:4:0"}],"id":672,"name":"VariableDeclaration","src":"10370:4:0"}],"id":673,"name":"ParameterList","src":"10369:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":669,"name":"Identifier","src":"10343:13:0"}],"id":670,"name":"ModifierInvocation","src":"10343:13:0"},{"children":[{"attributes":{"functionReturnParameters":673},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":435,"type":"function (address,address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"contract super PausableToken","value":"super"},"id":674,"name":"Identifier","src":"10391:5:0"}],"id":675,"name":"MemberAccess","src":"10391:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":663,"type":"address","value":"_from"},"id":676,"name":"Identifier","src":"10410:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":665,"type":"address","value":"_to"},"id":677,"name":"Identifier","src":"10417:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":667,"type":"uint256","value":"_value"},"id":678,"name":"Identifier","src":"10422:6:0"}],"id":679,"name":"FunctionCall","src":"10391:38:0"}],"id":680,"name":"Return","src":"10384:45:0"}],"id":681,"name":"Block","src":"10378:56:0"}],"id":682,"name":"FunctionDefinition","src":"10246:188:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"approve","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":463,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":700,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":683,"name":"ElementaryTypeName","src":"10460:7:0"}],"id":684,"name":"VariableDeclaration","src":"10460:16:0"},{"attributes":{"constant":false,"name":"_value","scope":700,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":685,"name":"ElementaryTypeName","src":"10482:7:0"}],"id":686,"name":"VariableDeclaration","src":"10482:14:0"}],"id":687,"name":"ParameterList","src":"10454:46:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":700,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":690,"name":"ElementaryTypeName","src":"10543:4:0"}],"id":691,"name":"VariableDeclaration","src":"10543:4:0"}],"id":692,"name":"ParameterList","src":"10542:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":688,"name":"Identifier","src":"10516:13:0"}],"id":689,"name":"ModifierInvocation","src":"10516:13:0"},{"children":[{"attributes":{"functionReturnParameters":692},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"approve","referencedDeclaration":463,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"contract super PausableToken","value":"super"},"id":693,"name":"Identifier","src":"10564:5:0"}],"id":694,"name":"MemberAccess","src":"10564:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":684,"type":"address","value":"_spender"},"id":695,"name":"Identifier","src":"10578:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":686,"type":"uint256","value":"_value"},"id":696,"name":"Identifier","src":"10588:6:0"}],"id":697,"name":"FunctionCall","src":"10564:31:0"}],"id":698,"name":"Return","src":"10557:38:0"}],"id":699,"name":"Block","src":"10551:49:0"}],"id":700,"name":"FunctionDefinition","src":"10438:162:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"increaseApproval","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":521,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":718,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":701,"name":"ElementaryTypeName","src":"10635:7:0"}],"id":702,"name":"VariableDeclaration","src":"10635:16:0"},{"attributes":{"constant":false,"name":"_addedValue","scope":718,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":703,"name":"ElementaryTypeName","src":"10657:4:0"}],"id":704,"name":"VariableDeclaration","src":"10657:16:0"}],"id":705,"name":"ParameterList","src":"10629:48:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":718,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":708,"name":"ElementaryTypeName","src":"10720:4:0"}],"id":709,"name":"VariableDeclaration","src":"10720:12:0"}],"id":710,"name":"ParameterList","src":"10719:14:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":706,"name":"Identifier","src":"10693:13:0"}],"id":707,"name":"ModifierInvocation","src":"10693:13:0"},{"children":[{"attributes":{"functionReturnParameters":710},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"increaseApproval","referencedDeclaration":521,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"contract super PausableToken","value":"super"},"id":711,"name":"Identifier","src":"10749:5:0"}],"id":712,"name":"MemberAccess","src":"10749:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":702,"type":"address","value":"_spender"},"id":713,"name":"Identifier","src":"10772:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":704,"type":"uint256","value":"_addedValue"},"id":714,"name":"Identifier","src":"10782:11:0"}],"id":715,"name":"FunctionCall","src":"10749:45:0"}],"id":716,"name":"Return","src":"10742:52:0"}],"id":717,"name":"Block","src":"10736:63:0"}],"id":718,"name":"FunctionDefinition","src":"10604:195:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"decreaseApproval","payable":false,"scope":737,"stateMutability":"nonpayable","superFunction":581,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_spender","scope":736,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":719,"name":"ElementaryTypeName","src":"10834:7:0"}],"id":720,"name":"VariableDeclaration","src":"10834:16:0"},{"attributes":{"constant":false,"name":"_subtractedValue","scope":736,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":721,"name":"ElementaryTypeName","src":"10856:4:0"}],"id":722,"name":"VariableDeclaration","src":"10856:21:0"}],"id":723,"name":"ParameterList","src":"10828:53:0"},{"children":[{"attributes":{"constant":false,"name":"success","scope":736,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":726,"name":"ElementaryTypeName","src":"10924:4:0"}],"id":727,"name":"VariableDeclaration","src":"10924:12:0"}],"id":728,"name":"ParameterList","src":"10923:14:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":600,"type":"modifier ()","value":"whenNotPaused"},"id":724,"name":"Identifier","src":"10897:13:0"}],"id":725,"name":"ModifierInvocation","src":"10897:13:0"},{"children":[{"attributes":{"functionReturnParameters":728},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"decreaseApproval","referencedDeclaration":581,"type":"function (address,uint256) returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4060,"type":"contract super PausableToken","value":"super"},"id":729,"name":"Identifier","src":"10953:5:0"}],"id":730,"name":"MemberAccess","src":"10953:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":720,"type":"address","value":"_spender"},"id":731,"name":"Identifier","src":"10976:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":722,"type":"uint256","value":"_subtractedValue"},"id":732,"name":"Identifier","src":"10986:16:0"}],"id":733,"name":"FunctionCall","src":"10953:50:0"}],"id":734,"name":"Return","src":"10946:57:0"}],"id":735,"name":"Block","src":"10940:68:0"}],"id":736,"name":"FunctionDefinition","src":"10803:205:0"}],"id":737,"name":"ContractDefinition","src":"10033:977:0"},{"attributes":{"contractDependencies":[115,299],"contractKind":"contract","documentation":"@title Burnable Token\n@dev Token that can be irreversibly burned (destroyed).","fullyImplemented":true,"linearizedBaseContracts":[805,299,115],"name":"BurnableToken","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BasicToken","referencedDeclaration":299,"type":"contract BasicToken"},"id":738,"name":"UserDefinedTypeName","src":"11130:10:0"}],"id":739,"name":"InheritanceSpecifier","src":"11130:10:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Burn"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"burner","scope":745,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":740,"name":"ElementaryTypeName","src":"11157:7:0"}],"id":741,"name":"VariableDeclaration","src":"11157:22:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":745,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":742,"name":"ElementaryTypeName","src":"11181:7:0"}],"id":743,"name":"VariableDeclaration","src":"11181:13:0"}],"id":744,"name":"ParameterList","src":"11156:39:0"}],"id":745,"name":"EventDefinition","src":"11146:50:0"},{"attributes":{"constant":false,"documentation":"@dev Burns a specific amount of tokens.\n@param _value The amount of token to be burned.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"burn","payable":false,"scope":805,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":757,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":746,"name":"ElementaryTypeName","src":"11324:7:0"}],"id":747,"name":"VariableDeclaration","src":"11324:14:0"}],"id":748,"name":"ParameterList","src":"11323:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":749,"name":"ParameterList","src":"11347:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":804,"type":"function (address,uint256)","value":"_burn"},"id":750,"name":"Identifier","src":"11353:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":751,"name":"Identifier","src":"11359:3:0"}],"id":752,"name":"MemberAccess","src":"11359:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":747,"type":"uint256","value":"_value"},"id":753,"name":"Identifier","src":"11371:6:0"}],"id":754,"name":"FunctionCall","src":"11353:25:0"}],"id":755,"name":"ExpressionStatement","src":"11353:25:0"}],"id":756,"name":"Block","src":"11347:36:0"}],"id":757,"name":"FunctionDefinition","src":"11310:73:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"_burn","payable":false,"scope":805,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_who","scope":804,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":758,"name":"ElementaryTypeName","src":"11402:7:0"}],"id":759,"name":"VariableDeclaration","src":"11402:12:0"},{"attributes":{"constant":false,"name":"_value","scope":804,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":760,"name":"ElementaryTypeName","src":"11416:7:0"}],"id":761,"name":"VariableDeclaration","src":"11416:14:0"}],"id":762,"name":"ParameterList","src":"11401:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":763,"name":"ParameterList","src":"11441:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":764,"name":"Identifier","src":"11447:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":765,"name":"Identifier","src":"11455:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":766,"name":"Identifier","src":"11465:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":767,"name":"Identifier","src":"11474:4:0"}],"id":768,"name":"IndexAccess","src":"11465:14:0"}],"id":769,"name":"BinaryOperation","src":"11455:24:0"}],"id":770,"name":"FunctionCall","src":"11447:33:0"}],"id":771,"name":"ExpressionStatement","src":"11447:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":772,"name":"Identifier","src":"11658:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":773,"name":"Identifier","src":"11667:4:0"}],"id":774,"name":"IndexAccess","src":"11658:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":182,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":775,"name":"Identifier","src":"11675:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":776,"name":"Identifier","src":"11684:4:0"}],"id":777,"name":"IndexAccess","src":"11675:14:0"}],"id":778,"name":"MemberAccess","src":"11675:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":779,"name":"Identifier","src":"11694:6:0"}],"id":780,"name":"FunctionCall","src":"11675:26:0"}],"id":781,"name":"Assignment","src":"11658:43:0"}],"id":782,"name":"ExpressionStatement","src":"11658:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"totalSupply_"},"id":783,"name":"Identifier","src":"11707:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":182,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"totalSupply_"},"id":784,"name":"Identifier","src":"11722:12:0"}],"id":785,"name":"MemberAccess","src":"11722:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":786,"name":"Identifier","src":"11739:6:0"}],"id":787,"name":"FunctionCall","src":"11722:24:0"}],"id":788,"name":"Assignment","src":"11707:39:0"}],"id":789,"name":"ExpressionStatement","src":"11707:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":745,"type":"function (address,uint256)","value":"Burn"},"id":790,"name":"Identifier","src":"11757:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":791,"name":"Identifier","src":"11762:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":792,"name":"Identifier","src":"11768:6:0"}],"id":793,"name":"FunctionCall","src":"11757:18:0"}],"id":794,"name":"EmitStatement","src":"11752:23:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":795,"name":"Identifier","src":"11786:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":759,"type":"address","value":"_who"},"id":796,"name":"Identifier","src":"11795:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":797,"name":"ElementaryTypeNameExpression","src":"11801:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":798,"name":"Literal","src":"11809:1:0"}],"id":799,"name":"FunctionCall","src":"11801:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":761,"type":"uint256","value":"_value"},"id":800,"name":"Identifier","src":"11813:6:0"}],"id":801,"name":"FunctionCall","src":"11786:34:0"}],"id":802,"name":"EmitStatement","src":"11781:39:0"}],"id":803,"name":"Block","src":"11441:384:0"}],"id":804,"name":"FunctionDefinition","src":"11387:438:0"}],"id":805,"name":"ContractDefinition","src":"11104:723:0"},{"attributes":{"contractDependencies":[85,115,299,339,582,639,737,805],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[891,805,737,639,85,582,299,339,115],"name":"RepublicToken","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"PausableToken","referencedDeclaration":737,"type":"contract PausableToken"},"id":806,"name":"UserDefinedTypeName","src":"11855:13:0"}],"id":807,"name":"InheritanceSpecifier","src":"11855:13:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"BurnableToken","referencedDeclaration":805,"type":"contract BurnableToken"},"id":808,"name":"UserDefinedTypeName","src":"11870:13:0"}],"id":809,"name":"InheritanceSpecifier","src":"11870:13:0"},{"attributes":{"constant":true,"name":"name","scope":891,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":810,"name":"ElementaryTypeName","src":"11891:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"52657075626c696320546f6b656e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"Republic Token\"","value":"Republic Token"},"id":811,"name":"Literal","src":"11921:16:0"}],"id":812,"name":"VariableDeclaration","src":"11891:46:0"},{"attributes":{"constant":true,"name":"symbol","scope":891,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":813,"name":"ElementaryTypeName","src":"11943:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"52454e","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"REN\"","value":"REN"},"id":814,"name":"Literal","src":"11975:5:0"}],"id":815,"name":"VariableDeclaration","src":"11943:37:0"},{"attributes":{"constant":true,"name":"decimals","scope":891,"stateVariable":true,"storageLocation":"default","type":"uint8","visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":816,"name":"ElementaryTypeName","src":"11986:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3138","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 18","value":"18"},"id":817,"name":"Literal","src":"12019:2:0"}],"id":818,"name":"VariableDeclaration","src":"11986:35:0"},{"attributes":{"constant":true,"name":"INITIAL_SUPPLY","scope":891,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":819,"name":"ElementaryTypeName","src":"12027:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"31303030303030303030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1000000000","value":"1000000000"},"id":820,"name":"Literal","src":"12068:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"operator":"**","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":821,"name":"Literal","src":"12081:2:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":822,"name":"ElementaryTypeNameExpression","src":"12085:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":818,"type":"uint8","value":"decimals"},"id":823,"name":"Identifier","src":"12093:8:0"}],"id":824,"name":"FunctionCall","src":"12085:17:0"}],"id":825,"name":"BinaryOperation","src":"12081:21:0"}],"id":826,"name":"BinaryOperation","src":"12068:34:0"}],"id":827,"name":"VariableDeclaration","src":"12027:75:0"},{"attributes":{"constant":false,"documentation":"@notice The RepublicToken Constructor.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":891,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":828,"name":"ParameterList","src":"12167:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":829,"name":"ParameterList","src":"12177:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":218,"type":"uint256","value":"totalSupply_"},"id":830,"name":"Identifier","src":"12187:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":827,"type":"uint256","value":"INITIAL_SUPPLY"},"id":831,"name":"Identifier","src":"12202:14:0"}],"id":832,"name":"Assignment","src":"12187:29:0"}],"id":833,"name":"ExpressionStatement","src":"12187:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":834,"name":"Identifier","src":"12226:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":835,"name":"Identifier","src":"12235:3:0"}],"id":836,"name":"MemberAccess","src":"12235:10:0"}],"id":837,"name":"IndexAccess","src":"12226:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":827,"type":"uint256","value":"INITIAL_SUPPLY"},"id":838,"name":"Identifier","src":"12249:14:0"}],"id":839,"name":"Assignment","src":"12226:37:0"}],"id":840,"name":"ExpressionStatement","src":"12226:37:0"}],"id":841,"name":"Block","src":"12177:93:0"}],"id":842,"name":"FunctionDefinition","src":"12156:114:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"name":"transferTokens","payable":false,"scope":891,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"beneficiary","scope":890,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":843,"name":"ElementaryTypeName","src":"12300:7:0"}],"id":844,"name":"VariableDeclaration","src":"12300:19:0"},{"attributes":{"constant":false,"name":"amount","scope":890,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":845,"name":"ElementaryTypeName","src":"12321:7:0"}],"id":846,"name":"VariableDeclaration","src":"12321:14:0"}],"id":847,"name":"ParameterList","src":"12299:37:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":890,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":850,"name":"ElementaryTypeName","src":"12363:4:0"}],"id":851,"name":"VariableDeclaration","src":"12363:4:0"}],"id":852,"name":"ParameterList","src":"12362:6:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":848,"name":"Identifier","src":"12344:9:0"}],"id":849,"name":"ModifierInvocation","src":"12344:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4035,"type":"function (bool) pure","value":"require"},"id":853,"name":"Identifier","src":"12421:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":854,"name":"Identifier","src":"12429:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":855,"name":"Literal","src":"12438:1:0"}],"id":856,"name":"BinaryOperation","src":"12429:10:0"}],"id":857,"name":"FunctionCall","src":"12421:19:0"}],"id":858,"name":"ExpressionStatement","src":"12421:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":859,"name":"Identifier","src":"12451:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":860,"name":"Identifier","src":"12460:5:0"}],"id":861,"name":"IndexAccess","src":"12451:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":182,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":862,"name":"Identifier","src":"12469:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":863,"name":"Identifier","src":"12478:5:0"}],"id":864,"name":"IndexAccess","src":"12469:15:0"}],"id":865,"name":"MemberAccess","src":"12469:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":866,"name":"Identifier","src":"12489:6:0"}],"id":867,"name":"FunctionCall","src":"12469:27:0"}],"id":868,"name":"Assignment","src":"12451:45:0"}],"id":869,"name":"ExpressionStatement","src":"12451:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":870,"name":"Identifier","src":"12506:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":844,"type":"address","value":"beneficiary"},"id":871,"name":"Identifier","src":"12515:11:0"}],"id":872,"name":"IndexAccess","src":"12506:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":206,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"mapping(address => uint256)","value":"balances"},"id":873,"name":"Identifier","src":"12530:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":844,"type":"address","value":"beneficiary"},"id":874,"name":"Identifier","src":"12539:11:0"}],"id":875,"name":"IndexAccess","src":"12530:21:0"}],"id":876,"name":"MemberAccess","src":"12530:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":877,"name":"Identifier","src":"12556:6:0"}],"id":878,"name":"FunctionCall","src":"12530:33:0"}],"id":879,"name":"Assignment","src":"12506:57:0"}],"id":880,"name":"ExpressionStatement","src":"12506:57:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"function (address,address,uint256)","value":"Transfer"},"id":881,"name":"Identifier","src":"12578:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":882,"name":"Identifier","src":"12587:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":844,"type":"address","value":"beneficiary"},"id":883,"name":"Identifier","src":"12594:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":846,"type":"uint256","value":"amount"},"id":884,"name":"Identifier","src":"12607:6:0"}],"id":885,"name":"FunctionCall","src":"12578:36:0"}],"id":886,"name":"EmitStatement","src":"12573:41:0"},{"attributes":{"functionReturnParameters":852},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":887,"name":"Literal","src":"12632:4:0"}],"id":888,"name":"Return","src":"12625:11:0"}],"id":889,"name":"Block","src":"12369:274:0"}],"id":890,"name":"FunctionDefinition","src":"12276:367:0"}],"id":891,"name":"ContractDefinition","src":"11829:816:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@notice LinkedList is a library for a circular double linked list.","fullyImplemented":true,"linearizedBaseContracts":[1310],"name":"LinkedList","scope":4018},"children":[{"attributes":{"constant":true,"name":"NULL","scope":1310,"stateVariable":true,"storageLocation":"default","type":"address","visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":892,"name":"ElementaryTypeName","src":"12903:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":893,"name":"Literal","src":"12934:3:0"}],"id":894,"name":"VariableDeclaration","src":"12903:34:0"},{"attributes":{"canonicalName":"LinkedList.Node","name":"Node","scope":1310,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"inList","scope":901,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":895,"name":"ElementaryTypeName","src":"13191:4:0"}],"id":896,"name":"VariableDeclaration","src":"13191:11:0"},{"attributes":{"constant":false,"name":"previous","scope":901,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":897,"name":"ElementaryTypeName","src":"13212:7:0"}],"id":898,"name":"VariableDeclaration","src":"13212:16:0"},{"attributes":{"constant":false,"name":"next","scope":901,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":899,"name":"ElementaryTypeName","src":"13238:7:0"}],"id":900,"name":"VariableDeclaration","src":"13238:12:0"}],"id":901,"name":"StructDefinition","src":"13169:88:0"},{"attributes":{"canonicalName":"LinkedList.List","name":"List","scope":1310,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"list","scope":906,"stateVariable":false,"storageLocation":"default","type":"mapping(address => struct LinkedList.Node)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => struct LinkedList.Node)"},"children":[{"attributes":{"name":"address","type":"address"},"id":902,"name":"ElementaryTypeName","src":"13464:7:0"},{"attributes":{"contractScope":null,"name":"Node","referencedDeclaration":901,"type":"struct LinkedList.Node"},"id":903,"name":"UserDefinedTypeName","src":"13475:4:0"}],"id":904,"name":"Mapping","src":"13455:25:0"}],"id":905,"name":"VariableDeclaration","src":"13455:30:0"}],"id":906,"name":"StructDefinition","src":"13433:59:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a new node before an existing node.\n    * @param self The list being used.\n@param target The existing node in the list.\n@param newNode The next node to insert before the target.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"insertBefore","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":990,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":907,"name":"UserDefinedTypeName","src":"13752:4:0"}],"id":908,"name":"VariableDeclaration","src":"13752:17:0"},{"attributes":{"constant":false,"name":"target","scope":990,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":909,"name":"ElementaryTypeName","src":"13771:7:0"}],"id":910,"name":"VariableDeclaration","src":"13771:14:0"},{"attributes":{"constant":false,"name":"newNode","scope":990,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":911,"name":"ElementaryTypeName","src":"13787:7:0"}],"id":912,"name":"VariableDeclaration","src":"13787:15:0"}],"id":913,"name":"ParameterList","src":"13751:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":914,"name":"ParameterList","src":"13813:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2c74e95a6be5dfe792dfbbbe5a9581b9fa5a7198f656393c11fa5be17a7cfe4","typeString":"literal_string \"already in list\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":915,"name":"Identifier","src":"13823:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":916,"name":"Identifier","src":"13832:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":917,"name":"Identifier","src":"13841:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":918,"name":"Identifier","src":"13847:7:0"}],"id":919,"name":"FunctionCall","src":"13832:23:0"}],"id":920,"name":"UnaryOperation","src":"13831:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"616c726561647920696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"already in list\"","value":"already in list"},"id":921,"name":"Literal","src":"13857:17:0"}],"id":922,"name":"FunctionCall","src":"13823:52:0"}],"id":923,"name":"ExpressionStatement","src":"13823:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":924,"name":"Identifier","src":"13885:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":925,"name":"Identifier","src":"13893:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":926,"name":"Identifier","src":"13902:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":927,"name":"Identifier","src":"13908:6:0"}],"id":928,"name":"FunctionCall","src":"13893:22:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":929,"name":"Identifier","src":"13919:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":930,"name":"Identifier","src":"13929:4:0"}],"id":931,"name":"BinaryOperation","src":"13919:14:0"}],"id":932,"name":"BinaryOperation","src":"13893:40:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":933,"name":"Literal","src":"13935:13:0"}],"id":934,"name":"FunctionCall","src":"13885:64:0"}],"id":935,"name":"ExpressionStatement","src":"13885:64:0"},{"attributes":{"assignments":[937]},"children":[{"attributes":{"constant":false,"name":"prev","scope":990,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":936,"name":"ElementaryTypeName","src":"14021:7:0"}],"id":937,"name":"VariableDeclaration","src":"14021:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":938,"name":"Identifier","src":"14036:4:0"}],"id":939,"name":"MemberAccess","src":"14036:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":940,"name":"Identifier","src":"14046:6:0"}],"id":941,"name":"IndexAccess","src":"14036:17:0"}],"id":942,"name":"MemberAccess","src":"14036:26:0"}],"id":943,"name":"VariableDeclarationStatement","src":"14021:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":944,"name":"Identifier","src":"14073:4:0"}],"id":947,"name":"MemberAccess","src":"14073:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":946,"name":"Identifier","src":"14083:7:0"}],"id":948,"name":"IndexAccess","src":"14073:18:0"}],"id":949,"name":"MemberAccess","src":"14073:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":950,"name":"Identifier","src":"14099:6:0"}],"id":951,"name":"Assignment","src":"14073:32:0"}],"id":952,"name":"ExpressionStatement","src":"14073:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":953,"name":"Identifier","src":"14115:4:0"}],"id":956,"name":"MemberAccess","src":"14115:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":955,"name":"Identifier","src":"14125:7:0"}],"id":957,"name":"IndexAccess","src":"14115:18:0"}],"id":958,"name":"MemberAccess","src":"14115:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":937,"type":"address","value":"prev"},"id":959,"name":"Identifier","src":"14145:4:0"}],"id":960,"name":"Assignment","src":"14115:34:0"}],"id":961,"name":"ExpressionStatement","src":"14115:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":962,"name":"Identifier","src":"14159:4:0"}],"id":965,"name":"MemberAccess","src":"14159:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":910,"type":"address","value":"target"},"id":964,"name":"Identifier","src":"14169:6:0"}],"id":966,"name":"IndexAccess","src":"14159:17:0"}],"id":967,"name":"MemberAccess","src":"14159:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":968,"name":"Identifier","src":"14188:7:0"}],"id":969,"name":"Assignment","src":"14159:36:0"}],"id":970,"name":"ExpressionStatement","src":"14159:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":971,"name":"Identifier","src":"14205:4:0"}],"id":974,"name":"MemberAccess","src":"14205:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":937,"type":"address","value":"prev"},"id":973,"name":"Identifier","src":"14215:4:0"}],"id":975,"name":"IndexAccess","src":"14205:15:0"}],"id":976,"name":"MemberAccess","src":"14205:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":977,"name":"Identifier","src":"14228:7:0"}],"id":978,"name":"Assignment","src":"14205:30:0"}],"id":979,"name":"ExpressionStatement","src":"14205:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":908,"type":"struct LinkedList.List storage pointer","value":"self"},"id":980,"name":"Identifier","src":"14246:4:0"}],"id":983,"name":"MemberAccess","src":"14246:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":912,"type":"address","value":"newNode"},"id":982,"name":"Identifier","src":"14256:7:0"}],"id":984,"name":"IndexAccess","src":"14246:18:0"}],"id":985,"name":"MemberAccess","src":"14246:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":986,"name":"Literal","src":"14274:4:0"}],"id":987,"name":"Assignment","src":"14246:32:0"}],"id":988,"name":"ExpressionStatement","src":"14246:32:0"}],"id":989,"name":"Block","src":"13813:472:0"}],"id":990,"name":"FunctionDefinition","src":"13730:555:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a new node after an existing node.\n    * @param self The list being used.\n@param target The existing node in the list.\n@param newNode The next node to insert after the target.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"insertAfter","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1074,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":991,"name":"UserDefinedTypeName","src":"14542:4:0"}],"id":992,"name":"VariableDeclaration","src":"14542:17:0"},{"attributes":{"constant":false,"name":"target","scope":1074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":993,"name":"ElementaryTypeName","src":"14561:7:0"}],"id":994,"name":"VariableDeclaration","src":"14561:14:0"},{"attributes":{"constant":false,"name":"newNode","scope":1074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":995,"name":"ElementaryTypeName","src":"14577:7:0"}],"id":996,"name":"VariableDeclaration","src":"14577:15:0"}],"id":997,"name":"ParameterList","src":"14541:52:0"},{"attributes":{"parameters":[null]},"children":[],"id":998,"name":"ParameterList","src":"14603:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2c74e95a6be5dfe792dfbbbe5a9581b9fa5a7198f656393c11fa5be17a7cfe4","typeString":"literal_string \"already in list\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":999,"name":"Identifier","src":"14613:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1000,"name":"Identifier","src":"14622:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1001,"name":"Identifier","src":"14631:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1002,"name":"Identifier","src":"14637:7:0"}],"id":1003,"name":"FunctionCall","src":"14622:23:0"}],"id":1004,"name":"UnaryOperation","src":"14621:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"616c726561647920696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"already in list\"","value":"already in list"},"id":1005,"name":"Literal","src":"14647:17:0"}],"id":1006,"name":"FunctionCall","src":"14613:52:0"}],"id":1007,"name":"ExpressionStatement","src":"14613:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1008,"name":"Identifier","src":"14675:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1009,"name":"Identifier","src":"14683:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1010,"name":"Identifier","src":"14692:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1011,"name":"Identifier","src":"14698:6:0"}],"id":1012,"name":"FunctionCall","src":"14683:22:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1013,"name":"Identifier","src":"14709:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1014,"name":"Identifier","src":"14719:4:0"}],"id":1015,"name":"BinaryOperation","src":"14709:14:0"}],"id":1016,"name":"BinaryOperation","src":"14683:40:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1017,"name":"Literal","src":"14725:13:0"}],"id":1018,"name":"FunctionCall","src":"14675:64:0"}],"id":1019,"name":"ExpressionStatement","src":"14675:64:0"},{"attributes":{"assignments":[1021]},"children":[{"attributes":{"constant":false,"name":"n","scope":1074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1020,"name":"ElementaryTypeName","src":"14811:7:0"}],"id":1021,"name":"VariableDeclaration","src":"14811:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1022,"name":"Identifier","src":"14823:4:0"}],"id":1023,"name":"MemberAccess","src":"14823:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1024,"name":"Identifier","src":"14833:6:0"}],"id":1025,"name":"IndexAccess","src":"14823:17:0"}],"id":1026,"name":"MemberAccess","src":"14823:22:0"}],"id":1027,"name":"VariableDeclarationStatement","src":"14811:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1028,"name":"Identifier","src":"14856:4:0"}],"id":1031,"name":"MemberAccess","src":"14856:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1030,"name":"Identifier","src":"14866:7:0"}],"id":1032,"name":"IndexAccess","src":"14856:18:0"}],"id":1033,"name":"MemberAccess","src":"14856:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1034,"name":"Identifier","src":"14886:6:0"}],"id":1035,"name":"Assignment","src":"14856:36:0"}],"id":1036,"name":"ExpressionStatement","src":"14856:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1037,"name":"Identifier","src":"14902:4:0"}],"id":1040,"name":"MemberAccess","src":"14902:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1039,"name":"Identifier","src":"14912:7:0"}],"id":1041,"name":"IndexAccess","src":"14902:18:0"}],"id":1042,"name":"MemberAccess","src":"14902:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1021,"type":"address","value":"n"},"id":1043,"name":"Identifier","src":"14928:1:0"}],"id":1044,"name":"Assignment","src":"14902:27:0"}],"id":1045,"name":"ExpressionStatement","src":"14902:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1046,"name":"Identifier","src":"14939:4:0"}],"id":1049,"name":"MemberAccess","src":"14939:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":994,"type":"address","value":"target"},"id":1048,"name":"Identifier","src":"14949:6:0"}],"id":1050,"name":"IndexAccess","src":"14939:17:0"}],"id":1051,"name":"MemberAccess","src":"14939:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1052,"name":"Identifier","src":"14964:7:0"}],"id":1053,"name":"Assignment","src":"14939:32:0"}],"id":1054,"name":"ExpressionStatement","src":"14939:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1055,"name":"Identifier","src":"14981:4:0"}],"id":1058,"name":"MemberAccess","src":"14981:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1021,"type":"address","value":"n"},"id":1057,"name":"Identifier","src":"14991:1:0"}],"id":1059,"name":"IndexAccess","src":"14981:12:0"}],"id":1060,"name":"MemberAccess","src":"14981:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1061,"name":"Identifier","src":"15005:7:0"}],"id":1062,"name":"Assignment","src":"14981:31:0"}],"id":1063,"name":"ExpressionStatement","src":"14981:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":992,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1064,"name":"Identifier","src":"15023:4:0"}],"id":1067,"name":"MemberAccess","src":"15023:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":996,"type":"address","value":"newNode"},"id":1066,"name":"Identifier","src":"15033:7:0"}],"id":1068,"name":"IndexAccess","src":"15023:18:0"}],"id":1069,"name":"MemberAccess","src":"15023:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":1070,"name":"Literal","src":"15051:4:0"}],"id":1071,"name":"Assignment","src":"15023:32:0"}],"id":1072,"name":"ExpressionStatement","src":"15023:32:0"}],"id":1073,"name":"Block","src":"14603:459:0"}],"id":1074,"name":"FunctionDefinition","src":"14521:541:0"},{"attributes":{"constant":false,"documentation":"@notice Remove a node from the list, and fix the previous and next\npointers that are pointing to the removed node. Removing anode that is not\nin the list will do nothing.\n    * @param self The list being using.\n@param node The node in the list to be removed.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"remove","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1145,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1075,"name":"UserDefinedTypeName","src":"15388:4:0"}],"id":1076,"name":"VariableDeclaration","src":"15388:17:0"},{"attributes":{"constant":false,"name":"node","scope":1145,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1077,"name":"ElementaryTypeName","src":"15407:7:0"}],"id":1078,"name":"VariableDeclaration","src":"15407:12:0"}],"id":1079,"name":"ParameterList","src":"15387:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":1080,"name":"ParameterList","src":"15430:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1081,"name":"Identifier","src":"15440:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1082,"name":"Identifier","src":"15448:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1083,"name":"Identifier","src":"15457:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1084,"name":"Identifier","src":"15463:4:0"}],"id":1085,"name":"FunctionCall","src":"15448:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1086,"name":"Literal","src":"15470:13:0"}],"id":1087,"name":"FunctionCall","src":"15440:44:0"}],"id":1088,"name":"ExpressionStatement","src":"15440:44:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1089,"name":"Identifier","src":"15498:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1090,"name":"Identifier","src":"15506:4:0"}],"id":1091,"name":"BinaryOperation","src":"15498:12:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":1080},"id":1092,"name":"Return","src":"15526:7:0"}],"id":1093,"name":"Block","src":"15512:31:0"}],"id":1094,"name":"IfStatement","src":"15494:49:0"},{"attributes":{"assignments":[1096]},"children":[{"attributes":{"constant":false,"name":"p","scope":1145,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1095,"name":"ElementaryTypeName","src":"15552:7:0"}],"id":1096,"name":"VariableDeclaration","src":"15552:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1097,"name":"Identifier","src":"15564:4:0"}],"id":1098,"name":"MemberAccess","src":"15564:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1099,"name":"Identifier","src":"15574:4:0"}],"id":1100,"name":"IndexAccess","src":"15564:15:0"}],"id":1101,"name":"MemberAccess","src":"15564:24:0"}],"id":1102,"name":"VariableDeclarationStatement","src":"15552:36:0"},{"attributes":{"assignments":[1104]},"children":[{"attributes":{"constant":false,"name":"n","scope":1145,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1103,"name":"ElementaryTypeName","src":"15598:7:0"}],"id":1104,"name":"VariableDeclaration","src":"15598:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1105,"name":"Identifier","src":"15610:4:0"}],"id":1106,"name":"MemberAccess","src":"15610:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1107,"name":"Identifier","src":"15620:4:0"}],"id":1108,"name":"IndexAccess","src":"15610:15:0"}],"id":1109,"name":"MemberAccess","src":"15610:20:0"}],"id":1110,"name":"VariableDeclarationStatement","src":"15598:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1111,"name":"Identifier","src":"15641:4:0"}],"id":1114,"name":"MemberAccess","src":"15641:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1096,"type":"address","value":"p"},"id":1113,"name":"Identifier","src":"15651:1:0"}],"id":1115,"name":"IndexAccess","src":"15641:12:0"}],"id":1116,"name":"MemberAccess","src":"15641:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1104,"type":"address","value":"n"},"id":1117,"name":"Identifier","src":"15661:1:0"}],"id":1118,"name":"Assignment","src":"15641:21:0"}],"id":1119,"name":"ExpressionStatement","src":"15641:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1120,"name":"Identifier","src":"15672:4:0"}],"id":1123,"name":"MemberAccess","src":"15672:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1104,"type":"address","value":"n"},"id":1122,"name":"Identifier","src":"15682:1:0"}],"id":1124,"name":"IndexAccess","src":"15672:12:0"}],"id":1125,"name":"MemberAccess","src":"15672:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1096,"type":"address","value":"p"},"id":1126,"name":"Identifier","src":"15696:1:0"}],"id":1127,"name":"Assignment","src":"15672:25:0"}],"id":1128,"name":"ExpressionStatement","src":"15672:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1129,"name":"Identifier","src":"15817:4:0"}],"id":1132,"name":"MemberAccess","src":"15817:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1131,"name":"Identifier","src":"15827:4:0"}],"id":1133,"name":"IndexAccess","src":"15817:15:0"}],"id":1134,"name":"MemberAccess","src":"15817:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":1135,"name":"Literal","src":"15842:5:0"}],"id":1136,"name":"Assignment","src":"15817:30:0"}],"id":1137,"name":"ExpressionStatement","src":"15817:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1076,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1138,"name":"Identifier","src":"15864:4:0"}],"id":1139,"name":"MemberAccess","src":"15864:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1078,"type":"address","value":"node"},"id":1140,"name":"Identifier","src":"15874:4:0"}],"id":1141,"name":"IndexAccess","src":"15864:15:0"}],"id":1142,"name":"UnaryOperation","src":"15857:22:0"}],"id":1143,"name":"ExpressionStatement","src":"15857:22:0"}],"id":1144,"name":"Block","src":"15430:456:0"}],"id":1145,"name":"FunctionDefinition","src":"15372:514:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a node at the beginning of the list.\n    * @param self The list being used.\n@param node The node to insert at the beginning of the list.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"prepend","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1161,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1146,"name":"UserDefinedTypeName","src":"16094:4:0"}],"id":1147,"name":"VariableDeclaration","src":"16094:17:0"},{"attributes":{"constant":false,"name":"node","scope":1161,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1148,"name":"ElementaryTypeName","src":"16113:7:0"}],"id":1149,"name":"VariableDeclaration","src":"16113:12:0"}],"id":1150,"name":"ParameterList","src":"16093:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":1151,"name":"ParameterList","src":"16136:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":990,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertBefore"},"id":1152,"name":"Identifier","src":"16200:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1153,"name":"Identifier","src":"16213:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1247,"type":"function (struct LinkedList.List storage pointer) view returns (address)","value":"begin"},"id":1154,"name":"Identifier","src":"16219:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1147,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1155,"name":"Identifier","src":"16225:4:0"}],"id":1156,"name":"FunctionCall","src":"16219:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1149,"type":"address","value":"node"},"id":1157,"name":"Identifier","src":"16232:4:0"}],"id":1158,"name":"FunctionCall","src":"16200:37:0"}],"id":1159,"name":"ExpressionStatement","src":"16200:37:0"}],"id":1160,"name":"Block","src":"16136:108:0"}],"id":1161,"name":"FunctionDefinition","src":"16077:167:0"},{"attributes":{"constant":false,"documentation":"@notice Insert a node at the end of the list.\n    * @param self The list being used.\n@param node The node to insert at the end of the list.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"append","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1177,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1162,"name":"UserDefinedTypeName","src":"16439:4:0"}],"id":1163,"name":"VariableDeclaration","src":"16439:17:0"},{"attributes":{"constant":false,"name":"node","scope":1177,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1164,"name":"ElementaryTypeName","src":"16458:7:0"}],"id":1165,"name":"VariableDeclaration","src":"16458:12:0"}],"id":1166,"name":"ParameterList","src":"16438:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":1167,"name":"ParameterList","src":"16481:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1074,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertAfter"},"id":1168,"name":"Identifier","src":"16545:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1163,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1169,"name":"Identifier","src":"16557:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"}],"overloadedDeclarations":[null],"referencedDeclaration":1261,"type":"function (struct LinkedList.List storage pointer) view returns (address)","value":"end"},"id":1170,"name":"Identifier","src":"16563:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1163,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1171,"name":"Identifier","src":"16567:4:0"}],"id":1172,"name":"FunctionCall","src":"16563:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1165,"type":"address","value":"node"},"id":1173,"name":"Identifier","src":"16574:4:0"}],"id":1174,"name":"FunctionCall","src":"16545:34:0"}],"id":1175,"name":"ExpressionStatement","src":"16545:34:0"}],"id":1176,"name":"Block","src":"16481:105:0"}],"id":1177,"name":"FunctionDefinition","src":"16423:163:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"swap","payable":false,"scope":1310,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1217,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1178,"name":"UserDefinedTypeName","src":"16606:4:0"}],"id":1179,"name":"VariableDeclaration","src":"16606:17:0"},{"attributes":{"constant":false,"name":"left","scope":1217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1180,"name":"ElementaryTypeName","src":"16625:7:0"}],"id":1181,"name":"VariableDeclaration","src":"16625:12:0"},{"attributes":{"constant":false,"name":"right","scope":1217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1182,"name":"ElementaryTypeName","src":"16639:7:0"}],"id":1183,"name":"VariableDeclaration","src":"16639:13:0"}],"id":1184,"name":"ParameterList","src":"16605:48:0"},{"attributes":{"parameters":[null]},"children":[],"id":1185,"name":"ParameterList","src":"16663:0:0"},{"children":[{"attributes":{"assignments":[1187]},"children":[{"attributes":{"constant":false,"name":"previousRight","scope":1217,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1186,"name":"ElementaryTypeName","src":"16742:7:0"}],"id":1187,"name":"VariableDeclaration","src":"16742:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1188,"name":"Identifier","src":"16766:4:0"}],"id":1189,"name":"MemberAccess","src":"16766:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1183,"type":"address","value":"right"},"id":1190,"name":"Identifier","src":"16776:5:0"}],"id":1191,"name":"IndexAccess","src":"16766:16:0"}],"id":1192,"name":"MemberAccess","src":"16766:25:0"}],"id":1193,"name":"VariableDeclarationStatement","src":"16742:49:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1145,"type":"function (struct LinkedList.List storage pointer,address)","value":"remove"},"id":1194,"name":"Identifier","src":"16801:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1195,"name":"Identifier","src":"16808:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1183,"type":"address","value":"right"},"id":1196,"name":"Identifier","src":"16814:5:0"}],"id":1197,"name":"FunctionCall","src":"16801:19:0"}],"id":1198,"name":"ExpressionStatement","src":"16801:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1074,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertAfter"},"id":1199,"name":"Identifier","src":"16830:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1200,"name":"Identifier","src":"16842:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"address","value":"left"},"id":1201,"name":"Identifier","src":"16848:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1183,"type":"address","value":"right"},"id":1202,"name":"Identifier","src":"16854:5:0"}],"id":1203,"name":"FunctionCall","src":"16830:30:0"}],"id":1204,"name":"ExpressionStatement","src":"16830:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1145,"type":"function (struct LinkedList.List storage pointer,address)","value":"remove"},"id":1205,"name":"Identifier","src":"16870:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1206,"name":"Identifier","src":"16877:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"address","value":"left"},"id":1207,"name":"Identifier","src":"16883:4:0"}],"id":1208,"name":"FunctionCall","src":"16870:18:0"}],"id":1209,"name":"ExpressionStatement","src":"16870:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1074,"type":"function (struct LinkedList.List storage pointer,address,address)","value":"insertAfter"},"id":1210,"name":"Identifier","src":"16898:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1179,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1211,"name":"Identifier","src":"16910:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1187,"type":"address","value":"previousRight"},"id":1212,"name":"Identifier","src":"16916:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1181,"type":"address","value":"left"},"id":1213,"name":"Identifier","src":"16931:4:0"}],"id":1214,"name":"FunctionCall","src":"16898:38:0"}],"id":1215,"name":"ExpressionStatement","src":"16898:38:0"}],"id":1216,"name":"Block","src":"16663:280:0"}],"id":1217,"name":"FunctionDefinition","src":"16592:351:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"isInList","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1233,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1218,"name":"UserDefinedTypeName","src":"16967:4:0"}],"id":1219,"name":"VariableDeclaration","src":"16967:17:0"},{"attributes":{"constant":false,"name":"node","scope":1233,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1220,"name":"ElementaryTypeName","src":"16986:7:0"}],"id":1221,"name":"VariableDeclaration","src":"16986:12:0"}],"id":1222,"name":"ParameterList","src":"16966:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1233,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":1223,"name":"ElementaryTypeName","src":"17023:4:0"}],"id":1224,"name":"VariableDeclaration","src":"17023:4:0"}],"id":1225,"name":"ParameterList","src":"17022:6:0"},{"children":[{"attributes":{"functionReturnParameters":1225},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"inList","referencedDeclaration":896,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1219,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1226,"name":"Identifier","src":"17046:4:0"}],"id":1227,"name":"MemberAccess","src":"17046:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1221,"type":"address","value":"node"},"id":1228,"name":"Identifier","src":"17056:4:0"}],"id":1229,"name":"IndexAccess","src":"17046:15:0"}],"id":1230,"name":"MemberAccess","src":"17046:22:0"}],"id":1231,"name":"Return","src":"17039:29:0"}],"id":1232,"name":"Block","src":"17029:46:0"}],"id":1233,"name":"FunctionDefinition","src":"16949:126:0"},{"attributes":{"constant":true,"documentation":"@notice Get the node at the beginning of a double linked list.\n    * @param self The list being used.\n    * @return A address identifying the node at the beginning of the double\nlinked list.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"begin","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1247,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1234,"name":"UserDefinedTypeName","src":"17326:4:0"}],"id":1235,"name":"VariableDeclaration","src":"17326:17:0"}],"id":1236,"name":"ParameterList","src":"17325:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1247,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1237,"name":"ElementaryTypeName","src":"17368:7:0"}],"id":1238,"name":"VariableDeclaration","src":"17368:7:0"}],"id":1239,"name":"ParameterList","src":"17367:9:0"},{"children":[{"attributes":{"functionReturnParameters":1239},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1235,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1240,"name":"Identifier","src":"17394:4:0"}],"id":1241,"name":"MemberAccess","src":"17394:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1242,"name":"Identifier","src":"17404:4:0"}],"id":1243,"name":"IndexAccess","src":"17394:15:0"}],"id":1244,"name":"MemberAccess","src":"17394:20:0"}],"id":1245,"name":"Return","src":"17387:27:0"}],"id":1246,"name":"Block","src":"17377:44:0"}],"id":1247,"name":"FunctionDefinition","src":"17311:110:0"},{"attributes":{"constant":true,"documentation":"@notice Get the node at the end of a double linked list.\n    * @param self The list being used.\n    * @return A address identifying the node at the end of the double linked\nlist.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"end","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1261,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1248,"name":"UserDefinedTypeName","src":"17658:4:0"}],"id":1249,"name":"VariableDeclaration","src":"17658:17:0"}],"id":1250,"name":"ParameterList","src":"17657:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1261,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1251,"name":"ElementaryTypeName","src":"17700:7:0"}],"id":1252,"name":"VariableDeclaration","src":"17700:7:0"}],"id":1253,"name":"ParameterList","src":"17699:9:0"},{"children":[{"attributes":{"functionReturnParameters":1253},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1249,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1254,"name":"Identifier","src":"17726:4:0"}],"id":1255,"name":"MemberAccess","src":"17726:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":894,"type":"address","value":"NULL"},"id":1256,"name":"Identifier","src":"17736:4:0"}],"id":1257,"name":"IndexAccess","src":"17726:15:0"}],"id":1258,"name":"MemberAccess","src":"17726:24:0"}],"id":1259,"name":"Return","src":"17719:31:0"}],"id":1260,"name":"Block","src":"17709:48:0"}],"id":1261,"name":"FunctionDefinition","src":"17645:112:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"next","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1285,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1262,"name":"UserDefinedTypeName","src":"17777:4:0"}],"id":1263,"name":"VariableDeclaration","src":"17777:17:0"},{"attributes":{"constant":false,"name":"node","scope":1285,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1264,"name":"ElementaryTypeName","src":"17796:7:0"}],"id":1265,"name":"VariableDeclaration","src":"17796:12:0"}],"id":1266,"name":"ParameterList","src":"17776:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1285,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1267,"name":"ElementaryTypeName","src":"17833:7:0"}],"id":1268,"name":"VariableDeclaration","src":"17833:7:0"}],"id":1269,"name":"ParameterList","src":"17832:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1270,"name":"Identifier","src":"17852:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1271,"name":"Identifier","src":"17860:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1263,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1272,"name":"Identifier","src":"17869:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1265,"type":"address","value":"node"},"id":1273,"name":"Identifier","src":"17875:4:0"}],"id":1274,"name":"FunctionCall","src":"17860:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1275,"name":"Literal","src":"17882:13:0"}],"id":1276,"name":"FunctionCall","src":"17852:44:0"}],"id":1277,"name":"ExpressionStatement","src":"17852:44:0"},{"attributes":{"functionReturnParameters":1269},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":900,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1263,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1278,"name":"Identifier","src":"17913:4:0"}],"id":1279,"name":"MemberAccess","src":"17913:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1265,"type":"address","value":"node"},"id":1280,"name":"Identifier","src":"17923:4:0"}],"id":1281,"name":"IndexAccess","src":"17913:15:0"}],"id":1282,"name":"MemberAccess","src":"17913:20:0"}],"id":1283,"name":"Return","src":"17906:27:0"}],"id":1284,"name":"Block","src":"17842:98:0"}],"id":1285,"name":"FunctionDefinition","src":"17763:177:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"previous","payable":false,"scope":1310,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"self","scope":1309,"stateVariable":false,"storageLocation":"storage","type":"struct LinkedList.List","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1286,"name":"UserDefinedTypeName","src":"17964:4:0"}],"id":1287,"name":"VariableDeclaration","src":"17964:17:0"},{"attributes":{"constant":false,"name":"node","scope":1309,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1288,"name":"ElementaryTypeName","src":"17983:7:0"}],"id":1289,"name":"VariableDeclaration","src":"17983:12:0"}],"id":1290,"name":"ParameterList","src":"17963:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1309,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1291,"name":"ElementaryTypeName","src":"18020:7:0"}],"id":1292,"name":"VariableDeclaration","src":"18020:7:0"}],"id":1293,"name":"ParameterList","src":"18019:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a76bab88614869e0ca8ab60f94e4797ae7594d40fd835733ee493ff448432826","typeString":"literal_string \"not in list\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1294,"name":"Identifier","src":"18039:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage_ptr","typeString":"struct LinkedList.List storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1233,"type":"function (struct LinkedList.List storage pointer,address) view returns (bool)","value":"isInList"},"id":1295,"name":"Identifier","src":"18047:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1287,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1296,"name":"Identifier","src":"18056:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1289,"type":"address","value":"node"},"id":1297,"name":"Identifier","src":"18062:4:0"}],"id":1298,"name":"FunctionCall","src":"18047:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420696e206c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not in list\"","value":"not in list"},"id":1299,"name":"Literal","src":"18069:13:0"}],"id":1300,"name":"FunctionCall","src":"18039:44:0"}],"id":1301,"name":"ExpressionStatement","src":"18039:44:0"},{"attributes":{"functionReturnParameters":1293},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"previous","referencedDeclaration":898,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct LinkedList.Node storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"list","referencedDeclaration":905,"type":"mapping(address => struct LinkedList.Node storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1287,"type":"struct LinkedList.List storage pointer","value":"self"},"id":1302,"name":"Identifier","src":"18100:4:0"}],"id":1303,"name":"MemberAccess","src":"18100:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1289,"type":"address","value":"node"},"id":1304,"name":"Identifier","src":"18110:4:0"}],"id":1305,"name":"IndexAccess","src":"18100:15:0"}],"id":1306,"name":"MemberAccess","src":"18100:24:0"}],"id":1307,"name":"Return","src":"18093:31:0"}],"id":1308,"name":"Block","src":"18029:102:0"}],"id":1309,"name":"FunctionDefinition","src":"17946:185:0"}],"id":1310,"name":"ContractDefinition","src":"12725:5409:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice This contract stores data and funds for the DarknodeRegistry\n contract. The data / fund logic and storage have been separated to improve\n upgradability.","fullyImplemented":true,"linearizedBaseContracts":[1588,85],"name":"DarknodeRegistryStore","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":1311,"name":"UserDefinedTypeName","src":"18341:7:0"}],"id":1312,"name":"InheritanceSpecifier","src":"18341:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":1588,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":1313,"name":"ElementaryTypeName","src":"18355:6:0"}],"id":1314,"name":"VariableDeclaration","src":"18355:21:0"},{"attributes":{"canonicalName":"DarknodeRegistryStore.Darknode","name":"Darknode","scope":1588,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"owner","scope":1325,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1315,"name":"ElementaryTypeName","src":"19030:7:0"}],"id":1316,"name":"VariableDeclaration","src":"19030:13:0"},{"attributes":{"constant":false,"name":"bond","scope":1325,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1317,"name":"ElementaryTypeName","src":"19230:7:0"}],"id":1318,"name":"VariableDeclaration","src":"19230:12:0"},{"attributes":{"constant":false,"name":"registeredAt","scope":1325,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1319,"name":"ElementaryTypeName","src":"19329:7:0"}],"id":1320,"name":"VariableDeclaration","src":"19329:20:0"},{"attributes":{"constant":false,"name":"deregisteredAt","scope":1325,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1321,"name":"ElementaryTypeName","src":"19438:7:0"}],"id":1322,"name":"VariableDeclaration","src":"19438:22:0"},{"attributes":{"constant":false,"name":"publicKey","scope":1325,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1323,"name":"ElementaryTypeName","src":"19731:5:0"}],"id":1324,"name":"VariableDeclaration","src":"19731:15:0"}],"id":1325,"name":"StructDefinition","src":"18757:996:0"},{"attributes":{"constant":false,"name":"darknodeRegistry","scope":1588,"stateVariable":true,"storageLocation":"default","type":"mapping(address => struct DarknodeRegistryStore.Darknode)","value":null,"visibility":"private"},"children":[{"attributes":{"type":"mapping(address => struct DarknodeRegistryStore.Darknode)"},"children":[{"attributes":{"name":"address","type":"address"},"id":1326,"name":"ElementaryTypeName","src":"19790:7:0"},{"attributes":{"contractScope":null,"name":"Darknode","referencedDeclaration":1325,"type":"struct DarknodeRegistryStore.Darknode"},"id":1327,"name":"UserDefinedTypeName","src":"19801:8:0"}],"id":1328,"name":"Mapping","src":"19782:28:0"}],"id":1329,"name":"VariableDeclaration","src":"19782:53:0"},{"attributes":{"constant":false,"name":"darknodes","scope":1588,"stateVariable":true,"storageLocation":"default","type":"struct LinkedList.List","value":null,"visibility":"private"},"children":[{"attributes":{"contractScope":null,"name":"LinkedList.List","referencedDeclaration":906,"type":"struct LinkedList.List"},"id":1330,"name":"UserDefinedTypeName","src":"19841:15:0"}],"id":1331,"name":"VariableDeclaration","src":"19841:33:0"},{"attributes":{"constant":false,"name":"ren","scope":1588,"stateVariable":true,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1332,"name":"UserDefinedTypeName","src":"19903:13:0"}],"id":1333,"name":"VariableDeclaration","src":"19903:24:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.\n @param _ren The address of the RepublicToken contract.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":1349,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1334,"name":"ElementaryTypeName","src":"20132:6:0"}],"id":1335,"name":"VariableDeclaration","src":"20132:15:0"},{"attributes":{"constant":false,"name":"_ren","scope":1349,"stateVariable":false,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1336,"name":"UserDefinedTypeName","src":"20157:13:0"}],"id":1337,"name":"VariableDeclaration","src":"20157:18:0"}],"id":1338,"name":"ParameterList","src":"20122:59:0"},{"attributes":{"parameters":[null]},"children":[],"id":1339,"name":"ParameterList","src":"20189:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1314,"type":"string storage ref","value":"VERSION"},"id":1340,"name":"Identifier","src":"20199:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1335,"type":"string memory","value":"_VERSION"},"id":1341,"name":"Identifier","src":"20209:8:0"}],"id":1342,"name":"Assignment","src":"20199:18:0"}],"id":1343,"name":"ExpressionStatement","src":"20199:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RepublicToken"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1333,"type":"contract RepublicToken","value":"ren"},"id":1344,"name":"Identifier","src":"20227:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1337,"type":"contract RepublicToken","value":"_ren"},"id":1345,"name":"Identifier","src":"20233:4:0"}],"id":1346,"name":"Assignment","src":"20227:10:0"}],"id":1347,"name":"ExpressionStatement","src":"20227:10:0"}],"id":1348,"name":"Block","src":"20189:55:0"}],"id":1349,"name":"FunctionDefinition","src":"20111:133:0"},{"attributes":{"constant":false,"documentation":"@notice Instantiates a darknode and appends it to the darknodes\n linked-list.\n\n    /// @param _darknodeID The darknode's ID.\n @param _darknodeOwner The darknode's owner's address\n @param _bond The darknode's bond value\n @param _publicKey The darknode's public key\n @param _registeredAt The time stamp when the darknode is registered.\n @param _deregisteredAt The time stamp when the darknode is deregistered.","implemented":true,"isConstructor":false,"name":"appendDarknode","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1390,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1350,"name":"ElementaryTypeName","src":"20748:7:0"}],"id":1351,"name":"VariableDeclaration","src":"20748:19:0"},{"attributes":{"constant":false,"name":"_darknodeOwner","scope":1390,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1352,"name":"ElementaryTypeName","src":"20777:7:0"}],"id":1353,"name":"VariableDeclaration","src":"20777:22:0"},{"attributes":{"constant":false,"name":"_bond","scope":1390,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1354,"name":"ElementaryTypeName","src":"20809:7:0"}],"id":1355,"name":"VariableDeclaration","src":"20809:13:0"},{"attributes":{"constant":false,"name":"_publicKey","scope":1390,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1356,"name":"ElementaryTypeName","src":"20832:5:0"}],"id":1357,"name":"VariableDeclaration","src":"20832:16:0"},{"attributes":{"constant":false,"name":"_registeredAt","scope":1390,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1358,"name":"ElementaryTypeName","src":"20858:7:0"}],"id":1359,"name":"VariableDeclaration","src":"20858:21:0"},{"attributes":{"constant":false,"name":"_deregisteredAt","scope":1390,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1360,"name":"ElementaryTypeName","src":"20889:7:0"}],"id":1361,"name":"VariableDeclaration","src":"20889:23:0"}],"id":1362,"name":"ParameterList","src":"20738:180:0"},{"attributes":{"parameters":[null]},"children":[],"id":1365,"name":"ParameterList","src":"20938:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1363,"name":"Identifier","src":"20928:9:0"}],"id":1364,"name":"ModifierInvocation","src":"20928:9:0"},{"children":[{"attributes":{"assignments":[1367]},"children":[{"attributes":{"constant":false,"name":"darknode","scope":1390,"stateVariable":false,"storageLocation":"memory","type":"struct DarknodeRegistryStore.Darknode","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Darknode","referencedDeclaration":1325,"type":"struct DarknodeRegistryStore.Darknode"},"id":1366,"name":"UserDefinedTypeName","src":"20948:8:0"}],"id":1367,"name":"VariableDeclaration","src":"20948:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["owner","bond","publicKey","registeredAt","deregisteredAt"],"type":"struct DarknodeRegistryStore.Darknode memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1325,"type":"type(struct DarknodeRegistryStore.Darknode storage pointer)","value":"Darknode"},"id":1368,"name":"Identifier","src":"20975:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1353,"type":"address","value":"_darknodeOwner"},"id":1369,"name":"Identifier","src":"21005:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1355,"type":"uint256","value":"_bond"},"id":1370,"name":"Identifier","src":"21039:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1357,"type":"bytes calldata","value":"_publicKey"},"id":1371,"name":"Identifier","src":"21069:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1359,"type":"uint256","value":"_registeredAt"},"id":1372,"name":"Identifier","src":"21107:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1361,"type":"uint256","value":"_deregisteredAt"},"id":1373,"name":"Identifier","src":"21150:15:0"}],"id":1374,"name":"FunctionCall","src":"20975:201:0"}],"id":1375,"name":"VariableDeclarationStatement","src":"20948:228:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1376,"name":"Identifier","src":"21186:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1351,"type":"address","value":"_darknodeID"},"id":1377,"name":"Identifier","src":"21203:11:0"}],"id":1378,"name":"IndexAccess","src":"21186:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1367,"type":"struct DarknodeRegistryStore.Darknode memory","value":"darknode"},"id":1379,"name":"Identifier","src":"21218:8:0"}],"id":1380,"name":"Assignment","src":"21186:40:0"}],"id":1381,"name":"ExpressionStatement","src":"21186:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"append","referencedDeclaration":1177,"type":"function (struct LinkedList.List storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1382,"name":"Identifier","src":"21236:10:0"}],"id":1384,"name":"MemberAccess","src":"21236:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1385,"name":"Identifier","src":"21254:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1351,"type":"address","value":"_darknodeID"},"id":1386,"name":"Identifier","src":"21265:11:0"}],"id":1387,"name":"FunctionCall","src":"21236:41:0"}],"id":1388,"name":"ExpressionStatement","src":"21236:41:0"}],"id":1389,"name":"Block","src":"20938:346:0"}],"id":1390,"name":"FunctionDefinition","src":"20715:569:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the address of the first darknode in the store","implemented":true,"isConstructor":false,"name":"begin","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1391,"name":"ParameterList","src":"21375:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1403,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1394,"name":"ElementaryTypeName","src":"21410:7:0"}],"id":1395,"name":"VariableDeclaration","src":"21410:7:0"}],"id":1396,"name":"ParameterList","src":"21409:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1392,"name":"Identifier","src":"21392:9:0"}],"id":1393,"name":"ModifierInvocation","src":"21392:9:0"},{"children":[{"attributes":{"functionReturnParameters":1396},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"begin","referencedDeclaration":1247,"type":"function (struct LinkedList.List storage pointer) view returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1397,"name":"Identifier","src":"21436:10:0"}],"id":1398,"name":"MemberAccess","src":"21436:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1399,"name":"Identifier","src":"21453:9:0"}],"id":1400,"name":"FunctionCall","src":"21436:27:0"}],"id":1401,"name":"Return","src":"21429:34:0"}],"id":1402,"name":"Block","src":"21419:51:0"}],"id":1403,"name":"FunctionDefinition","src":"21361:109:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the address of the next darknode in the store after the\n given address.","implemented":true,"isConstructor":false,"name":"next","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1419,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1404,"name":"ElementaryTypeName","src":"21593:7:0"}],"id":1405,"name":"VariableDeclaration","src":"21593:18:0"}],"id":1406,"name":"ParameterList","src":"21592:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1419,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1409,"name":"ElementaryTypeName","src":"21645:7:0"}],"id":1410,"name":"VariableDeclaration","src":"21645:7:0"}],"id":1411,"name":"ParameterList","src":"21644:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1407,"name":"Identifier","src":"21627:9:0"}],"id":1408,"name":"ModifierInvocation","src":"21627:9:0"},{"children":[{"attributes":{"functionReturnParameters":1411},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":1285,"type":"function (struct LinkedList.List storage pointer,address) view returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1412,"name":"Identifier","src":"21671:10:0"}],"id":1413,"name":"MemberAccess","src":"21671:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1414,"name":"Identifier","src":"21687:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1405,"type":"address","value":"darknodeID"},"id":1415,"name":"Identifier","src":"21698:10:0"}],"id":1416,"name":"FunctionCall","src":"21671:38:0"}],"id":1417,"name":"Return","src":"21664:45:0"}],"id":1418,"name":"Block","src":"21654:62:0"}],"id":1419,"name":"FunctionDefinition","src":"21579:137:0"},{"attributes":{"constant":false,"documentation":"@notice Removes a darknode from the store and transfers its bond to the\n owner of this contract.","implemented":true,"isConstructor":false,"name":"removeDarknode","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1455,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1420,"name":"ElementaryTypeName","src":"21858:7:0"}],"id":1421,"name":"VariableDeclaration","src":"21858:18:0"}],"id":1422,"name":"ParameterList","src":"21857:20:0"},{"attributes":{"parameters":[null]},"children":[],"id":1425,"name":"ParameterList","src":"21897:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1423,"name":"Identifier","src":"21887:9:0"}],"id":1424,"name":"ModifierInvocation","src":"21887:9:0"},{"children":[{"attributes":{"assignments":[1427]},"children":[{"attributes":{"constant":false,"name":"bond","scope":1455,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1426,"name":"ElementaryTypeName","src":"21907:7:0"}],"id":1427,"name":"VariableDeclaration","src":"21907:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1428,"name":"Identifier","src":"21922:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1421,"type":"address","value":"darknodeID"},"id":1429,"name":"Identifier","src":"21939:10:0"}],"id":1430,"name":"IndexAccess","src":"21922:28:0"}],"id":1431,"name":"MemberAccess","src":"21922:33:0"}],"id":1432,"name":"VariableDeclarationStatement","src":"21907:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1433,"name":"Identifier","src":"21972:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1421,"type":"address","value":"darknodeID"},"id":1434,"name":"Identifier","src":"21989:10:0"}],"id":1435,"name":"IndexAccess","src":"21972:28:0"}],"id":1436,"name":"UnaryOperation","src":"21965:35:0"}],"id":1437,"name":"ExpressionStatement","src":"21965:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_List_$906_storage","typeString":"struct LinkedList.List storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"remove","referencedDeclaration":1145,"type":"function (struct LinkedList.List storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1310,"type":"type(library LinkedList)","value":"LinkedList"},"id":1438,"name":"Identifier","src":"22010:10:0"}],"id":1440,"name":"MemberAccess","src":"22010:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1331,"type":"struct LinkedList.List storage ref","value":"darknodes"},"id":1441,"name":"Identifier","src":"22028:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1421,"type":"address","value":"darknodeID"},"id":1442,"name":"Identifier","src":"22039:10:0"}],"id":1443,"name":"FunctionCall","src":"22010:40:0"}],"id":1444,"name":"ExpressionStatement","src":"22010:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cc04940ac6d40db26d0534ed979bd6744dc0f16532d0fa6ea6933afd295512d","typeString":"literal_string \"bond transfer failed\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1445,"name":"Identifier","src":"22060:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1333,"type":"contract RepublicToken","value":"ren"},"id":1446,"name":"Identifier","src":"22068:3:0"}],"id":1447,"name":"MemberAccess","src":"22068:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":1448,"name":"Identifier","src":"22081:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1427,"type":"uint256","value":"bond"},"id":1449,"name":"Identifier","src":"22088:4:0"}],"id":1450,"name":"FunctionCall","src":"22068:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"626f6e64207472616e73666572206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"bond transfer failed\"","value":"bond transfer failed"},"id":1451,"name":"Literal","src":"22095:22:0"}],"id":1452,"name":"FunctionCall","src":"22060:58:0"}],"id":1453,"name":"ExpressionStatement","src":"22060:58:0"}],"id":1454,"name":"Block","src":"21897:228:0"}],"id":1455,"name":"FunctionDefinition","src":"21834:291:0"},{"attributes":{"constant":false,"documentation":"@notice Updates the bond of the darknode. If the bond is being\n decreased, the difference is sent to the owner of this contract.","implemented":true,"isConstructor":false,"name":"updateDarknodeBond","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1495,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1456,"name":"ElementaryTypeName","src":"22303:7:0"}],"id":1457,"name":"VariableDeclaration","src":"22303:18:0"},{"attributes":{"constant":false,"name":"bond","scope":1495,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1458,"name":"ElementaryTypeName","src":"22323:7:0"}],"id":1459,"name":"VariableDeclaration","src":"22323:12:0"}],"id":1460,"name":"ParameterList","src":"22302:34:0"},{"attributes":{"parameters":[null]},"children":[],"id":1463,"name":"ParameterList","src":"22356:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1461,"name":"Identifier","src":"22346:9:0"}],"id":1462,"name":"ModifierInvocation","src":"22346:9:0"},{"children":[{"attributes":{"assignments":[1465]},"children":[{"attributes":{"constant":false,"name":"previousBond","scope":1495,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1464,"name":"ElementaryTypeName","src":"22366:7:0"}],"id":1465,"name":"VariableDeclaration","src":"22366:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1466,"name":"Identifier","src":"22389:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1457,"type":"address","value":"darknodeID"},"id":1467,"name":"Identifier","src":"22406:10:0"}],"id":1468,"name":"IndexAccess","src":"22389:28:0"}],"id":1469,"name":"MemberAccess","src":"22389:33:0"}],"id":1470,"name":"VariableDeclarationStatement","src":"22366:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1471,"name":"Identifier","src":"22432:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1457,"type":"address","value":"darknodeID"},"id":1472,"name":"Identifier","src":"22449:10:0"}],"id":1473,"name":"IndexAccess","src":"22432:28:0"}],"id":1474,"name":"MemberAccess","src":"22432:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1459,"type":"uint256","value":"bond"},"id":1475,"name":"Identifier","src":"22468:4:0"}],"id":1476,"name":"Assignment","src":"22432:40:0"}],"id":1477,"name":"ExpressionStatement","src":"22432:40:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1465,"type":"uint256","value":"previousBond"},"id":1478,"name":"Identifier","src":"22486:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1459,"type":"uint256","value":"bond"},"id":1479,"name":"Identifier","src":"22501:4:0"}],"id":1480,"name":"BinaryOperation","src":"22486:19:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_859d965cd8a876806d0b6c9875cebf869ded801d80d6e8bd1b9ed2f49fb96bd5","typeString":"literal_string \"cannot transfer bond\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1481,"name":"Identifier","src":"22521:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1333,"type":"contract RepublicToken","value":"ren"},"id":1482,"name":"Identifier","src":"22529:3:0"}],"id":1483,"name":"MemberAccess","src":"22529:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":1484,"name":"Identifier","src":"22542:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1465,"type":"uint256","value":"previousBond"},"id":1485,"name":"Identifier","src":"22549:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1459,"type":"uint256","value":"bond"},"id":1486,"name":"Identifier","src":"22564:4:0"}],"id":1487,"name":"BinaryOperation","src":"22549:19:0"}],"id":1488,"name":"FunctionCall","src":"22529:40:0"},{"attributes":{"argumentTypes":null,"hexvalue":"63616e6e6f74207472616e7366657220626f6e64","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"cannot transfer bond\"","value":"cannot transfer bond"},"id":1489,"name":"Literal","src":"22571:22:0"}],"id":1490,"name":"FunctionCall","src":"22521:73:0"}],"id":1491,"name":"ExpressionStatement","src":"22521:73:0"}],"id":1492,"name":"Block","src":"22507:98:0"}],"id":1493,"name":"IfStatement","src":"22482:123:0"}],"id":1494,"name":"Block","src":"22356:255:0"}],"id":1495,"name":"FunctionDefinition","src":"22275:336:0"},{"attributes":{"constant":false,"documentation":"@notice Updates the deregistration timestamp of a darknode.","implemented":true,"isConstructor":false,"name":"updateDarknodeDeregisteredAt","payable":false,"scope":1588,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1512,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1496,"name":"ElementaryTypeName","src":"22723:7:0"}],"id":1497,"name":"VariableDeclaration","src":"22723:18:0"},{"attributes":{"constant":false,"name":"deregisteredAt","scope":1512,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1498,"name":"ElementaryTypeName","src":"22743:7:0"}],"id":1499,"name":"VariableDeclaration","src":"22743:22:0"}],"id":1500,"name":"ParameterList","src":"22722:44:0"},{"attributes":{"parameters":[null]},"children":[],"id":1503,"name":"ParameterList","src":"22786:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1501,"name":"Identifier","src":"22776:9:0"}],"id":1502,"name":"ModifierInvocation","src":"22776:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"deregisteredAt","referencedDeclaration":1322,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1504,"name":"Identifier","src":"22796:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1497,"type":"address","value":"darknodeID"},"id":1505,"name":"Identifier","src":"22813:10:0"}],"id":1506,"name":"IndexAccess","src":"22796:28:0"}],"id":1507,"name":"MemberAccess","src":"22796:43:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1499,"type":"uint256","value":"deregisteredAt"},"id":1508,"name":"Identifier","src":"22842:14:0"}],"id":1509,"name":"Assignment","src":"22796:60:0"}],"id":1510,"name":"ExpressionStatement","src":"22796:60:0"}],"id":1511,"name":"Block","src":"22786:77:0"}],"id":1512,"name":"FunctionDefinition","src":"22685:178:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the owner of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeOwner","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1527,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1513,"name":"ElementaryTypeName","src":"22947:7:0"}],"id":1514,"name":"VariableDeclaration","src":"22947:18:0"}],"id":1515,"name":"ParameterList","src":"22946:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1527,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1518,"name":"ElementaryTypeName","src":"23000:7:0"}],"id":1519,"name":"VariableDeclaration","src":"23000:7:0"}],"id":1520,"name":"ParameterList","src":"22999:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1516,"name":"Identifier","src":"22981:9:0"}],"id":1517,"name":"ModifierInvocation","src":"22981:9:0"},{"children":[{"attributes":{"functionReturnParameters":1520},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"owner","referencedDeclaration":1316,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1521,"name":"Identifier","src":"23026:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1514,"type":"address","value":"darknodeID"},"id":1522,"name":"Identifier","src":"23043:10:0"}],"id":1523,"name":"IndexAccess","src":"23026:28:0"}],"id":1524,"name":"MemberAccess","src":"23026:34:0"}],"id":1525,"name":"Return","src":"23019:41:0"}],"id":1526,"name":"Block","src":"23009:58:0"}],"id":1527,"name":"FunctionDefinition","src":"22924:143:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the bond of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeBond","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1542,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1528,"name":"ElementaryTypeName","src":"23149:7:0"}],"id":1529,"name":"VariableDeclaration","src":"23149:18:0"}],"id":1530,"name":"ParameterList","src":"23148:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1542,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1533,"name":"ElementaryTypeName","src":"23202:7:0"}],"id":1534,"name":"VariableDeclaration","src":"23202:7:0"}],"id":1535,"name":"ParameterList","src":"23201:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1531,"name":"Identifier","src":"23183:9:0"}],"id":1532,"name":"ModifierInvocation","src":"23183:9:0"},{"children":[{"attributes":{"functionReturnParameters":1535},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bond","referencedDeclaration":1318,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1536,"name":"Identifier","src":"23228:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1529,"type":"address","value":"darknodeID"},"id":1537,"name":"Identifier","src":"23245:10:0"}],"id":1538,"name":"IndexAccess","src":"23228:28:0"}],"id":1539,"name":"MemberAccess","src":"23228:33:0"}],"id":1540,"name":"Return","src":"23221:40:0"}],"id":1541,"name":"Block","src":"23211:57:0"}],"id":1542,"name":"FunctionDefinition","src":"23127:141:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the registration time of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeRegisteredAt","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1557,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1543,"name":"ElementaryTypeName","src":"23371:7:0"}],"id":1544,"name":"VariableDeclaration","src":"23371:18:0"}],"id":1545,"name":"ParameterList","src":"23370:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1557,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1548,"name":"ElementaryTypeName","src":"23424:7:0"}],"id":1549,"name":"VariableDeclaration","src":"23424:7:0"}],"id":1550,"name":"ParameterList","src":"23423:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1546,"name":"Identifier","src":"23405:9:0"}],"id":1547,"name":"ModifierInvocation","src":"23405:9:0"},{"children":[{"attributes":{"functionReturnParameters":1550},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"registeredAt","referencedDeclaration":1320,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1551,"name":"Identifier","src":"23450:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1544,"type":"address","value":"darknodeID"},"id":1552,"name":"Identifier","src":"23467:10:0"}],"id":1553,"name":"IndexAccess","src":"23450:28:0"}],"id":1554,"name":"MemberAccess","src":"23450:41:0"}],"id":1555,"name":"Return","src":"23443:48:0"}],"id":1556,"name":"Block","src":"23433:65:0"}],"id":1557,"name":"FunctionDefinition","src":"23341:157:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the deregistration time of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodeDeregisteredAt","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1572,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1558,"name":"ElementaryTypeName","src":"23605:7:0"}],"id":1559,"name":"VariableDeclaration","src":"23605:18:0"}],"id":1560,"name":"ParameterList","src":"23604:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1572,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1563,"name":"ElementaryTypeName","src":"23658:7:0"}],"id":1564,"name":"VariableDeclaration","src":"23658:7:0"}],"id":1565,"name":"ParameterList","src":"23657:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1561,"name":"Identifier","src":"23639:9:0"}],"id":1562,"name":"ModifierInvocation","src":"23639:9:0"},{"children":[{"attributes":{"functionReturnParameters":1565},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"deregisteredAt","referencedDeclaration":1322,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1566,"name":"Identifier","src":"23684:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1559,"type":"address","value":"darknodeID"},"id":1567,"name":"Identifier","src":"23701:10:0"}],"id":1568,"name":"IndexAccess","src":"23684:28:0"}],"id":1569,"name":"MemberAccess","src":"23684:43:0"}],"id":1570,"name":"Return","src":"23677:50:0"}],"id":1571,"name":"Block","src":"23667:67:0"}],"id":1572,"name":"FunctionDefinition","src":"23573:161:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the encryption public key of a given darknode.","implemented":true,"isConstructor":false,"name":"darknodePublicKey","payable":false,"scope":1588,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"darknodeID","scope":1587,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1573,"name":"ElementaryTypeName","src":"23838:7:0"}],"id":1574,"name":"VariableDeclaration","src":"23838:18:0"}],"id":1575,"name":"ParameterList","src":"23837:20:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":1587,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1578,"name":"ElementaryTypeName","src":"23891:5:0"}],"id":1579,"name":"VariableDeclaration","src":"23891:5:0"}],"id":1580,"name":"ParameterList","src":"23890:7:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":1576,"name":"Identifier","src":"23872:9:0"}],"id":1577,"name":"ModifierInvocation","src":"23872:9:0"},{"children":[{"attributes":{"functionReturnParameters":1580},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"publicKey","referencedDeclaration":1324,"type":"bytes storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct DarknodeRegistryStore.Darknode storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1329,"type":"mapping(address => struct DarknodeRegistryStore.Darknode storage ref)","value":"darknodeRegistry"},"id":1581,"name":"Identifier","src":"23915:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1574,"type":"address","value":"darknodeID"},"id":1582,"name":"Identifier","src":"23932:10:0"}],"id":1583,"name":"IndexAccess","src":"23915:28:0"}],"id":1584,"name":"MemberAccess","src":"23915:38:0"}],"id":1585,"name":"Return","src":"23908:45:0"}],"id":1586,"name":"Block","src":"23898:62:0"}],"id":1587,"name":"FunctionDefinition","src":"23811:149:0"}],"id":1588,"name":"ContractDefinition","src":"18307:5655:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice DarknodeRegistry is responsible for the registration and\n deregistration of Darknodes.","fullyImplemented":true,"linearizedBaseContracts":[2648,85],"name":"DarknodeRegistry","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":1589,"name":"UserDefinedTypeName","src":"24095:7:0"}],"id":1590,"name":"InheritanceSpecifier","src":"24095:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":2648,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":1591,"name":"ElementaryTypeName","src":"24109:6:0"}],"id":1592,"name":"VariableDeclaration","src":"24109:21:0"},{"attributes":{"canonicalName":"DarknodeRegistry.Epoch","name":"Epoch","scope":2648,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"epochhash","scope":1597,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1593,"name":"ElementaryTypeName","src":"24425:7:0"}],"id":1594,"name":"VariableDeclaration","src":"24425:17:0"},{"attributes":{"constant":false,"name":"blocknumber","scope":1597,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1595,"name":"ElementaryTypeName","src":"24452:7:0"}],"id":1596,"name":"VariableDeclaration","src":"24452:19:0"}],"id":1597,"name":"StructDefinition","src":"24402:76:0"},{"attributes":{"constant":false,"name":"numDarknodes","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1598,"name":"ElementaryTypeName","src":"24484:7:0"}],"id":1599,"name":"VariableDeclaration","src":"24484:27:0"},{"attributes":{"constant":false,"name":"numDarknodesNextEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1600,"name":"ElementaryTypeName","src":"24517:7:0"}],"id":1601,"name":"VariableDeclaration","src":"24517:36:0"},{"attributes":{"constant":false,"name":"numDarknodesPreviousEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1602,"name":"ElementaryTypeName","src":"24559:7:0"}],"id":1603,"name":"VariableDeclaration","src":"24559:40:0"},{"attributes":{"constant":false,"name":"minimumBond","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1604,"name":"ElementaryTypeName","src":"24655:7:0"}],"id":1605,"name":"VariableDeclaration","src":"24655:26:0"},{"attributes":{"constant":false,"name":"minimumPodSize","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1606,"name":"ElementaryTypeName","src":"24687:7:0"}],"id":1607,"name":"VariableDeclaration","src":"24687:29:0"},{"attributes":{"constant":false,"name":"minimumEpochInterval","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1608,"name":"ElementaryTypeName","src":"24722:7:0"}],"id":1609,"name":"VariableDeclaration","src":"24722:35:0"},{"attributes":{"constant":false,"name":"slasher","scope":2648,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":1610,"name":"ElementaryTypeName","src":"24763:7:0"}],"id":1611,"name":"VariableDeclaration","src":"24763:22:0"},{"attributes":{"constant":false,"name":"nextMinimumBond","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1612,"name":"ElementaryTypeName","src":"24956:7:0"}],"id":1613,"name":"VariableDeclaration","src":"24956:30:0"},{"attributes":{"constant":false,"name":"nextMinimumPodSize","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1614,"name":"ElementaryTypeName","src":"24992:7:0"}],"id":1615,"name":"VariableDeclaration","src":"24992:33:0"},{"attributes":{"constant":false,"name":"nextMinimumEpochInterval","scope":2648,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1616,"name":"ElementaryTypeName","src":"25031:7:0"}],"id":1617,"name":"VariableDeclaration","src":"25031:39:0"},{"attributes":{"constant":false,"name":"nextSlasher","scope":2648,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":1618,"name":"ElementaryTypeName","src":"25076:7:0"}],"id":1619,"name":"VariableDeclaration","src":"25076:26:0"},{"attributes":{"constant":false,"name":"currentEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"struct DarknodeRegistry.Epoch","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Epoch","referencedDeclaration":1597,"type":"struct DarknodeRegistry.Epoch"},"id":1620,"name":"UserDefinedTypeName","src":"25148:5:0"}],"id":1621,"name":"VariableDeclaration","src":"25148:25:0"},{"attributes":{"constant":false,"name":"previousEpoch","scope":2648,"stateVariable":true,"storageLocation":"default","type":"struct DarknodeRegistry.Epoch","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Epoch","referencedDeclaration":1597,"type":"struct DarknodeRegistry.Epoch"},"id":1622,"name":"UserDefinedTypeName","src":"25179:5:0"}],"id":1623,"name":"VariableDeclaration","src":"25179:26:0"},{"attributes":{"constant":false,"name":"ren","scope":2648,"stateVariable":true,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1624,"name":"UserDefinedTypeName","src":"25274:13:0"}],"id":1625,"name":"VariableDeclaration","src":"25274:24:0"},{"attributes":{"constant":false,"name":"store","scope":2648,"stateVariable":true,"storageLocation":"default","type":"contract DarknodeRegistryStore","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistryStore","referencedDeclaration":1588,"type":"contract DarknodeRegistryStore"},"id":1626,"name":"UserDefinedTypeName","src":"25376:21:0"}],"id":1627,"name":"VariableDeclaration","src":"25376:34:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a darknode is registered.\n @param _darknodeID The darknode ID that was registered.\n @param _bond The amount of REN that was transferred as bond.","name":"LogDarknodeRegistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_darknodeID","scope":1633,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1628,"name":"ElementaryTypeName","src":"25633:7:0"}],"id":1629,"name":"VariableDeclaration","src":"25633:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"_bond","scope":1633,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1630,"name":"ElementaryTypeName","src":"25654:7:0"}],"id":1631,"name":"VariableDeclaration","src":"25654:13:0"}],"id":1632,"name":"ParameterList","src":"25632:36:0"}],"id":1633,"name":"EventDefinition","src":"25605:64:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a darknode is deregistered.\n @param _darknodeID The darknode ID that was deregistered.","name":"LogDarknodeDeregistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_darknodeID","scope":1637,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1634,"name":"ElementaryTypeName","src":"25828:7:0"}],"id":1635,"name":"VariableDeclaration","src":"25828:19:0"}],"id":1636,"name":"ParameterList","src":"25827:21:0"}],"id":1637,"name":"EventDefinition","src":"25798:51:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a refund has been made.\n @param _owner The address that was refunded.\n @param _amount The amount of REN that was refunded.","name":"LogDarknodeOwnerRefunded"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"_owner","scope":1643,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1638,"name":"ElementaryTypeName","src":"26052:7:0"}],"id":1639,"name":"VariableDeclaration","src":"26052:14:0"},{"attributes":{"constant":false,"indexed":false,"name":"_amount","scope":1643,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1640,"name":"ElementaryTypeName","src":"26068:7:0"}],"id":1641,"name":"VariableDeclaration","src":"26068:15:0"}],"id":1642,"name":"ParameterList","src":"26051:33:0"}],"id":1643,"name":"EventDefinition","src":"26021:64:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a new epoch has begun.","name":"LogNewEpoch"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1644,"name":"ParameterList","src":"26160:2:0"}],"id":1645,"name":"EventDefinition","src":"26143:20:0"},{"attributes":{"anonymous":false,"documentation":"@notice Emitted when a constructor parameter has been updated.","name":"LogMinimumBondUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousMinimumBond","scope":1651,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1646,"name":"ElementaryTypeName","src":"26268:7:0"}],"id":1647,"name":"VariableDeclaration","src":"26268:27:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextMinimumBond","scope":1651,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1648,"name":"ElementaryTypeName","src":"26297:7:0"}],"id":1649,"name":"VariableDeclaration","src":"26297:23:0"}],"id":1650,"name":"ParameterList","src":"26267:54:0"}],"id":1651,"name":"EventDefinition","src":"26240:82:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogMinimumPodSizeUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousMinimumPodSize","scope":1657,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1652,"name":"ElementaryTypeName","src":"26358:7:0"}],"id":1653,"name":"VariableDeclaration","src":"26358:30:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextMinimumPodSize","scope":1657,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1654,"name":"ElementaryTypeName","src":"26390:7:0"}],"id":1655,"name":"VariableDeclaration","src":"26390:26:0"}],"id":1656,"name":"ParameterList","src":"26357:60:0"}],"id":1657,"name":"EventDefinition","src":"26327:91:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogMinimumEpochIntervalUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousMinimumEpochInterval","scope":1663,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1658,"name":"ElementaryTypeName","src":"26460:7:0"}],"id":1659,"name":"VariableDeclaration","src":"26460:36:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextMinimumEpochInterval","scope":1663,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1660,"name":"ElementaryTypeName","src":"26498:7:0"}],"id":1661,"name":"VariableDeclaration","src":"26498:32:0"}],"id":1662,"name":"ParameterList","src":"26459:72:0"}],"id":1663,"name":"EventDefinition","src":"26423:109:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogSlasherUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousSlasher","scope":1669,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1664,"name":"ElementaryTypeName","src":"26561:7:0"}],"id":1665,"name":"VariableDeclaration","src":"26561:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextSlasher","scope":1669,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1666,"name":"ElementaryTypeName","src":"26586:7:0"}],"id":1667,"name":"VariableDeclaration","src":"26586:19:0"}],"id":1668,"name":"ParameterList","src":"26560:46:0"}],"id":1669,"name":"EventDefinition","src":"26537:70:0"},{"attributes":{"documentation":"@notice Only allow the owner that registered the darknode to pass.","name":"onlyDarknodeOwner","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1686,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1670,"name":"ElementaryTypeName","src":"26715:7:0"}],"id":1671,"name":"VariableDeclaration","src":"26715:19:0"}],"id":1672,"name":"ParameterList","src":"26714:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_831f12230b75eb89b16a9643851b495cabcf2cc09c176ca1a6f98ca413f7a341","typeString":"literal_string \"must be darknode owner\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1673,"name":"Identifier","src":"26746:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1674,"name":"Identifier","src":"26754:5:0"}],"id":1675,"name":"MemberAccess","src":"26754:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1671,"type":"address","value":"_darknodeID"},"id":1676,"name":"Identifier","src":"26774:11:0"}],"id":1677,"name":"FunctionCall","src":"26754:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":1678,"name":"Identifier","src":"26790:3:0"}],"id":1679,"name":"MemberAccess","src":"26790:10:0"}],"id":1680,"name":"BinaryOperation","src":"26754:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d757374206265206461726b6e6f6465206f776e6572","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be darknode owner\"","value":"must be darknode owner"},"id":1681,"name":"Literal","src":"26802:24:0"}],"id":1682,"name":"FunctionCall","src":"26746:81:0"}],"id":1683,"name":"ExpressionStatement","src":"26746:81:0"},{"id":1684,"name":"PlaceholderStatement","src":"26837:1:0"}],"id":1685,"name":"Block","src":"26736:109:0"}],"id":1686,"name":"ModifierDefinition","src":"26688:157:0"},{"attributes":{"documentation":"@notice Only allow unregistered darknodes.","name":"onlyRefunded","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1699,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1687,"name":"ElementaryTypeName","src":"26924:7:0"}],"id":1688,"name":"VariableDeclaration","src":"26924:19:0"}],"id":1689,"name":"ParameterList","src":"26923:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149ca671aef3cc8634c748e8de5c177049eb721378103c16e11a6afd3213db7b","typeString":"literal_string \"must be refunded or never registered\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1690,"name":"Identifier","src":"26955:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2435,"type":"function (address) view returns (bool)","value":"isRefunded"},"id":1691,"name":"Identifier","src":"26963:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1688,"type":"address","value":"_darknodeID"},"id":1692,"name":"Identifier","src":"26974:11:0"}],"id":1693,"name":"FunctionCall","src":"26963:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d75737420626520726566756e646564206f72206e657665722072656769737465726564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be refunded or never registered\"","value":"must be refunded or never registered"},"id":1694,"name":"Literal","src":"26988:38:0"}],"id":1695,"name":"FunctionCall","src":"26955:72:0"}],"id":1696,"name":"ExpressionStatement","src":"26955:72:0"},{"id":1697,"name":"PlaceholderStatement","src":"27037:1:0"}],"id":1698,"name":"Block","src":"26945:100:0"}],"id":1699,"name":"ModifierDefinition","src":"26902:143:0"},{"attributes":{"documentation":"@notice Only allow refundable darknodes.","name":"onlyRefundable","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1712,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1700,"name":"ElementaryTypeName","src":"27124:7:0"}],"id":1701,"name":"VariableDeclaration","src":"27124:19:0"}],"id":1702,"name":"ParameterList","src":"27123:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ad5b476938769c593e29df585d22f106bae979def8bfff763442542e2fb97c7","typeString":"literal_string \"must be deregistered for at least one epoch\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1703,"name":"Identifier","src":"27155:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2455,"type":"function (address) view returns (bool)","value":"isRefundable"},"id":1704,"name":"Identifier","src":"27163:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1701,"type":"address","value":"_darknodeID"},"id":1705,"name":"Identifier","src":"27176:11:0"}],"id":1706,"name":"FunctionCall","src":"27163:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d7573742062652064657265676973746572656420666f72206174206c65617374206f6e652065706f6368","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be deregistered for at least one epoch\"","value":"must be deregistered for at least one epoch"},"id":1707,"name":"Literal","src":"27190:45:0"}],"id":1708,"name":"FunctionCall","src":"27155:81:0"}],"id":1709,"name":"ExpressionStatement","src":"27155:81:0"},{"id":1710,"name":"PlaceholderStatement","src":"27246:1:0"}],"id":1711,"name":"Block","src":"27145:109:0"}],"id":1712,"name":"ModifierDefinition","src":"27100:154:0"},{"attributes":{"documentation":"@notice Only allowed registered nodes without a pending deregistration to\n deregister","name":"onlyDeregisterable","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1725,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1713,"name":"ElementaryTypeName","src":"27389:7:0"}],"id":1714,"name":"VariableDeclaration","src":"27389:19:0"}],"id":1715,"name":"ParameterList","src":"27388:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca73111039bd6419843e4c0e5ab9c6f6d6f96c0339a4d266c0ef9fad587b157c","typeString":"literal_string \"must be deregisterable\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1716,"name":"Identifier","src":"27420:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2405,"type":"function (address) view returns (bool)","value":"isDeregisterable"},"id":1717,"name":"Identifier","src":"27428:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1714,"type":"address","value":"_darknodeID"},"id":1718,"name":"Identifier","src":"27445:11:0"}],"id":1719,"name":"FunctionCall","src":"27428:29:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d757374206265206465726567697374657261626c65","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be deregisterable\"","value":"must be deregisterable"},"id":1720,"name":"Literal","src":"27459:24:0"}],"id":1721,"name":"FunctionCall","src":"27420:64:0"}],"id":1722,"name":"ExpressionStatement","src":"27420:64:0"},{"id":1723,"name":"PlaceholderStatement","src":"27494:1:0"}],"id":1724,"name":"Block","src":"27410:92:0"}],"id":1725,"name":"ModifierDefinition","src":"27361:141:0"},{"attributes":{"documentation":"@notice Only allow the Slasher contract.","name":"onlySlasher","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1726,"name":"ParameterList","src":"27577:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc240e18317024af31d37af20ea09ca37fa45f27d1cc2454389fa60d0d22b21a","typeString":"literal_string \"must be slasher\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1727,"name":"Identifier","src":"27590:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":1728,"name":"Identifier","src":"27598:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":1729,"name":"Identifier","src":"27609:3:0"}],"id":1730,"name":"MemberAccess","src":"27609:10:0"}],"id":1731,"name":"BinaryOperation","src":"27598:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d75737420626520736c6173686572","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be slasher\"","value":"must be slasher"},"id":1732,"name":"Literal","src":"27621:17:0"}],"id":1733,"name":"FunctionCall","src":"27590:49:0"}],"id":1734,"name":"ExpressionStatement","src":"27590:49:0"},{"id":1735,"name":"PlaceholderStatement","src":"27649:1:0"}],"id":1736,"name":"Block","src":"27580:77:0"}],"id":1737,"name":"ModifierDefinition","src":"27557:100:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.\n @param _renAddress The address of the RepublicToken contract.\n @param _storeAddress The address of the DarknodeRegistryStore contract.\n @param _minimumBond The minimum bond amount that can be submitted by a\n        Darknode.\n @param _minimumPodSize The minimum size of a Darknode pod.\n @param _minimumEpochInterval The minimum number of blocks between\n        epochs.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":1816,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":1738,"name":"ElementaryTypeName","src":"28216:6:0"}],"id":1739,"name":"VariableDeclaration","src":"28216:15:0"},{"attributes":{"constant":false,"name":"_renAddress","scope":1816,"stateVariable":false,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":1740,"name":"UserDefinedTypeName","src":"28241:13:0"}],"id":1741,"name":"VariableDeclaration","src":"28241:25:0"},{"attributes":{"constant":false,"name":"_storeAddress","scope":1816,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistryStore","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistryStore","referencedDeclaration":1588,"type":"contract DarknodeRegistryStore"},"id":1742,"name":"UserDefinedTypeName","src":"28276:21:0"}],"id":1743,"name":"VariableDeclaration","src":"28276:35:0"},{"attributes":{"constant":false,"name":"_minimumBond","scope":1816,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1744,"name":"ElementaryTypeName","src":"28321:7:0"}],"id":1745,"name":"VariableDeclaration","src":"28321:20:0"},{"attributes":{"constant":false,"name":"_minimumPodSize","scope":1816,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1746,"name":"ElementaryTypeName","src":"28351:7:0"}],"id":1747,"name":"VariableDeclaration","src":"28351:23:0"},{"attributes":{"constant":false,"name":"_minimumEpochInterval","scope":1816,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1748,"name":"ElementaryTypeName","src":"28384:7:0"}],"id":1749,"name":"VariableDeclaration","src":"28384:29:0"}],"id":1750,"name":"ParameterList","src":"28206:213:0"},{"attributes":{"parameters":[null]},"children":[],"id":1751,"name":"ParameterList","src":"28427:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1592,"type":"string storage ref","value":"VERSION"},"id":1752,"name":"Identifier","src":"28437:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1739,"type":"string memory","value":"_VERSION"},"id":1753,"name":"Identifier","src":"28447:8:0"}],"id":1754,"name":"Assignment","src":"28437:18:0"}],"id":1755,"name":"ExpressionStatement","src":"28437:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract DarknodeRegistryStore"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1756,"name":"Identifier","src":"28466:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1743,"type":"contract DarknodeRegistryStore","value":"_storeAddress"},"id":1757,"name":"Identifier","src":"28474:13:0"}],"id":1758,"name":"Assignment","src":"28466:21:0"}],"id":1759,"name":"ExpressionStatement","src":"28466:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RepublicToken"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":1760,"name":"Identifier","src":"28497:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1741,"type":"contract RepublicToken","value":"_renAddress"},"id":1761,"name":"Identifier","src":"28503:11:0"}],"id":1762,"name":"Assignment","src":"28497:17:0"}],"id":1763,"name":"ExpressionStatement","src":"28497:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1764,"name":"Identifier","src":"28525:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1745,"type":"uint256","value":"_minimumBond"},"id":1765,"name":"Identifier","src":"28539:12:0"}],"id":1766,"name":"Assignment","src":"28525:26:0"}],"id":1767,"name":"ExpressionStatement","src":"28525:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1768,"name":"Identifier","src":"28561:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1769,"name":"Identifier","src":"28579:11:0"}],"id":1770,"name":"Assignment","src":"28561:29:0"}],"id":1771,"name":"ExpressionStatement","src":"28561:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1772,"name":"Identifier","src":"28601:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1747,"type":"uint256","value":"_minimumPodSize"},"id":1773,"name":"Identifier","src":"28618:15:0"}],"id":1774,"name":"Assignment","src":"28601:32:0"}],"id":1775,"name":"ExpressionStatement","src":"28601:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1776,"name":"Identifier","src":"28643:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1777,"name":"Identifier","src":"28664:14:0"}],"id":1778,"name":"Assignment","src":"28643:35:0"}],"id":1779,"name":"ExpressionStatement","src":"28643:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1780,"name":"Identifier","src":"28689:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1749,"type":"uint256","value":"_minimumEpochInterval"},"id":1781,"name":"Identifier","src":"28712:21:0"}],"id":1782,"name":"Assignment","src":"28689:44:0"}],"id":1783,"name":"ExpressionStatement","src":"28689:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":1784,"name":"Identifier","src":"28743:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1785,"name":"Identifier","src":"28770:20:0"}],"id":1786,"name":"Assignment","src":"28743:47:0"}],"id":1787,"name":"ExpressionStatement","src":"28743:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistry.Epoch storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1788,"name":"Identifier","src":"28801:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["epochhash","blocknumber"],"type":"struct DarknodeRegistry.Epoch memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1597,"type":"type(struct DarknodeRegistry.Epoch storage pointer)","value":"Epoch"},"id":1789,"name":"Identifier","src":"28816:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":1790,"name":"ElementaryTypeNameExpression","src":"28847:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4023,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1791,"name":"Identifier","src":"28855:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":1792,"name":"Identifier","src":"28865:5:0"}],"id":1793,"name":"MemberAccess","src":"28865:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1794,"name":"Literal","src":"28880:1:0"}],"id":1795,"name":"BinaryOperation","src":"28865:16:0"}],"id":1796,"name":"FunctionCall","src":"28855:27:0"}],"id":1797,"name":"FunctionCall","src":"28847:36:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":1798,"name":"Identifier","src":"28910:5:0"}],"id":1799,"name":"MemberAccess","src":"28910:12:0"}],"id":1800,"name":"FunctionCall","src":"28816:117:0"}],"id":1801,"name":"Assignment","src":"28801:132:0"}],"id":1802,"name":"ExpressionStatement","src":"28801:132:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":1803,"name":"Identifier","src":"28943:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1804,"name":"Literal","src":"28958:1:0"}],"id":1805,"name":"Assignment","src":"28943:16:0"}],"id":1806,"name":"ExpressionStatement","src":"28943:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1807,"name":"Identifier","src":"28969:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1808,"name":"Literal","src":"28993:1:0"}],"id":1809,"name":"Assignment","src":"28969:25:0"}],"id":1810,"name":"ExpressionStatement","src":"28969:25:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"numDarknodesPreviousEpoch"},"id":1811,"name":"Identifier","src":"29004:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1812,"name":"Literal","src":"29032:1:0"}],"id":1813,"name":"Assignment","src":"29004:29:0"}],"id":1814,"name":"ExpressionStatement","src":"29004:29:0"}],"id":1815,"name":"Block","src":"28427:613:0"}],"id":1816,"name":"FunctionDefinition","src":"28195:845:0"},{"attributes":{"constant":false,"documentation":"@notice Register a darknode and transfer the bond to this contract. The\n caller must provide a public encryption key for the darknode as well as\n a bond in REN. The bond must be provided as an ERC20 allowance. The dark\n node will remain pending registration until the next epoch. Only after\n this period can the darknode be deregistered. The caller of this method\n will be stored as the owner of the darknode.\n\n    /// @param _darknodeID The darknode ID that will be registered.\n @param _publicKey The public key of the darknode. It is stored to allow\n        other darknodes and traders to encrypt messages to the trader.\n @param _bond The bond that will be paid. It must be greater than, or\n        equal to, the minimum bond.","implemented":true,"isConstructor":false,"name":"register","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1882,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1817,"name":"ElementaryTypeName","src":"29871:7:0"}],"id":1818,"name":"VariableDeclaration","src":"29871:19:0"},{"attributes":{"constant":false,"name":"_publicKey","scope":1882,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":1819,"name":"ElementaryTypeName","src":"29892:5:0"}],"id":1820,"name":"VariableDeclaration","src":"29892:16:0"},{"attributes":{"constant":false,"name":"_bond","scope":1882,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1821,"name":"ElementaryTypeName","src":"29910:7:0"}],"id":1822,"name":"VariableDeclaration","src":"29910:13:0"}],"id":1823,"name":"ParameterList","src":"29870:54:0"},{"attributes":{"parameters":[null]},"children":[],"id":1827,"name":"ParameterList","src":"29960:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1699,"type":"modifier (address)","value":"onlyRefunded"},"id":1824,"name":"Identifier","src":"29934:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1818,"type":"address","value":"_darknodeID"},"id":1825,"name":"Identifier","src":"29947:11:0"}],"id":1826,"name":"ModifierInvocation","src":"29934:25:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8c49a5b7ee80762b0bf0a6f537d269ccf12880b08be1c89ed8f8d3f0d7dae8e","typeString":"literal_string \"insufficient bond\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1828,"name":"Identifier","src":"29995:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1829,"name":"Identifier","src":"30003:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1830,"name":"Identifier","src":"30012:11:0"}],"id":1831,"name":"BinaryOperation","src":"30003:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e73756666696369656e7420626f6e64","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"insufficient bond\"","value":"insufficient bond"},"id":1832,"name":"Literal","src":"30025:19:0"}],"id":1833,"name":"FunctionCall","src":"29995:50:0"}],"id":1834,"name":"ExpressionStatement","src":"29995:50:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cc04940ac6d40db26d0534ed979bd6744dc0f16532d0fa6ea6933afd295512d","typeString":"literal_string \"bond transfer failed\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1835,"name":"Identifier","src":"30126:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":682,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":1836,"name":"Identifier","src":"30134:3:0"}],"id":1837,"name":"MemberAccess","src":"30134:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":1838,"name":"Identifier","src":"30151:3:0"}],"id":1839,"name":"MemberAccess","src":"30151:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_DarknodeRegistry_$2648","typeString":"contract DarknodeRegistry"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1840,"name":"ElementaryTypeNameExpression","src":"30163:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4069,"type":"contract DarknodeRegistry","value":"this"},"id":1841,"name":"Identifier","src":"30171:4:0"}],"id":1842,"name":"FunctionCall","src":"30163:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1843,"name":"Identifier","src":"30178:5:0"}],"id":1844,"name":"FunctionCall","src":"30134:50:0"},{"attributes":{"argumentTypes":null,"hexvalue":"626f6e64207472616e73666572206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"bond transfer failed\"","value":"bond transfer failed"},"id":1845,"name":"Literal","src":"30186:22:0"}],"id":1846,"name":"FunctionCall","src":"30126:83:0"}],"id":1847,"name":"ExpressionStatement","src":"30126:83:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":1848,"name":"Identifier","src":"30219:3:0"}],"id":1850,"name":"MemberAccess","src":"30219:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_DarknodeRegistryStore_$1588","typeString":"contract DarknodeRegistryStore"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":1851,"name":"ElementaryTypeNameExpression","src":"30232:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1852,"name":"Identifier","src":"30240:5:0"}],"id":1853,"name":"FunctionCall","src":"30232:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1854,"name":"Identifier","src":"30248:5:0"}],"id":1855,"name":"FunctionCall","src":"30219:35:0"}],"id":1856,"name":"ExpressionStatement","src":"30219:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"appendDarknode","referencedDeclaration":1390,"type":"function (address,address,uint256,bytes memory,uint256,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1857,"name":"Identifier","src":"30312:5:0"}],"id":1859,"name":"MemberAccess","src":"30312:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1818,"type":"address","value":"_darknodeID"},"id":1860,"name":"Identifier","src":"30346:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":1861,"name":"Identifier","src":"30371:3:0"}],"id":1862,"name":"MemberAccess","src":"30371:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1863,"name":"Identifier","src":"30395:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1820,"type":"bytes calldata","value":"_publicKey"},"id":1864,"name":"Identifier","src":"30414:10:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1865,"name":"Identifier","src":"30438:12:0"}],"id":1866,"name":"MemberAccess","src":"30438:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1867,"name":"Identifier","src":"30465:20:0"}],"id":1868,"name":"BinaryOperation","src":"30438:47:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1869,"name":"Literal","src":"30499:1:0"}],"id":1870,"name":"FunctionCall","src":"30312:198:0"}],"id":1871,"name":"ExpressionStatement","src":"30312:198:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1872,"name":"Identifier","src":"30521:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1873,"name":"Literal","src":"30546:1:0"}],"id":1874,"name":"Assignment","src":"30521:26:0"}],"id":1875,"name":"ExpressionStatement","src":"30521:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1633,"type":"function (address,uint256)","value":"LogDarknodeRegistered"},"id":1876,"name":"Identifier","src":"30589:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1818,"type":"address","value":"_darknodeID"},"id":1877,"name":"Identifier","src":"30611:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1822,"type":"uint256","value":"_bond"},"id":1878,"name":"Identifier","src":"30624:5:0"}],"id":1879,"name":"FunctionCall","src":"30589:41:0"}],"id":1880,"name":"EmitStatement","src":"30584:46:0"}],"id":1881,"name":"Block","src":"29960:677:0"}],"id":1882,"name":"FunctionDefinition","src":"29853:784:0"},{"attributes":{"constant":false,"documentation":"@notice Deregister a darknode. The darknode will not be deregistered\n until the end of the epoch. After another epoch, the bond can be\n refunded by calling the refund method.\n @param _darknodeID The darknode ID that will be deregistered. The caller\n        of this method store.darknodeRegisteredAt(_darknodeID) must be","implemented":true,"isConstructor":false,"name":"deregister","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":1912,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":1883,"name":"ElementaryTypeName","src":"31062:7:0"}],"id":1884,"name":"VariableDeclaration","src":"31062:19:0"}],"id":1885,"name":"ParameterList","src":"31061:21:0"},{"attributes":{"parameters":[null]},"children":[],"id":1892,"name":"ParameterList","src":"31155:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1725,"type":"modifier (address)","value":"onlyDeregisterable"},"id":1886,"name":"Identifier","src":"31092:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1887,"name":"Identifier","src":"31111:11:0"}],"id":1888,"name":"ModifierInvocation","src":"31092:31:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1686,"type":"modifier (address)","value":"onlyDarknodeOwner"},"id":1889,"name":"Identifier","src":"31124:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1890,"name":"Identifier","src":"31142:11:0"}],"id":1891,"name":"ModifierInvocation","src":"31124:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"updateDarknodeDeregisteredAt","referencedDeclaration":1512,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":1893,"name":"Identifier","src":"31213:5:0"}],"id":1895,"name":"MemberAccess","src":"31213:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1896,"name":"Identifier","src":"31248:11:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1897,"name":"Identifier","src":"31261:12:0"}],"id":1898,"name":"MemberAccess","src":"31261:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1899,"name":"Identifier","src":"31288:20:0"}],"id":1900,"name":"BinaryOperation","src":"31261:47:0"}],"id":1901,"name":"FunctionCall","src":"31213:96:0"}],"id":1902,"name":"ExpressionStatement","src":"31213:96:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1903,"name":"Identifier","src":"31319:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1904,"name":"Literal","src":"31344:1:0"}],"id":1905,"name":"Assignment","src":"31319:26:0"}],"id":1906,"name":"ExpressionStatement","src":"31319:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1637,"type":"function (address)","value":"LogDarknodeDeregistered"},"id":1907,"name":"Identifier","src":"31386:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1884,"type":"address","value":"_darknodeID"},"id":1908,"name":"Identifier","src":"31410:11:0"}],"id":1909,"name":"FunctionCall","src":"31386:36:0"}],"id":1910,"name":"EmitStatement","src":"31381:41:0"}],"id":1911,"name":"Block","src":"31155:274:0"}],"id":1912,"name":"FunctionDefinition","src":"31042:387:0"},{"attributes":{"constant":false,"documentation":"@notice Progress the epoch if it is possible to do so. This captures\n the current timestamp and current blockhash and overrides the current\n epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"epoch","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":1913,"name":"ParameterList","src":"31619:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":1914,"name":"ParameterList","src":"31631:0:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":1915,"name":"Identifier","src":"31645:13:0"}],"id":1916,"name":"MemberAccess","src":"31645:25:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":1917,"name":"Literal","src":"31674:1:0"}],"id":1918,"name":"BinaryOperation","src":"31645:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_184185fc4f52082e3f1f3b59d30c9129121ff44ea1c6f83aba8c34d5744370c9","typeString":"literal_string \"not authorized (first epochs)\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1919,"name":"Identifier","src":"31766:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":1920,"name":"Identifier","src":"31774:3:0"}],"id":1921,"name":"MemberAccess","src":"31774:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":1922,"name":"Identifier","src":"31788:5:0"}],"id":1923,"name":"BinaryOperation","src":"31774:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420617574686f72697a6564202866697273742065706f63687329","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not authorized (first epochs)\"","value":"not authorized (first epochs)"},"id":1924,"name":"Literal","src":"31795:31:0"}],"id":1925,"name":"FunctionCall","src":"31766:61:0"}],"id":1926,"name":"ExpressionStatement","src":"31766:61:0"}],"id":1927,"name":"Block","src":"31677:161:0"}],"id":1928,"name":"IfStatement","src":"31641:197:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e9d2ed9fe74e3b8f1d51a47e68fbdf2be4c6b276d1bc037bb009b66201d9fd93","typeString":"literal_string \"epoch interval has not passed\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":1929,"name":"Identifier","src":"31902:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":1930,"name":"Identifier","src":"31910:5:0"}],"id":1931,"name":"MemberAccess","src":"31910:12:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1932,"name":"Identifier","src":"31926:12:0"}],"id":1933,"name":"MemberAccess","src":"31926:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":1934,"name":"Identifier","src":"31953:20:0"}],"id":1935,"name":"BinaryOperation","src":"31926:47:0"}],"id":1936,"name":"BinaryOperation","src":"31910:63:0"},{"attributes":{"argumentTypes":null,"hexvalue":"65706f636820696e74657276616c20686173206e6f7420706173736564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"epoch interval has not passed\"","value":"epoch interval has not passed"},"id":1937,"name":"Literal","src":"31975:31:0"}],"id":1938,"name":"FunctionCall","src":"31902:105:0"}],"id":1939,"name":"ExpressionStatement","src":"31902:105:0"},{"attributes":{"assignments":[1941]},"children":[{"attributes":{"constant":false,"name":"epochhash","scope":2031,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":1940,"name":"ElementaryTypeName","src":"32017:7:0"}],"id":1941,"name":"VariableDeclaration","src":"32017:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint256)","value":"uint256"},"id":1942,"name":"ElementaryTypeNameExpression","src":"32037:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":4023,"type":"function (uint256) view returns (bytes32)","value":"blockhash"},"id":1943,"name":"Identifier","src":"32045:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":1944,"name":"Identifier","src":"32055:5:0"}],"id":1945,"name":"MemberAccess","src":"32055:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":1946,"name":"Literal","src":"32070:1:0"}],"id":1947,"name":"BinaryOperation","src":"32055:16:0"}],"id":1948,"name":"FunctionCall","src":"32045:27:0"}],"id":1949,"name":"FunctionCall","src":"32037:36:0"}],"id":1950,"name":"VariableDeclarationStatement","src":"32017:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistry.Epoch storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":1951,"name":"Identifier","src":"32131:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1952,"name":"Identifier","src":"32147:12:0"}],"id":1953,"name":"Assignment","src":"32131:28:0"}],"id":1954,"name":"ExpressionStatement","src":"32131:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct DarknodeRegistry.Epoch storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":1955,"name":"Identifier","src":"32169:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["epochhash","blocknumber"],"type":"struct DarknodeRegistry.Epoch memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1597,"type":"type(struct DarknodeRegistry.Epoch storage pointer)","value":"Epoch"},"id":1956,"name":"Identifier","src":"32184:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1941,"type":"uint256","value":"epochhash"},"id":1957,"name":"Identifier","src":"32215:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":1958,"name":"Identifier","src":"32251:5:0"}],"id":1959,"name":"MemberAccess","src":"32251:12:0"}],"id":1960,"name":"FunctionCall","src":"32184:90:0"}],"id":1961,"name":"Assignment","src":"32169:105:0"}],"id":1962,"name":"ExpressionStatement","src":"32169:105:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"numDarknodesPreviousEpoch"},"id":1963,"name":"Identifier","src":"32328:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":1964,"name":"Identifier","src":"32356:12:0"}],"id":1965,"name":"Assignment","src":"32328:40:0"}],"id":1966,"name":"ExpressionStatement","src":"32328:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":1967,"name":"Identifier","src":"32378:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":1968,"name":"Identifier","src":"32393:21:0"}],"id":1969,"name":"Assignment","src":"32378:36:0"}],"id":1970,"name":"ExpressionStatement","src":"32378:36:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1971,"name":"Identifier","src":"32504:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1972,"name":"Identifier","src":"32523:11:0"}],"id":1973,"name":"BinaryOperation","src":"32504:30:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1974,"name":"Identifier","src":"32550:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1975,"name":"Identifier","src":"32564:15:0"}],"id":1976,"name":"Assignment","src":"32550:29:0"}],"id":1977,"name":"ExpressionStatement","src":"32550:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1651,"type":"function (uint256,uint256)","value":"LogMinimumBondUpdated"},"id":1978,"name":"Identifier","src":"32598:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1605,"type":"uint256","value":"minimumBond"},"id":1979,"name":"Identifier","src":"32620:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":1980,"name":"Identifier","src":"32633:15:0"}],"id":1981,"name":"FunctionCall","src":"32598:51:0"}],"id":1982,"name":"EmitStatement","src":"32593:56:0"}],"id":1983,"name":"Block","src":"32536:124:0"}],"id":1984,"name":"IfStatement","src":"32500:160:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1985,"name":"Identifier","src":"32673:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1986,"name":"Identifier","src":"32695:14:0"}],"id":1987,"name":"BinaryOperation","src":"32673:36:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1988,"name":"Identifier","src":"32725:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1989,"name":"Identifier","src":"32742:18:0"}],"id":1990,"name":"Assignment","src":"32725:35:0"}],"id":1991,"name":"ExpressionStatement","src":"32725:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1657,"type":"function (uint256,uint256)","value":"LogMinimumPodSizeUpdated"},"id":1992,"name":"Identifier","src":"32779:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1607,"type":"uint256","value":"minimumPodSize"},"id":1993,"name":"Identifier","src":"32804:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":1994,"name":"Identifier","src":"32820:18:0"}],"id":1995,"name":"FunctionCall","src":"32779:60:0"}],"id":1996,"name":"EmitStatement","src":"32774:65:0"}],"id":1997,"name":"Block","src":"32711:139:0"}],"id":1998,"name":"IfStatement","src":"32669:181:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":1999,"name":"Identifier","src":"32863:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2000,"name":"Identifier","src":"32891:20:0"}],"id":2001,"name":"BinaryOperation","src":"32863:48:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2002,"name":"Identifier","src":"32927:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":2003,"name":"Identifier","src":"32950:24:0"}],"id":2004,"name":"Assignment","src":"32927:47:0"}],"id":2005,"name":"ExpressionStatement","src":"32927:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1663,"type":"function (uint256,uint256)","value":"LogMinimumEpochIntervalUpdated"},"id":2006,"name":"Identifier","src":"32993:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2007,"name":"Identifier","src":"33024:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":2008,"name":"Identifier","src":"33046:24:0"}],"id":2009,"name":"FunctionCall","src":"32993:78:0"}],"id":2010,"name":"EmitStatement","src":"32988:83:0"}],"id":2011,"name":"Block","src":"32913:169:0"}],"id":2012,"name":"IfStatement","src":"32859:223:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2013,"name":"Identifier","src":"33095:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":2014,"name":"Identifier","src":"33110:7:0"}],"id":2015,"name":"BinaryOperation","src":"33095:22:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":2016,"name":"Identifier","src":"33133:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2017,"name":"Identifier","src":"33143:11:0"}],"id":2018,"name":"Assignment","src":"33133:21:0"}],"id":2019,"name":"ExpressionStatement","src":"33133:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1669,"type":"function (address,address)","value":"LogSlasherUpdated"},"id":2020,"name":"Identifier","src":"33173:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1611,"type":"address","value":"slasher"},"id":2021,"name":"Identifier","src":"33191:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2022,"name":"Identifier","src":"33200:11:0"}],"id":2023,"name":"FunctionCall","src":"33173:39:0"}],"id":2024,"name":"EmitStatement","src":"33168:44:0"}],"id":2025,"name":"Block","src":"33119:104:0"}],"id":2026,"name":"IfStatement","src":"33091:132:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[null],"referencedDeclaration":1645,"type":"function ()","value":"LogNewEpoch"},"id":2027,"name":"Identifier","src":"33263:11:0"}],"id":2028,"name":"FunctionCall","src":"33263:13:0"}],"id":2029,"name":"EmitStatement","src":"33258:18:0"}],"id":2030,"name":"Block","src":"31631:1652:0"}],"id":2031,"name":"FunctionDefinition","src":"31605:1678:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to transfer ownership of the\n DarknodeRegistryStore.\n @param _newOwner The address to transfer the ownership to.","implemented":true,"isConstructor":false,"name":"transferStoreOwnership","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":2045,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2032,"name":"ElementaryTypeName","src":"33490:7:0"}],"id":2033,"name":"VariableDeclaration","src":"33490:17:0"}],"id":2034,"name":"ParameterList","src":"33489:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":2037,"name":"ParameterList","src":"33528:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2035,"name":"Identifier","src":"33518:9:0"}],"id":2036,"name":"ModifierInvocation","src":"33518:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferOwnership","referencedDeclaration":61,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2038,"name":"Identifier","src":"33538:5:0"}],"id":2040,"name":"MemberAccess","src":"33538:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2033,"type":"address","value":"_newOwner"},"id":2041,"name":"Identifier","src":"33562:9:0"}],"id":2042,"name":"FunctionCall","src":"33538:34:0"}],"id":2043,"name":"ExpressionStatement","src":"33538:34:0"}],"id":2044,"name":"Block","src":"33528:51:0"}],"id":2045,"name":"FunctionDefinition","src":"33458:121:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to update the minimum bond.\n @param _nextMinimumBond The minimum bond amount that can be submitted by\n        a darknode.","implemented":true,"isConstructor":false,"name":"updateMinimumBond","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_nextMinimumBond","scope":2057,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2046,"name":"ElementaryTypeName","src":"33790:7:0"}],"id":2047,"name":"VariableDeclaration","src":"33790:24:0"}],"id":2048,"name":"ParameterList","src":"33789:26:0"},{"attributes":{"parameters":[null]},"children":[],"id":2051,"name":"ParameterList","src":"33835:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2049,"name":"Identifier","src":"33825:9:0"}],"id":2050,"name":"ModifierInvocation","src":"33825:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1613,"type":"uint256","value":"nextMinimumBond"},"id":2052,"name":"Identifier","src":"33883:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2047,"type":"uint256","value":"_nextMinimumBond"},"id":2053,"name":"Identifier","src":"33901:16:0"}],"id":2054,"name":"Assignment","src":"33883:34:0"}],"id":2055,"name":"ExpressionStatement","src":"33883:34:0"}],"id":2056,"name":"Block","src":"33835:89:0"}],"id":2057,"name":"FunctionDefinition","src":"33763:161:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to update the minimum pod size.\n @param _nextMinimumPodSize The minimum size of a pod.","implemented":true,"isConstructor":false,"name":"updateMinimumPodSize","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_nextMinimumPodSize","scope":2069,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2058,"name":"ElementaryTypeName","src":"34096:7:0"}],"id":2059,"name":"VariableDeclaration","src":"34096:27:0"}],"id":2060,"name":"ParameterList","src":"34095:29:0"},{"attributes":{"parameters":[null]},"children":[],"id":2063,"name":"ParameterList","src":"34144:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2061,"name":"Identifier","src":"34134:9:0"}],"id":2062,"name":"ModifierInvocation","src":"34134:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1615,"type":"uint256","value":"nextMinimumPodSize"},"id":2064,"name":"Identifier","src":"34192:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2059,"type":"uint256","value":"_nextMinimumPodSize"},"id":2065,"name":"Identifier","src":"34213:19:0"}],"id":2066,"name":"Assignment","src":"34192:40:0"}],"id":2067,"name":"ExpressionStatement","src":"34192:40:0"}],"id":2068,"name":"Block","src":"34144:95:0"}],"id":2069,"name":"FunctionDefinition","src":"34066:173:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the contract owner to update the minimum epoch interval.\n @param _nextMinimumEpochInterval The minimum number of blocks between epochs.","implemented":true,"isConstructor":false,"name":"updateMinimumEpochInterval","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_nextMinimumEpochInterval","scope":2081,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2070,"name":"ElementaryTypeName","src":"34447:7:0"}],"id":2071,"name":"VariableDeclaration","src":"34447:33:0"}],"id":2072,"name":"ParameterList","src":"34446:35:0"},{"attributes":{"parameters":[null]},"children":[],"id":2075,"name":"ParameterList","src":"34501:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2073,"name":"Identifier","src":"34491:9:0"}],"id":2074,"name":"ModifierInvocation","src":"34491:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1617,"type":"uint256","value":"nextMinimumEpochInterval"},"id":2076,"name":"Identifier","src":"34549:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2071,"type":"uint256","value":"_nextMinimumEpochInterval"},"id":2077,"name":"Identifier","src":"34576:25:0"}],"id":2078,"name":"Assignment","src":"34549:52:0"}],"id":2079,"name":"ExpressionStatement","src":"34549:52:0"}],"id":2080,"name":"Block","src":"34501:107:0"}],"id":2081,"name":"FunctionDefinition","src":"34411:197:0"},{"attributes":{"constant":false,"documentation":"@notice Allow the contract owner to update the DarknodeSlasher contract\n address.\n @param _slasher The new slasher address.","implemented":true,"isConstructor":false,"name":"updateSlasher","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_slasher","scope":2093,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2082,"name":"ElementaryTypeName","src":"34783:7:0"}],"id":2083,"name":"VariableDeclaration","src":"34783:16:0"}],"id":2084,"name":"ParameterList","src":"34782:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":2087,"name":"ParameterList","src":"34820:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2085,"name":"Identifier","src":"34810:9:0"}],"id":2086,"name":"ModifierInvocation","src":"34810:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1619,"type":"address","value":"nextSlasher"},"id":2088,"name":"Identifier","src":"34830:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2083,"type":"address","value":"_slasher"},"id":2089,"name":"Identifier","src":"34844:8:0"}],"id":2090,"name":"Assignment","src":"34830:22:0"}],"id":2091,"name":"ExpressionStatement","src":"34830:22:0"}],"id":2092,"name":"Block","src":"34820:39:0"}],"id":2093,"name":"FunctionDefinition","src":"34760:99:0"},{"attributes":{"constant":false,"documentation":"@notice Allow the DarknodeSlasher contract to slash half of a darknode's\n bond and deregister it. The bond is distributed as follows:\n   1/2 is kept by the guilty prover\n   1/8 is rewarded to the first challenger\n   1/8 is rewarded to the second challenger\n   1/4 becomes unassigned\n @param _prover The guilty prover whose bond is being slashed\n @param _challenger1 The first of the two darknodes who submitted the challenge\n @param _challenger2 The second of the two darknodes who submitted the challenge","implemented":true,"isConstructor":false,"name":"slash","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_prover","scope":2170,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2094,"name":"ElementaryTypeName","src":"35450:7:0"}],"id":2095,"name":"VariableDeclaration","src":"35450:15:0"},{"attributes":{"constant":false,"name":"_challenger1","scope":2170,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2096,"name":"ElementaryTypeName","src":"35467:7:0"}],"id":2097,"name":"VariableDeclaration","src":"35467:20:0"},{"attributes":{"constant":false,"name":"_challenger2","scope":2170,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2098,"name":"ElementaryTypeName","src":"35489:7:0"}],"id":2099,"name":"VariableDeclaration","src":"35489:20:0"}],"id":2100,"name":"ParameterList","src":"35449:61:0"},{"attributes":{"parameters":[null]},"children":[],"id":2103,"name":"ParameterList","src":"35552:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1737,"type":"modifier ()","value":"onlySlasher"},"id":2101,"name":"Identifier","src":"35536:11:0"}],"id":2102,"name":"ModifierInvocation","src":"35536:11:0"},{"children":[{"attributes":{"assignments":[2105]},"children":[{"attributes":{"constant":false,"name":"penalty","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2104,"name":"ElementaryTypeName","src":"35562:7:0"}],"id":2105,"name":"VariableDeclaration","src":"35562:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeBond","referencedDeclaration":1542,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2106,"name":"Identifier","src":"35580:5:0"}],"id":2107,"name":"MemberAccess","src":"35580:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2108,"name":"Identifier","src":"35599:7:0"}],"id":2109,"name":"FunctionCall","src":"35580:27:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":2110,"name":"Literal","src":"35610:1:0"}],"id":2111,"name":"BinaryOperation","src":"35580:31:0"}],"id":2112,"name":"VariableDeclarationStatement","src":"35562:49:0"},{"attributes":{"assignments":[2114]},"children":[{"attributes":{"constant":false,"name":"reward","scope":2170,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2113,"name":"ElementaryTypeName","src":"35621:7:0"}],"id":2114,"name":"VariableDeclaration","src":"35621:14:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"uint256","value":"penalty"},"id":2115,"name":"Identifier","src":"35638:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"34","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 4","value":"4"},"id":2116,"name":"Literal","src":"35648:1:0"}],"id":2117,"name":"BinaryOperation","src":"35638:11:0"}],"id":2118,"name":"VariableDeclarationStatement","src":"35621:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"updateDarknodeBond","referencedDeclaration":1495,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2119,"name":"Identifier","src":"35715:5:0"}],"id":2121,"name":"MemberAccess","src":"35715:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2122,"name":"Identifier","src":"35740:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2105,"type":"uint256","value":"penalty"},"id":2123,"name":"Identifier","src":"35749:7:0"}],"id":2124,"name":"FunctionCall","src":"35715:42:0"}],"id":2125,"name":"ExpressionStatement","src":"35715:42:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2405,"type":"function (address) view returns (bool)","value":"isDeregisterable"},"id":2126,"name":"Identifier","src":"35844:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2127,"name":"Identifier","src":"35861:7:0"}],"id":2128,"name":"FunctionCall","src":"35844:25:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"updateDarknodeDeregisteredAt","referencedDeclaration":1512,"type":"function (address,uint256) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2129,"name":"Identifier","src":"35885:5:0"}],"id":2131,"name":"MemberAccess","src":"35885:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2132,"name":"Identifier","src":"35920:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2133,"name":"Identifier","src":"35929:12:0"}],"id":2134,"name":"MemberAccess","src":"35929:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1609,"type":"uint256","value":"minimumEpochInterval"},"id":2135,"name":"Identifier","src":"35956:20:0"}],"id":2136,"name":"BinaryOperation","src":"35929:47:0"}],"id":2137,"name":"FunctionCall","src":"35885:92:0"}],"id":2138,"name":"ExpressionStatement","src":"35885:92:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1601,"type":"uint256","value":"numDarknodesNextEpoch"},"id":2139,"name":"Identifier","src":"35991:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2140,"name":"Literal","src":"36016:1:0"}],"id":2141,"name":"Assignment","src":"35991:26:0"}],"id":2142,"name":"ExpressionStatement","src":"35991:26:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":1637,"type":"function (address)","value":"LogDarknodeDeregistered"},"id":2143,"name":"Identifier","src":"36036:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2095,"type":"address","value":"_prover"},"id":2144,"name":"Identifier","src":"36060:7:0"}],"id":2145,"name":"FunctionCall","src":"36036:32:0"}],"id":2146,"name":"EmitStatement","src":"36031:37:0"}],"id":2147,"name":"Block","src":"35871:208:0"}],"id":2148,"name":"IfStatement","src":"35840:239:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":2149,"name":"Identifier","src":"36206:3:0"}],"id":2151,"name":"MemberAccess","src":"36206:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2152,"name":"Identifier","src":"36219:5:0"}],"id":2153,"name":"MemberAccess","src":"36219:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2097,"type":"address","value":"_challenger1"},"id":2154,"name":"Identifier","src":"36239:12:0"}],"id":2155,"name":"FunctionCall","src":"36219:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2114,"type":"uint256","value":"reward"},"id":2156,"name":"Identifier","src":"36254:6:0"}],"id":2157,"name":"FunctionCall","src":"36206:55:0"}],"id":2158,"name":"ExpressionStatement","src":"36206:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":2159,"name":"Identifier","src":"36271:3:0"}],"id":2161,"name":"MemberAccess","src":"36271:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2162,"name":"Identifier","src":"36284:5:0"}],"id":2163,"name":"MemberAccess","src":"36284:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2099,"type":"address","value":"_challenger2"},"id":2164,"name":"Identifier","src":"36304:12:0"}],"id":2165,"name":"FunctionCall","src":"36284:33:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2114,"type":"uint256","value":"reward"},"id":2166,"name":"Identifier","src":"36319:6:0"}],"id":2167,"name":"FunctionCall","src":"36271:55:0"}],"id":2168,"name":"ExpressionStatement","src":"36271:55:0"}],"id":2169,"name":"Block","src":"35552:781:0"}],"id":2170,"name":"FunctionDefinition","src":"35435:898:0"},{"attributes":{"constant":false,"documentation":"@notice Refund the bond of a deregistered darknode. This will make the\n darknode available for registration again. Anyone can call this function\n but the bond will always be refunded to the darknode owner.\n\n    /// @param _darknodeID The darknode ID that will be refunded. The caller\n        of this method must be the owner of this darknode.","implemented":true,"isConstructor":false,"name":"refund","payable":false,"scope":2648,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2211,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2171,"name":"ElementaryTypeName","src":"36734:7:0"}],"id":2172,"name":"VariableDeclaration","src":"36734:19:0"}],"id":2173,"name":"ParameterList","src":"36733:21:0"},{"attributes":{"parameters":[null]},"children":[],"id":2177,"name":"ParameterList","src":"36792:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1712,"type":"modifier (address)","value":"onlyRefundable"},"id":2174,"name":"Identifier","src":"36764:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2175,"name":"Identifier","src":"36779:11:0"}],"id":2176,"name":"ModifierInvocation","src":"36764:27:0"},{"children":[{"attributes":{"assignments":[2179]},"children":[{"attributes":{"constant":false,"name":"darknodeOwner","scope":2211,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2178,"name":"ElementaryTypeName","src":"36802:7:0"}],"id":2179,"name":"VariableDeclaration","src":"36802:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2180,"name":"Identifier","src":"36826:5:0"}],"id":2181,"name":"MemberAccess","src":"36826:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2182,"name":"Identifier","src":"36846:11:0"}],"id":2183,"name":"FunctionCall","src":"36826:32:0"}],"id":2184,"name":"VariableDeclarationStatement","src":"36802:56:0"},{"attributes":{"assignments":[2186]},"children":[{"attributes":{"constant":false,"name":"amount","scope":2211,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2185,"name":"ElementaryTypeName","src":"36905:7:0"}],"id":2186,"name":"VariableDeclaration","src":"36905:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeBond","referencedDeclaration":1542,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2187,"name":"Identifier","src":"36922:5:0"}],"id":2188,"name":"MemberAccess","src":"36922:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2189,"name":"Identifier","src":"36941:11:0"}],"id":2190,"name":"FunctionCall","src":"36922:31:0"}],"id":2191,"name":"VariableDeclarationStatement","src":"36905:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"removeDarknode","referencedDeclaration":1455,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2192,"name":"Identifier","src":"37012:5:0"}],"id":2194,"name":"MemberAccess","src":"37012:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2172,"type":"address","value":"_darknodeID"},"id":2195,"name":"Identifier","src":"37033:11:0"}],"id":2196,"name":"FunctionCall","src":"37012:33:0"}],"id":2197,"name":"ExpressionStatement","src":"37012:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":661,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1625,"type":"contract RepublicToken","value":"ren"},"id":2198,"name":"Identifier","src":"37104:3:0"}],"id":2200,"name":"MemberAccess","src":"37104:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2179,"type":"address","value":"darknodeOwner"},"id":2201,"name":"Identifier","src":"37117:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2186,"type":"uint256","value":"amount"},"id":2202,"name":"Identifier","src":"37132:6:0"}],"id":2203,"name":"FunctionCall","src":"37104:35:0"}],"id":2204,"name":"ExpressionStatement","src":"37104:35:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":1643,"type":"function (address,uint256)","value":"LogDarknodeOwnerRefunded"},"id":2205,"name":"Identifier","src":"37181:24:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2179,"type":"address","value":"darknodeOwner"},"id":2206,"name":"Identifier","src":"37206:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2186,"type":"uint256","value":"amount"},"id":2207,"name":"Identifier","src":"37221:6:0"}],"id":2208,"name":"FunctionCall","src":"37181:47:0"}],"id":2209,"name":"EmitStatement","src":"37176:52:0"}],"id":2210,"name":"Block","src":"36792:443:0"}],"id":2211,"name":"FunctionDefinition","src":"36718:517:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves the address of the account that registered a darknode.\n @param _darknodeID The ID of the darknode to retrieve the owner for.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodeOwner","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2224,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2212,"name":"ElementaryTypeName","src":"37425:7:0"}],"id":2213,"name":"VariableDeclaration","src":"37425:19:0"}],"id":2214,"name":"ParameterList","src":"37424:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2224,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2215,"name":"ElementaryTypeName","src":"37469:7:0"}],"id":2216,"name":"VariableDeclaration","src":"37469:7:0"}],"id":2217,"name":"ParameterList","src":"37468:9:0"},{"children":[{"attributes":{"functionReturnParameters":2217},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeOwner","referencedDeclaration":1527,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2218,"name":"Identifier","src":"37495:5:0"}],"id":2219,"name":"MemberAccess","src":"37495:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2213,"type":"address","value":"_darknodeID"},"id":2220,"name":"Identifier","src":"37515:11:0"}],"id":2221,"name":"FunctionCall","src":"37495:32:0"}],"id":2222,"name":"Return","src":"37488:39:0"}],"id":2223,"name":"Block","src":"37478:56:0"}],"id":2224,"name":"FunctionDefinition","src":"37399:135:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves the bond amount of a darknode in 10^-18 REN.\n @param _darknodeID The ID of the darknode to retrieve the bond for.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodeBond","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2237,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2225,"name":"ElementaryTypeName","src":"37712:7:0"}],"id":2226,"name":"VariableDeclaration","src":"37712:19:0"}],"id":2227,"name":"ParameterList","src":"37711:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2237,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2228,"name":"ElementaryTypeName","src":"37756:7:0"}],"id":2229,"name":"VariableDeclaration","src":"37756:7:0"}],"id":2230,"name":"ParameterList","src":"37755:9:0"},{"children":[{"attributes":{"functionReturnParameters":2230},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeBond","referencedDeclaration":1542,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2231,"name":"Identifier","src":"37782:5:0"}],"id":2232,"name":"MemberAccess","src":"37782:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2226,"type":"address","value":"_darknodeID"},"id":2233,"name":"Identifier","src":"37801:11:0"}],"id":2234,"name":"FunctionCall","src":"37782:31:0"}],"id":2235,"name":"Return","src":"37775:38:0"}],"id":2236,"name":"Block","src":"37765:55:0"}],"id":2237,"name":"FunctionDefinition","src":"37687:133:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves the encryption public key of the darknode.\n @param _darknodeID The ID of the darknode to retrieve the public key for.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodePublicKey","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2250,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2238,"name":"ElementaryTypeName","src":"38007:7:0"}],"id":2239,"name":"VariableDeclaration","src":"38007:19:0"}],"id":2240,"name":"ParameterList","src":"38006:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2250,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2241,"name":"ElementaryTypeName","src":"38051:5:0"}],"id":2242,"name":"VariableDeclaration","src":"38051:5:0"}],"id":2243,"name":"ParameterList","src":"38050:7:0"},{"children":[{"attributes":{"functionReturnParameters":2243},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodePublicKey","referencedDeclaration":1587,"type":"function (address) view external returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2244,"name":"Identifier","src":"38075:5:0"}],"id":2245,"name":"MemberAccess","src":"38075:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2239,"type":"address","value":"_darknodeID"},"id":2246,"name":"Identifier","src":"38099:11:0"}],"id":2247,"name":"FunctionCall","src":"38075:36:0"}],"id":2248,"name":"Return","src":"38068:43:0"}],"id":2249,"name":"Block","src":"38058:60:0"}],"id":2250,"name":"FunctionDefinition","src":"37977:141:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves a list of darknodes which are registered for the\n current epoch.\n @param _start A darknode ID used as an offset for the list. If _start is\n        0x0, the first dark node will be used. _start won't be\n        included it is not registered for the epoch.\n @param _count The number of darknodes to retrieve starting from _start.\n        If _count is 0, all of the darknodes from _start are\n        retrieved. If _count is more than the remaining number of\n        registered darknodes, the rest of the list will contain\n        0x0s.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodes","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_start","scope":2280,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2251,"name":"ElementaryTypeName","src":"38768:7:0"}],"id":2252,"name":"VariableDeclaration","src":"38768:14:0"},{"attributes":{"constant":false,"name":"_count","scope":2280,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2253,"name":"ElementaryTypeName","src":"38784:7:0"}],"id":2254,"name":"VariableDeclaration","src":"38784:14:0"}],"id":2255,"name":"ParameterList","src":"38767:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2280,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2256,"name":"ElementaryTypeName","src":"38823:7:0"}],"id":2257,"name":"ArrayTypeName","src":"38823:9:0"}],"id":2258,"name":"VariableDeclaration","src":"38823:9:0"}],"id":2259,"name":"ParameterList","src":"38822:11:0"},{"children":[{"attributes":{"assignments":[2261]},"children":[{"attributes":{"constant":false,"name":"count","scope":2280,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2260,"name":"ElementaryTypeName","src":"38844:7:0"}],"id":2261,"name":"VariableDeclaration","src":"38844:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2254,"type":"uint256","value":"_count"},"id":2262,"name":"Identifier","src":"38860:6:0"}],"id":2263,"name":"VariableDeclarationStatement","src":"38844:22:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2261,"type":"uint256","value":"count"},"id":2264,"name":"Identifier","src":"38880:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2265,"name":"Literal","src":"38889:1:0"}],"id":2266,"name":"BinaryOperation","src":"38880:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2261,"type":"uint256","value":"count"},"id":2267,"name":"Identifier","src":"38906:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":2268,"name":"Identifier","src":"38914:12:0"}],"id":2269,"name":"Assignment","src":"38906:20:0"}],"id":2270,"name":"ExpressionStatement","src":"38906:20:0"}],"id":2271,"name":"Block","src":"38892:45:0"}],"id":2272,"name":"IfStatement","src":"38876:61:0"},{"attributes":{"functionReturnParameters":2259},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":2647,"type":"function (address,uint256,bool) view returns (address[] memory)","value":"getDarknodesFromEpochs"},"id":2273,"name":"Identifier","src":"38953:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2252,"type":"address","value":"_start"},"id":2274,"name":"Identifier","src":"38976:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2261,"type":"uint256","value":"count"},"id":2275,"name":"Identifier","src":"38984:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":2276,"name":"Literal","src":"38991:5:0"}],"id":2277,"name":"FunctionCall","src":"38953:44:0"}],"id":2278,"name":"Return","src":"38946:51:0"}],"id":2279,"name":"Block","src":"38834:170:0"}],"id":2280,"name":"FunctionDefinition","src":"38746:258:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves a list of darknodes which were registered for the\n previous epoch. See `getDarknodes` for the parameter documentation.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getPreviousDarknodes","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_start","scope":2310,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2281,"name":"ElementaryTypeName","src":"39192:7:0"}],"id":2282,"name":"VariableDeclaration","src":"39192:14:0"},{"attributes":{"constant":false,"name":"_count","scope":2310,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2283,"name":"ElementaryTypeName","src":"39208:7:0"}],"id":2284,"name":"VariableDeclaration","src":"39208:14:0"}],"id":2285,"name":"ParameterList","src":"39191:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2310,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2286,"name":"ElementaryTypeName","src":"39247:7:0"}],"id":2287,"name":"ArrayTypeName","src":"39247:9:0"}],"id":2288,"name":"VariableDeclaration","src":"39247:9:0"}],"id":2289,"name":"ParameterList","src":"39246:11:0"},{"children":[{"attributes":{"assignments":[2291]},"children":[{"attributes":{"constant":false,"name":"count","scope":2310,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2290,"name":"ElementaryTypeName","src":"39268:7:0"}],"id":2291,"name":"VariableDeclaration","src":"39268:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2284,"type":"uint256","value":"_count"},"id":2292,"name":"Identifier","src":"39284:6:0"}],"id":2293,"name":"VariableDeclarationStatement","src":"39268:22:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2291,"type":"uint256","value":"count"},"id":2294,"name":"Identifier","src":"39304:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2295,"name":"Literal","src":"39313:1:0"}],"id":2296,"name":"BinaryOperation","src":"39304:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2291,"type":"uint256","value":"count"},"id":2297,"name":"Identifier","src":"39330:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1603,"type":"uint256","value":"numDarknodesPreviousEpoch"},"id":2298,"name":"Identifier","src":"39338:25:0"}],"id":2299,"name":"Assignment","src":"39330:33:0"}],"id":2300,"name":"ExpressionStatement","src":"39330:33:0"}],"id":2301,"name":"Block","src":"39316:58:0"}],"id":2302,"name":"IfStatement","src":"39300:74:0"},{"attributes":{"functionReturnParameters":2289},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":2647,"type":"function (address,uint256,bool) view returns (address[] memory)","value":"getDarknodesFromEpochs"},"id":2303,"name":"Identifier","src":"39390:22:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2282,"type":"address","value":"_start"},"id":2304,"name":"Identifier","src":"39413:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2291,"type":"uint256","value":"count"},"id":2305,"name":"Identifier","src":"39421:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":2306,"name":"Literal","src":"39428:4:0"}],"id":2307,"name":"FunctionCall","src":"39390:43:0"}],"id":2308,"name":"Return","src":"39383:50:0"}],"id":2309,"name":"Block","src":"39258:182:0"}],"id":2310,"name":"FunctionDefinition","src":"39162:278:0"},{"attributes":{"constant":true,"documentation":"@notice Returns whether a darknode is scheduled to become registered\n at next epoch.\n @param _darknodeID The ID of the darknode to return","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isPendingRegistration","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2334,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2311,"name":"ElementaryTypeName","src":"39637:7:0"}],"id":2312,"name":"VariableDeclaration","src":"39637:19:0"}],"id":2313,"name":"ParameterList","src":"39636:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2334,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2314,"name":"ElementaryTypeName","src":"39681:4:0"}],"id":2315,"name":"VariableDeclaration","src":"39681:4:0"}],"id":2316,"name":"ParameterList","src":"39680:6:0"},{"children":[{"attributes":{"assignments":[2318]},"children":[{"attributes":{"constant":false,"name":"registeredAt","scope":2334,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2317,"name":"ElementaryTypeName","src":"39697:7:0"}],"id":2318,"name":"VariableDeclaration","src":"39697:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeRegisteredAt","referencedDeclaration":1557,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2319,"name":"Identifier","src":"39720:5:0"}],"id":2320,"name":"MemberAccess","src":"39720:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2312,"type":"address","value":"_darknodeID"},"id":2321,"name":"Identifier","src":"39747:11:0"}],"id":2322,"name":"FunctionCall","src":"39720:39:0"}],"id":2323,"name":"VariableDeclarationStatement","src":"39697:62:0"},{"attributes":{"functionReturnParameters":2316},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2318,"type":"uint256","value":"registeredAt"},"id":2324,"name":"Identifier","src":"39776:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2325,"name":"Literal","src":"39792:1:0"}],"id":2326,"name":"BinaryOperation","src":"39776:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2318,"type":"uint256","value":"registeredAt"},"id":2327,"name":"Identifier","src":"39797:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2328,"name":"Identifier","src":"39812:12:0"}],"id":2329,"name":"MemberAccess","src":"39812:24:0"}],"id":2330,"name":"BinaryOperation","src":"39797:39:0"}],"id":2331,"name":"BinaryOperation","src":"39776:60:0"}],"id":2332,"name":"Return","src":"39769:67:0"}],"id":2333,"name":"Block","src":"39687:156:0"}],"id":2334,"name":"FunctionDefinition","src":"39606:237:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the pending deregistered state. In\n this state a darknode is still considered registered.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isPendingDeregistration","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2358,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2335,"name":"ElementaryTypeName","src":"40023:7:0"}],"id":2336,"name":"VariableDeclaration","src":"40023:19:0"}],"id":2337,"name":"ParameterList","src":"40022:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2358,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2338,"name":"ElementaryTypeName","src":"40067:4:0"}],"id":2339,"name":"VariableDeclaration","src":"40067:4:0"}],"id":2340,"name":"ParameterList","src":"40066:6:0"},{"children":[{"attributes":{"assignments":[2342]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2358,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2341,"name":"ElementaryTypeName","src":"40083:7:0"}],"id":2342,"name":"VariableDeclaration","src":"40083:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2343,"name":"Identifier","src":"40108:5:0"}],"id":2344,"name":"MemberAccess","src":"40108:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2336,"type":"address","value":"_darknodeID"},"id":2345,"name":"Identifier","src":"40137:11:0"}],"id":2346,"name":"FunctionCall","src":"40108:41:0"}],"id":2347,"name":"VariableDeclarationStatement","src":"40083:66:0"},{"attributes":{"functionReturnParameters":2340},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2342,"type":"uint256","value":"deregisteredAt"},"id":2348,"name":"Identifier","src":"40166:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2349,"name":"Literal","src":"40184:1:0"}],"id":2350,"name":"BinaryOperation","src":"40166:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2342,"type":"uint256","value":"deregisteredAt"},"id":2351,"name":"Identifier","src":"40189:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2352,"name":"Identifier","src":"40206:12:0"}],"id":2353,"name":"MemberAccess","src":"40206:24:0"}],"id":2354,"name":"BinaryOperation","src":"40189:41:0"}],"id":2355,"name":"BinaryOperation","src":"40166:64:0"}],"id":2356,"name":"Return","src":"40159:71:0"}],"id":2357,"name":"Block","src":"40073:164:0"}],"id":2358,"name":"FunctionDefinition","src":"39990:247:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the deregistered state.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isDeregistered","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2382,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2359,"name":"ElementaryTypeName","src":"40335:7:0"}],"id":2360,"name":"VariableDeclaration","src":"40335:19:0"}],"id":2361,"name":"ParameterList","src":"40334:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2382,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2362,"name":"ElementaryTypeName","src":"40377:4:0"}],"id":2363,"name":"VariableDeclaration","src":"40377:4:0"}],"id":2364,"name":"ParameterList","src":"40376:6:0"},{"children":[{"attributes":{"assignments":[2366]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2382,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2365,"name":"ElementaryTypeName","src":"40393:7:0"}],"id":2366,"name":"VariableDeclaration","src":"40393:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2367,"name":"Identifier","src":"40418:5:0"}],"id":2368,"name":"MemberAccess","src":"40418:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2360,"type":"address","value":"_darknodeID"},"id":2369,"name":"Identifier","src":"40447:11:0"}],"id":2370,"name":"FunctionCall","src":"40418:41:0"}],"id":2371,"name":"VariableDeclarationStatement","src":"40393:66:0"},{"attributes":{"functionReturnParameters":2364},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2366,"type":"uint256","value":"deregisteredAt"},"id":2372,"name":"Identifier","src":"40476:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2373,"name":"Literal","src":"40494:1:0"}],"id":2374,"name":"BinaryOperation","src":"40476:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2366,"type":"uint256","value":"deregisteredAt"},"id":2375,"name":"Identifier","src":"40499:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2376,"name":"Identifier","src":"40517:12:0"}],"id":2377,"name":"MemberAccess","src":"40517:24:0"}],"id":2378,"name":"BinaryOperation","src":"40499:42:0"}],"id":2379,"name":"BinaryOperation","src":"40476:65:0"}],"id":2380,"name":"Return","src":"40469:72:0"}],"id":2381,"name":"Block","src":"40383:165:0"}],"id":2382,"name":"FunctionDefinition","src":"40311:237:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode can be deregistered. This is true if the\n darknodes is in the registered state and has not attempted to\n deregister yet.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isDeregisterable","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2405,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2383,"name":"ElementaryTypeName","src":"40753:7:0"}],"id":2384,"name":"VariableDeclaration","src":"40753:19:0"}],"id":2385,"name":"ParameterList","src":"40752:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2405,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2386,"name":"ElementaryTypeName","src":"40795:4:0"}],"id":2387,"name":"VariableDeclaration","src":"40795:4:0"}],"id":2388,"name":"ParameterList","src":"40794:6:0"},{"children":[{"attributes":{"assignments":[2390]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2405,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2389,"name":"ElementaryTypeName","src":"40811:7:0"}],"id":2390,"name":"VariableDeclaration","src":"40811:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2391,"name":"Identifier","src":"40836:5:0"}],"id":2392,"name":"MemberAccess","src":"40836:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2384,"type":"address","value":"_darknodeID"},"id":2393,"name":"Identifier","src":"40865:11:0"}],"id":2394,"name":"FunctionCall","src":"40836:41:0"}],"id":2395,"name":"VariableDeclarationStatement","src":"40811:66:0"},{"attributes":{"functionReturnParameters":2388},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2468,"type":"function (address) view returns (bool)","value":"isRegistered"},"id":2396,"name":"Identifier","src":"41050:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2384,"type":"address","value":"_darknodeID"},"id":2397,"name":"Identifier","src":"41063:11:0"}],"id":2398,"name":"FunctionCall","src":"41050:25:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2390,"type":"uint256","value":"deregisteredAt"},"id":2399,"name":"Identifier","src":"41079:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2400,"name":"Literal","src":"41097:1:0"}],"id":2401,"name":"BinaryOperation","src":"41079:19:0"}],"id":2402,"name":"BinaryOperation","src":"41050:48:0"}],"id":2403,"name":"Return","src":"41043:55:0"}],"id":2404,"name":"Block","src":"40801:304:0"}],"id":2405,"name":"FunctionDefinition","src":"40727:378:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the refunded state. This is true\n for darknodes that have never been registered, or darknodes that have\n been deregistered and refunded.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRefunded","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2435,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2406,"name":"ElementaryTypeName","src":"41326:7:0"}],"id":2407,"name":"VariableDeclaration","src":"41326:19:0"}],"id":2408,"name":"ParameterList","src":"41325:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2435,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2409,"name":"ElementaryTypeName","src":"41368:4:0"}],"id":2410,"name":"VariableDeclaration","src":"41368:4:0"}],"id":2411,"name":"ParameterList","src":"41367:6:0"},{"children":[{"attributes":{"assignments":[2413]},"children":[{"attributes":{"constant":false,"name":"registeredAt","scope":2435,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2412,"name":"ElementaryTypeName","src":"41384:7:0"}],"id":2413,"name":"VariableDeclaration","src":"41384:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeRegisteredAt","referencedDeclaration":1557,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2414,"name":"Identifier","src":"41407:5:0"}],"id":2415,"name":"MemberAccess","src":"41407:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2407,"type":"address","value":"_darknodeID"},"id":2416,"name":"Identifier","src":"41434:11:0"}],"id":2417,"name":"FunctionCall","src":"41407:39:0"}],"id":2418,"name":"VariableDeclarationStatement","src":"41384:62:0"},{"attributes":{"assignments":[2420]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2435,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2419,"name":"ElementaryTypeName","src":"41456:7:0"}],"id":2420,"name":"VariableDeclaration","src":"41456:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2421,"name":"Identifier","src":"41481:5:0"}],"id":2422,"name":"MemberAccess","src":"41481:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2407,"type":"address","value":"_darknodeID"},"id":2423,"name":"Identifier","src":"41510:11:0"}],"id":2424,"name":"FunctionCall","src":"41481:41:0"}],"id":2425,"name":"VariableDeclarationStatement","src":"41456:66:0"},{"attributes":{"functionReturnParameters":2411},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2413,"type":"uint256","value":"registeredAt"},"id":2426,"name":"Identifier","src":"41539:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2427,"name":"Literal","src":"41555:1:0"}],"id":2428,"name":"BinaryOperation","src":"41539:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2420,"type":"uint256","value":"deregisteredAt"},"id":2429,"name":"Identifier","src":"41560:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2430,"name":"Literal","src":"41578:1:0"}],"id":2431,"name":"BinaryOperation","src":"41560:19:0"}],"id":2432,"name":"BinaryOperation","src":"41539:40:0"}],"id":2433,"name":"Return","src":"41532:47:0"}],"id":2434,"name":"Block","src":"41374:212:0"}],"id":2435,"name":"FunctionDefinition","src":"41306:280:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is refundable. This is true for darknodes\n that have been in the deregistered state for one full epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRefundable","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2455,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2436,"name":"ElementaryTypeName","src":"41763:7:0"}],"id":2437,"name":"VariableDeclaration","src":"41763:19:0"}],"id":2438,"name":"ParameterList","src":"41762:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2455,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2439,"name":"ElementaryTypeName","src":"41805:4:0"}],"id":2440,"name":"VariableDeclaration","src":"41805:4:0"}],"id":2441,"name":"ParameterList","src":"41804:6:0"},{"children":[{"attributes":{"functionReturnParameters":2441},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2382,"type":"function (address) view returns (bool)","value":"isDeregistered"},"id":2442,"name":"Identifier","src":"41828:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2437,"type":"address","value":"_darknodeID"},"id":2443,"name":"Identifier","src":"41843:11:0"}],"id":2444,"name":"FunctionCall","src":"41828:27:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2445,"name":"Identifier","src":"41859:5:0"}],"id":2446,"name":"MemberAccess","src":"41859:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2437,"type":"address","value":"_darknodeID"},"id":2447,"name":"Identifier","src":"41888:11:0"}],"id":2448,"name":"FunctionCall","src":"41859:41:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":2449,"name":"Identifier","src":"41904:13:0"}],"id":2450,"name":"MemberAccess","src":"41904:25:0"}],"id":2451,"name":"BinaryOperation","src":"41859:70:0"}],"id":2452,"name":"BinaryOperation","src":"41828:101:0"}],"id":2453,"name":"Return","src":"41821:108:0"}],"id":2454,"name":"Block","src":"41811:125:0"}],"id":2455,"name":"FunctionDefinition","src":"41741:195:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode is in the registered state.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRegistered","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2468,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2456,"name":"ElementaryTypeName","src":"42030:7:0"}],"id":2457,"name":"VariableDeclaration","src":"42030:19:0"}],"id":2458,"name":"ParameterList","src":"42029:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2468,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2459,"name":"ElementaryTypeName","src":"42072:4:0"}],"id":2460,"name":"VariableDeclaration","src":"42072:4:0"}],"id":2461,"name":"ParameterList","src":"42071:6:0"},{"children":[{"attributes":{"functionReturnParameters":2461},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Epoch_$1597_storage","typeString":"struct DarknodeRegistry.Epoch storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":2531,"type":"function (address,struct DarknodeRegistry.Epoch memory) view returns (bool)","value":"isRegisteredInEpoch"},"id":2462,"name":"Identifier","src":"42095:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2457,"type":"address","value":"_darknodeID"},"id":2463,"name":"Identifier","src":"42115:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1621,"type":"struct DarknodeRegistry.Epoch storage ref","value":"currentEpoch"},"id":2464,"name":"Identifier","src":"42128:12:0"}],"id":2465,"name":"FunctionCall","src":"42095:46:0"}],"id":2466,"name":"Return","src":"42088:53:0"}],"id":2467,"name":"Block","src":"42078:70:0"}],"id":2468,"name":"FunctionDefinition","src":"42008:140:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode was in the registered state last epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRegisteredInPreviousEpoch","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2481,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2469,"name":"ElementaryTypeName","src":"42269:7:0"}],"id":2470,"name":"VariableDeclaration","src":"42269:19:0"}],"id":2471,"name":"ParameterList","src":"42268:21:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2481,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2472,"name":"ElementaryTypeName","src":"42311:4:0"}],"id":2473,"name":"VariableDeclaration","src":"42311:4:0"}],"id":2474,"name":"ParameterList","src":"42310:6:0"},{"children":[{"attributes":{"functionReturnParameters":2474},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Epoch_$1597_storage","typeString":"struct DarknodeRegistry.Epoch storage ref"}],"overloadedDeclarations":[null],"referencedDeclaration":2531,"type":"function (address,struct DarknodeRegistry.Epoch memory) view returns (bool)","value":"isRegisteredInEpoch"},"id":2475,"name":"Identifier","src":"42334:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2470,"type":"address","value":"_darknodeID"},"id":2476,"name":"Identifier","src":"42354:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1623,"type":"struct DarknodeRegistry.Epoch storage ref","value":"previousEpoch"},"id":2477,"name":"Identifier","src":"42367:13:0"}],"id":2478,"name":"FunctionCall","src":"42334:47:0"}],"id":2479,"name":"Return","src":"42327:54:0"}],"id":2480,"name":"Block","src":"42317:71:0"}],"id":2481,"name":"FunctionDefinition","src":"42232:156:0"},{"attributes":{"constant":true,"documentation":"@notice Returns if a darknode was in the registered state for a given\n epoch.\n @param _darknodeID The ID of the darknode\n @param _epoch One of currentEpoch, previousEpoch","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isRegisteredInEpoch","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_darknodeID","scope":2531,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2482,"name":"ElementaryTypeName","src":"42623:7:0"}],"id":2483,"name":"VariableDeclaration","src":"42623:19:0"},{"attributes":{"constant":false,"name":"_epoch","scope":2531,"stateVariable":false,"storageLocation":"default","type":"struct DarknodeRegistry.Epoch","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Epoch","referencedDeclaration":1597,"type":"struct DarknodeRegistry.Epoch"},"id":2484,"name":"UserDefinedTypeName","src":"42644:5:0"}],"id":2485,"name":"VariableDeclaration","src":"42644:12:0"}],"id":2486,"name":"ParameterList","src":"42622:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2531,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2487,"name":"ElementaryTypeName","src":"42680:4:0"}],"id":2488,"name":"VariableDeclaration","src":"42680:4:0"}],"id":2489,"name":"ParameterList","src":"42679:6:0"},{"children":[{"attributes":{"assignments":[2491]},"children":[{"attributes":{"constant":false,"name":"registeredAt","scope":2531,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2490,"name":"ElementaryTypeName","src":"42696:7:0"}],"id":2491,"name":"VariableDeclaration","src":"42696:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeRegisteredAt","referencedDeclaration":1557,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2492,"name":"Identifier","src":"42719:5:0"}],"id":2493,"name":"MemberAccess","src":"42719:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2483,"type":"address","value":"_darknodeID"},"id":2494,"name":"Identifier","src":"42746:11:0"}],"id":2495,"name":"FunctionCall","src":"42719:39:0"}],"id":2496,"name":"VariableDeclarationStatement","src":"42696:62:0"},{"attributes":{"assignments":[2498]},"children":[{"attributes":{"constant":false,"name":"deregisteredAt","scope":2531,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2497,"name":"ElementaryTypeName","src":"42768:7:0"}],"id":2498,"name":"VariableDeclaration","src":"42768:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"darknodeDeregisteredAt","referencedDeclaration":1572,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2499,"name":"Identifier","src":"42793:5:0"}],"id":2500,"name":"MemberAccess","src":"42793:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2483,"type":"address","value":"_darknodeID"},"id":2501,"name":"Identifier","src":"42822:11:0"}],"id":2502,"name":"FunctionCall","src":"42793:41:0"}],"id":2503,"name":"VariableDeclarationStatement","src":"42768:66:0"},{"attributes":{"assignments":[2505]},"children":[{"attributes":{"constant":false,"name":"registered","scope":2531,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2504,"name":"ElementaryTypeName","src":"42844:4:0"}],"id":2505,"name":"VariableDeclaration","src":"42844:15:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2491,"type":"uint256","value":"registeredAt"},"id":2506,"name":"Identifier","src":"42862:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2507,"name":"Literal","src":"42878:1:0"}],"id":2508,"name":"BinaryOperation","src":"42862:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2491,"type":"uint256","value":"registeredAt"},"id":2509,"name":"Identifier","src":"42883:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2485,"type":"struct DarknodeRegistry.Epoch memory","value":"_epoch"},"id":2510,"name":"Identifier","src":"42899:6:0"}],"id":2511,"name":"MemberAccess","src":"42899:18:0"}],"id":2512,"name":"BinaryOperation","src":"42883:34:0"}],"id":2513,"name":"BinaryOperation","src":"42862:55:0"}],"id":2514,"name":"VariableDeclarationStatement","src":"42844:73:0"},{"attributes":{"assignments":[2516]},"children":[{"attributes":{"constant":false,"name":"notDeregistered","scope":2531,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2515,"name":"ElementaryTypeName","src":"42927:4:0"}],"id":2516,"name":"VariableDeclaration","src":"42927:20:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"uint256","value":"deregisteredAt"},"id":2517,"name":"Identifier","src":"42950:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2518,"name":"Literal","src":"42968:1:0"}],"id":2519,"name":"BinaryOperation","src":"42950:19:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2498,"type":"uint256","value":"deregisteredAt"},"id":2520,"name":"Identifier","src":"42973:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blocknumber","referencedDeclaration":1596,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2485,"type":"struct DarknodeRegistry.Epoch memory","value":"_epoch"},"id":2521,"name":"Identifier","src":"42990:6:0"}],"id":2522,"name":"MemberAccess","src":"42990:18:0"}],"id":2523,"name":"BinaryOperation","src":"42973:35:0"}],"id":2524,"name":"BinaryOperation","src":"42950:58:0"}],"id":2525,"name":"VariableDeclarationStatement","src":"42927:81:0"},{"attributes":{"functionReturnParameters":2489},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2505,"type":"bool","value":"registered"},"id":2526,"name":"Identifier","src":"43159:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2516,"type":"bool","value":"notDeregistered"},"id":2527,"name":"Identifier","src":"43173:15:0"}],"id":2528,"name":"BinaryOperation","src":"43159:29:0"}],"id":2529,"name":"Return","src":"43152:36:0"}],"id":2530,"name":"Block","src":"42686:509:0"}],"id":2531,"name":"FunctionDefinition","src":"42594:601:0"},{"attributes":{"constant":true,"documentation":"@notice Returns a list of darknodes registered for either the current\n or the previous epoch. See `getDarknodes` for documentation on the\n parameters `_start` and `_count`.\n @param _usePreviousEpoch If true, use the previous epoch, otherwise use\n        the current epoch.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getDarknodesFromEpochs","payable":false,"scope":2648,"stateMutability":"view","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_start","scope":2647,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2532,"name":"ElementaryTypeName","src":"43542:7:0"}],"id":2533,"name":"VariableDeclaration","src":"43542:14:0"},{"attributes":{"constant":false,"name":"_count","scope":2647,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2534,"name":"ElementaryTypeName","src":"43558:7:0"}],"id":2535,"name":"VariableDeclaration","src":"43558:14:0"},{"attributes":{"constant":false,"name":"_usePreviousEpoch","scope":2647,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2536,"name":"ElementaryTypeName","src":"43574:4:0"}],"id":2537,"name":"VariableDeclaration","src":"43574:22:0"}],"id":2538,"name":"ParameterList","src":"43541:56:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2647,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2539,"name":"ElementaryTypeName","src":"43620:7:0"}],"id":2540,"name":"ArrayTypeName","src":"43620:9:0"}],"id":2541,"name":"VariableDeclaration","src":"43620:9:0"}],"id":2542,"name":"ParameterList","src":"43619:11:0"},{"children":[{"attributes":{"assignments":[2544]},"children":[{"attributes":{"constant":false,"name":"count","scope":2647,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2543,"name":"ElementaryTypeName","src":"43641:7:0"}],"id":2544,"name":"VariableDeclaration","src":"43641:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2535,"type":"uint256","value":"_count"},"id":2545,"name":"Identifier","src":"43657:6:0"}],"id":2546,"name":"VariableDeclarationStatement","src":"43641:22:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2547,"name":"Identifier","src":"43677:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2548,"name":"Literal","src":"43686:1:0"}],"id":2549,"name":"BinaryOperation","src":"43677:10:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2550,"name":"Identifier","src":"43703:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1599,"type":"uint256","value":"numDarknodes"},"id":2551,"name":"Identifier","src":"43711:12:0"}],"id":2552,"name":"Assignment","src":"43703:20:0"}],"id":2553,"name":"ExpressionStatement","src":"43703:20:0"}],"id":2554,"name":"Block","src":"43689:45:0"}],"id":2555,"name":"IfStatement","src":"43673:61:0"},{"attributes":{"assignments":[2559]},"children":[{"attributes":{"constant":false,"name":"nodes","scope":2647,"stateVariable":false,"storageLocation":"memory","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2557,"name":"ElementaryTypeName","src":"43744:7:0"}],"id":2558,"name":"ArrayTypeName","src":"43744:9:0"}],"id":2559,"name":"VariableDeclaration","src":"43744:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"function (uint256) pure returns (address[] memory)"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":2560,"name":"ElementaryTypeName","src":"43773:7:0"}],"id":2561,"name":"ArrayTypeName","src":"43773:9:0"}],"id":2562,"name":"NewExpression","src":"43769:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2563,"name":"Identifier","src":"43783:5:0"}],"id":2564,"name":"FunctionCall","src":"43769:20:0"}],"id":2565,"name":"VariableDeclarationStatement","src":"43744:45:0"},{"attributes":{"assignments":[2567]},"children":[{"attributes":{"constant":false,"name":"n","scope":2647,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2566,"name":"ElementaryTypeName","src":"43849:7:0"}],"id":2567,"name":"VariableDeclaration","src":"43849:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2568,"name":"Literal","src":"43861:1:0"}],"id":2569,"name":"VariableDeclarationStatement","src":"43849:13:0"},{"attributes":{"assignments":[2571]},"children":[{"attributes":{"constant":false,"name":"next","scope":2647,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2570,"name":"ElementaryTypeName","src":"43872:7:0"}],"id":2571,"name":"VariableDeclaration","src":"43872:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2533,"type":"address","value":"_start"},"id":2572,"name":"Identifier","src":"43887:6:0"}],"id":2573,"name":"VariableDeclarationStatement","src":"43872:21:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2574,"name":"Identifier","src":"43907:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":2575,"name":"Literal","src":"43915:3:0"}],"id":2576,"name":"BinaryOperation","src":"43907:11:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2577,"name":"Identifier","src":"43934:4:0"},{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"begin","referencedDeclaration":1403,"type":"function () view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2578,"name":"Identifier","src":"43941:5:0"}],"id":2579,"name":"MemberAccess","src":"43941:11:0"}],"id":2580,"name":"FunctionCall","src":"43941:13:0"}],"id":2581,"name":"Assignment","src":"43934:20:0"}],"id":2582,"name":"ExpressionStatement","src":"43934:20:0"}],"id":2583,"name":"Block","src":"43920:45:0"}],"id":2584,"name":"IfStatement","src":"43903:62:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2567,"type":"uint256","value":"n"},"id":2585,"name":"Identifier","src":"44052:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2544,"type":"uint256","value":"count"},"id":2586,"name":"Identifier","src":"44056:5:0"}],"id":2587,"name":"BinaryOperation","src":"44052:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2588,"name":"Identifier","src":"44081:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":2589,"name":"Literal","src":"44089:3:0"}],"id":2590,"name":"BinaryOperation","src":"44081:11:0"},{"children":[{"id":2591,"name":"Break","src":"44112:5:0"}],"id":2592,"name":"Block","src":"44094:38:0"}],"id":2593,"name":"IfStatement","src":"44077:55:0"},{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"includeNext","scope":2647,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2594,"name":"ElementaryTypeName","src":"44213:4:0"}],"id":2595,"name":"VariableDeclaration","src":"44213:16:0"}],"id":2596,"name":"VariableDeclarationStatement","src":"44213:16:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2537,"type":"bool","value":"_usePreviousEpoch"},"id":2597,"name":"Identifier","src":"44247:17:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2595,"type":"bool","value":"includeNext"},"id":2598,"name":"Identifier","src":"44284:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2481,"type":"function (address) view returns (bool)","value":"isRegisteredInPreviousEpoch"},"id":2599,"name":"Identifier","src":"44298:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2600,"name":"Identifier","src":"44326:4:0"}],"id":2601,"name":"FunctionCall","src":"44298:33:0"}],"id":2602,"name":"Assignment","src":"44284:47:0"}],"id":2603,"name":"ExpressionStatement","src":"44284:47:0"}],"id":2604,"name":"Block","src":"44266:80:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2595,"type":"bool","value":"includeNext"},"id":2605,"name":"Identifier","src":"44370:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":2468,"type":"function (address) view returns (bool)","value":"isRegistered"},"id":2606,"name":"Identifier","src":"44384:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2607,"name":"Identifier","src":"44397:4:0"}],"id":2608,"name":"FunctionCall","src":"44384:18:0"}],"id":2609,"name":"Assignment","src":"44370:32:0"}],"id":2610,"name":"ExpressionStatement","src":"44370:32:0"}],"id":2611,"name":"Block","src":"44352:65:0"}],"id":2612,"name":"IfStatement","src":"44243:174:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2595,"type":"bool","value":"includeNext"},"id":2613,"name":"Identifier","src":"44435:11:0"}],"id":2614,"name":"UnaryOperation","src":"44434:12:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2615,"name":"Identifier","src":"44466:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":1419,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2616,"name":"Identifier","src":"44473:5:0"}],"id":2617,"name":"MemberAccess","src":"44473:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2618,"name":"Identifier","src":"44484:4:0"}],"id":2619,"name":"FunctionCall","src":"44473:16:0"}],"id":2620,"name":"Assignment","src":"44466:23:0"}],"id":2621,"name":"ExpressionStatement","src":"44466:23:0"},{"id":2622,"name":"Continue","src":"44507:8:0"}],"id":2623,"name":"Block","src":"44448:82:0"}],"id":2624,"name":"IfStatement","src":"44430:100:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2559,"type":"address[] memory","value":"nodes"},"id":2625,"name":"Identifier","src":"44543:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2567,"type":"uint256","value":"n"},"id":2626,"name":"Identifier","src":"44549:1:0"}],"id":2627,"name":"IndexAccess","src":"44543:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2628,"name":"Identifier","src":"44554:4:0"}],"id":2629,"name":"Assignment","src":"44543:15:0"}],"id":2630,"name":"ExpressionStatement","src":"44543:15:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2631,"name":"Identifier","src":"44572:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"next","referencedDeclaration":1419,"type":"function (address) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":1627,"type":"contract DarknodeRegistryStore","value":"store"},"id":2632,"name":"Identifier","src":"44579:5:0"}],"id":2633,"name":"MemberAccess","src":"44579:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2571,"type":"address","value":"next"},"id":2634,"name":"Identifier","src":"44590:4:0"}],"id":2635,"name":"FunctionCall","src":"44579:16:0"}],"id":2636,"name":"Assignment","src":"44572:23:0"}],"id":2637,"name":"ExpressionStatement","src":"44572:23:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2567,"type":"uint256","value":"n"},"id":2638,"name":"Identifier","src":"44609:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2639,"name":"Literal","src":"44614:1:0"}],"id":2640,"name":"Assignment","src":"44609:6:0"}],"id":2641,"name":"ExpressionStatement","src":"44609:6:0"}],"id":2642,"name":"Block","src":"44063:563:0"}],"id":2643,"name":"WhileStatement","src":"44045:581:0"},{"attributes":{"functionReturnParameters":2542},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2559,"type":"address[] memory","value":"nodes"},"id":2644,"name":"Identifier","src":"44642:5:0"}],"id":2645,"name":"Return","src":"44635:12:0"}],"id":2646,"name":"Block","src":"43631:1023:0"}],"id":2647,"name":"FunctionDefinition","src":"43510:1144:0"}],"id":2648,"name":"ContractDefinition","src":"24066:20590:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@notice The BrokerVerifier interface defines the functions that a settlement\n layer's broker verifier contract must implement.","fullyImplemented":false,"linearizedBaseContracts":[2660],"name":"BrokerVerifier","scope":4018},"children":[{"attributes":{"body":null,"constant":false,"documentation":"@notice The function signature that will be called when a trader opens\n an order.\n\n    /// @param _trader The trader requesting the withdrawal.\n @param _signature The 65-byte signature from the broker.\n @param _orderID The 32-byte order ID.","implemented":false,"isConstructor":false,"modifiers":[null],"name":"verifyOpenSignature","payable":false,"scope":2660,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_trader","scope":2659,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2649,"name":"ElementaryTypeName","src":"45139:7:0"}],"id":2650,"name":"VariableDeclaration","src":"45139:15:0"},{"attributes":{"constant":false,"name":"_signature","scope":2659,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2651,"name":"ElementaryTypeName","src":"45164:5:0"}],"id":2652,"name":"VariableDeclaration","src":"45164:16:0"},{"attributes":{"constant":false,"name":"_orderID","scope":2659,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2653,"name":"ElementaryTypeName","src":"45190:7:0"}],"id":2654,"name":"VariableDeclaration","src":"45190:16:0"}],"id":2655,"name":"ParameterList","src":"45129:83:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2659,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2656,"name":"ElementaryTypeName","src":"45231:4:0"}],"id":2657,"name":"VariableDeclaration","src":"45231:4:0"}],"id":2658,"name":"ParameterList","src":"45230:6:0"}],"id":2659,"name":"FunctionDefinition","src":"45101:136:0"}],"id":2660,"name":"ContractDefinition","src":"44792:447:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@notice The Settlement interface defines the functions that a settlement\n layer must implement.\n Docs: https://github.com/republicprotocol/republic-sol/blob/nightly/docs/05-settlement.md","fullyImplemented":false,"linearizedBaseContracts":[2695],"name":"Settlement","scope":4018},"children":[{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"submitOrder","payable":false,"scope":2695,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_details","scope":2675,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2661,"name":"ElementaryTypeName","src":"45495:5:0"}],"id":2662,"name":"VariableDeclaration","src":"45495:14:0"},{"attributes":{"constant":false,"name":"_settlementID","scope":2675,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2663,"name":"ElementaryTypeName","src":"45519:6:0"}],"id":2664,"name":"VariableDeclaration","src":"45519:20:0"},{"attributes":{"constant":false,"name":"_tokens","scope":2675,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2665,"name":"ElementaryTypeName","src":"45549:6:0"}],"id":2666,"name":"VariableDeclaration","src":"45549:14:0"},{"attributes":{"constant":false,"name":"_price","scope":2675,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2667,"name":"ElementaryTypeName","src":"45573:7:0"}],"id":2668,"name":"VariableDeclaration","src":"45573:14:0"},{"attributes":{"constant":false,"name":"_volume","scope":2675,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2669,"name":"ElementaryTypeName","src":"45597:7:0"}],"id":2670,"name":"VariableDeclaration","src":"45597:15:0"},{"attributes":{"constant":false,"name":"_minimumVolume","scope":2675,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2671,"name":"ElementaryTypeName","src":"45622:7:0"}],"id":2672,"name":"VariableDeclaration","src":"45622:22:0"}],"id":2673,"name":"ParameterList","src":"45485:165:0"},{"attributes":{"parameters":[null]},"children":[],"id":2674,"name":"ParameterList","src":"45659:0:0"}],"id":2675,"name":"FunctionDefinition","src":"45465:195:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"submissionGasPriceLimit","payable":false,"scope":2695,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":2676,"name":"ParameterList","src":"45698:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2680,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2677,"name":"ElementaryTypeName","src":"45724:7:0"}],"id":2678,"name":"VariableDeclaration","src":"45724:7:0"}],"id":2679,"name":"ParameterList","src":"45723:9:0"}],"id":2680,"name":"FunctionDefinition","src":"45666:67:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"settle","payable":false,"scope":2695,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_buyID","scope":2687,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2681,"name":"ElementaryTypeName","src":"45764:7:0"}],"id":2682,"name":"VariableDeclaration","src":"45764:14:0"},{"attributes":{"constant":false,"name":"_sellID","scope":2687,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2683,"name":"ElementaryTypeName","src":"45788:7:0"}],"id":2684,"name":"VariableDeclaration","src":"45788:15:0"}],"id":2685,"name":"ParameterList","src":"45754:55:0"},{"attributes":{"parameters":[null]},"children":[],"id":2686,"name":"ParameterList","src":"45818:0:0"}],"id":2687,"name":"FunctionDefinition","src":"45739:80:0"},{"attributes":{"body":null,"constant":true,"documentation":"@notice orderStatus should return the status of the order, which should\n be:\n     0  - Order not seen before\n     1  - Order details submitted\n     >1 - Order settled, or settlement no longer possible","implemented":false,"isConstructor":false,"modifiers":[null],"name":"orderStatus","payable":false,"scope":2695,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":2694,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2688,"name":"ElementaryTypeName","src":"46083:7:0"}],"id":2689,"name":"VariableDeclaration","src":"46083:16:0"}],"id":2690,"name":"ParameterList","src":"46082:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2694,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":2691,"name":"ElementaryTypeName","src":"46124:5:0"}],"id":2692,"name":"VariableDeclaration","src":"46124:5:0"}],"id":2693,"name":"ParameterList","src":"46123:7:0"}],"id":2694,"name":"FunctionDefinition","src":"46062:69:0"}],"id":2695,"name":"ContractDefinition","src":"45438:695:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice SettlementRegistry allows a Settlement layer to register the\n contracts used for match settlement and for broker signature verification.","fullyImplemented":true,"linearizedBaseContracts":[2850,85],"name":"SettlementRegistry","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":2696,"name":"UserDefinedTypeName","src":"46318:7:0"}],"id":2697,"name":"InheritanceSpecifier","src":"46318:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":2850,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":2698,"name":"ElementaryTypeName","src":"46332:6:0"}],"id":2699,"name":"VariableDeclaration","src":"46332:21:0"},{"attributes":{"canonicalName":"SettlementRegistry.SettlementDetails","name":"SettlementDetails","scope":2850,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"registered","scope":2706,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2700,"name":"ElementaryTypeName","src":"46436:4:0"}],"id":2701,"name":"VariableDeclaration","src":"46436:15:0"},{"attributes":{"constant":false,"name":"settlementContract","scope":2706,"stateVariable":false,"storageLocation":"default","type":"contract Settlement","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Settlement","referencedDeclaration":2695,"type":"contract Settlement"},"id":2702,"name":"UserDefinedTypeName","src":"46461:10:0"}],"id":2703,"name":"VariableDeclaration","src":"46461:29:0"},{"attributes":{"constant":false,"name":"brokerVerifierContract","scope":2706,"stateVariable":false,"storageLocation":"default","type":"contract BrokerVerifier","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"BrokerVerifier","referencedDeclaration":2660,"type":"contract BrokerVerifier"},"id":2704,"name":"UserDefinedTypeName","src":"46500:14:0"}],"id":2705,"name":"VariableDeclaration","src":"46500:37:0"}],"id":2706,"name":"StructDefinition","src":"46401:143:0"},{"attributes":{"constant":false,"name":"settlementDetails","scope":2850,"stateVariable":true,"storageLocation":"default","type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails)"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2707,"name":"ElementaryTypeName","src":"46608:6:0"},{"attributes":{"contractScope":null,"name":"SettlementDetails","referencedDeclaration":2706,"type":"struct SettlementRegistry.SettlementDetails"},"id":2708,"name":"UserDefinedTypeName","src":"46618:17:0"}],"id":2709,"name":"Mapping","src":"46600:36:0"}],"id":2710,"name":"VariableDeclaration","src":"46600:61:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogSettlementRegistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"settlementID","scope":2718,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2711,"name":"ElementaryTypeName","src":"46712:6:0"}],"id":2712,"name":"VariableDeclaration","src":"46712:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"settlementContract","scope":2718,"stateVariable":false,"storageLocation":"default","type":"contract Settlement","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Settlement","referencedDeclaration":2695,"type":"contract Settlement"},"id":2713,"name":"UserDefinedTypeName","src":"46733:10:0"}],"id":2714,"name":"VariableDeclaration","src":"46733:29:0"},{"attributes":{"constant":false,"indexed":false,"name":"brokerVerifierContract","scope":2718,"stateVariable":false,"storageLocation":"default","type":"contract BrokerVerifier","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"BrokerVerifier","referencedDeclaration":2660,"type":"contract BrokerVerifier"},"id":2715,"name":"UserDefinedTypeName","src":"46764:14:0"}],"id":2716,"name":"VariableDeclaration","src":"46764:37:0"}],"id":2717,"name":"ParameterList","src":"46711:91:0"}],"id":2718,"name":"EventDefinition","src":"46682:121:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogSettlementUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"settlementID","scope":2726,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2719,"name":"ElementaryTypeName","src":"46835:6:0"}],"id":2720,"name":"VariableDeclaration","src":"46835:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"settlementContract","scope":2726,"stateVariable":false,"storageLocation":"default","type":"contract Settlement","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Settlement","referencedDeclaration":2695,"type":"contract Settlement"},"id":2721,"name":"UserDefinedTypeName","src":"46856:10:0"}],"id":2722,"name":"VariableDeclaration","src":"46856:29:0"},{"attributes":{"constant":false,"indexed":false,"name":"brokerVerifierContract","scope":2726,"stateVariable":false,"storageLocation":"default","type":"contract BrokerVerifier","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"BrokerVerifier","referencedDeclaration":2660,"type":"contract BrokerVerifier"},"id":2723,"name":"UserDefinedTypeName","src":"46887:14:0"}],"id":2724,"name":"VariableDeclaration","src":"46887:37:0"}],"id":2725,"name":"ParameterList","src":"46834:91:0"}],"id":2726,"name":"EventDefinition","src":"46808:118:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogSettlementDeregistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"settlementID","scope":2730,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2727,"name":"ElementaryTypeName","src":"46963:6:0"}],"id":2728,"name":"VariableDeclaration","src":"46963:19:0"}],"id":2729,"name":"ParameterList","src":"46962:21:0"}],"id":2730,"name":"EventDefinition","src":"46931:53:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":2850,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":2740,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":2731,"name":"ElementaryTypeName","src":"47116:6:0"}],"id":2732,"name":"VariableDeclaration","src":"47116:15:0"}],"id":2733,"name":"ParameterList","src":"47115:17:0"},{"attributes":{"parameters":[null]},"children":[],"id":2734,"name":"ParameterList","src":"47140:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2699,"type":"string storage ref","value":"VERSION"},"id":2735,"name":"Identifier","src":"47150:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2732,"type":"string memory","value":"_VERSION"},"id":2736,"name":"Identifier","src":"47160:8:0"}],"id":2737,"name":"Assignment","src":"47150:18:0"}],"id":2738,"name":"ExpressionStatement","src":"47150:18:0"}],"id":2739,"name":"Block","src":"47140:35:0"}],"id":2740,"name":"FunctionDefinition","src":"47104:71:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the settlement contract of a settlement layer.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"settlementRegistration","payable":false,"scope":2850,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_settlementID","scope":2753,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2741,"name":"ElementaryTypeName","src":"47284:6:0"}],"id":2742,"name":"VariableDeclaration","src":"47284:20:0"}],"id":2743,"name":"ParameterList","src":"47283:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2753,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2744,"name":"ElementaryTypeName","src":"47329:4:0"}],"id":2745,"name":"VariableDeclaration","src":"47329:4:0"}],"id":2746,"name":"ParameterList","src":"47328:6:0"},{"children":[{"attributes":{"functionReturnParameters":2746},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"registered","referencedDeclaration":2701,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2710,"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails storage ref)","value":"settlementDetails"},"id":2747,"name":"Identifier","src":"47352:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2742,"type":"uint64","value":"_settlementID"},"id":2748,"name":"Identifier","src":"47370:13:0"}],"id":2749,"name":"IndexAccess","src":"47352:32:0"}],"id":2750,"name":"MemberAccess","src":"47352:43:0"}],"id":2751,"name":"Return","src":"47345:50:0"}],"id":2752,"name":"Block","src":"47335:67:0"}],"id":2753,"name":"FunctionDefinition","src":"47252:150:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the settlement contract of a settlement layer.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"settlementContract","payable":false,"scope":2850,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_settlementID","scope":2766,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2754,"name":"ElementaryTypeName","src":"47507:6:0"}],"id":2755,"name":"VariableDeclaration","src":"47507:20:0"}],"id":2756,"name":"ParameterList","src":"47506:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2766,"stateVariable":false,"storageLocation":"default","type":"contract Settlement","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Settlement","referencedDeclaration":2695,"type":"contract Settlement"},"id":2757,"name":"UserDefinedTypeName","src":"47552:10:0"}],"id":2758,"name":"VariableDeclaration","src":"47552:10:0"}],"id":2759,"name":"ParameterList","src":"47551:12:0"},{"children":[{"attributes":{"functionReturnParameters":2759},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"settlementContract","referencedDeclaration":2703,"type":"contract Settlement"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2710,"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails storage ref)","value":"settlementDetails"},"id":2760,"name":"Identifier","src":"47581:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2755,"type":"uint64","value":"_settlementID"},"id":2761,"name":"Identifier","src":"47599:13:0"}],"id":2762,"name":"IndexAccess","src":"47581:32:0"}],"id":2763,"name":"MemberAccess","src":"47581:51:0"}],"id":2764,"name":"Return","src":"47574:58:0"}],"id":2765,"name":"Block","src":"47564:75:0"}],"id":2766,"name":"FunctionDefinition","src":"47479:160:0"},{"attributes":{"constant":true,"documentation":"@notice Returns the broker verifier contract of a settlement layer.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"brokerVerifierContract","payable":false,"scope":2850,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_settlementID","scope":2779,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2767,"name":"ElementaryTypeName","src":"47753:6:0"}],"id":2768,"name":"VariableDeclaration","src":"47753:20:0"}],"id":2769,"name":"ParameterList","src":"47752:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2779,"stateVariable":false,"storageLocation":"default","type":"contract BrokerVerifier","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"BrokerVerifier","referencedDeclaration":2660,"type":"contract BrokerVerifier"},"id":2770,"name":"UserDefinedTypeName","src":"47798:14:0"}],"id":2771,"name":"VariableDeclaration","src":"47798:14:0"}],"id":2772,"name":"ParameterList","src":"47797:16:0"},{"children":[{"attributes":{"functionReturnParameters":2772},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"brokerVerifierContract","referencedDeclaration":2705,"type":"contract BrokerVerifier"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2710,"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails storage ref)","value":"settlementDetails"},"id":2773,"name":"Identifier","src":"47831:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2768,"type":"uint64","value":"_settlementID"},"id":2774,"name":"Identifier","src":"47849:13:0"}],"id":2775,"name":"IndexAccess","src":"47831:32:0"}],"id":2776,"name":"MemberAccess","src":"47831:55:0"}],"id":2777,"name":"Return","src":"47824:62:0"}],"id":2778,"name":"Block","src":"47814:79:0"}],"id":2779,"name":"FunctionDefinition","src":"47721:172:0"},{"attributes":{"constant":false,"documentation":"@param _settlementID A unique 64-bit settlement identifier.\n @param _settlementContract The address to use for settling matches.\n @param _brokerVerifierContract The decimals to use for verifying\n        broker signatures.","implemented":true,"isConstructor":false,"name":"registerSettlement","payable":false,"scope":2850,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_settlementID","scope":2824,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2780,"name":"ElementaryTypeName","src":"48178:6:0"}],"id":2781,"name":"VariableDeclaration","src":"48178:20:0"},{"attributes":{"constant":false,"name":"_settlementContract","scope":2824,"stateVariable":false,"storageLocation":"default","type":"contract Settlement","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Settlement","referencedDeclaration":2695,"type":"contract Settlement"},"id":2782,"name":"UserDefinedTypeName","src":"48200:10:0"}],"id":2783,"name":"VariableDeclaration","src":"48200:30:0"},{"attributes":{"constant":false,"name":"_brokerVerifierContract","scope":2824,"stateVariable":false,"storageLocation":"default","type":"contract BrokerVerifier","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"BrokerVerifier","referencedDeclaration":2660,"type":"contract BrokerVerifier"},"id":2784,"name":"UserDefinedTypeName","src":"48232:14:0"}],"id":2785,"name":"VariableDeclaration","src":"48232:38:0"}],"id":2786,"name":"ParameterList","src":"48177:94:0"},{"attributes":{"parameters":[null]},"children":[],"id":2789,"name":"ParameterList","src":"48289:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2787,"name":"Identifier","src":"48279:9:0"}],"id":2788,"name":"ModifierInvocation","src":"48279:9:0"},{"children":[{"attributes":{"assignments":[2791]},"children":[{"attributes":{"constant":false,"name":"alreadyRegistered","scope":2824,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":2790,"name":"ElementaryTypeName","src":"48299:4:0"}],"id":2791,"name":"VariableDeclaration","src":"48299:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"registered","referencedDeclaration":2701,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2710,"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails storage ref)","value":"settlementDetails"},"id":2792,"name":"Identifier","src":"48324:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2781,"type":"uint64","value":"_settlementID"},"id":2793,"name":"Identifier","src":"48342:13:0"}],"id":2794,"name":"IndexAccess","src":"48324:32:0"}],"id":2795,"name":"MemberAccess","src":"48324:43:0"}],"id":2796,"name":"VariableDeclarationStatement","src":"48299:68:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2710,"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails storage ref)","value":"settlementDetails"},"id":2797,"name":"Identifier","src":"48386:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2781,"type":"uint64","value":"_settlementID"},"id":2798,"name":"Identifier","src":"48404:13:0"}],"id":2799,"name":"IndexAccess","src":"48386:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["registered","settlementContract","brokerVerifierContract"],"type":"struct SettlementRegistry.SettlementDetails memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2706,"type":"type(struct SettlementRegistry.SettlementDetails storage pointer)","value":"SettlementDetails"},"id":2800,"name":"Identifier","src":"48421:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":2801,"name":"Literal","src":"48465:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2783,"type":"contract Settlement","value":"_settlementContract"},"id":2802,"name":"Identifier","src":"48503:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2785,"type":"contract BrokerVerifier","value":"_brokerVerifierContract"},"id":2803,"name":"Identifier","src":"48560:23:0"}],"id":2804,"name":"FunctionCall","src":"48421:173:0"}],"id":2805,"name":"Assignment","src":"48386:208:0"}],"id":2806,"name":"ExpressionStatement","src":"48386:208:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2791,"type":"bool","value":"alreadyRegistered"},"id":2807,"name":"Identifier","src":"48609:17:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_contract$_Settlement_$2695","typeString":"contract Settlement"},{"typeIdentifier":"t_contract$_BrokerVerifier_$2660","typeString":"contract BrokerVerifier"}],"overloadedDeclarations":[null],"referencedDeclaration":2726,"type":"function (uint64,contract Settlement,contract BrokerVerifier)","value":"LogSettlementUpdated"},"id":2808,"name":"Identifier","src":"48647:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2781,"type":"uint64","value":"_settlementID"},"id":2809,"name":"Identifier","src":"48668:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2783,"type":"contract Settlement","value":"_settlementContract"},"id":2810,"name":"Identifier","src":"48683:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2785,"type":"contract BrokerVerifier","value":"_brokerVerifierContract"},"id":2811,"name":"Identifier","src":"48704:23:0"}],"id":2812,"name":"FunctionCall","src":"48647:81:0"}],"id":2813,"name":"EmitStatement","src":"48642:86:0"}],"id":2814,"name":"Block","src":"48628:111:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_contract$_Settlement_$2695","typeString":"contract Settlement"},{"typeIdentifier":"t_contract$_BrokerVerifier_$2660","typeString":"contract BrokerVerifier"}],"overloadedDeclarations":[null],"referencedDeclaration":2718,"type":"function (uint64,contract Settlement,contract BrokerVerifier)","value":"LogSettlementRegistered"},"id":2815,"name":"Identifier","src":"48764:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2781,"type":"uint64","value":"_settlementID"},"id":2816,"name":"Identifier","src":"48788:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2783,"type":"contract Settlement","value":"_settlementContract"},"id":2817,"name":"Identifier","src":"48803:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2785,"type":"contract BrokerVerifier","value":"_brokerVerifierContract"},"id":2818,"name":"Identifier","src":"48824:23:0"}],"id":2819,"name":"FunctionCall","src":"48764:84:0"}],"id":2820,"name":"EmitStatement","src":"48759:89:0"}],"id":2821,"name":"Block","src":"48745:114:0"}],"id":2822,"name":"IfStatement","src":"48605:254:0"}],"id":2823,"name":"Block","src":"48289:576:0"}],"id":2824,"name":"FunctionDefinition","src":"48150:715:0"},{"attributes":{"constant":false,"documentation":"@notice Deregisteres a settlement layer, clearing the details.\n @param _settlementID The unique 64-bit settlement identifier.","implemented":true,"isConstructor":false,"name":"deregisterSettlement","payable":false,"scope":2850,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_settlementID","scope":2849,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":2825,"name":"ElementaryTypeName","src":"49042:6:0"}],"id":2826,"name":"VariableDeclaration","src":"49042:20:0"}],"id":2827,"name":"ParameterList","src":"49041:22:0"},{"attributes":{"parameters":[null]},"children":[],"id":2830,"name":"ParameterList","src":"49083:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":2828,"name":"Identifier","src":"49073:9:0"}],"id":2829,"name":"ModifierInvocation","src":"49073:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3702327996ec2a6b8532bb63662aa41abef64ecdf936c6cb160e2627d70540dd","typeString":"literal_string \"not registered\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":2831,"name":"Identifier","src":"49093:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"registered","referencedDeclaration":2701,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2710,"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails storage ref)","value":"settlementDetails"},"id":2832,"name":"Identifier","src":"49101:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2826,"type":"uint64","value":"_settlementID"},"id":2833,"name":"Identifier","src":"49119:13:0"}],"id":2834,"name":"IndexAccess","src":"49101:32:0"}],"id":2835,"name":"MemberAccess","src":"49101:43:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f742072656769737465726564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not registered\"","value":"not registered"},"id":2836,"name":"Literal","src":"49146:16:0"}],"id":2837,"name":"FunctionCall","src":"49093:70:0"}],"id":2838,"name":"ExpressionStatement","src":"49093:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"delete","prefix":true,"type":"tuple()"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct SettlementRegistry.SettlementDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2710,"type":"mapping(uint64 => struct SettlementRegistry.SettlementDetails storage ref)","value":"settlementDetails"},"id":2839,"name":"Identifier","src":"49181:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2826,"type":"uint64","value":"_settlementID"},"id":2840,"name":"Identifier","src":"49199:13:0"}],"id":2841,"name":"IndexAccess","src":"49181:32:0"}],"id":2842,"name":"UnaryOperation","src":"49174:39:0"}],"id":2843,"name":"ExpressionStatement","src":"49174:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"overloadedDeclarations":[null],"referencedDeclaration":2730,"type":"function (uint64)","value":"LogSettlementDeregistered"},"id":2844,"name":"Identifier","src":"49229:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2826,"type":"uint64","value":"_settlementID"},"id":2845,"name":"Identifier","src":"49255:13:0"}],"id":2846,"name":"FunctionCall","src":"49229:40:0"}],"id":2847,"name":"EmitStatement","src":"49224:45:0"}],"id":2848,"name":"Block","src":"49083:193:0"}],"id":2849,"name":"FunctionDefinition","src":"49012:264:0"}],"id":2850,"name":"ContractDefinition","src":"46287:2991:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Eliptic curve signature operations\n@dev Based on https://gist.github.com/axic/5b33912c6f61ae6fd96d6c4a47afde6d\nTODO Remove this library once solidity supports passing a signature to ecrecover.\nSee https://github.com/ethereum/solidity/issues/864","fullyImplemented":true,"linearizedBaseContracts":[2929],"name":"ECRecovery","scope":4018},"children":[{"attributes":{"constant":true,"documentation":"@dev Recover signer address from a message by using their signature\n@param hash bytes32 message, the hash is the signed message. What is recovered is the signer address.\n@param sig bytes signature, the signature is generated using web3.eth.sign()","implemented":true,"isConstructor":false,"modifiers":[null],"name":"recover","payable":false,"scope":2929,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"hash","scope":2912,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2851,"name":"ElementaryTypeName","src":"49868:7:0"}],"id":2852,"name":"VariableDeclaration","src":"49868:12:0"},{"attributes":{"constant":false,"name":"sig","scope":2912,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2853,"name":"ElementaryTypeName","src":"49882:5:0"}],"id":2854,"name":"VariableDeclaration","src":"49882:9:0"}],"id":2855,"name":"ParameterList","src":"49867:25:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2912,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":2856,"name":"ElementaryTypeName","src":"49928:7:0"}],"id":2857,"name":"VariableDeclaration","src":"49928:7:0"}],"id":2858,"name":"ParameterList","src":"49927:9:0"},{"children":[{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"r","scope":2912,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2859,"name":"ElementaryTypeName","src":"49945:7:0"}],"id":2860,"name":"VariableDeclaration","src":"49945:9:0"}],"id":2861,"name":"VariableDeclarationStatement","src":"49945:9:0"},{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"s","scope":2912,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2862,"name":"ElementaryTypeName","src":"49960:7:0"}],"id":2863,"name":"VariableDeclaration","src":"49960:9:0"}],"id":2864,"name":"VariableDeclarationStatement","src":"49960:9:0"},{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"v","scope":2912,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":2865,"name":"ElementaryTypeName","src":"49975:5:0"}],"id":2866,"name":"VariableDeclaration","src":"49975:7:0"}],"id":2867,"name":"VariableDeclarationStatement","src":"49975:7:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2854,"type":"bytes memory","value":"sig"},"id":2868,"name":"Identifier","src":"50027:3:0"}],"id":2869,"name":"MemberAccess","src":"50027:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3635","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 65","value":"65"},"id":2870,"name":"Literal","src":"50041:2:0"}],"id":2871,"name":"BinaryOperation","src":"50027:16:0"},{"children":[{"attributes":{"functionReturnParameters":2858},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":2872,"name":"ElementaryTypeNameExpression","src":"50061:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2873,"name":"Literal","src":"50069:1:0"}],"id":2874,"name":"FunctionCall","src":"50061:10:0"}],"id":2875,"name":"TupleExpression","src":"50060:12:0"}],"id":2876,"name":"Return","src":"50053:19:0"}],"id":2877,"name":"Block","src":"50045:34:0"}],"id":2878,"name":"IfStatement","src":"50023:56:0"},{"attributes":{"externalReferences":[{"r":{"declaration":2860,"isOffset":false,"isSlot":false,"src":"50329:1:0","valueSize":1}},{"v":{"declaration":2866,"isOffset":false,"isSlot":false,"src":"50391:1:0","valueSize":1}},{"sig":{"declaration":2854,"isOffset":false,"isSlot":false,"src":"50344:3:0","valueSize":1}},{"s":{"declaration":2863,"isOffset":false,"isSlot":false,"src":"50360:1:0","valueSize":1}},{"sig":{"declaration":2854,"isOffset":false,"isSlot":false,"src":"50375:3:0","valueSize":1}},{"sig":{"declaration":2854,"isOffset":false,"isSlot":false,"src":"50414:3:0","valueSize":1}}],"operations":"{\n    r := mload(add(sig, 32))\n    s := mload(add(sig, 64))\n    v := byte(0, mload(add(sig, 96)))\n}"},"children":[],"id":2879,"name":"InlineAssembly","src":"50312:213:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"uint8","value":"v"},"id":2880,"name":"Identifier","src":"50527:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3237","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 27","value":"27"},"id":2881,"name":"Literal","src":"50531:2:0"}],"id":2882,"name":"BinaryOperation","src":"50527:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"uint8","value":"v"},"id":2883,"name":"Identifier","src":"50543:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3237","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 27","value":"27"},"id":2884,"name":"Literal","src":"50548:2:0"}],"id":2885,"name":"Assignment","src":"50543:7:0"}],"id":2886,"name":"ExpressionStatement","src":"50543:7:0"}],"id":2887,"name":"Block","src":"50535:22:0"}],"id":2888,"name":"IfStatement","src":"50523:34:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"uint8","value":"v"},"id":2889,"name":"Identifier","src":"50626:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3237","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 27","value":"27"},"id":2890,"name":"Literal","src":"50631:2:0"}],"id":2891,"name":"BinaryOperation","src":"50626:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"uint8","value":"v"},"id":2892,"name":"Identifier","src":"50637:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3238","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 28","value":"28"},"id":2893,"name":"Literal","src":"50642:2:0"}],"id":2894,"name":"BinaryOperation","src":"50637:7:0"}],"id":2895,"name":"BinaryOperation","src":"50626:18:0"},{"children":[{"attributes":{"functionReturnParameters":2858},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":2896,"name":"ElementaryTypeNameExpression","src":"50662:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2897,"name":"Literal","src":"50670:1:0"}],"id":2898,"name":"FunctionCall","src":"50662:10:0"}],"id":2899,"name":"TupleExpression","src":"50661:12:0"}],"id":2900,"name":"Return","src":"50654:19:0"}],"id":2901,"name":"Block","src":"50646:34:0"},{"children":[{"attributes":{"functionReturnParameters":2858},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":4024,"type":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)","value":"ecrecover"},"id":2902,"name":"Identifier","src":"50748:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2852,"type":"bytes32","value":"hash"},"id":2903,"name":"Identifier","src":"50758:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2866,"type":"uint8","value":"v"},"id":2904,"name":"Identifier","src":"50764:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2860,"type":"bytes32","value":"r"},"id":2905,"name":"Identifier","src":"50767:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2863,"type":"bytes32","value":"s"},"id":2906,"name":"Identifier","src":"50770:1:0"}],"id":2907,"name":"FunctionCall","src":"50748:24:0"}],"id":2908,"name":"Return","src":"50741:31:0"}],"id":2909,"name":"Block","src":"50686:93:0"}],"id":2910,"name":"IfStatement","src":"50622:157:0"}],"id":2911,"name":"Block","src":"49939:844:0"}],"id":2912,"name":"FunctionDefinition","src":"49851:932:0"},{"attributes":{"constant":true,"documentation":"toEthSignedMessageHash\n@dev prefix a bytes32 value with \"\\x19Ethereum Signed Message:\"\nand hash the result","implemented":true,"isConstructor":false,"modifiers":[null],"name":"toEthSignedMessageHash","payable":false,"scope":2929,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"hash","scope":2928,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2913,"name":"ElementaryTypeName","src":"50953:7:0"}],"id":2914,"name":"VariableDeclaration","src":"50953:12:0"}],"id":2915,"name":"ParameterList","src":"50952:14:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":2928,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2916,"name":"ElementaryTypeName","src":"51002:7:0"}],"id":2917,"name":"VariableDeclaration","src":"51002:7:0"}],"id":2918,"name":"ParameterList","src":"51001:9:0"},{"children":[{"attributes":{"functionReturnParameters":2918},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":4026,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":2919,"name":"Identifier","src":"51112:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string \"\u0019Ethereum Signed Message:\n32\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4019,"type":"abi","value":"abi"},"id":2920,"name":"Identifier","src":"51129:3:0"}],"id":2921,"name":"MemberAccess","src":"51129:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"19457468657265756d205369676e6564204d6573736167653a0a3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"\u0019Ethereum Signed Message:\n32\"","value":"\u0019Ethereum Signed Message:\n32"},"id":2922,"name":"Literal","src":"51146:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2914,"type":"bytes32","value":"hash"},"id":2923,"name":"Identifier","src":"51182:4:0"}],"id":2924,"name":"FunctionCall","src":"51129:58:0"}],"id":2925,"name":"FunctionCall","src":"51112:81:0"}],"id":2926,"name":"Return","src":"51105:88:0"}],"id":2927,"name":"Block","src":"51013:185:0"}],"id":2928,"name":"FunctionDefinition","src":"50921:277:0"}],"id":2929,"name":"ContractDefinition","src":"49553:1647:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[3050],"name":"Utils","scope":4018},"children":[{"attributes":{"constant":true,"documentation":"@notice Converts a number to its string/bytes representation\n     * @param _v the uint to convert","implemented":true,"isConstructor":false,"modifiers":[null],"name":"uintToBytes","payable":false,"scope":3050,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_v","scope":3011,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2930,"name":"ElementaryTypeName","src":"51372:7:0"}],"id":2931,"name":"VariableDeclaration","src":"51372:10:0"}],"id":2932,"name":"ParameterList","src":"51371:12:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3011,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2933,"name":"ElementaryTypeName","src":"51407:5:0"}],"id":2934,"name":"VariableDeclaration","src":"51407:5:0"}],"id":2935,"name":"ParameterList","src":"51406:7:0"},{"children":[{"attributes":{"assignments":[2937]},"children":[{"attributes":{"constant":false,"name":"v","scope":3011,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2936,"name":"ElementaryTypeName","src":"51424:7:0"}],"id":2937,"name":"VariableDeclaration","src":"51424:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2931,"type":"uint256","value":"_v"},"id":2938,"name":"Identifier","src":"51436:2:0"}],"id":2939,"name":"VariableDeclarationStatement","src":"51424:14:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2937,"type":"uint256","value":"v"},"id":2940,"name":"Identifier","src":"51452:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2941,"name":"Literal","src":"51457:1:0"}],"id":2942,"name":"BinaryOperation","src":"51452:6:0"},{"children":[{"attributes":{"functionReturnParameters":2935},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"0\"","value":"0"},"id":2943,"name":"Literal","src":"51481:3:0"}],"id":2944,"name":"Return","src":"51474:10:0"}],"id":2945,"name":"Block","src":"51460:35:0"}],"id":2946,"name":"IfStatement","src":"51448:47:0"},{"attributes":{"assignments":[2948]},"children":[{"attributes":{"constant":false,"name":"digits","scope":3011,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2947,"name":"ElementaryTypeName","src":"51505:7:0"}],"id":2948,"name":"VariableDeclaration","src":"51505:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2949,"name":"Literal","src":"51522:1:0"}],"id":2950,"name":"VariableDeclarationStatement","src":"51505:18:0"},{"attributes":{"assignments":[2952]},"children":[{"attributes":{"constant":false,"name":"v2","scope":3011,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2951,"name":"ElementaryTypeName","src":"51533:7:0"}],"id":2952,"name":"VariableDeclaration","src":"51533:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2937,"type":"uint256","value":"v"},"id":2953,"name":"Identifier","src":"51546:1:0"}],"id":2954,"name":"VariableDeclarationStatement","src":"51533:14:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2952,"type":"uint256","value":"v2"},"id":2955,"name":"Identifier","src":"51564:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2956,"name":"Literal","src":"51569:1:0"}],"id":2957,"name":"BinaryOperation","src":"51564:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2952,"type":"uint256","value":"v2"},"id":2958,"name":"Identifier","src":"51586:2:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":2959,"name":"Literal","src":"51592:2:0"}],"id":2960,"name":"Assignment","src":"51586:8:0"}],"id":2961,"name":"ExpressionStatement","src":"51586:8:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2948,"type":"uint256","value":"digits"},"id":2962,"name":"Identifier","src":"51608:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2963,"name":"Literal","src":"51618:1:0"}],"id":2964,"name":"Assignment","src":"51608:11:0"}],"id":2965,"name":"ExpressionStatement","src":"51608:11:0"}],"id":2966,"name":"Block","src":"51572:58:0"}],"id":2967,"name":"WhileStatement","src":"51557:73:0"},{"attributes":{"assignments":[2969]},"children":[{"attributes":{"constant":false,"name":"result","scope":3011,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2968,"name":"ElementaryTypeName","src":"51640:5:0"}],"id":2969,"name":"VariableDeclaration","src":"51640:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"function (uint256) pure returns (bytes memory)"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2970,"name":"ElementaryTypeName","src":"51666:5:0"}],"id":2971,"name":"NewExpression","src":"51662:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2948,"type":"uint256","value":"digits"},"id":2972,"name":"Identifier","src":"51672:6:0"}],"id":2973,"name":"FunctionCall","src":"51662:17:0"}],"id":2974,"name":"VariableDeclarationStatement","src":"51640:39:0"},{"children":[{"attributes":{"assignments":[2976]},"children":[{"attributes":{"constant":false,"name":"i","scope":3011,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2975,"name":"ElementaryTypeName","src":"51695:7:0"}],"id":2976,"name":"VariableDeclaration","src":"51695:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":2977,"name":"Literal","src":"51707:1:0"}],"id":2978,"name":"VariableDeclarationStatement","src":"51695:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2976,"type":"uint256","value":"i"},"id":2979,"name":"Identifier","src":"51710:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2948,"type":"uint256","value":"digits"},"id":2980,"name":"Identifier","src":"51714:6:0"}],"id":2981,"name":"BinaryOperation","src":"51710:10:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2976,"type":"uint256","value":"i"},"id":2982,"name":"Identifier","src":"51722:1:0"}],"id":2983,"name":"UnaryOperation","src":"51722:3:0"}],"id":2984,"name":"ExpressionStatement","src":"51722:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bytes1"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2969,"type":"bytes memory","value":"result"},"id":2985,"name":"Identifier","src":"51741:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2948,"type":"uint256","value":"digits"},"id":2986,"name":"Identifier","src":"51748:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2976,"type":"uint256","value":"i"},"id":2987,"name":"Identifier","src":"51757:1:0"}],"id":2988,"name":"BinaryOperation","src":"51748:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":2989,"name":"Literal","src":"51761:1:0"}],"id":2990,"name":"BinaryOperation","src":"51748:14:0"}],"id":2991,"name":"IndexAccess","src":"51741:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes1","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(bytes1)","value":"bytes1"},"id":2992,"name":"ElementaryTypeNameExpression","src":"51766:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2937,"type":"uint256","value":"v"},"id":2993,"name":"Identifier","src":"51774:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":2994,"name":"Literal","src":"51778:2:0"}],"id":2995,"name":"BinaryOperation","src":"51774:6:0"}],"id":2996,"name":"TupleExpression","src":"51773:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3438","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 48","value":"48"},"id":2997,"name":"Literal","src":"51784:2:0"}],"id":2998,"name":"BinaryOperation","src":"51773:13:0"}],"id":2999,"name":"FunctionCall","src":"51766:21:0"}],"id":3000,"name":"Assignment","src":"51741:46:0"}],"id":3001,"name":"ExpressionStatement","src":"51741:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2937,"type":"uint256","value":"v"},"id":3002,"name":"Identifier","src":"51801:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3130","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 10","value":"10"},"id":3003,"name":"Literal","src":"51806:2:0"}],"id":3004,"name":"Assignment","src":"51801:7:0"}],"id":3005,"name":"ExpressionStatement","src":"51801:7:0"}],"id":3006,"name":"Block","src":"51727:92:0"}],"id":3007,"name":"ForStatement","src":"51690:129:0"},{"attributes":{"functionReturnParameters":2935},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2969,"type":"bytes memory","value":"result"},"id":3008,"name":"Identifier","src":"51836:6:0"}],"id":3009,"name":"Return","src":"51829:13:0"}],"id":3010,"name":"Block","src":"51414:435:0"}],"id":3011,"name":"FunctionDefinition","src":"51351:498:0"},{"attributes":{"constant":true,"documentation":"@notice Retrieves the address from a signature\n     * @param _hash the message that was signed (any length of bytes)\n@param _signature the signature (65 bytes)","implemented":true,"isConstructor":false,"modifiers":[null],"name":"addr","payable":false,"scope":3050,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_hash","scope":3049,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3012,"name":"ElementaryTypeName","src":"52066:5:0"}],"id":3013,"name":"VariableDeclaration","src":"52066:11:0"},{"attributes":{"constant":false,"name":"_signature","scope":3049,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3014,"name":"ElementaryTypeName","src":"52079:5:0"}],"id":3015,"name":"VariableDeclaration","src":"52079:16:0"}],"id":3016,"name":"ParameterList","src":"52065:31:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3049,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3017,"name":"ElementaryTypeName","src":"52120:7:0"}],"id":3018,"name":"VariableDeclaration","src":"52120:7:0"}],"id":3019,"name":"ParameterList","src":"52119:9:0"},{"children":[{"attributes":{"assignments":[3021]},"children":[{"attributes":{"constant":false,"name":"prefix","scope":3049,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3020,"name":"ElementaryTypeName","src":"52139:5:0"}],"id":3021,"name":"VariableDeclaration","src":"52139:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"19457468657265756d205369676e6564204d6573736167653a0a","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"\u0019Ethereum Signed Message:\n\"","value":"\u0019Ethereum Signed Message:\n"},"id":3022,"name":"Literal","src":"52161:32:0"}],"id":3023,"name":"VariableDeclarationStatement","src":"52139:54:0"},{"attributes":{"assignments":[3025]},"children":[{"attributes":{"constant":false,"name":"encoded","scope":3049,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3024,"name":"ElementaryTypeName","src":"52203:5:0"}],"id":3025,"name":"VariableDeclaration","src":"52203:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4019,"type":"abi","value":"abi"},"id":3026,"name":"Identifier","src":"52226:3:0"}],"id":3027,"name":"MemberAccess","src":"52226:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3021,"type":"bytes memory","value":"prefix"},"id":3028,"name":"Identifier","src":"52243:6:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":3011,"type":"function (uint256) pure returns (bytes memory)","value":"uintToBytes"},"id":3029,"name":"Identifier","src":"52251:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3013,"type":"bytes memory","value":"_hash"},"id":3030,"name":"Identifier","src":"52263:5:0"}],"id":3031,"name":"MemberAccess","src":"52263:12:0"}],"id":3032,"name":"FunctionCall","src":"52251:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3013,"type":"bytes memory","value":"_hash"},"id":3033,"name":"Identifier","src":"52278:5:0"}],"id":3034,"name":"FunctionCall","src":"52226:58:0"}],"id":3035,"name":"VariableDeclarationStatement","src":"52203:81:0"},{"attributes":{"assignments":[3037]},"children":[{"attributes":{"constant":false,"name":"prefixedHash","scope":3049,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3036,"name":"ElementaryTypeName","src":"52294:7:0"}],"id":3037,"name":"VariableDeclaration","src":"52294:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":4026,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":3038,"name":"Identifier","src":"52317:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3025,"type":"bytes memory","value":"encoded"},"id":3039,"name":"Identifier","src":"52327:7:0"}],"id":3040,"name":"FunctionCall","src":"52317:18:0"}],"id":3041,"name":"VariableDeclarationStatement","src":"52294:41:0"},{"attributes":{"functionReturnParameters":3019},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"recover","referencedDeclaration":2912,"type":"function (bytes32,bytes memory) pure returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":2929,"type":"type(library ECRecovery)","value":"ECRecovery"},"id":3042,"name":"Identifier","src":"52353:10:0"}],"id":3043,"name":"MemberAccess","src":"52353:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3037,"type":"bytes32","value":"prefixedHash"},"id":3044,"name":"Identifier","src":"52372:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3015,"type":"bytes memory","value":"_signature"},"id":3045,"name":"Identifier","src":"52386:10:0"}],"id":3046,"name":"FunctionCall","src":"52353:44:0"}],"id":3047,"name":"Return","src":"52346:51:0"}],"id":3048,"name":"Block","src":"52129:275:0"}],"id":3049,"name":"FunctionDefinition","src":"52052:352:0"}],"id":3050,"name":"ContractDefinition","src":"51202:1205:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice The Orderbook contract stores the state and priority of orders and\n allows the Darknodes to easily reach consensus. Eventually, this contract\n will only store a subset of order states, such as cancellation, to improve\n the throughput of orders.","fullyImplemented":true,"linearizedBaseContracts":[3632,85],"name":"Orderbook","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":3051,"name":"UserDefinedTypeName","src":"52697:7:0"}],"id":3052,"name":"InheritanceSpecifier","src":"52697:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":3632,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":3053,"name":"ElementaryTypeName","src":"52711:6:0"}],"id":3054,"name":"VariableDeclaration","src":"52711:21:0"},{"attributes":{"canonicalName":"Orderbook.OrderState","name":"OrderState"},"children":[{"attributes":{"name":"Undefined"},"id":3055,"name":"EnumValue","src":"52919:9:0"},{"attributes":{"name":"Open"},"id":3056,"name":"EnumValue","src":"52930:4:0"},{"attributes":{"name":"Confirmed"},"id":3057,"name":"EnumValue","src":"52936:9:0"},{"attributes":{"name":"Canceled"},"id":3058,"name":"EnumValue","src":"52947:8:0"}],"id":3059,"name":"EnumDefinition","src":"52902:54:0"},{"attributes":{"canonicalName":"Orderbook.Order","name":"Order","scope":3632,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"state","scope":3074,"stateVariable":false,"storageLocation":"default","type":"enum Orderbook.OrderState","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"OrderState","referencedDeclaration":3059,"type":"enum Orderbook.OrderState"},"id":3060,"name":"UserDefinedTypeName","src":"53068:10:0"}],"id":3061,"name":"VariableDeclaration","src":"53068:16:0"},{"attributes":{"constant":false,"name":"trader","scope":3074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3062,"name":"ElementaryTypeName","src":"53120:7:0"}],"id":3063,"name":"VariableDeclaration","src":"53120:14:0"},{"attributes":{"constant":false,"name":"confirmer","scope":3074,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3064,"name":"ElementaryTypeName","src":"53180:7:0"}],"id":3065,"name":"VariableDeclaration","src":"53180:17:0"},{"attributes":{"constant":false,"name":"settlementID","scope":3074,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3066,"name":"ElementaryTypeName","src":"53258:6:0"}],"id":3067,"name":"VariableDeclaration","src":"53258:19:0"},{"attributes":{"constant":false,"name":"priority","scope":3074,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3068,"name":"ElementaryTypeName","src":"53336:7:0"}],"id":3069,"name":"VariableDeclaration","src":"53336:16:0"},{"attributes":{"constant":false,"name":"blockNumber","scope":3074,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3070,"name":"ElementaryTypeName","src":"53405:7:0"}],"id":3071,"name":"VariableDeclaration","src":"53405:19:0"},{"attributes":{"constant":false,"name":"matchedOrder","scope":3074,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3072,"name":"ElementaryTypeName","src":"53483:7:0"}],"id":3073,"name":"VariableDeclaration","src":"53483:20:0"}],"id":3074,"name":"StructDefinition","src":"53045:511:0"},{"attributes":{"constant":false,"name":"ren","scope":3632,"stateVariable":true,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":3075,"name":"UserDefinedTypeName","src":"53562:13:0"}],"id":3076,"name":"VariableDeclaration","src":"53562:24:0"},{"attributes":{"constant":false,"name":"darknodeRegistry","scope":3632,"stateVariable":true,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":3077,"name":"UserDefinedTypeName","src":"53592:16:0"}],"id":3078,"name":"VariableDeclaration","src":"53592:40:0"},{"attributes":{"constant":false,"name":"settlementRegistry","scope":3632,"stateVariable":true,"storageLocation":"default","type":"contract SettlementRegistry","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"SettlementRegistry","referencedDeclaration":2850,"type":"contract SettlementRegistry"},"id":3079,"name":"UserDefinedTypeName","src":"53638:18:0"}],"id":3080,"name":"VariableDeclaration","src":"53638:44:0"},{"attributes":{"constant":false,"name":"orderbook","scope":3632,"stateVariable":true,"storageLocation":"default","type":"bytes32[]","value":null,"visibility":"private"},"children":[{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3081,"name":"ElementaryTypeName","src":"53689:7:0"}],"id":3082,"name":"ArrayTypeName","src":"53689:9:0"}],"id":3083,"name":"VariableDeclaration","src":"53689:27:0"},{"attributes":{"constant":false,"name":"orders","scope":3632,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => struct Orderbook.Order)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => struct Orderbook.Order)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3084,"name":"ElementaryTypeName","src":"53882:7:0"},{"attributes":{"contractScope":null,"name":"Order","referencedDeclaration":3074,"type":"struct Orderbook.Order"},"id":3085,"name":"UserDefinedTypeName","src":"53893:5:0"}],"id":3086,"name":"Mapping","src":"53874:25:0"}],"id":3087,"name":"VariableDeclaration","src":"53874:39:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogFeeUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousFee","scope":3093,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3088,"name":"ElementaryTypeName","src":"53940:7:0"}],"id":3089,"name":"VariableDeclaration","src":"53940:19:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextFee","scope":3093,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3090,"name":"ElementaryTypeName","src":"53961:7:0"}],"id":3091,"name":"VariableDeclaration","src":"53961:15:0"}],"id":3092,"name":"ParameterList","src":"53939:38:0"}],"id":3093,"name":"EventDefinition","src":"53920:58:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogDarknodeRegistryUpdated"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"previousDarknodeRegistry","scope":3099,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":3094,"name":"UserDefinedTypeName","src":"54016:16:0"}],"id":3095,"name":"VariableDeclaration","src":"54016:41:0"},{"attributes":{"constant":false,"indexed":false,"name":"nextDarknodeRegistry","scope":3099,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":3096,"name":"UserDefinedTypeName","src":"54059:16:0"}],"id":3097,"name":"VariableDeclaration","src":"54059:37:0"}],"id":3098,"name":"ParameterList","src":"54015:82:0"}],"id":3099,"name":"EventDefinition","src":"53983:115:0"},{"attributes":{"documentation":"@notice Only allow registered dark nodes.","name":"onlyDarknode","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_sender","scope":3115,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3100,"name":"ElementaryTypeName","src":"54176:7:0"}],"id":3101,"name":"VariableDeclaration","src":"54176:15:0"}],"id":3102,"name":"ParameterList","src":"54175:17:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d41d1b2e8b0a2e9bfcfb5712e63095b354641b3333fe0d72c6575ea6ee663279","typeString":"literal_string \"must be registered darknode\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3103,"name":"Identifier","src":"54203:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"isRegistered","referencedDeclaration":2468,"type":"function (address) view external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3078,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":3104,"name":"Identifier","src":"54211:16:0"}],"id":3105,"name":"MemberAccess","src":"54211:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":3106,"name":"ElementaryTypeNameExpression","src":"54241:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3101,"type":"address","value":"_sender"},"id":3107,"name":"Identifier","src":"54249:7:0"}],"id":3108,"name":"FunctionCall","src":"54241:16:0"}],"id":3109,"name":"FunctionCall","src":"54211:47:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d7573742062652072656769737465726564206461726b6e6f6465","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be registered darknode\"","value":"must be registered darknode"},"id":3110,"name":"Literal","src":"54260:29:0"}],"id":3111,"name":"FunctionCall","src":"54203:87:0"}],"id":3112,"name":"ExpressionStatement","src":"54203:87:0"},{"id":3113,"name":"PlaceholderStatement","src":"54300:1:0"}],"id":3114,"name":"Block","src":"54193:115:0"}],"id":3115,"name":"ModifierDefinition","src":"54154:154:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.\n @param _renAddress The address of the RepublicToken contract.\n @param _darknodeRegistry The address of the DarknodeRegistry contract.\n @param _settlementRegistry The address of the SettlementRegistry\n        contract.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":3632,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":3143,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":3116,"name":"ElementaryTypeName","src":"54696:6:0"}],"id":3117,"name":"VariableDeclaration","src":"54696:15:0"},{"attributes":{"constant":false,"name":"_renAddress","scope":3143,"stateVariable":false,"storageLocation":"default","type":"contract RepublicToken","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"RepublicToken","referencedDeclaration":891,"type":"contract RepublicToken"},"id":3118,"name":"UserDefinedTypeName","src":"54721:13:0"}],"id":3119,"name":"VariableDeclaration","src":"54721:25:0"},{"attributes":{"constant":false,"name":"_darknodeRegistry","scope":3143,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":3120,"name":"UserDefinedTypeName","src":"54756:16:0"}],"id":3121,"name":"VariableDeclaration","src":"54756:34:0"},{"attributes":{"constant":false,"name":"_settlementRegistry","scope":3143,"stateVariable":false,"storageLocation":"default","type":"contract SettlementRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"SettlementRegistry","referencedDeclaration":2850,"type":"contract SettlementRegistry"},"id":3122,"name":"UserDefinedTypeName","src":"54800:18:0"}],"id":3123,"name":"VariableDeclaration","src":"54800:38:0"}],"id":3124,"name":"ParameterList","src":"54686:158:0"},{"attributes":{"parameters":[null]},"children":[],"id":3125,"name":"ParameterList","src":"54852:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3054,"type":"string storage ref","value":"VERSION"},"id":3126,"name":"Identifier","src":"54862:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3117,"type":"string memory","value":"_VERSION"},"id":3127,"name":"Identifier","src":"54872:8:0"}],"id":3128,"name":"Assignment","src":"54862:18:0"}],"id":3129,"name":"ExpressionStatement","src":"54862:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract RepublicToken"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3076,"type":"contract RepublicToken","value":"ren"},"id":3130,"name":"Identifier","src":"54890:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3119,"type":"contract RepublicToken","value":"_renAddress"},"id":3131,"name":"Identifier","src":"54896:11:0"}],"id":3132,"name":"Assignment","src":"54890:17:0"}],"id":3133,"name":"ExpressionStatement","src":"54890:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract DarknodeRegistry"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3078,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":3134,"name":"Identifier","src":"54917:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3121,"type":"contract DarknodeRegistry","value":"_darknodeRegistry"},"id":3135,"name":"Identifier","src":"54936:17:0"}],"id":3136,"name":"Assignment","src":"54917:36:0"}],"id":3137,"name":"ExpressionStatement","src":"54917:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract SettlementRegistry"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3080,"type":"contract SettlementRegistry","value":"settlementRegistry"},"id":3138,"name":"Identifier","src":"54963:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3123,"type":"contract SettlementRegistry","value":"_settlementRegistry"},"id":3139,"name":"Identifier","src":"54984:19:0"}],"id":3140,"name":"Assignment","src":"54963:40:0"}],"id":3141,"name":"ExpressionStatement","src":"54963:40:0"}],"id":3142,"name":"Block","src":"54852:158:0"}],"id":3143,"name":"FunctionDefinition","src":"54675:335:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the owner to update the address of the DarknodeRegistry\n contract.","implemented":true,"isConstructor":false,"name":"updateDarknodeRegistry","payable":false,"scope":3632,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newDarknodeRegistry","scope":3160,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":3144,"name":"UserDefinedTypeName","src":"55145:16:0"}],"id":3145,"name":"VariableDeclaration","src":"55145:37:0"}],"id":3146,"name":"ParameterList","src":"55144:39:0"},{"attributes":{"parameters":[null]},"children":[],"id":3149,"name":"ParameterList","src":"55203:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":3147,"name":"Identifier","src":"55193:9:0"}],"id":3148,"name":"ModifierInvocation","src":"55193:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_DarknodeRegistry_$2648","typeString":"contract DarknodeRegistry"},{"typeIdentifier":"t_contract$_DarknodeRegistry_$2648","typeString":"contract DarknodeRegistry"}],"overloadedDeclarations":[null],"referencedDeclaration":3099,"type":"function (contract DarknodeRegistry,contract DarknodeRegistry)","value":"LogDarknodeRegistryUpdated"},"id":3150,"name":"Identifier","src":"55218:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3078,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":3151,"name":"Identifier","src":"55245:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3145,"type":"contract DarknodeRegistry","value":"_newDarknodeRegistry"},"id":3152,"name":"Identifier","src":"55263:20:0"}],"id":3153,"name":"FunctionCall","src":"55218:66:0"}],"id":3154,"name":"EmitStatement","src":"55213:71:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract DarknodeRegistry"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3078,"type":"contract DarknodeRegistry","value":"darknodeRegistry"},"id":3155,"name":"Identifier","src":"55294:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3145,"type":"contract DarknodeRegistry","value":"_newDarknodeRegistry"},"id":3156,"name":"Identifier","src":"55313:20:0"}],"id":3157,"name":"Assignment","src":"55294:39:0"}],"id":3158,"name":"ExpressionStatement","src":"55294:39:0"}],"id":3159,"name":"Block","src":"55203:137:0"}],"id":3160,"name":"FunctionDefinition","src":"55113:227:0"},{"attributes":{"constant":false,"documentation":"@notice Open an order in the orderbook. The order must be in the\n Undefined state.\n\n    /// @param _signature Signature of the message that defines the trader. The\n        message is \"Republic Protocol: open: {orderId}\".\n @param _orderID The hash of the order.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"openOrder","payable":false,"scope":3632,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_settlementID","scope":3236,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3161,"name":"ElementaryTypeName","src":"55662:6:0"}],"id":3162,"name":"VariableDeclaration","src":"55662:20:0"},{"attributes":{"constant":false,"name":"_signature","scope":3236,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3163,"name":"ElementaryTypeName","src":"55684:5:0"}],"id":3164,"name":"VariableDeclaration","src":"55684:16:0"},{"attributes":{"constant":false,"name":"_orderID","scope":3236,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3165,"name":"ElementaryTypeName","src":"55702:7:0"}],"id":3166,"name":"VariableDeclaration","src":"55702:16:0"}],"id":3167,"name":"ParameterList","src":"55661:58:0"},{"attributes":{"parameters":[null]},"children":[],"id":3168,"name":"ParameterList","src":"55729:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a8b9f65c5a1406de240ab444e91aa075a0404433d3971ad5cabe4071b3d8b8f","typeString":"literal_string \"invalid order status\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3169,"name":"Identifier","src":"55739:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_OrderState_$3059","typeString":"enum Orderbook.OrderState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3170,"name":"Identifier","src":"55747:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3166,"type":"bytes32","value":"_orderID"},"id":3171,"name":"Identifier","src":"55754:8:0"}],"id":3172,"name":"IndexAccess","src":"55747:16:0"}],"id":3173,"name":"MemberAccess","src":"55747:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Undefined","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3174,"name":"Identifier","src":"55773:10:0"}],"id":3175,"name":"MemberAccess","src":"55773:20:0"}],"id":3176,"name":"BinaryOperation","src":"55747:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e76616c6964206f7264657220737461747573","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"invalid order status\"","value":"invalid order status"},"id":3177,"name":"Literal","src":"55795:22:0"}],"id":3178,"name":"FunctionCall","src":"55739:79:0"}],"id":3179,"name":"ExpressionStatement","src":"55739:79:0"},{"attributes":{"assignments":[3181]},"children":[{"attributes":{"constant":false,"name":"trader","scope":3236,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3180,"name":"ElementaryTypeName","src":"55829:7:0"}],"id":3181,"name":"VariableDeclaration","src":"55829:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3182,"name":"Identifier","src":"55846:3:0"}],"id":3183,"name":"MemberAccess","src":"55846:10:0"}],"id":3184,"name":"VariableDeclarationStatement","src":"55829:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f28a1f498574f7f940961587099aa215ab555012bb96255521b22580ad222bfd","typeString":"literal_string \"settlement not registered\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3185,"name":"Identifier","src":"55905:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"settlementRegistration","referencedDeclaration":2753,"type":"function (uint64) view external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3080,"type":"contract SettlementRegistry","value":"settlementRegistry"},"id":3186,"name":"Identifier","src":"55913:18:0"}],"id":3187,"name":"MemberAccess","src":"55913:41:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3162,"type":"uint64","value":"_settlementID"},"id":3188,"name":"Identifier","src":"55955:13:0"}],"id":3189,"name":"FunctionCall","src":"55913:56:0"},{"attributes":{"argumentTypes":null,"hexvalue":"736574746c656d656e74206e6f742072656769737465726564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"settlement not registered\"","value":"settlement not registered"},"id":3190,"name":"Literal","src":"55971:27:0"}],"id":3191,"name":"FunctionCall","src":"55905:94:0"}],"id":3192,"name":"ExpressionStatement","src":"55905:94:0"},{"attributes":{"assignments":[3194]},"children":[{"attributes":{"constant":false,"name":"brokerVerifier","scope":3236,"stateVariable":false,"storageLocation":"default","type":"contract BrokerVerifier","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"BrokerVerifier","referencedDeclaration":2660,"type":"contract BrokerVerifier"},"id":3193,"name":"UserDefinedTypeName","src":"56009:14:0"}],"id":3194,"name":"VariableDeclaration","src":"56009:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract BrokerVerifier","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"brokerVerifierContract","referencedDeclaration":2779,"type":"function (uint64) view external returns (contract BrokerVerifier)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3080,"type":"contract SettlementRegistry","value":"settlementRegistry"},"id":3195,"name":"Identifier","src":"56041:18:0"}],"id":3196,"name":"MemberAccess","src":"56041:41:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3162,"type":"uint64","value":"_settlementID"},"id":3197,"name":"Identifier","src":"56083:13:0"}],"id":3198,"name":"FunctionCall","src":"56041:56:0"}],"id":3199,"name":"VariableDeclarationStatement","src":"56009:88:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4418ff807beec487366e8318f91b8670be934991e6f2c24f0039cfd473ba72d4","typeString":"literal_string \"invalid broker signature\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3200,"name":"Identifier","src":"56107:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"verifyOpenSignature","referencedDeclaration":2659,"type":"function (address,bytes memory,bytes32) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3194,"type":"contract BrokerVerifier","value":"brokerVerifier"},"id":3201,"name":"Identifier","src":"56115:14:0"}],"id":3202,"name":"MemberAccess","src":"56115:34:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3181,"type":"address","value":"trader"},"id":3203,"name":"Identifier","src":"56150:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3164,"type":"bytes calldata","value":"_signature"},"id":3204,"name":"Identifier","src":"56158:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3166,"type":"bytes32","value":"_orderID"},"id":3205,"name":"Identifier","src":"56170:8:0"}],"id":3206,"name":"FunctionCall","src":"56115:64:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e76616c69642062726f6b6572207369676e6174757265","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"invalid broker signature\"","value":"invalid broker signature"},"id":3207,"name":"Literal","src":"56181:26:0"}],"id":3208,"name":"FunctionCall","src":"56107:101:0"}],"id":3209,"name":"ExpressionStatement","src":"56107:101:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3210,"name":"Identifier","src":"56219:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3166,"type":"bytes32","value":"_orderID"},"id":3211,"name":"Identifier","src":"56226:8:0"}],"id":3212,"name":"IndexAccess","src":"56219:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["state","trader","confirmer","settlementID","priority","blockNumber","matchedOrder"],"type":"struct Orderbook.Order memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3074,"type":"type(struct Orderbook.Order storage pointer)","value":"Order"},"id":3213,"name":"Identifier","src":"56238:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3214,"name":"Identifier","src":"56265:10:0"}],"id":3215,"name":"MemberAccess","src":"56265:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3181,"type":"address","value":"trader"},"id":3216,"name":"Identifier","src":"56302:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":3217,"name":"Literal","src":"56333:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3162,"type":"uint64","value":"_settlementID"},"id":3218,"name":"Identifier","src":"56364:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3083,"type":"bytes32[] storage ref","value":"orderbook"},"id":3219,"name":"Identifier","src":"56401:9:0"}],"id":3220,"name":"MemberAccess","src":"56401:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3221,"name":"Literal","src":"56420:1:0"}],"id":3222,"name":"BinaryOperation","src":"56401:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":3223,"name":"Identifier","src":"56448:5:0"}],"id":3224,"name":"MemberAccess","src":"56448:12:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":3225,"name":"Literal","src":"56488:3:0"}],"id":3226,"name":"FunctionCall","src":"56238:264:0"}],"id":3227,"name":"Assignment","src":"56219:283:0"}],"id":3228,"name":"ExpressionStatement","src":"56219:283:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (bytes32) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3083,"type":"bytes32[] storage ref","value":"orderbook"},"id":3229,"name":"Identifier","src":"56513:9:0"}],"id":3231,"name":"MemberAccess","src":"56513:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3166,"type":"bytes32","value":"_orderID"},"id":3232,"name":"Identifier","src":"56528:8:0"}],"id":3233,"name":"FunctionCall","src":"56513:24:0"}],"id":3234,"name":"ExpressionStatement","src":"56513:24:0"}],"id":3235,"name":"Block","src":"55729:815:0"}],"id":3236,"name":"FunctionDefinition","src":"55643:901:0"},{"attributes":{"constant":false,"documentation":"@notice Confirm an order match between orders. The confirmer must be a\n registered Darknode and the orders must be in the Open state. A\n malicious confirmation by a Darknode will result in a bond slash of the\n Darknode.\n\n    /// @param _orderID The hash of the order.\n @param _matchedOrderID The hashes of the matching order.","implemented":true,"isConstructor":false,"name":"confirmOrder","payable":false,"scope":3632,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3332,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3237,"name":"ElementaryTypeName","src":"56941:7:0"}],"id":3238,"name":"VariableDeclaration","src":"56941:16:0"},{"attributes":{"constant":false,"name":"_matchedOrderID","scope":3332,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3239,"name":"ElementaryTypeName","src":"56959:7:0"}],"id":3240,"name":"VariableDeclaration","src":"56959:23:0"}],"id":3241,"name":"ParameterList","src":"56940:43:0"},{"attributes":{"parameters":[null]},"children":[],"id":3246,"name":"ParameterList","src":"57018:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3115,"type":"modifier (address)","value":"onlyDarknode"},"id":3242,"name":"Identifier","src":"56993:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3243,"name":"Identifier","src":"57006:3:0"}],"id":3244,"name":"MemberAccess","src":"57006:10:0"}],"id":3245,"name":"ModifierInvocation","src":"56993:24:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a8b9f65c5a1406de240ab444e91aa075a0404433d3971ad5cabe4071b3d8b8f","typeString":"literal_string \"invalid order status\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3247,"name":"Identifier","src":"57028:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_OrderState_$3059","typeString":"enum Orderbook.OrderState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3248,"name":"Identifier","src":"57036:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3238,"type":"bytes32","value":"_orderID"},"id":3249,"name":"Identifier","src":"57043:8:0"}],"id":3250,"name":"IndexAccess","src":"57036:16:0"}],"id":3251,"name":"MemberAccess","src":"57036:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3252,"name":"Identifier","src":"57062:10:0"}],"id":3253,"name":"MemberAccess","src":"57062:15:0"}],"id":3254,"name":"BinaryOperation","src":"57036:41:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e76616c6964206f7264657220737461747573","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"invalid order status\"","value":"invalid order status"},"id":3255,"name":"Literal","src":"57079:22:0"}],"id":3256,"name":"FunctionCall","src":"57028:74:0"}],"id":3257,"name":"ExpressionStatement","src":"57028:74:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a8b9f65c5a1406de240ab444e91aa075a0404433d3971ad5cabe4071b3d8b8f","typeString":"literal_string \"invalid order status\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3258,"name":"Identifier","src":"57112:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_OrderState_$3059","typeString":"enum Orderbook.OrderState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3259,"name":"Identifier","src":"57120:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3240,"type":"bytes32","value":"_matchedOrderID"},"id":3260,"name":"Identifier","src":"57127:15:0"}],"id":3261,"name":"IndexAccess","src":"57120:23:0"}],"id":3262,"name":"MemberAccess","src":"57120:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3263,"name":"Identifier","src":"57153:10:0"}],"id":3264,"name":"MemberAccess","src":"57153:15:0"}],"id":3265,"name":"BinaryOperation","src":"57120:48:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e76616c6964206f7264657220737461747573","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"invalid order status\"","value":"invalid order status"},"id":3266,"name":"Literal","src":"57170:22:0"}],"id":3267,"name":"FunctionCall","src":"57112:81:0"}],"id":3268,"name":"ExpressionStatement","src":"57112:81:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3269,"name":"Identifier","src":"57204:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3238,"type":"bytes32","value":"_orderID"},"id":3270,"name":"Identifier","src":"57211:8:0"}],"id":3271,"name":"IndexAccess","src":"57204:16:0"}],"id":3272,"name":"MemberAccess","src":"57204:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Confirmed","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3273,"name":"Identifier","src":"57229:10:0"}],"id":3274,"name":"MemberAccess","src":"57229:20:0"}],"id":3275,"name":"Assignment","src":"57204:45:0"}],"id":3276,"name":"ExpressionStatement","src":"57204:45:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"confirmer","referencedDeclaration":3065,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3277,"name":"Identifier","src":"57259:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3238,"type":"bytes32","value":"_orderID"},"id":3278,"name":"Identifier","src":"57266:8:0"}],"id":3279,"name":"IndexAccess","src":"57259:16:0"}],"id":3280,"name":"MemberAccess","src":"57259:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3281,"name":"Identifier","src":"57288:3:0"}],"id":3282,"name":"MemberAccess","src":"57288:10:0"}],"id":3283,"name":"Assignment","src":"57259:39:0"}],"id":3284,"name":"ExpressionStatement","src":"57259:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"matchedOrder","referencedDeclaration":3073,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3285,"name":"Identifier","src":"57308:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3238,"type":"bytes32","value":"_orderID"},"id":3286,"name":"Identifier","src":"57315:8:0"}],"id":3287,"name":"IndexAccess","src":"57308:16:0"}],"id":3288,"name":"MemberAccess","src":"57308:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3240,"type":"bytes32","value":"_matchedOrderID"},"id":3289,"name":"Identifier","src":"57340:15:0"}],"id":3290,"name":"Assignment","src":"57308:47:0"}],"id":3291,"name":"ExpressionStatement","src":"57308:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"blockNumber","referencedDeclaration":3071,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3292,"name":"Identifier","src":"57365:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3238,"type":"bytes32","value":"_orderID"},"id":3293,"name":"Identifier","src":"57372:8:0"}],"id":3294,"name":"IndexAccess","src":"57365:16:0"}],"id":3295,"name":"MemberAccess","src":"57365:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":3296,"name":"Identifier","src":"57396:5:0"}],"id":3297,"name":"MemberAccess","src":"57396:12:0"}],"id":3298,"name":"Assignment","src":"57365:43:0"}],"id":3299,"name":"ExpressionStatement","src":"57365:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3300,"name":"Identifier","src":"57419:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3240,"type":"bytes32","value":"_matchedOrderID"},"id":3301,"name":"Identifier","src":"57426:15:0"}],"id":3302,"name":"IndexAccess","src":"57419:23:0"}],"id":3303,"name":"MemberAccess","src":"57419:29:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Confirmed","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3304,"name":"Identifier","src":"57451:10:0"}],"id":3305,"name":"MemberAccess","src":"57451:20:0"}],"id":3306,"name":"Assignment","src":"57419:52:0"}],"id":3307,"name":"ExpressionStatement","src":"57419:52:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"confirmer","referencedDeclaration":3065,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3308,"name":"Identifier","src":"57481:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3240,"type":"bytes32","value":"_matchedOrderID"},"id":3309,"name":"Identifier","src":"57488:15:0"}],"id":3310,"name":"IndexAccess","src":"57481:23:0"}],"id":3311,"name":"MemberAccess","src":"57481:33:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3312,"name":"Identifier","src":"57517:3:0"}],"id":3313,"name":"MemberAccess","src":"57517:10:0"}],"id":3314,"name":"Assignment","src":"57481:46:0"}],"id":3315,"name":"ExpressionStatement","src":"57481:46:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"matchedOrder","referencedDeclaration":3073,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3316,"name":"Identifier","src":"57537:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3240,"type":"bytes32","value":"_matchedOrderID"},"id":3317,"name":"Identifier","src":"57544:15:0"}],"id":3318,"name":"IndexAccess","src":"57537:23:0"}],"id":3319,"name":"MemberAccess","src":"57537:36:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3238,"type":"bytes32","value":"_orderID"},"id":3320,"name":"Identifier","src":"57576:8:0"}],"id":3321,"name":"Assignment","src":"57537:47:0"}],"id":3322,"name":"ExpressionStatement","src":"57537:47:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"blockNumber","referencedDeclaration":3071,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3323,"name":"Identifier","src":"57594:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3240,"type":"bytes32","value":"_matchedOrderID"},"id":3324,"name":"Identifier","src":"57601:15:0"}],"id":3325,"name":"IndexAccess","src":"57594:23:0"}],"id":3326,"name":"MemberAccess","src":"57594:35:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":3327,"name":"Identifier","src":"57632:5:0"}],"id":3328,"name":"MemberAccess","src":"57632:12:0"}],"id":3329,"name":"Assignment","src":"57594:50:0"}],"id":3330,"name":"ExpressionStatement","src":"57594:50:0"}],"id":3331,"name":"Block","src":"57018:633:0"}],"id":3332,"name":"FunctionDefinition","src":"56919:732:0"},{"attributes":{"constant":false,"documentation":"@notice Cancel an open order in the orderbook. An order can be cancelled\n by the trader who opened the order, or by the broker verifier contract.\n This allows the settlement layer to implement their own logic for\n cancelling orders without trader interaction (e.g. to ban a trader from\n a specific darkpool, or to use multiple order-matching platforms)\n\n    /// @param _orderID The hash of the order.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"cancelOrder","payable":false,"scope":3632,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3393,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3333,"name":"ElementaryTypeName","src":"58122:7:0"}],"id":3334,"name":"VariableDeclaration","src":"58122:16:0"}],"id":3335,"name":"ParameterList","src":"58121:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":3336,"name":"ParameterList","src":"58149:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39b7a6188824a8c455d0591065ad2b2349ea3a9d4870b6ea4623a2348fffbc43","typeString":"literal_string \"invalid order state\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3337,"name":"Identifier","src":"58159:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_OrderState_$3059","typeString":"enum Orderbook.OrderState"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3338,"name":"Identifier","src":"58167:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3334,"type":"bytes32","value":"_orderID"},"id":3339,"name":"Identifier","src":"58174:8:0"}],"id":3340,"name":"IndexAccess","src":"58167:16:0"}],"id":3341,"name":"MemberAccess","src":"58167:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Open","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3342,"name":"Identifier","src":"58193:10:0"}],"id":3343,"name":"MemberAccess","src":"58193:15:0"}],"id":3344,"name":"BinaryOperation","src":"58167:41:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e76616c6964206f72646572207374617465","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"invalid order state\"","value":"invalid order state"},"id":3345,"name":"Literal","src":"58210:21:0"}],"id":3346,"name":"FunctionCall","src":"58159:73:0"}],"id":3347,"name":"ExpressionStatement","src":"58159:73:0"},{"attributes":{"assignments":[3349]},"children":[{"attributes":{"constant":false,"name":"brokerVerifier","scope":3393,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3348,"name":"ElementaryTypeName","src":"58317:7:0"}],"id":3349,"name":"VariableDeclaration","src":"58317:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_BrokerVerifier_$2660","typeString":"contract BrokerVerifier"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":3350,"name":"ElementaryTypeNameExpression","src":"58342:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract BrokerVerifier","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"brokerVerifierContract","referencedDeclaration":2779,"type":"function (uint64) view external returns (contract BrokerVerifier)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3080,"type":"contract SettlementRegistry","value":"settlementRegistry"},"id":3351,"name":"Identifier","src":"58350:18:0"}],"id":3352,"name":"MemberAccess","src":"58350:41:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"settlementID","referencedDeclaration":3067,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3353,"name":"Identifier","src":"58392:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3334,"type":"bytes32","value":"_orderID"},"id":3354,"name":"Identifier","src":"58399:8:0"}],"id":3355,"name":"IndexAccess","src":"58392:16:0"}],"id":3356,"name":"MemberAccess","src":"58392:29:0"}],"id":3357,"name":"FunctionCall","src":"58350:72:0"}],"id":3358,"name":"FunctionCall","src":"58342:81:0"}],"id":3359,"name":"VariableDeclarationStatement","src":"58317:106:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8aed0440c9cacb4460ecdd12f6aff03c27cace39666d71f0946a6f3e9022a4a1","typeString":"literal_string \"not authorized\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3360,"name":"Identifier","src":"58433:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3361,"name":"Identifier","src":"58441:3:0"}],"id":3362,"name":"MemberAccess","src":"58441:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"trader","referencedDeclaration":3063,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3363,"name":"Identifier","src":"58455:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3334,"type":"bytes32","value":"_orderID"},"id":3364,"name":"Identifier","src":"58462:8:0"}],"id":3365,"name":"IndexAccess","src":"58455:16:0"}],"id":3366,"name":"MemberAccess","src":"58455:23:0"}],"id":3367,"name":"BinaryOperation","src":"58441:37:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3368,"name":"Identifier","src":"58482:3:0"}],"id":3369,"name":"MemberAccess","src":"58482:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3349,"type":"address","value":"brokerVerifier"},"id":3370,"name":"Identifier","src":"58496:14:0"}],"id":3371,"name":"BinaryOperation","src":"58482:28:0"}],"id":3372,"name":"BinaryOperation","src":"58441:69:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f7420617574686f72697a6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not authorized\"","value":"not authorized"},"id":3373,"name":"Literal","src":"58512:16:0"}],"id":3374,"name":"FunctionCall","src":"58433:96:0"}],"id":3375,"name":"ExpressionStatement","src":"58433:96:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3376,"name":"Identifier","src":"58540:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3334,"type":"bytes32","value":"_orderID"},"id":3377,"name":"Identifier","src":"58547:8:0"}],"id":3378,"name":"IndexAccess","src":"58540:16:0"}],"id":3379,"name":"MemberAccess","src":"58540:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Canceled","referencedDeclaration":null,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3059,"type":"type(enum Orderbook.OrderState)","value":"OrderState"},"id":3380,"name":"Identifier","src":"58565:10:0"}],"id":3381,"name":"MemberAccess","src":"58565:19:0"}],"id":3382,"name":"Assignment","src":"58540:44:0"}],"id":3383,"name":"ExpressionStatement","src":"58540:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"blockNumber","referencedDeclaration":3071,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3384,"name":"Identifier","src":"58594:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3334,"type":"bytes32","value":"_orderID"},"id":3385,"name":"Identifier","src":"58601:8:0"}],"id":3386,"name":"IndexAccess","src":"58594:16:0"}],"id":3387,"name":"MemberAccess","src":"58594:28:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":3388,"name":"Identifier","src":"58625:5:0"}],"id":3389,"name":"MemberAccess","src":"58625:12:0"}],"id":3390,"name":"Assignment","src":"58594:43:0"}],"id":3391,"name":"ExpressionStatement","src":"58594:43:0"}],"id":3392,"name":"Block","src":"58149:495:0"}],"id":3393,"name":"FunctionDefinition","src":"58101:543:0"},{"attributes":{"constant":true,"documentation":"@notice returns status of the given orderID.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"orderState","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3406,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3394,"name":"ElementaryTypeName","src":"58723:7:0"}],"id":3395,"name":"VariableDeclaration","src":"58723:16:0"}],"id":3396,"name":"ParameterList","src":"58722:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3406,"stateVariable":false,"storageLocation":"default","type":"enum Orderbook.OrderState","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"OrderState","referencedDeclaration":3059,"type":"enum Orderbook.OrderState"},"id":3397,"name":"UserDefinedTypeName","src":"58764:10:0"}],"id":3398,"name":"VariableDeclaration","src":"58764:10:0"}],"id":3399,"name":"ParameterList","src":"58763:12:0"},{"children":[{"attributes":{"functionReturnParameters":3399},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3400,"name":"Identifier","src":"58793:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3395,"type":"bytes32","value":"_orderID"},"id":3401,"name":"Identifier","src":"58800:8:0"}],"id":3402,"name":"IndexAccess","src":"58793:16:0"}],"id":3403,"name":"MemberAccess","src":"58793:22:0"}],"id":3404,"name":"Return","src":"58786:29:0"}],"id":3405,"name":"Block","src":"58776:46:0"}],"id":3406,"name":"FunctionDefinition","src":"58703:119:0"},{"attributes":{"constant":true,"documentation":"@notice returns a list of matched orders to the given orderID.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"orderMatch","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3419,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3407,"name":"ElementaryTypeName","src":"58919:7:0"}],"id":3408,"name":"VariableDeclaration","src":"58919:16:0"}],"id":3409,"name":"ParameterList","src":"58918:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3419,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3410,"name":"ElementaryTypeName","src":"58960:7:0"}],"id":3411,"name":"VariableDeclaration","src":"58960:7:0"}],"id":3412,"name":"ParameterList","src":"58959:9:0"},{"children":[{"attributes":{"functionReturnParameters":3412},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"matchedOrder","referencedDeclaration":3073,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3413,"name":"Identifier","src":"58986:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3408,"type":"bytes32","value":"_orderID"},"id":3414,"name":"Identifier","src":"58993:8:0"}],"id":3415,"name":"IndexAccess","src":"58986:16:0"}],"id":3416,"name":"MemberAccess","src":"58986:29:0"}],"id":3417,"name":"Return","src":"58979:36:0"}],"id":3418,"name":"Block","src":"58969:53:0"}],"id":3419,"name":"FunctionDefinition","src":"58899:123:0"},{"attributes":{"constant":true,"documentation":"@notice returns the priority of the given orderID.\n The priority is the index of the order in the orderbook.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"orderPriority","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3432,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3420,"name":"ElementaryTypeName","src":"59175:7:0"}],"id":3421,"name":"VariableDeclaration","src":"59175:16:0"}],"id":3422,"name":"ParameterList","src":"59174:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3432,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3423,"name":"ElementaryTypeName","src":"59216:7:0"}],"id":3424,"name":"VariableDeclaration","src":"59216:7:0"}],"id":3425,"name":"ParameterList","src":"59215:9:0"},{"children":[{"attributes":{"functionReturnParameters":3425},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"priority","referencedDeclaration":3069,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3426,"name":"Identifier","src":"59242:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3421,"type":"bytes32","value":"_orderID"},"id":3427,"name":"Identifier","src":"59249:8:0"}],"id":3428,"name":"IndexAccess","src":"59242:16:0"}],"id":3429,"name":"MemberAccess","src":"59242:25:0"}],"id":3430,"name":"Return","src":"59235:32:0"}],"id":3431,"name":"Block","src":"59225:49:0"}],"id":3432,"name":"FunctionDefinition","src":"59152:122:0"},{"attributes":{"constant":true,"documentation":"@notice returns the trader of the given orderID.\n Trader is the one who signs the message and does the actual trading.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"orderTrader","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3445,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3433,"name":"ElementaryTypeName","src":"59435:7:0"}],"id":3434,"name":"VariableDeclaration","src":"59435:16:0"}],"id":3435,"name":"ParameterList","src":"59434:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3445,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3436,"name":"ElementaryTypeName","src":"59476:7:0"}],"id":3437,"name":"VariableDeclaration","src":"59476:7:0"}],"id":3438,"name":"ParameterList","src":"59475:9:0"},{"children":[{"attributes":{"functionReturnParameters":3438},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"trader","referencedDeclaration":3063,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3439,"name":"Identifier","src":"59502:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3434,"type":"bytes32","value":"_orderID"},"id":3440,"name":"Identifier","src":"59509:8:0"}],"id":3441,"name":"IndexAccess","src":"59502:16:0"}],"id":3442,"name":"MemberAccess","src":"59502:23:0"}],"id":3443,"name":"Return","src":"59495:30:0"}],"id":3444,"name":"Block","src":"59485:47:0"}],"id":3445,"name":"FunctionDefinition","src":"59414:118:0"},{"attributes":{"constant":true,"documentation":"@notice returns the darknode address which confirms the given orderID.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"orderConfirmer","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3458,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3446,"name":"ElementaryTypeName","src":"59641:7:0"}],"id":3447,"name":"VariableDeclaration","src":"59641:16:0"}],"id":3448,"name":"ParameterList","src":"59640:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3458,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3449,"name":"ElementaryTypeName","src":"59682:7:0"}],"id":3450,"name":"VariableDeclaration","src":"59682:7:0"}],"id":3451,"name":"ParameterList","src":"59681:9:0"},{"children":[{"attributes":{"functionReturnParameters":3451},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"confirmer","referencedDeclaration":3065,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3452,"name":"Identifier","src":"59708:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3447,"type":"bytes32","value":"_orderID"},"id":3453,"name":"Identifier","src":"59715:8:0"}],"id":3454,"name":"IndexAccess","src":"59708:16:0"}],"id":3455,"name":"MemberAccess","src":"59708:26:0"}],"id":3456,"name":"Return","src":"59701:33:0"}],"id":3457,"name":"Block","src":"59691:50:0"}],"id":3458,"name":"FunctionDefinition","src":"59617:124:0"},{"attributes":{"constant":true,"documentation":"@notice returns the block number when the order being last modified.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"orderBlockNumber","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3471,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3459,"name":"ElementaryTypeName","src":"59850:7:0"}],"id":3460,"name":"VariableDeclaration","src":"59850:16:0"}],"id":3461,"name":"ParameterList","src":"59849:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3471,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3462,"name":"ElementaryTypeName","src":"59891:7:0"}],"id":3463,"name":"VariableDeclaration","src":"59891:7:0"}],"id":3464,"name":"ParameterList","src":"59890:9:0"},{"children":[{"attributes":{"functionReturnParameters":3464},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blockNumber","referencedDeclaration":3071,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3465,"name":"Identifier","src":"59917:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3460,"type":"bytes32","value":"_orderID"},"id":3466,"name":"Identifier","src":"59924:8:0"}],"id":3467,"name":"IndexAccess","src":"59917:16:0"}],"id":3468,"name":"MemberAccess","src":"59917:28:0"}],"id":3469,"name":"Return","src":"59910:35:0"}],"id":3470,"name":"Block","src":"59900:52:0"}],"id":3471,"name":"FunctionDefinition","src":"59824:128:0"},{"attributes":{"constant":true,"documentation":"@notice returns the block depth of the orderId","implemented":true,"isConstructor":false,"modifiers":[null],"name":"orderDepth","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_orderID","scope":3498,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3472,"name":"ElementaryTypeName","src":"60033:7:0"}],"id":3473,"name":"VariableDeclaration","src":"60033:16:0"}],"id":3474,"name":"ParameterList","src":"60032:18:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3498,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3475,"name":"ElementaryTypeName","src":"60074:7:0"}],"id":3476,"name":"VariableDeclaration","src":"60074:7:0"}],"id":3477,"name":"ParameterList","src":"60073:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blockNumber","referencedDeclaration":3071,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3478,"name":"Identifier","src":"60097:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3473,"type":"bytes32","value":"_orderID"},"id":3479,"name":"Identifier","src":"60104:8:0"}],"id":3480,"name":"IndexAccess","src":"60097:16:0"}],"id":3481,"name":"MemberAccess","src":"60097:28:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3482,"name":"Literal","src":"60129:1:0"}],"id":3483,"name":"BinaryOperation","src":"60097:33:0"},{"children":[{"attributes":{"functionReturnParameters":3477},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3484,"name":"Literal","src":"60153:1:0"}],"id":3485,"name":"Return","src":"60146:8:0"}],"id":3486,"name":"Block","src":"60132:33:0"}],"id":3487,"name":"IfStatement","src":"60093:72:0"},{"attributes":{"functionReturnParameters":3477},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4022,"type":"block","value":"block"},"id":3488,"name":"Identifier","src":"60182:5:0"}],"id":3489,"name":"MemberAccess","src":"60182:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"blockNumber","referencedDeclaration":3071,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3490,"name":"Identifier","src":"60197:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3473,"type":"bytes32","value":"_orderID"},"id":3491,"name":"Identifier","src":"60204:8:0"}],"id":3492,"name":"IndexAccess","src":"60197:16:0"}],"id":3493,"name":"MemberAccess","src":"60197:28:0"}],"id":3494,"name":"BinaryOperation","src":"60182:43:0"}],"id":3495,"name":"TupleExpression","src":"60181:45:0"}],"id":3496,"name":"Return","src":"60174:52:0"}],"id":3497,"name":"Block","src":"60083:150:0"}],"id":3498,"name":"FunctionDefinition","src":"60013:220:0"},{"attributes":{"constant":true,"documentation":"@notice returns the number of orders in the orderbook","implemented":true,"isConstructor":false,"modifiers":[null],"name":"ordersCount","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":3499,"name":"ParameterList","src":"60321:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3507,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3500,"name":"ElementaryTypeName","src":"60347:7:0"}],"id":3501,"name":"VariableDeclaration","src":"60347:7:0"}],"id":3502,"name":"ParameterList","src":"60346:9:0"},{"children":[{"attributes":{"functionReturnParameters":3502},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3083,"type":"bytes32[] storage ref","value":"orderbook"},"id":3503,"name":"Identifier","src":"60373:9:0"}],"id":3504,"name":"MemberAccess","src":"60373:16:0"}],"id":3505,"name":"Return","src":"60366:23:0"}],"id":3506,"name":"Block","src":"60356:40:0"}],"id":3507,"name":"FunctionDefinition","src":"60301:95:0"},{"attributes":{"constant":true,"documentation":"@notice returns order details of the orders starting from the offset.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"getOrders","payable":false,"scope":3632,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_offset","scope":3631,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3508,"name":"ElementaryTypeName","src":"60499:7:0"}],"id":3509,"name":"VariableDeclaration","src":"60499:15:0"},{"attributes":{"constant":false,"name":"_limit","scope":3631,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3510,"name":"ElementaryTypeName","src":"60516:7:0"}],"id":3511,"name":"VariableDeclaration","src":"60516:14:0"}],"id":3512,"name":"ParameterList","src":"60498:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3631,"stateVariable":false,"storageLocation":"default","type":"bytes32[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3513,"name":"ElementaryTypeName","src":"60555:7:0"}],"id":3514,"name":"ArrayTypeName","src":"60555:9:0"}],"id":3515,"name":"VariableDeclaration","src":"60555:9:0"},{"attributes":{"constant":false,"name":"","scope":3631,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":3516,"name":"ElementaryTypeName","src":"60566:7:0"}],"id":3517,"name":"ArrayTypeName","src":"60566:9:0"}],"id":3518,"name":"VariableDeclaration","src":"60566:9:0"},{"attributes":{"constant":false,"name":"","scope":3631,"stateVariable":false,"storageLocation":"default","type":"uint8[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint8[]"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":3519,"name":"ElementaryTypeName","src":"60577:5:0"}],"id":3520,"name":"ArrayTypeName","src":"60577:7:0"}],"id":3521,"name":"VariableDeclaration","src":"60577:7:0"}],"id":3522,"name":"ParameterList","src":"60554:31:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3509,"type":"uint256","value":"_offset"},"id":3523,"name":"Identifier","src":"60600:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3083,"type":"bytes32[] storage ref","value":"orderbook"},"id":3524,"name":"Identifier","src":"60611:9:0"}],"id":3525,"name":"MemberAccess","src":"60611:16:0"}],"id":3526,"name":"BinaryOperation","src":"60600:27:0"},{"children":[{"attributes":{"expression":null,"functionReturnParameters":3522},"id":3527,"name":"Return","src":"60643:7:0"}],"id":3528,"name":"Block","src":"60629:31:0"}],"id":3529,"name":"IfStatement","src":"60596:64:0"},{"attributes":{"assignments":[3531]},"children":[{"attributes":{"constant":false,"name":"limit","scope":3631,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3530,"name":"ElementaryTypeName","src":"60785:7:0"}],"id":3531,"name":"VariableDeclaration","src":"60785:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3511,"type":"uint256","value":"_limit"},"id":3532,"name":"Identifier","src":"60801:6:0"}],"id":3533,"name":"VariableDeclarationStatement","src":"60785:22:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3509,"type":"uint256","value":"_offset"},"id":3534,"name":"Identifier","src":"60821:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3531,"type":"uint256","value":"limit"},"id":3535,"name":"Identifier","src":"60831:5:0"}],"id":3536,"name":"BinaryOperation","src":"60821:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3083,"type":"bytes32[] storage ref","value":"orderbook"},"id":3537,"name":"Identifier","src":"60839:9:0"}],"id":3538,"name":"MemberAccess","src":"60839:16:0"}],"id":3539,"name":"BinaryOperation","src":"60821:34:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3531,"type":"uint256","value":"limit"},"id":3540,"name":"Identifier","src":"60871:5:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3083,"type":"bytes32[] storage ref","value":"orderbook"},"id":3541,"name":"Identifier","src":"60879:9:0"}],"id":3542,"name":"MemberAccess","src":"60879:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3509,"type":"uint256","value":"_offset"},"id":3543,"name":"Identifier","src":"60898:7:0"}],"id":3544,"name":"BinaryOperation","src":"60879:26:0"}],"id":3545,"name":"Assignment","src":"60871:34:0"}],"id":3546,"name":"ExpressionStatement","src":"60871:34:0"}],"id":3547,"name":"Block","src":"60857:59:0"}],"id":3548,"name":"IfStatement","src":"60817:99:0"},{"attributes":{"assignments":[3552]},"children":[{"attributes":{"constant":false,"name":"orderIDs","scope":3631,"stateVariable":false,"storageLocation":"memory","type":"bytes32[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3550,"name":"ElementaryTypeName","src":"60926:7:0"}],"id":3551,"name":"ArrayTypeName","src":"60926:9:0"}],"id":3552,"name":"VariableDeclaration","src":"60926:25:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"function (uint256) pure returns (bytes32[] memory)"},"children":[{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3553,"name":"ElementaryTypeName","src":"60958:7:0"}],"id":3554,"name":"ArrayTypeName","src":"60958:9:0"}],"id":3555,"name":"NewExpression","src":"60954:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3531,"type":"uint256","value":"limit"},"id":3556,"name":"Identifier","src":"60968:5:0"}],"id":3557,"name":"FunctionCall","src":"60954:20:0"}],"id":3558,"name":"VariableDeclarationStatement","src":"60926:48:0"},{"attributes":{"assignments":[3562]},"children":[{"attributes":{"constant":false,"name":"traderAddresses","scope":3631,"stateVariable":false,"storageLocation":"memory","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":3560,"name":"ElementaryTypeName","src":"60984:7:0"}],"id":3561,"name":"ArrayTypeName","src":"60984:9:0"}],"id":3562,"name":"VariableDeclaration","src":"60984:32:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"function (uint256) pure returns (address[] memory)"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":3563,"name":"ElementaryTypeName","src":"61023:7:0"}],"id":3564,"name":"ArrayTypeName","src":"61023:9:0"}],"id":3565,"name":"NewExpression","src":"61019:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3531,"type":"uint256","value":"limit"},"id":3566,"name":"Identifier","src":"61033:5:0"}],"id":3567,"name":"FunctionCall","src":"61019:20:0"}],"id":3568,"name":"VariableDeclarationStatement","src":"60984:55:0"},{"attributes":{"assignments":[3572]},"children":[{"attributes":{"constant":false,"name":"states","scope":3631,"stateVariable":false,"storageLocation":"memory","type":"uint8[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint8[]"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":3570,"name":"ElementaryTypeName","src":"61049:5:0"}],"id":3571,"name":"ArrayTypeName","src":"61049:7:0"}],"id":3572,"name":"VariableDeclaration","src":"61049:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8[] memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"function (uint256) pure returns (uint8[] memory)"},"children":[{"attributes":{"length":null,"type":"uint8[]"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":3573,"name":"ElementaryTypeName","src":"61077:5:0"}],"id":3574,"name":"ArrayTypeName","src":"61077:7:0"}],"id":3575,"name":"NewExpression","src":"61073:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3531,"type":"uint256","value":"limit"},"id":3576,"name":"Identifier","src":"61085:5:0"}],"id":3577,"name":"FunctionCall","src":"61073:18:0"}],"id":3578,"name":"VariableDeclarationStatement","src":"61049:42:0"},{"children":[{"attributes":{"assignments":[3580]},"children":[{"attributes":{"constant":false,"name":"i","scope":3631,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3579,"name":"ElementaryTypeName","src":"61107:7:0"}],"id":3580,"name":"VariableDeclaration","src":"61107:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":3581,"name":"Literal","src":"61119:1:0"}],"id":3582,"name":"VariableDeclarationStatement","src":"61107:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3580,"type":"uint256","value":"i"},"id":3583,"name":"Identifier","src":"61122:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3531,"type":"uint256","value":"limit"},"id":3584,"name":"Identifier","src":"61126:5:0"}],"id":3585,"name":"BinaryOperation","src":"61122:9:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3580,"type":"uint256","value":"i"},"id":3586,"name":"Identifier","src":"61133:1:0"}],"id":3587,"name":"UnaryOperation","src":"61133:3:0"}],"id":3588,"name":"ExpressionStatement","src":"61133:3:0"},{"children":[{"attributes":{"assignments":[3590]},"children":[{"attributes":{"constant":false,"name":"order","scope":3631,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3589,"name":"ElementaryTypeName","src":"61152:7:0"}],"id":3590,"name":"VariableDeclaration","src":"61152:13:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3083,"type":"bytes32[] storage ref","value":"orderbook"},"id":3591,"name":"Identifier","src":"61168:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3580,"type":"uint256","value":"i"},"id":3592,"name":"Identifier","src":"61178:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3509,"type":"uint256","value":"_offset"},"id":3593,"name":"Identifier","src":"61182:7:0"}],"id":3594,"name":"BinaryOperation","src":"61178:11:0"}],"id":3595,"name":"IndexAccess","src":"61168:22:0"}],"id":3596,"name":"VariableDeclarationStatement","src":"61152:38:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3552,"type":"bytes32[] memory","value":"orderIDs"},"id":3597,"name":"Identifier","src":"61204:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3580,"type":"uint256","value":"i"},"id":3598,"name":"Identifier","src":"61213:1:0"}],"id":3599,"name":"IndexAccess","src":"61204:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3590,"type":"bytes32","value":"order"},"id":3600,"name":"Identifier","src":"61218:5:0"}],"id":3601,"name":"Assignment","src":"61204:19:0"}],"id":3602,"name":"ExpressionStatement","src":"61204:19:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3562,"type":"address[] memory","value":"traderAddresses"},"id":3603,"name":"Identifier","src":"61237:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3580,"type":"uint256","value":"i"},"id":3604,"name":"Identifier","src":"61253:1:0"}],"id":3605,"name":"IndexAccess","src":"61237:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"trader","referencedDeclaration":3063,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3606,"name":"Identifier","src":"61258:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3590,"type":"bytes32","value":"order"},"id":3607,"name":"Identifier","src":"61265:5:0"}],"id":3608,"name":"IndexAccess","src":"61258:13:0"}],"id":3609,"name":"MemberAccess","src":"61258:20:0"}],"id":3610,"name":"Assignment","src":"61237:41:0"}],"id":3611,"name":"ExpressionStatement","src":"61237:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3572,"type":"uint8[] memory","value":"states"},"id":3612,"name":"Identifier","src":"61292:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3580,"type":"uint256","value":"i"},"id":3613,"name":"Identifier","src":"61299:1:0"}],"id":3614,"name":"IndexAccess","src":"61292:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint8","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_enum$_OrderState_$3059","typeString":"enum Orderbook.OrderState"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint8)","value":"uint8"},"id":3615,"name":"ElementaryTypeNameExpression","src":"61304:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"state","referencedDeclaration":3061,"type":"enum Orderbook.OrderState"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Orderbook.Order storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3087,"type":"mapping(bytes32 => struct Orderbook.Order storage ref)","value":"orders"},"id":3616,"name":"Identifier","src":"61310:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3590,"type":"bytes32","value":"order"},"id":3617,"name":"Identifier","src":"61317:5:0"}],"id":3618,"name":"IndexAccess","src":"61310:13:0"}],"id":3619,"name":"MemberAccess","src":"61310:19:0"}],"id":3620,"name":"FunctionCall","src":"61304:26:0"}],"id":3621,"name":"Assignment","src":"61292:38:0"}],"id":3622,"name":"ExpressionStatement","src":"61292:38:0"}],"id":3623,"name":"Block","src":"61138:203:0"}],"id":3624,"name":"ForStatement","src":"61102:239:0"},{"attributes":{"functionReturnParameters":3522},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(bytes32[] memory,address[] memory,uint8[] memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3552,"type":"bytes32[] memory","value":"orderIDs"},"id":3625,"name":"Identifier","src":"61359:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3562,"type":"address[] memory","value":"traderAddresses"},"id":3626,"name":"Identifier","src":"61369:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3572,"type":"uint8[] memory","value":"states"},"id":3627,"name":"Identifier","src":"61386:6:0"}],"id":3628,"name":"TupleExpression","src":"61358:35:0"}],"id":3629,"name":"Return","src":"61351:42:0"}],"id":3630,"name":"Block","src":"60586:814:0"}],"id":3631,"name":"FunctionDefinition","src":"60480:920:0"}],"id":3632,"name":"ContractDefinition","src":"52675:8727:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@notice A library for calculating and verifying order match details","fullyImplemented":true,"linearizedBaseContracts":[3774],"name":"SettlementUtils","scope":4018},"children":[{"attributes":{"canonicalName":"SettlementUtils.OrderDetails","name":"OrderDetails","scope":3774,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"settlementID","scope":3643,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3633,"name":"ElementaryTypeName","src":"61537:6:0"}],"id":3634,"name":"VariableDeclaration","src":"61537:19:0"},{"attributes":{"constant":false,"name":"tokens","scope":3643,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3635,"name":"ElementaryTypeName","src":"61566:6:0"}],"id":3636,"name":"VariableDeclaration","src":"61566:13:0"},{"attributes":{"constant":false,"name":"price","scope":3643,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3637,"name":"ElementaryTypeName","src":"61589:7:0"}],"id":3638,"name":"VariableDeclaration","src":"61589:13:0"},{"attributes":{"constant":false,"name":"volume","scope":3643,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3639,"name":"ElementaryTypeName","src":"61612:7:0"}],"id":3640,"name":"VariableDeclaration","src":"61612:14:0"},{"attributes":{"constant":false,"name":"minimumVolume","scope":3643,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3641,"name":"ElementaryTypeName","src":"61636:7:0"}],"id":3642,"name":"VariableDeclaration","src":"61636:21:0"}],"id":3643,"name":"StructDefinition","src":"61507:157:0"},{"attributes":{"constant":true,"documentation":"@notice Calculates the ID of the order.\n @param details Order details that are not required for settlement\n        execution. They are combined as a single byte array.\n @param order The order details required for settlement execution.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"hashOrder","payable":false,"scope":3774,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"details","scope":3670,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3644,"name":"ElementaryTypeName","src":"61953:5:0"}],"id":3645,"name":"VariableDeclaration","src":"61953:13:0"},{"attributes":{"constant":false,"name":"order","scope":3670,"stateVariable":false,"storageLocation":"memory","type":"struct SettlementUtils.OrderDetails","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"OrderDetails","referencedDeclaration":3643,"type":"struct SettlementUtils.OrderDetails"},"id":3646,"name":"UserDefinedTypeName","src":"61968:12:0"}],"id":3647,"name":"VariableDeclaration","src":"61968:25:0"}],"id":3648,"name":"ParameterList","src":"61952:42:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3670,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3649,"name":"ElementaryTypeName","src":"62018:7:0"}],"id":3650,"name":"VariableDeclaration","src":"62018:7:0"}],"id":3651,"name":"ParameterList","src":"62017:9:0"},{"children":[{"attributes":{"functionReturnParameters":3651},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":4026,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":3652,"name":"Identifier","src":"62044:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4019,"type":"abi","value":"abi"},"id":3653,"name":"Identifier","src":"62067:3:0"}],"id":3654,"name":"MemberAccess","src":"62067:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3645,"type":"bytes memory","value":"details"},"id":3655,"name":"Identifier","src":"62101:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"settlementID","referencedDeclaration":3634,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3647,"type":"struct SettlementUtils.OrderDetails memory","value":"order"},"id":3656,"name":"Identifier","src":"62126:5:0"}],"id":3657,"name":"MemberAccess","src":"62126:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"tokens","referencedDeclaration":3636,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3647,"type":"struct SettlementUtils.OrderDetails memory","value":"order"},"id":3658,"name":"Identifier","src":"62162:5:0"}],"id":3659,"name":"MemberAccess","src":"62162:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"price","referencedDeclaration":3638,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3647,"type":"struct SettlementUtils.OrderDetails memory","value":"order"},"id":3660,"name":"Identifier","src":"62192:5:0"}],"id":3661,"name":"MemberAccess","src":"62192:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"volume","referencedDeclaration":3640,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3647,"type":"struct SettlementUtils.OrderDetails memory","value":"order"},"id":3662,"name":"Identifier","src":"62221:5:0"}],"id":3663,"name":"MemberAccess","src":"62221:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"minimumVolume","referencedDeclaration":3642,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3647,"type":"struct SettlementUtils.OrderDetails memory","value":"order"},"id":3664,"name":"Identifier","src":"62251:5:0"}],"id":3665,"name":"MemberAccess","src":"62251:19:0"}],"id":3666,"name":"FunctionCall","src":"62067:217:0"}],"id":3667,"name":"FunctionCall","src":"62044:250:0"}],"id":3668,"name":"Return","src":"62037:257:0"}],"id":3669,"name":"Block","src":"62027:274:0"}],"id":3670,"name":"FunctionDefinition","src":"61934:367:0"},{"attributes":{"constant":true,"documentation":"@notice Verifies that two orders match when considering the tokens,\n price, volumes / minimum volumes and settlement IDs. verifyMatchDetails is used\n my the DarknodeSlasher to verify challenges. Settlement layers may also\n use this function.\n @dev When verifying two orders for settlement, you should also:\n   1) verify the orders have been confirmed together\n   2) verify the orders' traders are distinct\n @param _buy The buy order details.\n @param _sell The sell order details.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"verifyMatchDetails","payable":false,"scope":3774,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_buy","scope":3729,"stateVariable":false,"storageLocation":"memory","type":"struct SettlementUtils.OrderDetails","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"OrderDetails","referencedDeclaration":3643,"type":"struct SettlementUtils.OrderDetails"},"id":3671,"name":"UserDefinedTypeName","src":"62879:12:0"}],"id":3672,"name":"VariableDeclaration","src":"62879:24:0"},{"attributes":{"constant":false,"name":"_sell","scope":3729,"stateVariable":false,"storageLocation":"memory","type":"struct SettlementUtils.OrderDetails","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"OrderDetails","referencedDeclaration":3643,"type":"struct SettlementUtils.OrderDetails"},"id":3673,"name":"UserDefinedTypeName","src":"62905:12:0"}],"id":3674,"name":"VariableDeclaration","src":"62905:25:0"}],"id":3675,"name":"ParameterList","src":"62878:53:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3729,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3676,"name":"ElementaryTypeName","src":"62955:4:0"}],"id":3677,"name":"VariableDeclaration","src":"62955:4:0"}],"id":3678,"name":"ParameterList","src":"62954:6:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"overloadedDeclarations":[null],"referencedDeclaration":3773,"type":"function (uint64,uint64) pure returns (bool)","value":"verifyTokens"},"id":3679,"name":"Identifier","src":"63021:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"tokens","referencedDeclaration":3636,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3672,"type":"struct SettlementUtils.OrderDetails memory","value":"_buy"},"id":3680,"name":"Identifier","src":"63034:4:0"}],"id":3681,"name":"MemberAccess","src":"63034:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"tokens","referencedDeclaration":3636,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3674,"type":"struct SettlementUtils.OrderDetails memory","value":"_sell"},"id":3682,"name":"Identifier","src":"63047:5:0"}],"id":3683,"name":"MemberAccess","src":"63047:12:0"}],"id":3684,"name":"FunctionCall","src":"63021:39:0"}],"id":3685,"name":"UnaryOperation","src":"63020:40:0"},{"children":[{"attributes":{"functionReturnParameters":3678},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3686,"name":"Literal","src":"63083:5:0"}],"id":3687,"name":"Return","src":"63076:12:0"}],"id":3688,"name":"Block","src":"63062:37:0"}],"id":3689,"name":"IfStatement","src":"63016:83:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"price","referencedDeclaration":3638,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3672,"type":"struct SettlementUtils.OrderDetails memory","value":"_buy"},"id":3690,"name":"Identifier","src":"63168:4:0"}],"id":3691,"name":"MemberAccess","src":"63168:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"price","referencedDeclaration":3638,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3674,"type":"struct SettlementUtils.OrderDetails memory","value":"_sell"},"id":3692,"name":"Identifier","src":"63181:5:0"}],"id":3693,"name":"MemberAccess","src":"63181:11:0"}],"id":3694,"name":"BinaryOperation","src":"63168:24:0"},{"children":[{"attributes":{"functionReturnParameters":3678},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3695,"name":"Literal","src":"63215:5:0"}],"id":3696,"name":"Return","src":"63208:12:0"}],"id":3697,"name":"Block","src":"63194:37:0"}],"id":3698,"name":"IfStatement","src":"63164:67:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"volume","referencedDeclaration":3640,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3672,"type":"struct SettlementUtils.OrderDetails memory","value":"_buy"},"id":3699,"name":"Identifier","src":"63313:4:0"}],"id":3700,"name":"MemberAccess","src":"63313:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"minimumVolume","referencedDeclaration":3642,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3674,"type":"struct SettlementUtils.OrderDetails memory","value":"_sell"},"id":3701,"name":"Identifier","src":"63327:5:0"}],"id":3702,"name":"MemberAccess","src":"63327:19:0"}],"id":3703,"name":"BinaryOperation","src":"63313:33:0"},{"children":[{"attributes":{"functionReturnParameters":3678},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3704,"name":"Literal","src":"63369:5:0"}],"id":3705,"name":"Return","src":"63362:12:0"}],"id":3706,"name":"Block","src":"63348:37:0"}],"id":3707,"name":"IfStatement","src":"63309:76:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"volume","referencedDeclaration":3640,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3674,"type":"struct SettlementUtils.OrderDetails memory","value":"_sell"},"id":3708,"name":"Identifier","src":"63464:5:0"}],"id":3709,"name":"MemberAccess","src":"63464:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"minimumVolume","referencedDeclaration":3642,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3672,"type":"struct SettlementUtils.OrderDetails memory","value":"_buy"},"id":3710,"name":"Identifier","src":"63479:4:0"}],"id":3711,"name":"MemberAccess","src":"63479:18:0"}],"id":3712,"name":"BinaryOperation","src":"63464:33:0"},{"children":[{"attributes":{"functionReturnParameters":3678},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3713,"name":"Literal","src":"63520:5:0"}],"id":3714,"name":"Return","src":"63513:12:0"}],"id":3715,"name":"Block","src":"63499:37:0"}],"id":3716,"name":"IfStatement","src":"63460:76:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"settlementID","referencedDeclaration":3634,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3672,"type":"struct SettlementUtils.OrderDetails memory","value":"_buy"},"id":3717,"name":"Identifier","src":"63629:4:0"}],"id":3718,"name":"MemberAccess","src":"63629:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"settlementID","referencedDeclaration":3634,"type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3674,"type":"struct SettlementUtils.OrderDetails memory","value":"_sell"},"id":3719,"name":"Identifier","src":"63650:5:0"}],"id":3720,"name":"MemberAccess","src":"63650:18:0"}],"id":3721,"name":"BinaryOperation","src":"63629:39:0"},{"children":[{"attributes":{"functionReturnParameters":3678},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":3722,"name":"Literal","src":"63691:5:0"}],"id":3723,"name":"Return","src":"63684:12:0"}],"id":3724,"name":"Block","src":"63670:37:0"}],"id":3725,"name":"IfStatement","src":"63625:82:0"},{"attributes":{"functionReturnParameters":3678},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":3726,"name":"Literal","src":"63724:4:0"}],"id":3727,"name":"Return","src":"63717:11:0"}],"id":3728,"name":"Block","src":"62961:774:0"}],"id":3729,"name":"FunctionDefinition","src":"62851:884:0"},{"attributes":{"constant":true,"documentation":"@notice Verifies that two token requirements can be matched and that the\n tokens are formatted correctly.\n @param _buyTokens The buy token details.\n @param _sellToken The sell token details.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"verifyTokens","payable":false,"scope":3774,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_buyTokens","scope":3773,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3730,"name":"ElementaryTypeName","src":"63983:6:0"}],"id":3731,"name":"VariableDeclaration","src":"63983:17:0"},{"attributes":{"constant":false,"name":"_sellToken","scope":3773,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3732,"name":"ElementaryTypeName","src":"64002:6:0"}],"id":3733,"name":"VariableDeclaration","src":"64002:17:0"}],"id":3734,"name":"ParameterList","src":"63982:38:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":3773,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3735,"name":"ElementaryTypeName","src":"64044:4:0"}],"id":3736,"name":"VariableDeclaration","src":"64044:4:0"}],"id":3737,"name":"ParameterList","src":"64043:6:0"},{"children":[{"attributes":{"functionReturnParameters":3737},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint32","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint32)","value":"uint32"},"id":3738,"name":"ElementaryTypeNameExpression","src":"64086:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3731,"type":"uint64","value":"_buyTokens"},"id":3739,"name":"Identifier","src":"64093:10:0"}],"id":3740,"name":"FunctionCall","src":"64086:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint32","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint32)","value":"uint32"},"id":3741,"name":"ElementaryTypeNameExpression","src":"64108:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">>","type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3733,"type":"uint64","value":"_sellToken"},"id":3742,"name":"Identifier","src":"64115:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 32","value":"32"},"id":3743,"name":"Literal","src":"64129:2:0"}],"id":3744,"name":"BinaryOperation","src":"64115:16:0"}],"id":3745,"name":"FunctionCall","src":"64108:24:0"}],"id":3746,"name":"BinaryOperation","src":"64086:46:0"}],"id":3747,"name":"TupleExpression","src":"64068:65:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint32","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint32)","value":"uint32"},"id":3748,"name":"ElementaryTypeNameExpression","src":"64155:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3733,"type":"uint64","value":"_sellToken"},"id":3749,"name":"Identifier","src":"64162:10:0"}],"id":3750,"name":"FunctionCall","src":"64155:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint32","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint32)","value":"uint32"},"id":3751,"name":"ElementaryTypeNameExpression","src":"64177:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">>","type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3731,"type":"uint64","value":"_buyTokens"},"id":3752,"name":"Identifier","src":"64184:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 32","value":"32"},"id":3753,"name":"Literal","src":"64198:2:0"}],"id":3754,"name":"BinaryOperation","src":"64184:16:0"}],"id":3755,"name":"FunctionCall","src":"64177:24:0"}],"id":3756,"name":"BinaryOperation","src":"64155:46:0"}],"id":3757,"name":"TupleExpression","src":"64137:65:0"}],"id":3758,"name":"BinaryOperation","src":"64068:134:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint32","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint32)","value":"uint32"},"id":3759,"name":"ElementaryTypeNameExpression","src":"64224:6:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">>","type":"uint64"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3731,"type":"uint64","value":"_buyTokens"},"id":3760,"name":"Identifier","src":"64231:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 32","value":"32"},"id":3761,"name":"Literal","src":"64245:2:0"}],"id":3762,"name":"BinaryOperation","src":"64231:16:0"}],"id":3763,"name":"FunctionCall","src":"64224:24:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint32","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(uint32)","value":"uint32"},"id":3764,"name":"ElementaryTypeNameExpression","src":"64252:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3731,"type":"uint64","value":"_buyTokens"},"id":3765,"name":"Identifier","src":"64259:10:0"}],"id":3766,"name":"FunctionCall","src":"64252:18:0"}],"id":3767,"name":"BinaryOperation","src":"64224:46:0"}],"id":3768,"name":"TupleExpression","src":"64206:65:0"}],"id":3769,"name":"BinaryOperation","src":"64068:203:0"}],"id":3770,"name":"TupleExpression","src":"64067:214:0"}],"id":3771,"name":"Return","src":"64060:221:0"}],"id":3772,"name":"Block","src":"64050:238:0"}],"id":3773,"name":"FunctionDefinition","src":"63961:327:0"}],"id":3774,"name":"ContractDefinition","src":"61476:2814:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice Allows order confirmations to be challenged, penalizing darknodes\n who have confirmed two mismatched orders.","fullyImplemented":true,"linearizedBaseContracts":[4017,85],"name":"DarknodeSlasher","scope":4018},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":3775,"name":"UserDefinedTypeName","src":"64444:7:0"}],"id":3776,"name":"InheritanceSpecifier","src":"64444:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":4017,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":3777,"name":"ElementaryTypeName","src":"64458:6:0"}],"id":3778,"name":"VariableDeclaration","src":"64458:21:0"},{"attributes":{"constant":false,"name":"trustedDarknodeRegistry","scope":4017,"stateVariable":true,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":3779,"name":"UserDefinedTypeName","src":"64527:16:0"}],"id":3780,"name":"VariableDeclaration","src":"64527:47:0"},{"attributes":{"constant":false,"name":"trustedOrderbook","scope":4017,"stateVariable":true,"storageLocation":"default","type":"contract Orderbook","value":null,"visibility":"public"},"children":[{"attributes":{"contractScope":null,"name":"Orderbook","referencedDeclaration":3632,"type":"contract Orderbook"},"id":3781,"name":"UserDefinedTypeName","src":"64580:9:0"}],"id":3782,"name":"VariableDeclaration","src":"64580:33:0"},{"attributes":{"constant":false,"name":"orderSubmitted","scope":4017,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => bool)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => bool)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3783,"name":"ElementaryTypeName","src":"64628:7:0"},{"attributes":{"name":"bool","type":"bool"},"id":3784,"name":"ElementaryTypeName","src":"64639:4:0"}],"id":3785,"name":"Mapping","src":"64620:24:0"}],"id":3786,"name":"VariableDeclaration","src":"64620:46:0"},{"attributes":{"constant":false,"name":"challengeSubmitted","scope":4017,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => mapping(bytes32 => bool))","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => mapping(bytes32 => bool))"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3787,"name":"ElementaryTypeName","src":"64680:7:0"},{"attributes":{"type":"mapping(bytes32 => bool)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3788,"name":"ElementaryTypeName","src":"64699:7:0"},{"attributes":{"name":"bool","type":"bool"},"id":3789,"name":"ElementaryTypeName","src":"64710:4:0"}],"id":3790,"name":"Mapping","src":"64691:24:0"}],"id":3791,"name":"Mapping","src":"64672:44:0"}],"id":3792,"name":"VariableDeclaration","src":"64672:70:0"},{"attributes":{"constant":false,"name":"orderDetails","scope":4017,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => struct SettlementUtils.OrderDetails)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => struct SettlementUtils.OrderDetails)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3793,"name":"ElementaryTypeName","src":"64756:7:0"},{"attributes":{"contractScope":null,"name":"SettlementUtils.OrderDetails","referencedDeclaration":3643,"type":"struct SettlementUtils.OrderDetails"},"id":3794,"name":"UserDefinedTypeName","src":"64767:28:0"}],"id":3795,"name":"Mapping","src":"64748:48:0"}],"id":3796,"name":"VariableDeclaration","src":"64748:68:0"},{"attributes":{"constant":false,"name":"challengers","scope":4017,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => address)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => address)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3797,"name":"ElementaryTypeName","src":"64830:7:0"},{"attributes":{"name":"address","type":"address"},"id":3798,"name":"ElementaryTypeName","src":"64841:7:0"}],"id":3799,"name":"Mapping","src":"64822:27:0"}],"id":3800,"name":"VariableDeclaration","src":"64822:46:0"},{"attributes":{"documentation":"@notice Restricts calling a function to registered or deregistered darknodes","name":"onlyDarknode","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":3801,"name":"ParameterList","src":"64981:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99a0fbb213024729bb8b145c1ac85dd65f77ccfbfb8c8d0d37d1fca2742e9a9e","typeString":"literal_string \"must be darknode\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3802,"name":"Identifier","src":"64994:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"isRegistered","referencedDeclaration":2468,"type":"function (address) view external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3780,"type":"contract DarknodeRegistry","value":"trustedDarknodeRegistry"},"id":3803,"name":"Identifier","src":"65015:23:0"}],"id":3804,"name":"MemberAccess","src":"65015:36:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3805,"name":"Identifier","src":"65052:3:0"}],"id":3806,"name":"MemberAccess","src":"65052:10:0"}],"id":3807,"name":"FunctionCall","src":"65015:48:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"isDeregistered","referencedDeclaration":2382,"type":"function (address) view external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3780,"type":"contract DarknodeRegistry","value":"trustedDarknodeRegistry"},"id":3808,"name":"Identifier","src":"65079:23:0"}],"id":3809,"name":"MemberAccess","src":"65079:38:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3810,"name":"Identifier","src":"65118:3:0"}],"id":3811,"name":"MemberAccess","src":"65118:10:0"}],"id":3812,"name":"FunctionCall","src":"65079:50:0"}],"id":3813,"name":"BinaryOperation","src":"65015:114:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6d757374206265206461726b6e6f6465","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"must be darknode\"","value":"must be darknode"},"id":3814,"name":"Literal","src":"65143:18:0"}],"id":3815,"name":"FunctionCall","src":"64994:168:0"}],"id":3816,"name":"ExpressionStatement","src":"64994:168:0"},{"id":3817,"name":"PlaceholderStatement","src":"65172:1:0"}],"id":3818,"name":"Block","src":"64984:196:0"}],"id":3819,"name":"ModifierDefinition","src":"64960:220:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.\n @param _darknodeRegistry The address of the DarknodeRegistry contract\n @param _orderbook The address of the Orderbook contract","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":4017,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":3841,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":3820,"name":"ElementaryTypeName","src":"65454:6:0"}],"id":3821,"name":"VariableDeclaration","src":"65454:15:0"},{"attributes":{"constant":false,"name":"_darknodeRegistry","scope":3841,"stateVariable":false,"storageLocation":"default","type":"contract DarknodeRegistry","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"DarknodeRegistry","referencedDeclaration":2648,"type":"contract DarknodeRegistry"},"id":3822,"name":"UserDefinedTypeName","src":"65471:16:0"}],"id":3823,"name":"VariableDeclaration","src":"65471:34:0"},{"attributes":{"constant":false,"name":"_orderbook","scope":3841,"stateVariable":false,"storageLocation":"default","type":"contract Orderbook","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Orderbook","referencedDeclaration":3632,"type":"contract Orderbook"},"id":3824,"name":"UserDefinedTypeName","src":"65507:9:0"}],"id":3825,"name":"VariableDeclaration","src":"65507:20:0"}],"id":3826,"name":"ParameterList","src":"65453:75:0"},{"attributes":{"parameters":[null]},"children":[],"id":3827,"name":"ParameterList","src":"65536:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3778,"type":"string storage ref","value":"VERSION"},"id":3828,"name":"Identifier","src":"65546:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3821,"type":"string memory","value":"_VERSION"},"id":3829,"name":"Identifier","src":"65556:8:0"}],"id":3830,"name":"Assignment","src":"65546:18:0"}],"id":3831,"name":"ExpressionStatement","src":"65546:18:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract DarknodeRegistry"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3780,"type":"contract DarknodeRegistry","value":"trustedDarknodeRegistry"},"id":3832,"name":"Identifier","src":"65574:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3823,"type":"contract DarknodeRegistry","value":"_darknodeRegistry"},"id":3833,"name":"Identifier","src":"65600:17:0"}],"id":3834,"name":"Assignment","src":"65574:43:0"}],"id":3835,"name":"ExpressionStatement","src":"65574:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"contract Orderbook"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3782,"type":"contract Orderbook","value":"trustedOrderbook"},"id":3836,"name":"Identifier","src":"65627:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3825,"type":"contract Orderbook","value":"_orderbook"},"id":3837,"name":"Identifier","src":"65646:10:0"}],"id":3838,"name":"Assignment","src":"65627:29:0"}],"id":3839,"name":"ExpressionStatement","src":"65627:29:0"}],"id":3840,"name":"Block","src":"65536:127:0"}],"id":3841,"name":"FunctionDefinition","src":"65442:221:0"},{"attributes":{"constant":false,"documentation":"@notice Submits the details for one of the two orders of a challenge.\n The details are required to verify that the orders should not have been\n matched together. The parameters are the same as `submitOrder` in the\n Settlement interface.","implemented":true,"isConstructor":false,"name":"submitChallengeOrder","payable":false,"scope":4017,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"details","scope":3907,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3842,"name":"ElementaryTypeName","src":"65974:5:0"}],"id":3843,"name":"VariableDeclaration","src":"65974:13:0"},{"attributes":{"constant":false,"name":"settlementID","scope":3907,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3844,"name":"ElementaryTypeName","src":"65997:6:0"}],"id":3845,"name":"VariableDeclaration","src":"65997:19:0"},{"attributes":{"constant":false,"name":"tokens","scope":3907,"stateVariable":false,"storageLocation":"default","type":"uint64","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint64","type":"uint64"},"id":3846,"name":"ElementaryTypeName","src":"66026:6:0"}],"id":3847,"name":"VariableDeclaration","src":"66026:13:0"},{"attributes":{"constant":false,"name":"price","scope":3907,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3848,"name":"ElementaryTypeName","src":"66049:7:0"}],"id":3849,"name":"VariableDeclaration","src":"66049:13:0"},{"attributes":{"constant":false,"name":"volume","scope":3907,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3850,"name":"ElementaryTypeName","src":"66072:7:0"}],"id":3851,"name":"VariableDeclaration","src":"66072:14:0"},{"attributes":{"constant":false,"name":"minimumVolume","scope":3907,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3852,"name":"ElementaryTypeName","src":"66096:7:0"}],"id":3853,"name":"VariableDeclaration","src":"66096:21:0"}],"id":3854,"name":"ParameterList","src":"65964:159:0"},{"attributes":{"parameters":[null]},"children":[],"id":3857,"name":"ParameterList","src":"66146:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3819,"type":"modifier ()","value":"onlyDarknode"},"id":3855,"name":"Identifier","src":"66133:12:0"}],"id":3856,"name":"ModifierInvocation","src":"66133:12:0"},{"children":[{"attributes":{"assignments":[3861]},"children":[{"attributes":{"constant":false,"name":"order","scope":3907,"stateVariable":false,"storageLocation":"memory","type":"struct SettlementUtils.OrderDetails","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"SettlementUtils.OrderDetails","referencedDeclaration":3643,"type":"struct SettlementUtils.OrderDetails"},"id":3860,"name":"UserDefinedTypeName","src":"66156:28:0"}],"id":3861,"name":"VariableDeclaration","src":"66156:41:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["settlementID","tokens","price","volume","minimumVolume"],"type":"struct SettlementUtils.OrderDetails memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"OrderDetails","referencedDeclaration":3643,"type":"type(struct SettlementUtils.OrderDetails storage pointer)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3774,"type":"type(library SettlementUtils)","value":"SettlementUtils"},"id":3862,"name":"Identifier","src":"66200:15:0"}],"id":3863,"name":"MemberAccess","src":"66200:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3845,"type":"uint64","value":"settlementID"},"id":3864,"name":"Identifier","src":"66257:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3847,"type":"uint64","value":"tokens"},"id":3865,"name":"Identifier","src":"66291:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3849,"type":"uint256","value":"price"},"id":3866,"name":"Identifier","src":"66318:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3851,"type":"uint256","value":"volume"},"id":3867,"name":"Identifier","src":"66345:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3853,"type":"uint256","value":"minimumVolume"},"id":3868,"name":"Identifier","src":"66380:13:0"}],"id":3869,"name":"FunctionCall","src":"66200:204:0"}],"id":3870,"name":"VariableDeclarationStatement","src":"66156:248:0"},{"attributes":{"assignments":[3872]},"children":[{"attributes":{"constant":false,"name":"orderID","scope":3907,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3871,"name":"ElementaryTypeName","src":"66441:7:0"}],"id":3872,"name":"VariableDeclaration","src":"66441:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_struct$_OrderDetails_$3643_memory_ptr","typeString":"struct SettlementUtils.OrderDetails memory"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"hashOrder","referencedDeclaration":3670,"type":"function (bytes memory,struct SettlementUtils.OrderDetails memory) pure returns (bytes32)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3774,"type":"type(library SettlementUtils)","value":"SettlementUtils"},"id":3873,"name":"Identifier","src":"66459:15:0"}],"id":3874,"name":"MemberAccess","src":"66459:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3843,"type":"bytes calldata","value":"details"},"id":3875,"name":"Identifier","src":"66485:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3861,"type":"struct SettlementUtils.OrderDetails memory","value":"order"},"id":3876,"name":"Identifier","src":"66494:5:0"}],"id":3877,"name":"FunctionCall","src":"66459:41:0"}],"id":3878,"name":"VariableDeclarationStatement","src":"66441:59:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbef50cd6063174ee6a89b5d85ba474ace408e5901e4661fe5a550fd9506640d","typeString":"literal_string \"already submitted\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3879,"name":"Identifier","src":"66577:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3786,"type":"mapping(bytes32 => bool)","value":"orderSubmitted"},"id":3880,"name":"Identifier","src":"66586:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3872,"type":"bytes32","value":"orderID"},"id":3881,"name":"Identifier","src":"66601:7:0"}],"id":3882,"name":"IndexAccess","src":"66586:23:0"}],"id":3883,"name":"UnaryOperation","src":"66585:24:0"},{"attributes":{"argumentTypes":null,"hexvalue":"616c7265616479207375626d6974746564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"already submitted\"","value":"already submitted"},"id":3884,"name":"Literal","src":"66611:19:0"}],"id":3885,"name":"FunctionCall","src":"66577:54:0"}],"id":3886,"name":"ExpressionStatement","src":"66577:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct SettlementUtils.OrderDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct SettlementUtils.OrderDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3796,"type":"mapping(bytes32 => struct SettlementUtils.OrderDetails storage ref)","value":"orderDetails"},"id":3887,"name":"Identifier","src":"66696:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3872,"type":"bytes32","value":"orderID"},"id":3888,"name":"Identifier","src":"66709:7:0"}],"id":3889,"name":"IndexAccess","src":"66696:21:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3861,"type":"struct SettlementUtils.OrderDetails memory","value":"order"},"id":3890,"name":"Identifier","src":"66720:5:0"}],"id":3891,"name":"Assignment","src":"66696:29:0"}],"id":3892,"name":"ExpressionStatement","src":"66696:29:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3800,"type":"mapping(bytes32 => address)","value":"challengers"},"id":3893,"name":"Identifier","src":"66735:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3872,"type":"bytes32","value":"orderID"},"id":3894,"name":"Identifier","src":"66747:7:0"}],"id":3895,"name":"IndexAccess","src":"66735:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4032,"type":"msg","value":"msg"},"id":3896,"name":"Identifier","src":"66758:3:0"}],"id":3897,"name":"MemberAccess","src":"66758:10:0"}],"id":3898,"name":"Assignment","src":"66735:33:0"}],"id":3899,"name":"ExpressionStatement","src":"66735:33:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3786,"type":"mapping(bytes32 => bool)","value":"orderSubmitted"},"id":3900,"name":"Identifier","src":"66778:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3872,"type":"bytes32","value":"orderID"},"id":3901,"name":"Identifier","src":"66793:7:0"}],"id":3902,"name":"IndexAccess","src":"66778:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":3903,"name":"Literal","src":"66804:4:0"}],"id":3904,"name":"Assignment","src":"66778:30:0"}],"id":3905,"name":"ExpressionStatement","src":"66778:30:0"}],"id":3906,"name":"Block","src":"66146:669:0"}],"id":3907,"name":"FunctionDefinition","src":"65935:880:0"},{"attributes":{"constant":false,"documentation":"@notice Submits a challenge for two orders. This challenge is a claim\n that two orders were confirmed that should not have been confirmed.\n Before calling this method, `submitOrder` must be called for both the\n `_buyID` and `_sellID` orders.\n\n    /// @param _buyID The order ID of a buy order that was maliciously\n        confirmed with the `_sellID`.\n @param _sellID The order ID of a sell order that was maliciously\n        confirmed with the `_buyID`.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"submitChallenge","payable":false,"scope":4017,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_buyID","scope":4016,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3908,"name":"ElementaryTypeName","src":"67358:7:0"}],"id":3909,"name":"VariableDeclaration","src":"67358:14:0"},{"attributes":{"constant":false,"name":"_sellID","scope":4016,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":3910,"name":"ElementaryTypeName","src":"67374:7:0"}],"id":3911,"name":"VariableDeclaration","src":"67374:15:0"}],"id":3912,"name":"ParameterList","src":"67357:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":3913,"name":"ParameterList","src":"67400:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39dfaa8ab55411a0840e9c4fc5ddeb706c535cac86445338e347ebe5bad40efd","typeString":"literal_string \"already challenged\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3914,"name":"Identifier","src":"67475:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3792,"type":"mapping(bytes32 => mapping(bytes32 => bool))","value":"challengeSubmitted"},"id":3915,"name":"Identifier","src":"67484:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3916,"name":"Identifier","src":"67503:6:0"}],"id":3917,"name":"IndexAccess","src":"67484:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":3918,"name":"Identifier","src":"67511:7:0"}],"id":3919,"name":"IndexAccess","src":"67484:35:0"}],"id":3920,"name":"UnaryOperation","src":"67483:36:0"},{"attributes":{"argumentTypes":null,"hexvalue":"616c7265616479206368616c6c656e676564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"already challenged\"","value":"already challenged"},"id":3921,"name":"Literal","src":"67521:20:0"}],"id":3922,"name":"FunctionCall","src":"67475:67:0"}],"id":3923,"name":"ExpressionStatement","src":"67475:67:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cd4ea2dbb1327ff2bacf14b158bb32ed80172aabcec87785766e33c12a18191","typeString":"literal_string \"details unavailable\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3924,"name":"Identifier","src":"67613:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3786,"type":"mapping(bytes32 => bool)","value":"orderSubmitted"},"id":3925,"name":"Identifier","src":"67621:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3926,"name":"Identifier","src":"67636:6:0"}],"id":3927,"name":"IndexAccess","src":"67621:22:0"},{"attributes":{"argumentTypes":null,"hexvalue":"64657461696c7320756e617661696c61626c65","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"details unavailable\"","value":"details unavailable"},"id":3928,"name":"Literal","src":"67645:21:0"}],"id":3929,"name":"FunctionCall","src":"67613:54:0"}],"id":3930,"name":"ExpressionStatement","src":"67613:54:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cd4ea2dbb1327ff2bacf14b158bb32ed80172aabcec87785766e33c12a18191","typeString":"literal_string \"details unavailable\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3931,"name":"Identifier","src":"67677:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3786,"type":"mapping(bytes32 => bool)","value":"orderSubmitted"},"id":3932,"name":"Identifier","src":"67685:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":3933,"name":"Identifier","src":"67700:7:0"}],"id":3934,"name":"IndexAccess","src":"67685:23:0"},{"attributes":{"argumentTypes":null,"hexvalue":"64657461696c7320756e617661696c61626c65","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"details unavailable\"","value":"details unavailable"},"id":3935,"name":"Literal","src":"67710:21:0"}],"id":3936,"name":"FunctionCall","src":"67677:55:0"}],"id":3937,"name":"ExpressionStatement","src":"67677:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a958375a772643499c4b1a7f9fddbdd85f737947ae9b9700b6f5b1985cf4e8ef","typeString":"literal_string \"unconfirmed orders\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3938,"name":"Identifier","src":"67806:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"orderMatch","referencedDeclaration":3419,"type":"function (bytes32) view external returns (bytes32)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3782,"type":"contract Orderbook","value":"trustedOrderbook"},"id":3939,"name":"Identifier","src":"67814:16:0"}],"id":3940,"name":"MemberAccess","src":"67814:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3941,"name":"Identifier","src":"67842:6:0"}],"id":3942,"name":"FunctionCall","src":"67814:35:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":3943,"name":"Identifier","src":"67853:7:0"}],"id":3944,"name":"BinaryOperation","src":"67814:46:0"},{"attributes":{"argumentTypes":null,"hexvalue":"756e636f6e6669726d6564206f7264657273","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"unconfirmed orders\"","value":"unconfirmed orders"},"id":3945,"name":"Literal","src":"67862:20:0"}],"id":3946,"name":"FunctionCall","src":"67806:77:0"}],"id":3947,"name":"ExpressionStatement","src":"67806:77:0"},{"attributes":{"assignments":[3949]},"children":[{"attributes":{"constant":false,"name":"mismatchedDetails","scope":4016,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3948,"name":"ElementaryTypeName","src":"68094:4:0"}],"id":3949,"name":"VariableDeclaration","src":"68094:22:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_OrderDetails_$3643_storage","typeString":"struct SettlementUtils.OrderDetails storage ref"},{"typeIdentifier":"t_struct$_OrderDetails_$3643_storage","typeString":"struct SettlementUtils.OrderDetails storage ref"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"verifyMatchDetails","referencedDeclaration":3729,"type":"function (struct SettlementUtils.OrderDetails memory,struct SettlementUtils.OrderDetails memory) pure returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3774,"type":"type(library SettlementUtils)","value":"SettlementUtils"},"id":3950,"name":"Identifier","src":"68120:15:0"}],"id":3951,"name":"MemberAccess","src":"68120:34:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SettlementUtils.OrderDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3796,"type":"mapping(bytes32 => struct SettlementUtils.OrderDetails storage ref)","value":"orderDetails"},"id":3952,"name":"Identifier","src":"68155:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3953,"name":"Identifier","src":"68168:6:0"}],"id":3954,"name":"IndexAccess","src":"68155:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SettlementUtils.OrderDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3796,"type":"mapping(bytes32 => struct SettlementUtils.OrderDetails storage ref)","value":"orderDetails"},"id":3955,"name":"Identifier","src":"68177:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":3956,"name":"Identifier","src":"68190:7:0"}],"id":3957,"name":"IndexAccess","src":"68177:21:0"}],"id":3958,"name":"FunctionCall","src":"68120:79:0"}],"id":3959,"name":"UnaryOperation","src":"68119:80:0"}],"id":3960,"name":"VariableDeclarationStatement","src":"68094:105:0"},{"attributes":{"assignments":[3962]},"children":[{"attributes":{"constant":false,"name":"nondistinctTrader","scope":4016,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":3961,"name":"ElementaryTypeName","src":"68209:4:0"}],"id":3962,"name":"VariableDeclaration","src":"68209:22:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"orderTrader","referencedDeclaration":3445,"type":"function (bytes32) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3782,"type":"contract Orderbook","value":"trustedOrderbook"},"id":3963,"name":"Identifier","src":"68234:16:0"}],"id":3964,"name":"MemberAccess","src":"68234:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3965,"name":"Identifier","src":"68263:6:0"}],"id":3966,"name":"FunctionCall","src":"68234:36:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"orderTrader","referencedDeclaration":3445,"type":"function (bytes32) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3782,"type":"contract Orderbook","value":"trustedOrderbook"},"id":3967,"name":"Identifier","src":"68274:16:0"}],"id":3968,"name":"MemberAccess","src":"68274:28:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":3969,"name":"Identifier","src":"68303:7:0"}],"id":3970,"name":"FunctionCall","src":"68274:37:0"}],"id":3971,"name":"BinaryOperation","src":"68234:77:0"}],"id":3972,"name":"VariableDeclarationStatement","src":"68209:102:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18c53c85fe530643b2a0ccb7eb02867006e92d1f8fbd48b6b097e79cb5efadda","typeString":"literal_string \"invalid challenge\""}],"overloadedDeclarations":[4035,4036],"referencedDeclaration":4036,"type":"function (bool,string memory) pure","value":"require"},"id":3973,"name":"Identifier","src":"68321:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"||","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3949,"type":"bool","value":"mismatchedDetails"},"id":3974,"name":"Identifier","src":"68329:17:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3962,"type":"bool","value":"nondistinctTrader"},"id":3975,"name":"Identifier","src":"68350:17:0"}],"id":3976,"name":"BinaryOperation","src":"68329:38:0"},{"attributes":{"argumentTypes":null,"hexvalue":"696e76616c6964206368616c6c656e6765","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"invalid challenge\"","value":"invalid challenge"},"id":3977,"name":"Literal","src":"68369:19:0"}],"id":3978,"name":"FunctionCall","src":"68321:68:0"}],"id":3979,"name":"ExpressionStatement","src":"68321:68:0"},{"attributes":{"assignments":[3981]},"children":[{"attributes":{"constant":false,"name":"confirmer","scope":4016,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":3980,"name":"ElementaryTypeName","src":"68441:7:0"}],"id":3981,"name":"VariableDeclaration","src":"68441:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"orderConfirmer","referencedDeclaration":3458,"type":"function (bytes32) view external returns (address)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3782,"type":"contract Orderbook","value":"trustedOrderbook"},"id":3982,"name":"Identifier","src":"68461:16:0"}],"id":3983,"name":"MemberAccess","src":"68461:31:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3984,"name":"Identifier","src":"68493:6:0"}],"id":3985,"name":"FunctionCall","src":"68461:39:0"}],"id":3986,"name":"VariableDeclarationStatement","src":"68441:59:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3792,"type":"mapping(bytes32 => mapping(bytes32 => bool))","value":"challengeSubmitted"},"id":3987,"name":"Identifier","src":"68562:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3988,"name":"Identifier","src":"68581:6:0"}],"id":3990,"name":"IndexAccess","src":"68562:26:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":3989,"name":"Identifier","src":"68589:7:0"}],"id":3991,"name":"IndexAccess","src":"68562:35:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":3992,"name":"Literal","src":"68600:4:0"}],"id":3993,"name":"Assignment","src":"68562:42:0"}],"id":3994,"name":"ExpressionStatement","src":"68562:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3792,"type":"mapping(bytes32 => mapping(bytes32 => bool))","value":"challengeSubmitted"},"id":3995,"name":"Identifier","src":"68614:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":3996,"name":"Identifier","src":"68633:7:0"}],"id":3998,"name":"IndexAccess","src":"68614:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":3997,"name":"Identifier","src":"68642:6:0"}],"id":3999,"name":"IndexAccess","src":"68614:35:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":4000,"name":"Literal","src":"68652:4:0"}],"id":4001,"name":"Assignment","src":"68614:42:0"}],"id":4002,"name":"ExpressionStatement","src":"68614:42:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"slash","referencedDeclaration":2170,"type":"function (address,address,address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3780,"type":"contract DarknodeRegistry","value":"trustedDarknodeRegistry"},"id":4003,"name":"Identifier","src":"68710:23:0"}],"id":4005,"name":"MemberAccess","src":"68710:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3981,"type":"address","value":"confirmer"},"id":4006,"name":"Identifier","src":"68740:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3800,"type":"mapping(bytes32 => address)","value":"challengers"},"id":4007,"name":"Identifier","src":"68751:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3909,"type":"bytes32","value":"_buyID"},"id":4008,"name":"Identifier","src":"68763:6:0"}],"id":4009,"name":"IndexAccess","src":"68751:19:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3800,"type":"mapping(bytes32 => address)","value":"challengers"},"id":4010,"name":"Identifier","src":"68772:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3911,"type":"bytes32","value":"_sellID"},"id":4011,"name":"Identifier","src":"68784:7:0"}],"id":4012,"name":"IndexAccess","src":"68772:20:0"}],"id":4013,"name":"FunctionCall","src":"68710:83:0"}],"id":4014,"name":"ExpressionStatement","src":"68710:83:0"}],"id":4015,"name":"Block","src":"67400:1400:0"}],"id":4016,"name":"FunctionDefinition","src":"67333:1467:0"}],"id":4017,"name":"ContractDefinition","src":"64416:4386:0"}],"id":4018,"name":"SourceUnit","src":"0:68802:0"}}