{"name":"RenExTokens","address":"0x7cade4fbc8761817bb62a080733d1b6cad744ec4","source":"pragma solidity ^0.4.24;\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n/// @notice RenExTokens is a registry of tokens that can be traded on RenEx.\ncontract RenExTokens is Ownable {\n    string public VERSION; // Passed in as a constructor parameter.\n\n    struct TokenDetails {\n        address addr;\n        uint8 decimals;\n        bool registered;\n    }\n\n    // Storage\n    mapping(uint32 => TokenDetails) public tokens;\n    mapping(uint32 => bool) private detailsSubmitted;\n\n    // Events\n    event LogTokenRegistered(uint32 tokenCode, address tokenAddress, uint8 tokenDecimals);\n    event LogTokenDeregistered(uint32 tokenCode);\n\n    /// @notice The contract constructor.\n    ///\n    /// @param _VERSION A string defining the contract version.\n    constructor(string _VERSION) public {\n        VERSION = _VERSION;\n    }\n\n    /// @notice Allows the owner to register and the details for a token.\n    /// Once details have been submitted, they cannot be overwritten.\n    /// To re-register the same token with different details (e.g. if the address\n    /// has changed), a different token identifier should be used and the\n    /// previous token identifier should be deregistered.\n    /// If a token is not Ethereum-based, the address will be set to 0x0.\n    ///\n    /// @param _tokenCode A unique 32-bit token identifier.\n    /// @param _tokenAddress The address of the token.\n    /// @param _tokenDecimals The decimals to use for the token.\n    function registerToken(uint32 _tokenCode, address _tokenAddress, uint8 _tokenDecimals) public onlyOwner {\n        require(!tokens[_tokenCode].registered, \"already registered\");\n\n        // If a token is being re-registered, the same details must be provided.\n        if (detailsSubmitted[_tokenCode]) {\n            require(tokens[_tokenCode].addr == _tokenAddress, \"different address\");\n            require(tokens[_tokenCode].decimals == _tokenDecimals, \"different decimals\");\n        } else {\n            detailsSubmitted[_tokenCode] = true;\n        }\n\n        tokens[_tokenCode] = TokenDetails({\n            addr: _tokenAddress,\n            decimals: _tokenDecimals,\n            registered: true\n        });\n\n        emit LogTokenRegistered(_tokenCode, _tokenAddress, _tokenDecimals);\n    }\n\n    /// @notice Sets a token as being deregistered. The details are still stored\n    /// to prevent the token from being re-registered with different details.\n    ///\n    /// @param _tokenCode The unique 32-bit token identifier.\n    function deregisterToken(uint32 _tokenCode) external onlyOwner {\n        require(tokens[_tokenCode].registered, \"not registered\");\n\n        tokens[_tokenCode].registered = false;\n\n        emit LogTokenDeregistered(_tokenCode);\n    }\n}","contract":{"abi":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenCode\",\"type\":\"uint32\"}],\"name\":\"deregisterToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenCode\",\"type\":\"uint32\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_tokenDecimals\",\"type\":\"uint8\"}],\"name\":\"registerToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"registered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_VERSION\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenCode\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"name\":\"LogTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenCode\",\"type\":\"uint32\"}],\"name\":\"LogTokenDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","bin":"608060405234801561001057600080fd5b50604051610dce380380610dce83398101806040528101908080518201929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060019080519060200190610089929190610090565b5050610135565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100d157805160ff19168380011785556100ff565b828001600101855582156100ff579182015b828111156100fe5782518255916020019190600101906100e3565b5b50905061010c9190610110565b5090565b61013291905b8082111561012e576000816000905550600101610116565b5090565b90565b610c8a806101446000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325fc575a14610088578063715018a6146100bb5780638da5cb5b146100d25780639e20a9a014610129578063f2fde38b14610189578063fbb6272d146101cc578063ffa1ad7414610257575b600080fd5b34801561009457600080fd5b506100b9600480360381019080803563ffffffff1690602001909291905050506102e7565b005b3480156100c757600080fd5b506100d0610467565b005b3480156100de57600080fd5b506100e7610569565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013557600080fd5b50610187600480360381019080803563ffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919050505061058e565b005b34801561019557600080fd5b506101ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109fb565b005b3480156101d857600080fd5b506101fd600480360381019080803563ffffffff169060200190929190505050610a62565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff16815260200182151515158152602001935050505060405180910390f35b34801561026357600080fd5b5061026c610ac6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ac578082015181840152602081019050610291565b50505050905090810190601f1680156102d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034257600080fd5b600260008263ffffffff1663ffffffff16815260200190815260200160002060000160159054906101000a900460ff1615156103e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f74207265676973746572656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600260008363ffffffff1663ffffffff16815260200190815260200160002060000160156101000a81548160ff0219169083151502179055507fa521f8871580a5e5b43fa9c01cd9c3a22f4be51fb276e322656db351dbdef32081604051808263ffffffff1663ffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e957600080fd5b600260008463ffffffff1663ffffffff16815260200190815260200160002060000160159054906101000a900460ff1615151561068e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f616c72656164792072656769737465726564000000000000000000000000000081525060200191505060405180910390fd5b600360008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff1615610856578173ffffffffffffffffffffffffffffffffffffffff16600260008563ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f646966666572656e74206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b8060ff16600260008563ffffffff1663ffffffff16815260200190815260200160002060000160149054906101000a900460ff1660ff16141515610851576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f646966666572656e7420646563696d616c73000000000000000000000000000081525060200191505060405180910390fd5b61088f565b6001600360008563ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6060604051908101604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260ff16815260200160011515815250600260008563ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548160ff0219169083151502179055509050507f3b2dff39857f1432a4160494b13a3d9c1bd8781453d9d6f56153b69d89792a35838383604051808463ffffffff1663ffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff168152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a5657600080fd5b610a5f81610b64565b50565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16905083565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b5c5780601f10610b3157610100808354040283529160200191610b5c565b820191906000526020600020905b815481529060010190602001808311610b3f57829003601f168201915b505050505081565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ba057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582041f2d3a0019c80c9d4b623d47f82acbfbd34007bca22fff27cc3cd9663ebab5e0029","bin-runtime":"608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806325fc575a14610088578063715018a6146100bb5780638da5cb5b146100d25780639e20a9a014610129578063f2fde38b14610189578063fbb6272d146101cc578063ffa1ad7414610257575b600080fd5b34801561009457600080fd5b506100b9600480360381019080803563ffffffff1690602001909291905050506102e7565b005b3480156100c757600080fd5b506100d0610467565b005b3480156100de57600080fd5b506100e7610569565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013557600080fd5b50610187600480360381019080803563ffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919050505061058e565b005b34801561019557600080fd5b506101ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109fb565b005b3480156101d857600080fd5b506101fd600480360381019080803563ffffffff169060200190929190505050610a62565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff16815260200182151515158152602001935050505060405180910390f35b34801561026357600080fd5b5061026c610ac6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ac578082015181840152602081019050610291565b50505050905090810190601f1680156102d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034257600080fd5b600260008263ffffffff1663ffffffff16815260200190815260200160002060000160159054906101000a900460ff1615156103e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f74207265676973746572656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600260008363ffffffff1663ffffffff16815260200190815260200160002060000160156101000a81548160ff0219169083151502179055507fa521f8871580a5e5b43fa9c01cd9c3a22f4be51fb276e322656db351dbdef32081604051808263ffffffff1663ffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e957600080fd5b600260008463ffffffff1663ffffffff16815260200190815260200160002060000160159054906101000a900460ff1615151561068e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f616c72656164792072656769737465726564000000000000000000000000000081525060200191505060405180910390fd5b600360008463ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff1615610856578173ffffffffffffffffffffffffffffffffffffffff16600260008563ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156107a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f646966666572656e74206164647265737300000000000000000000000000000081525060200191505060405180910390fd5b8060ff16600260008563ffffffff1663ffffffff16815260200190815260200160002060000160149054906101000a900460ff1660ff16141515610851576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f646966666572656e7420646563696d616c73000000000000000000000000000081525060200191505060405180910390fd5b61088f565b6001600360008563ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6060604051908101604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260ff16815260200160011515815250600260008563ffffffff1663ffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548160ff0219169083151502179055509050507f3b2dff39857f1432a4160494b13a3d9c1bd8781453d9d6f56153b69d89792a35838383604051808463ffffffff1663ffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff168152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a5657600080fd5b610a5f81610b64565b50565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16905083565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b5c5780601f10610b3157610100808354040283529160200191610b5c565b820191906000526020600020905b815481529060010190602001808311610b3f57829003601f168201915b505050505081565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ba057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582041f2d3a0019c80c9d4b623d47f82acbfbd34007bca22fff27cc3cd9663ebab5e0029","srcmap":"1763:2560:0:-;;;2365:71;8:9:-1;5:2;;;30:1;27;20:12;5:2;2365:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:10;566:5;;:18;;;;;;;;;;;;;;;;;;2421:8;2411:7;:18;;;;;;;;;;;;:::i;:::-;;2365:71;1763:2560;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","srcmap-runtime":"1763:2560:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4089:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4089:232:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:111:0;;;;;;237:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:792;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3062:792:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1989:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1989:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1801:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1801:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4089:232;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;4170:6;:18;4177:10;4170:18;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4162:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4261:5;4229:6;:18;4236:10;4229:18;;;;;;;;;;;;;;;:29;;;:37;;;;;;;;;;;;;;;;;;4282:32;4303:10;4282:32;;;;;;;;;;;;;;;;;;;;;;4089:232;:::o;1000:111::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;1076:5;;;;;;;;;;;1057:25;;;;;;;;;;;;1104:1;1088:5;;:18;;;;;;;;;;;;;;;;;;1000:111::o;237:20::-;;;;;;;;;;;;;:::o;3062:792::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;3185:6;:18;3192:10;3185:18;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3184:30;3176:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3333:16;:28;3350:10;3333:28;;;;;;;;;;;;;;;;;;;;;;;;;3329:285;;;3412:13;3385:40;;:6;:18;3392:10;3385:18;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:40;;;3377:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3500:14;3469:45;;:6;:18;3476:10;3469:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:45;;;3461:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3329:285;;;3599:4;3568:16;:28;3585:10;3568:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;3329:285;3645:125;;;;;;;;;3678:13;3645:125;;;;;;3715:14;3645:125;;;;;;3755:4;3645:125;;;;;3624:6;:18;3631:10;3624:18;;;;;;;;;;;;;;;:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3786:61;3805:10;3817:13;3832:14;3786:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3062:792;;;:::o;1273:103::-;718:5;;;;;;;;;;;704:19;;:10;:19;;;696:28;;;;;;;;1342:29;1361:9;1342:18;:29::i;:::-;1273:103;:::o;1989:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1801:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1511:171::-;1602:1;1581:23;;:9;:23;;;;1573:32;;;;;;;;1644:9;1616:38;;1637:5;;;;;;;;;;;1616:38;;;;;;;;;;;;1668:9;1660:5;;:17;;;;;;;;;;;;;;;;;;1511:171;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0x7cade4fbc8761817bb62a080733d1b6cad744ec4_RenExTokens.sol","exportedSymbols":{"Ownable":[85],"RenExTokens":[223]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".","fullyImplemented":true,"linearizedBaseContracts":[85],"name":"Ownable","scope":224},"children":[{"attributes":{"constant":false,"name":"owner","scope":85,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":2,"name":"ElementaryTypeName","src":"237:7:0"}],"id":3,"name":"VariableDeclaration","src":"237:20:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipRenounced"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":7,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":4,"name":"ElementaryTypeName","src":"288:7:0"}],"id":5,"name":"VariableDeclaration","src":"288:29:0"}],"id":6,"name":"ParameterList","src":"287:31:0"}],"id":7,"name":"EventDefinition","src":"263:56:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipTransferred"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":13,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":8,"name":"ElementaryTypeName","src":"354:7:0"}],"id":9,"name":"VariableDeclaration","src":"354:29:0"},{"attributes":{"constant":false,"indexed":true,"name":"newOwner","scope":13,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":10,"name":"ElementaryTypeName","src":"389:7:0"}],"id":11,"name":"VariableDeclaration","src":"389:24:0"}],"id":12,"name":"ParameterList","src":"348:69:0"}],"id":13,"name":"EventDefinition","src":"322:96:0"},{"attributes":{"constant":false,"documentation":"@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":14,"name":"ParameterList","src":"550:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":15,"name":"ParameterList","src":"560:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":16,"name":"Identifier","src":"566:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":238,"type":"msg","value":"msg"},"id":17,"name":"Identifier","src":"574:3:0"}],"id":18,"name":"MemberAccess","src":"574:10:0"}],"id":19,"name":"Assignment","src":"566:18:0"}],"id":20,"name":"ExpressionStatement","src":"566:18:0"}],"id":21,"name":"Block","src":"560:29:0"}],"id":22,"name":"FunctionDefinition","src":"539:50:0"},{"attributes":{"documentation":"@dev Throws if called by any account other than the owner.","name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":23,"name":"ParameterList","src":"687:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[241,242],"referencedDeclaration":241,"type":"function (bool) pure","value":"require"},"id":24,"name":"Identifier","src":"696:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":238,"type":"msg","value":"msg"},"id":25,"name":"Identifier","src":"704:3:0"}],"id":26,"name":"MemberAccess","src":"704:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":27,"name":"Identifier","src":"718:5:0"}],"id":28,"name":"BinaryOperation","src":"704:19:0"}],"id":29,"name":"FunctionCall","src":"696:28:0"}],"id":30,"name":"ExpressionStatement","src":"696:28:0"},{"id":31,"name":"PlaceholderStatement","src":"730:1:0"}],"id":32,"name":"Block","src":"690:46:0"}],"id":33,"name":"ModifierDefinition","src":"669:67:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.","implemented":true,"isConstructor":false,"name":"renounceOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":34,"name":"ParameterList","src":"1026:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":37,"name":"ParameterList","src":"1046:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":35,"name":"Identifier","src":"1036:9:0"}],"id":36,"name":"ModifierInvocation","src":"1036:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"function (address)","value":"OwnershipRenounced"},"id":38,"name":"Identifier","src":"1057:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":39,"name":"Identifier","src":"1076:5:0"}],"id":40,"name":"FunctionCall","src":"1057:25:0"}],"id":41,"name":"EmitStatement","src":"1052:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":42,"name":"Identifier","src":"1088:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":43,"name":"ElementaryTypeNameExpression","src":"1096:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":44,"name":"Literal","src":"1104:1:0"}],"id":45,"name":"FunctionCall","src":"1096:10:0"}],"id":46,"name":"Assignment","src":"1088:18:0"}],"id":47,"name":"ExpressionStatement","src":"1088:18:0"}],"id":48,"name":"Block","src":"1046:65:0"}],"id":49,"name":"FunctionDefinition","src":"1000:111:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":61,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":50,"name":"ElementaryTypeName","src":"1300:7:0"}],"id":51,"name":"VariableDeclaration","src":"1300:17:0"}],"id":52,"name":"ParameterList","src":"1299:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":55,"name":"ParameterList","src":"1336:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":53,"name":"Identifier","src":"1326:9:0"}],"id":54,"name":"ModifierInvocation","src":"1326:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":84,"type":"function (address)","value":"_transferOwnership"},"id":56,"name":"Identifier","src":"1342:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":51,"type":"address","value":"_newOwner"},"id":57,"name":"Identifier","src":"1361:9:0"}],"id":58,"name":"FunctionCall","src":"1342:29:0"}],"id":59,"name":"ExpressionStatement","src":"1342:29:0"}],"id":60,"name":"Block","src":"1336:40:0"}],"id":61,"name":"FunctionDefinition","src":"1273:103:0"},{"attributes":{"constant":false,"documentation":"@dev Transfers control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"_transferOwnership","payable":false,"scope":85,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":84,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":62,"name":"ElementaryTypeName","src":"1539:7:0"}],"id":63,"name":"VariableDeclaration","src":"1539:17:0"}],"id":64,"name":"ParameterList","src":"1538:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":65,"name":"ParameterList","src":"1567:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[241,242],"referencedDeclaration":241,"type":"function (bool) pure","value":"require"},"id":66,"name":"Identifier","src":"1573:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":67,"name":"Identifier","src":"1581:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":68,"name":"ElementaryTypeNameExpression","src":"1594:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":69,"name":"Literal","src":"1602:1:0"}],"id":70,"name":"FunctionCall","src":"1594:10:0"}],"id":71,"name":"BinaryOperation","src":"1581:23:0"}],"id":72,"name":"FunctionCall","src":"1573:32:0"}],"id":73,"name":"ExpressionStatement","src":"1573:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"function (address,address)","value":"OwnershipTransferred"},"id":74,"name":"Identifier","src":"1616:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":75,"name":"Identifier","src":"1637:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":76,"name":"Identifier","src":"1644:9:0"}],"id":77,"name":"FunctionCall","src":"1616:38:0"}],"id":78,"name":"EmitStatement","src":"1611:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"address","value":"owner"},"id":79,"name":"Identifier","src":"1660:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":63,"type":"address","value":"_newOwner"},"id":80,"name":"Identifier","src":"1668:9:0"}],"id":81,"name":"Assignment","src":"1660:17:0"}],"id":82,"name":"ExpressionStatement","src":"1660:17:0"}],"id":83,"name":"Block","src":"1567:115:0"}],"id":84,"name":"FunctionDefinition","src":"1511:171:0"}],"id":85,"name":"ContractDefinition","src":"216:1468:0"},{"attributes":{"contractDependencies":[85],"contractKind":"contract","documentation":"@notice RenExTokens is a registry of tokens that can be traded on RenEx.","fullyImplemented":true,"linearizedBaseContracts":[223,85],"name":"RenExTokens","scope":224},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":85,"type":"contract Ownable"},"id":86,"name":"UserDefinedTypeName","src":"1787:7:0"}],"id":87,"name":"InheritanceSpecifier","src":"1787:7:0"},{"attributes":{"constant":false,"name":"VERSION","scope":223,"stateVariable":true,"storageLocation":"default","type":"string","value":null,"visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":88,"name":"ElementaryTypeName","src":"1801:6:0"}],"id":89,"name":"VariableDeclaration","src":"1801:21:0"},{"attributes":{"canonicalName":"RenExTokens.TokenDetails","name":"TokenDetails","scope":223,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"addr","scope":96,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":90,"name":"ElementaryTypeName","src":"1900:7:0"}],"id":91,"name":"VariableDeclaration","src":"1900:12:0"},{"attributes":{"constant":false,"name":"decimals","scope":96,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":92,"name":"ElementaryTypeName","src":"1922:5:0"}],"id":93,"name":"VariableDeclaration","src":"1922:14:0"},{"attributes":{"constant":false,"name":"registered","scope":96,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":94,"name":"ElementaryTypeName","src":"1946:4:0"}],"id":95,"name":"VariableDeclaration","src":"1946:15:0"}],"id":96,"name":"StructDefinition","src":"1870:98:0"},{"attributes":{"constant":false,"name":"tokens","scope":223,"stateVariable":true,"storageLocation":"default","type":"mapping(uint32 => struct RenExTokens.TokenDetails)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint32 => struct RenExTokens.TokenDetails)"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":97,"name":"ElementaryTypeName","src":"1997:6:0"},{"attributes":{"contractScope":null,"name":"TokenDetails","referencedDeclaration":96,"type":"struct RenExTokens.TokenDetails"},"id":98,"name":"UserDefinedTypeName","src":"2007:12:0"}],"id":99,"name":"Mapping","src":"1989:31:0"}],"id":100,"name":"VariableDeclaration","src":"1989:45:0"},{"attributes":{"constant":false,"name":"detailsSubmitted","scope":223,"stateVariable":true,"storageLocation":"default","type":"mapping(uint32 => bool)","value":null,"visibility":"private"},"children":[{"attributes":{"type":"mapping(uint32 => bool)"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":101,"name":"ElementaryTypeName","src":"2048:6:0"},{"attributes":{"name":"bool","type":"bool"},"id":102,"name":"ElementaryTypeName","src":"2058:4:0"}],"id":103,"name":"Mapping","src":"2040:23:0"}],"id":104,"name":"VariableDeclaration","src":"2040:48:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogTokenRegistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"tokenCode","scope":112,"stateVariable":false,"storageLocation":"default","type":"uint32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":105,"name":"ElementaryTypeName","src":"2134:6:0"}],"id":106,"name":"VariableDeclaration","src":"2134:16:0"},{"attributes":{"constant":false,"indexed":false,"name":"tokenAddress","scope":112,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":107,"name":"ElementaryTypeName","src":"2152:7:0"}],"id":108,"name":"VariableDeclaration","src":"2152:20:0"},{"attributes":{"constant":false,"indexed":false,"name":"tokenDecimals","scope":112,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":109,"name":"ElementaryTypeName","src":"2174:5:0"}],"id":110,"name":"VariableDeclaration","src":"2174:19:0"}],"id":111,"name":"ParameterList","src":"2133:61:0"}],"id":112,"name":"EventDefinition","src":"2109:86:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"LogTokenDeregistered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"tokenCode","scope":116,"stateVariable":false,"storageLocation":"default","type":"uint32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":113,"name":"ElementaryTypeName","src":"2227:6:0"}],"id":114,"name":"VariableDeclaration","src":"2227:16:0"}],"id":115,"name":"ParameterList","src":"2226:18:0"}],"id":116,"name":"EventDefinition","src":"2200:45:0"},{"attributes":{"constant":false,"documentation":"@notice The contract constructor.\n\n    /// @param _VERSION A string defining the contract version.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":223,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_VERSION","scope":126,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":117,"name":"ElementaryTypeName","src":"2377:6:0"}],"id":118,"name":"VariableDeclaration","src":"2377:15:0"}],"id":119,"name":"ParameterList","src":"2376:17:0"},{"attributes":{"parameters":[null]},"children":[],"id":120,"name":"ParameterList","src":"2401:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"string storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":89,"type":"string storage ref","value":"VERSION"},"id":121,"name":"Identifier","src":"2411:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":118,"type":"string memory","value":"_VERSION"},"id":122,"name":"Identifier","src":"2421:8:0"}],"id":123,"name":"Assignment","src":"2411:18:0"}],"id":124,"name":"ExpressionStatement","src":"2411:18:0"}],"id":125,"name":"Block","src":"2401:35:0"}],"id":126,"name":"FunctionDefinition","src":"2365:71:0"},{"attributes":{"constant":false,"documentation":"@notice Allows the owner to register and the details for a token.\n Once details have been submitted, they cannot be overwritten.\n To re-register the same token with different details (e.g. if the address\n has changed), a different token identifier should be used and the\n previous token identifier should be deregistered.\n If a token is not Ethereum-based, the address will be set to 0x0.\n\n    /// @param _tokenCode A unique 32-bit token identifier.\n @param _tokenAddress The address of the token.\n @param _tokenDecimals The decimals to use for the token.","implemented":true,"isConstructor":false,"name":"registerToken","payable":false,"scope":223,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_tokenCode","scope":195,"stateVariable":false,"storageLocation":"default","type":"uint32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":127,"name":"ElementaryTypeName","src":"3085:6:0"}],"id":128,"name":"VariableDeclaration","src":"3085:17:0"},{"attributes":{"constant":false,"name":"_tokenAddress","scope":195,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":129,"name":"ElementaryTypeName","src":"3104:7:0"}],"id":130,"name":"VariableDeclaration","src":"3104:21:0"},{"attributes":{"constant":false,"name":"_tokenDecimals","scope":195,"stateVariable":false,"storageLocation":"default","type":"uint8","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":131,"name":"ElementaryTypeName","src":"3127:5:0"}],"id":132,"name":"VariableDeclaration","src":"3127:20:0"}],"id":133,"name":"ParameterList","src":"3084:64:0"},{"attributes":{"parameters":[null]},"children":[],"id":136,"name":"ParameterList","src":"3166:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":134,"name":"Identifier","src":"3156:9:0"}],"id":135,"name":"ModifierInvocation","src":"3156:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_269c06100417d6799f278320f8bfa70884ed5db37cbbb03507b2629ec69f83d0","typeString":"literal_string \"already registered\""}],"overloadedDeclarations":[241,242],"referencedDeclaration":242,"type":"function (bool,string memory) pure","value":"require"},"id":137,"name":"Identifier","src":"3176:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"registered","referencedDeclaration":95,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct RenExTokens.TokenDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"mapping(uint32 => struct RenExTokens.TokenDetails storage ref)","value":"tokens"},"id":138,"name":"Identifier","src":"3185:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint32","value":"_tokenCode"},"id":139,"name":"Identifier","src":"3192:10:0"}],"id":140,"name":"IndexAccess","src":"3185:18:0"}],"id":141,"name":"MemberAccess","src":"3185:29:0"}],"id":142,"name":"UnaryOperation","src":"3184:30:0"},{"attributes":{"argumentTypes":null,"hexvalue":"616c72656164792072656769737465726564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"already registered\"","value":"already registered"},"id":143,"name":"Literal","src":"3216:20:0"}],"id":144,"name":"FunctionCall","src":"3176:61:0"}],"id":145,"name":"ExpressionStatement","src":"3176:61:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":104,"type":"mapping(uint32 => bool)","value":"detailsSubmitted"},"id":146,"name":"Identifier","src":"3333:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint32","value":"_tokenCode"},"id":147,"name":"Identifier","src":"3350:10:0"}],"id":148,"name":"IndexAccess","src":"3333:28:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac9c6a841486607d1f74fe5642107c21fe210ee269713cc1da95a37541613547","typeString":"literal_string \"different address\""}],"overloadedDeclarations":[241,242],"referencedDeclaration":242,"type":"function (bool,string memory) pure","value":"require"},"id":149,"name":"Identifier","src":"3377:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"addr","referencedDeclaration":91,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct RenExTokens.TokenDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"mapping(uint32 => struct RenExTokens.TokenDetails storage ref)","value":"tokens"},"id":150,"name":"Identifier","src":"3385:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint32","value":"_tokenCode"},"id":151,"name":"Identifier","src":"3392:10:0"}],"id":152,"name":"IndexAccess","src":"3385:18:0"}],"id":153,"name":"MemberAccess","src":"3385:23:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":130,"type":"address","value":"_tokenAddress"},"id":154,"name":"Identifier","src":"3412:13:0"}],"id":155,"name":"BinaryOperation","src":"3385:40:0"},{"attributes":{"argumentTypes":null,"hexvalue":"646966666572656e742061646472657373","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"different address\"","value":"different address"},"id":156,"name":"Literal","src":"3427:19:0"}],"id":157,"name":"FunctionCall","src":"3377:70:0"}],"id":158,"name":"ExpressionStatement","src":"3377:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_640ad1e41b12201a166998c82fbbbe569736d8e3043286063f998eb6e70bf569","typeString":"literal_string \"different decimals\""}],"overloadedDeclarations":[241,242],"referencedDeclaration":242,"type":"function (bool,string memory) pure","value":"require"},"id":159,"name":"Identifier","src":"3461:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"decimals","referencedDeclaration":93,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct RenExTokens.TokenDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"mapping(uint32 => struct RenExTokens.TokenDetails storage ref)","value":"tokens"},"id":160,"name":"Identifier","src":"3469:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint32","value":"_tokenCode"},"id":161,"name":"Identifier","src":"3476:10:0"}],"id":162,"name":"IndexAccess","src":"3469:18:0"}],"id":163,"name":"MemberAccess","src":"3469:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":132,"type":"uint8","value":"_tokenDecimals"},"id":164,"name":"Identifier","src":"3500:14:0"}],"id":165,"name":"BinaryOperation","src":"3469:45:0"},{"attributes":{"argumentTypes":null,"hexvalue":"646966666572656e7420646563696d616c73","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"different decimals\"","value":"different decimals"},"id":166,"name":"Literal","src":"3516:20:0"}],"id":167,"name":"FunctionCall","src":"3461:76:0"}],"id":168,"name":"ExpressionStatement","src":"3461:76:0"}],"id":169,"name":"Block","src":"3363:185:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":104,"type":"mapping(uint32 => bool)","value":"detailsSubmitted"},"id":170,"name":"Identifier","src":"3568:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint32","value":"_tokenCode"},"id":171,"name":"Identifier","src":"3585:10:0"}],"id":172,"name":"IndexAccess","src":"3568:28:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":173,"name":"Literal","src":"3599:4:0"}],"id":174,"name":"Assignment","src":"3568:35:0"}],"id":175,"name":"ExpressionStatement","src":"3568:35:0"}],"id":176,"name":"Block","src":"3554:60:0"}],"id":177,"name":"IfStatement","src":"3329:285:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct RenExTokens.TokenDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct RenExTokens.TokenDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"mapping(uint32 => struct RenExTokens.TokenDetails storage ref)","value":"tokens"},"id":178,"name":"Identifier","src":"3624:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint32","value":"_tokenCode"},"id":179,"name":"Identifier","src":"3631:10:0"}],"id":180,"name":"IndexAccess","src":"3624:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["addr","decimals","registered"],"type":"struct RenExTokens.TokenDetails memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":96,"type":"type(struct RenExTokens.TokenDetails storage pointer)","value":"TokenDetails"},"id":181,"name":"Identifier","src":"3645:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":130,"type":"address","value":"_tokenAddress"},"id":182,"name":"Identifier","src":"3678:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":132,"type":"uint8","value":"_tokenDecimals"},"id":183,"name":"Identifier","src":"3715:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":184,"name":"Literal","src":"3755:4:0"}],"id":185,"name":"FunctionCall","src":"3645:125:0"}],"id":186,"name":"Assignment","src":"3624:146:0"}],"id":187,"name":"ExpressionStatement","src":"3624:146:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"overloadedDeclarations":[null],"referencedDeclaration":112,"type":"function (uint32,address,uint8)","value":"LogTokenRegistered"},"id":188,"name":"Identifier","src":"3786:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint32","value":"_tokenCode"},"id":189,"name":"Identifier","src":"3805:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":130,"type":"address","value":"_tokenAddress"},"id":190,"name":"Identifier","src":"3817:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":132,"type":"uint8","value":"_tokenDecimals"},"id":191,"name":"Identifier","src":"3832:14:0"}],"id":192,"name":"FunctionCall","src":"3786:61:0"}],"id":193,"name":"EmitStatement","src":"3781:66:0"}],"id":194,"name":"Block","src":"3166:688:0"}],"id":195,"name":"FunctionDefinition","src":"3062:792:0"},{"attributes":{"constant":false,"documentation":"@notice Sets a token as being deregistered. The details are still stored\n to prevent the token from being re-registered with different details.\n\n    /// @param _tokenCode The unique 32-bit token identifier.","implemented":true,"isConstructor":false,"name":"deregisterToken","payable":false,"scope":223,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_tokenCode","scope":222,"stateVariable":false,"storageLocation":"default","type":"uint32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":196,"name":"ElementaryTypeName","src":"4114:6:0"}],"id":197,"name":"VariableDeclaration","src":"4114:17:0"}],"id":198,"name":"ParameterList","src":"4113:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":201,"name":"ParameterList","src":"4152:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"modifier ()","value":"onlyOwner"},"id":199,"name":"Identifier","src":"4142:9:0"}],"id":200,"name":"ModifierInvocation","src":"4142:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3702327996ec2a6b8532bb63662aa41abef64ecdf936c6cb160e2627d70540dd","typeString":"literal_string \"not registered\""}],"overloadedDeclarations":[241,242],"referencedDeclaration":242,"type":"function (bool,string memory) pure","value":"require"},"id":202,"name":"Identifier","src":"4162:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"registered","referencedDeclaration":95,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct RenExTokens.TokenDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"mapping(uint32 => struct RenExTokens.TokenDetails storage ref)","value":"tokens"},"id":203,"name":"Identifier","src":"4170:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":197,"type":"uint32","value":"_tokenCode"},"id":204,"name":"Identifier","src":"4177:10:0"}],"id":205,"name":"IndexAccess","src":"4170:18:0"}],"id":206,"name":"MemberAccess","src":"4170:29:0"},{"attributes":{"argumentTypes":null,"hexvalue":"6e6f742072656769737465726564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"not registered\"","value":"not registered"},"id":207,"name":"Literal","src":"4201:16:0"}],"id":208,"name":"FunctionCall","src":"4162:56:0"}],"id":209,"name":"ExpressionStatement","src":"4162:56:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"registered","referencedDeclaration":95,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct RenExTokens.TokenDetails storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":100,"type":"mapping(uint32 => struct RenExTokens.TokenDetails storage ref)","value":"tokens"},"id":210,"name":"Identifier","src":"4229:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":197,"type":"uint32","value":"_tokenCode"},"id":211,"name":"Identifier","src":"4236:10:0"}],"id":212,"name":"IndexAccess","src":"4229:18:0"}],"id":213,"name":"MemberAccess","src":"4229:29:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":214,"name":"Literal","src":"4261:5:0"}],"id":215,"name":"Assignment","src":"4229:37:0"}],"id":216,"name":"ExpressionStatement","src":"4229:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"overloadedDeclarations":[null],"referencedDeclaration":116,"type":"function (uint32)","value":"LogTokenDeregistered"},"id":217,"name":"Identifier","src":"4282:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":197,"type":"uint32","value":"_tokenCode"},"id":218,"name":"Identifier","src":"4303:10:0"}],"id":219,"name":"FunctionCall","src":"4282:32:0"}],"id":220,"name":"EmitStatement","src":"4277:37:0"}],"id":221,"name":"Block","src":"4152:169:0"}],"id":222,"name":"FunctionDefinition","src":"4089:232:0"}],"id":223,"name":"ContractDefinition","src":"1763:2560:0"}],"id":224,"name":"SourceUnit","src":"0:4323:0"}}