{"name":"Audit","address":"0x3512ea8e6a75d474dd7cefe1938df5ffd80118c5","source":"pragma solidity ^0.4.24;\n\ncontract Audit {\n\n  struct Proof {\n    uint level;         // Audit level\n    uint insertedBlock; // Audit's block\n    bytes32 ipfsHash;   // IPFS dag-cbor proof\n    address auditedBy;  // Audited by address\n  }\n\n  event AttachedEvidence(address indexed auditorAddr, bytes32 indexed codeHash, bytes32 ipfsHash);\n  event NewAudit(address indexed auditorAddr, bytes32 indexed codeHash);\n\n  // Maps auditor address and code's keccak256 to Audit\n  mapping (address => mapping (bytes32 => Proof)) public auditedContracts;\n  // Maps auditor address to a list of audit code hashes\n  mapping (address => bytes32[]) public auditorContracts;\n  \n  // Returns code audit level, 0 if not present\n  function isVerifiedAddress(address _auditorAddr, address _contractAddr) public view returns(uint) {\n    bytes32 codeHash = getCodeHash(_contractAddr);\n    return auditedContracts[_auditorAddr][codeHash].level;\n  }\n\n  function isVerifiedCode(address _auditorAddr, bytes32 _codeHash) public view returns(uint) {\n    return auditedContracts[_auditorAddr][_codeHash].level;\n  }\n\n  function getCodeHash(address _contractAddr) public view returns(bytes32) {\n      return keccak256(codeAt(_contractAddr));\n  }\n  \n  // Add audit information\n  function addAudit(bytes32 _codeHash, uint _level, bytes32 _ipfsHash) public {\n    address auditor = msg.sender;\n    require(auditedContracts[auditor][_codeHash].insertedBlock == 0);\n    auditedContracts[auditor][_codeHash] = Proof({ \n        level: _level,\n        auditedBy: auditor,\n        insertedBlock: block.number,\n        ipfsHash: _ipfsHash\n    });\n    auditorContracts[auditor].push(_codeHash);\n    emit NewAudit(auditor, _codeHash);\n  }\n  \n  // Add evidence to audited code, only author, if _newLevel is different from original\n  // updates the contract's level\n  function addEvidence(bytes32 _codeHash, uint _newLevel, bytes32 _ipfsHash) public {\n    address auditor = msg.sender;\n    require(auditedContracts[auditor][_codeHash].insertedBlock != 0);\n    if (auditedContracts[auditor][_codeHash].level != _newLevel)\n      auditedContracts[auditor][_codeHash].level = _newLevel;\n    emit AttachedEvidence(auditor, _codeHash, _ipfsHash);\n  }\n\n  function codeAt(address _addr) public view returns (bytes code) {\n    assembly {\n      // retrieve the size of the code, this needs assembly\n      let size := extcodesize(_addr)\n      // allocate output byte array - this could also be done without assembly\n      // by using o_code = new bytes(size)\n      code := mload(0x40)\n      // new \"memory end\" including padding\n      mstore(0x40, add(code, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n      // store length in memory\n      mstore(code, size)\n      // actually retrieve the code, this needs assembly\n      extcodecopy(_addr, add(code, 0x20), 0, size)\n    }\n  }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auditorContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"auditedContracts\",\"outputs\":[{\"name\":\"level\",\"type\":\"uint256\"},{\"name\":\"insertedBlock\",\"type\":\"uint256\"},{\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"name\":\"auditedBy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contractAddr\",\"type\":\"address\"}],\"name\":\"getCodeHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_auditorAddr\",\"type\":\"address\"},{\"name\":\"_codeHash\",\"type\":\"bytes32\"}],\"name\":\"isVerifiedCode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_codeHash\",\"type\":\"bytes32\"},{\"name\":\"_newLevel\",\"type\":\"uint256\"},{\"name\":\"_ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"addEvidence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_auditorAddr\",\"type\":\"address\"},{\"name\":\"_contractAddr\",\"type\":\"address\"}],\"name\":\"isVerifiedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"codeAt\",\"outputs\":[{\"name\":\"code\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_codeHash\",\"type\":\"bytes32\"},{\"name\":\"_level\",\"type\":\"uint256\"},{\"name\":\"_ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"addAudit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"auditorAddr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"codeHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"AttachedEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"auditorAddr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"codeHash\",\"type\":\"bytes32\"}],\"name\":\"NewAudit\",\"type\":\"event\"}]","bin":"608060405234801561001057600080fd5b50610a21806100206000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063146ae569146100935780637c5a875e146100fc57806381ea4408146101aa578063821e449614610209578063911747901461026e578063c490dfa6146102b7578063d35b9d831461032e578063d9114476146103ea575b600080fd5b34801561009f57600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610433565b60405180826000191660001916815260200191505060405180910390f35b34801561010857600080fd5b5061014b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610463565b6040518085815260200184815260200183600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b3480156101b657600080fd5b506101eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104c0565b60405180826000191660001916815260200191505060405180910390f35b34801561021557600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610534565b6040518082815260200191505060405180910390f35b34801561027a57600080fd5b506102b56004803603810190808035600019169060200190929190803590602001909291908035600019169060200190929190505050610599565b005b3480156102c357600080fd5b50610318600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061072c565b6040518082815260200191505060405180910390f35b34801561033a57600080fd5b5061036f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061079e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103af578082015181840152602081019050610394565b50505050905090810190601f1680156103dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103f657600080fd5b5061043160048036038101908080356000191690602001909291908035906020019092919080356000191690602001909291905050506107c9565b005b60016020528160005260406000208181548110151561044e57fe5b90600052602060002001600091509150505481565b6000602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60006104cb8261079e565b6040518082805190602001908083835b60208310151561050057805182526020820191506020810190506020830392506104db565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000191660001916815260200190815260200160002060000154905092915050565b600033905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660001916600019168152602001908152602001600020600101541415151561060857600080fd5b826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660001916600019168152602001908152602001600020600001541415156106cb57826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660001916600019168152602001908152602001600020600001819055505b83600019168173ffffffffffffffffffffffffffffffffffffffff167fee6e661c96fda45402857f2313b03f07a9caa6bfb828d9e43be2f1877138f3e58460405180826000191660001916815260200191505060405180910390a350505050565b600080610738836104c0565b90506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082600019166000191681526020019081526020016000206000015491505092915050565b6060813b6040519150601f19601f602083010116820160405280825280600060208401853c50919050565b600033905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600019166000191681526020019081526020016000206001015414151561083757600080fd5b608060405190810160405280848152602001438152602001836000191681526020018273ffffffffffffffffffffffffffffffffffffffff168152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866000191660001916815260200190815260200160002060008201518160000155602082015181600101556040820151816002019060001916905560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555083600019168173ffffffffffffffffffffffffffffffffffffffff167f38c0789bcccc2abb818b69a886b52399ca11543c0bd2682ea9043c7c5509334760405160405180910390a3505050505600a165627a7a723058206e48162ca071c2cee60cae80124bf355545e21ea6d470b7b40cbd53cbbb89c6a0029","bin-runtime":"60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063146ae569146100935780637c5a875e146100fc57806381ea4408146101aa578063821e449614610209578063911747901461026e578063c490dfa6146102b7578063d35b9d831461032e578063d9114476146103ea575b600080fd5b34801561009f57600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610433565b60405180826000191660001916815260200191505060405180910390f35b34801561010857600080fd5b5061014b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610463565b6040518085815260200184815260200183600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b3480156101b657600080fd5b506101eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104c0565b60405180826000191660001916815260200191505060405180910390f35b34801561021557600080fd5b50610258600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610534565b6040518082815260200191505060405180910390f35b34801561027a57600080fd5b506102b56004803603810190808035600019169060200190929190803590602001909291908035600019169060200190929190505050610599565b005b3480156102c357600080fd5b50610318600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061072c565b6040518082815260200191505060405180910390f35b34801561033a57600080fd5b5061036f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061079e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103af578082015181840152602081019050610394565b50505050905090810190601f1680156103dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103f657600080fd5b5061043160048036038101908080356000191690602001909291908035906020019092919080356000191690602001909291905050506107c9565b005b60016020528160005260406000208181548110151561044e57fe5b90600052602060002001600091509150505481565b6000602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60006104cb8261079e565b6040518082805190602001908083835b60208310151561050057805182526020820191506020810190506020830392506104db565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000191660001916815260200190815260200160002060000154905092915050565b600033905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660001916600019168152602001908152602001600020600101541415151561060857600080fd5b826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660001916600019168152602001908152602001600020600001541415156106cb57826000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008660001916600019168152602001908152602001600020600001819055505b83600019168173ffffffffffffffffffffffffffffffffffffffff167fee6e661c96fda45402857f2313b03f07a9caa6bfb828d9e43be2f1877138f3e58460405180826000191660001916815260200191505060405180910390a350505050565b600080610738836104c0565b90506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082600019166000191681526020019081526020016000206000015491505092915050565b6060813b6040519150601f19601f602083010116820160405280825280600060208401853c50919050565b600033905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600019166000191681526020019081526020016000206001015414151561083757600080fd5b608060405190810160405280848152602001438152602001836000191681526020018273ffffffffffffffffffffffffffffffffffffffff168152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866000191660001916815260200190815260200160002060008201518160000155602082015181600101556040820151816002019060001916905560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555083600019168173ffffffffffffffffffffffffffffffffffffffff167f38c0789bcccc2abb818b69a886b52399ca11543c0bd2682ea9043c7c5509334760405160405180910390a3505050505600a165627a7a723058206e48162ca071c2cee60cae80124bf355545e21ea6d470b7b40cbd53cbbb89c6a0029","srcmap":"26:2795:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:2795:0;;;;;;;","srcmap-runtime":"26:2795:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;470:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1088:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:156;;8:9:-1;5:2;;;30:1;27;20:12;5:2;928:156:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:376;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1821:376:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;711:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;711:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:618;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2201:618:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2201:618:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:447;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:447:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;470:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1088:125::-;1152:7;1186:21;1193:13;1186:6;:21::i;:::-;1176:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1176:32:0;;;;;;;;;;;;;;;;1169:39;;1088:125;;;:::o;928:156::-;1013:4;1032:16;:30;1049:12;1032:30;;;;;;;;;;;;;;;:41;1063:9;1032:41;;;;;;;;;;;;;;;;;:47;;;1025:54;;928:156;;;;:::o;1821:376::-;1909:15;1927:10;1909:28;;2005:1;1951:16;:25;1968:7;1951:25;;;;;;;;;;;;;;;:36;1977:9;1951:36;;;;;;;;;;;;;;;;;:50;;;:55;;1943:64;;;;;;;;2063:9;2017:16;:25;2034:7;2017:25;;;;;;;;;;;;;;;:36;2043:9;2017:36;;;;;;;;;;;;;;;;;:42;;;:55;;2013:121;;;2125:9;2080:16;:25;2097:7;2080:25;;;;;;;;;;;;;;;:36;2106:9;2080:36;;;;;;;;;;;;;;;;;:42;;:54;;;;2013:121;2171:9;2145:47;;;2162:7;2145:47;;;2182:9;2145:47;;;;;;;;;;;;;;;;;;;;;;;;1821:376;;;;:::o;711:213::-;803:4;815:16;834:26;846:13;834:11;:26::i;:::-;815:45;;873:16;:30;890:12;873:30;;;;;;;;;;;;;;;:40;904:8;873:40;;;;;;;;;;;;;;;;;:46;;;866:53;;711:213;;;;;:::o;2201:618::-;2253:10;2372:5;2360:18;2521:4;2515:11;2507:19;;2636:4;2632:9;2625:4;2618;2612;2608:15;2604:26;2600:42;2594:4;2590:53;2584:4;2577:67;2696:4;2690;2683:18;2804:4;2801:1;2794:4;2788;2784:15;2777:5;2765:44;2280:535;;;;:::o;1246:447::-;1328:15;1346:10;1328:28;;1424:1;1370:16;:25;1387:7;1370:25;;;;;;;;;;;;;;;:36;1396:9;1370:36;;;;;;;;;;;;;;;;;:50;;;:55;1362:64;;;;;;;;1471:131;;;;;;;;;1495:6;1471:131;;;;1554:12;1471:131;;;;1586:9;1471:131;;;;;;;1522:7;1471:131;;;;;1432:16;:25;1449:7;1432:25;;;;;;;;;;;;;;;:36;1458:9;1432:36;;;;;;;;;;;;;;;;;:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:16;:25;1625:7;1608:25;;;;;;;;;;;;;;;1639:9;1608:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1608:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:9;1660:28;;;1669:7;1660:28;;;;;;;;;;;;1246:447;;;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0x3512ea8e6a75d474dd7cefe1938df5ffd80118c5_Audit.sol","exportedSymbols":{"Audit":[201]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[201],"name":"Audit","scope":202},"children":[{"attributes":{"canonicalName":"Audit.Proof","name":"Proof","scope":201,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"level","scope":10,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"65:4:0"}],"id":3,"name":"VariableDeclaration","src":"65:10:0"},{"attributes":{"constant":false,"name":"insertedBlock","scope":10,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"104:4:0"}],"id":5,"name":"VariableDeclaration","src":"104:18:0"},{"attributes":{"constant":false,"name":"ipfsHash","scope":10,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":6,"name":"ElementaryTypeName","src":"145:7:0"}],"id":7,"name":"VariableDeclaration","src":"145:16:0"},{"attributes":{"constant":false,"name":"auditedBy","scope":10,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":8,"name":"ElementaryTypeName","src":"192:7:0"}],"id":9,"name":"VariableDeclaration","src":"192:17:0"}],"id":10,"name":"StructDefinition","src":"46:191:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"AttachedEvidence"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"auditorAddr","scope":18,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":11,"name":"ElementaryTypeName","src":"264:7:0"}],"id":12,"name":"VariableDeclaration","src":"264:27:0"},{"attributes":{"constant":false,"indexed":true,"name":"codeHash","scope":18,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":13,"name":"ElementaryTypeName","src":"293:7:0"}],"id":14,"name":"VariableDeclaration","src":"293:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"ipfsHash","scope":18,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":15,"name":"ElementaryTypeName","src":"319:7:0"}],"id":16,"name":"VariableDeclaration","src":"319:16:0"}],"id":17,"name":"ParameterList","src":"263:73:0"}],"id":18,"name":"EventDefinition","src":"241:96:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"NewAudit"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"auditorAddr","scope":24,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":19,"name":"ElementaryTypeName","src":"355:7:0"}],"id":20,"name":"VariableDeclaration","src":"355:27:0"},{"attributes":{"constant":false,"indexed":true,"name":"codeHash","scope":24,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":21,"name":"ElementaryTypeName","src":"384:7:0"}],"id":22,"name":"VariableDeclaration","src":"384:24:0"}],"id":23,"name":"ParameterList","src":"354:55:0"}],"id":24,"name":"EventDefinition","src":"340:70:0"},{"attributes":{"constant":false,"name":"auditedContracts","scope":201,"stateVariable":true,"storageLocation":"default","type":"mapping(address => mapping(bytes32 => struct Audit.Proof))","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => mapping(bytes32 => struct Audit.Proof))"},"children":[{"attributes":{"name":"address","type":"address"},"id":25,"name":"ElementaryTypeName","src":"479:7:0"},{"attributes":{"type":"mapping(bytes32 => struct Audit.Proof)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":26,"name":"ElementaryTypeName","src":"499:7:0"},{"attributes":{"contractScope":null,"name":"Proof","referencedDeclaration":10,"type":"struct Audit.Proof"},"id":27,"name":"UserDefinedTypeName","src":"510:5:0"}],"id":28,"name":"Mapping","src":"490:26:0"}],"id":29,"name":"Mapping","src":"470:47:0"}],"id":30,"name":"VariableDeclaration","src":"470:71:0"},{"attributes":{"constant":false,"name":"auditorContracts","scope":201,"stateVariable":true,"storageLocation":"default","type":"mapping(address => bytes32[])","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(address => bytes32[])"},"children":[{"attributes":{"name":"address","type":"address"},"id":31,"name":"ElementaryTypeName","src":"611:7:0"},{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":32,"name":"ElementaryTypeName","src":"622:7:0"}],"id":33,"name":"ArrayTypeName","src":"622:9:0"}],"id":34,"name":"Mapping","src":"602:30:0"}],"id":35,"name":"VariableDeclaration","src":"602:54:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"isVerifiedAddress","payable":false,"scope":201,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_auditorAddr","scope":58,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":36,"name":"ElementaryTypeName","src":"738:7:0"}],"id":37,"name":"VariableDeclaration","src":"738:20:0"},{"attributes":{"constant":false,"name":"_contractAddr","scope":58,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":38,"name":"ElementaryTypeName","src":"760:7:0"}],"id":39,"name":"VariableDeclaration","src":"760:21:0"}],"id":40,"name":"ParameterList","src":"737:45:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":58,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":41,"name":"ElementaryTypeName","src":"803:4:0"}],"id":42,"name":"VariableDeclaration","src":"803:4:0"}],"id":43,"name":"ParameterList","src":"802:6:0"},{"children":[{"attributes":{"assignments":[45]},"children":[{"attributes":{"constant":false,"name":"codeHash","scope":58,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":44,"name":"ElementaryTypeName","src":"815:7:0"}],"id":45,"name":"VariableDeclaration","src":"815:16:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":89,"type":"function (address) view returns (bytes32)","value":"getCodeHash"},"id":46,"name":"Identifier","src":"834:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"address","value":"_contractAddr"},"id":47,"name":"Identifier","src":"846:13:0"}],"id":48,"name":"FunctionCall","src":"834:26:0"}],"id":49,"name":"VariableDeclarationStatement","src":"815:45:0"},{"attributes":{"functionReturnParameters":43},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"level","referencedDeclaration":3,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => struct Audit.Proof storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"mapping(address => mapping(bytes32 => struct Audit.Proof storage ref))","value":"auditedContracts"},"id":50,"name":"Identifier","src":"873:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":37,"type":"address","value":"_auditorAddr"},"id":51,"name":"Identifier","src":"890:12:0"}],"id":52,"name":"IndexAccess","src":"873:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":45,"type":"bytes32","value":"codeHash"},"id":53,"name":"Identifier","src":"904:8:0"}],"id":54,"name":"IndexAccess","src":"873:40:0"}],"id":55,"name":"MemberAccess","src":"873:46:0"}],"id":56,"name":"Return","src":"866:53:0"}],"id":57,"name":"Block","src":"809:115:0"}],"id":58,"name":"FunctionDefinition","src":"711:213:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"isVerifiedCode","payable":false,"scope":201,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_auditorAddr","scope":75,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":59,"name":"ElementaryTypeName","src":"952:7:0"}],"id":60,"name":"VariableDeclaration","src":"952:20:0"},{"attributes":{"constant":false,"name":"_codeHash","scope":75,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":61,"name":"ElementaryTypeName","src":"974:7:0"}],"id":62,"name":"VariableDeclaration","src":"974:17:0"}],"id":63,"name":"ParameterList","src":"951:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":75,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":64,"name":"ElementaryTypeName","src":"1013:4:0"}],"id":65,"name":"VariableDeclaration","src":"1013:4:0"}],"id":66,"name":"ParameterList","src":"1012:6:0"},{"children":[{"attributes":{"functionReturnParameters":66},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"level","referencedDeclaration":3,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => struct Audit.Proof storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"mapping(address => mapping(bytes32 => struct Audit.Proof storage ref))","value":"auditedContracts"},"id":67,"name":"Identifier","src":"1032:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":60,"type":"address","value":"_auditorAddr"},"id":68,"name":"Identifier","src":"1049:12:0"}],"id":69,"name":"IndexAccess","src":"1032:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":62,"type":"bytes32","value":"_codeHash"},"id":70,"name":"Identifier","src":"1063:9:0"}],"id":71,"name":"IndexAccess","src":"1032:41:0"}],"id":72,"name":"MemberAccess","src":"1032:47:0"}],"id":73,"name":"Return","src":"1025:54:0"}],"id":74,"name":"Block","src":"1019:65:0"}],"id":75,"name":"FunctionDefinition","src":"928:156:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"getCodeHash","payable":false,"scope":201,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_contractAddr","scope":89,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":76,"name":"ElementaryTypeName","src":"1109:7:0"}],"id":77,"name":"VariableDeclaration","src":"1109:21:0"}],"id":78,"name":"ParameterList","src":"1108:23:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":89,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":79,"name":"ElementaryTypeName","src":"1152:7:0"}],"id":80,"name":"VariableDeclaration","src":"1152:7:0"}],"id":81,"name":"ParameterList","src":"1151:9:0"},{"children":[{"attributes":{"functionReturnParameters":81},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":210,"type":"function () pure returns (bytes32)","value":"keccak256"},"id":82,"name":"Identifier","src":"1176:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":200,"type":"function (address) view returns (bytes memory)","value":"codeAt"},"id":83,"name":"Identifier","src":"1186:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"address","value":"_contractAddr"},"id":84,"name":"Identifier","src":"1193:13:0"}],"id":85,"name":"FunctionCall","src":"1186:21:0"}],"id":86,"name":"FunctionCall","src":"1176:32:0"}],"id":87,"name":"Return","src":"1169:39:0"}],"id":88,"name":"Block","src":"1161:52:0"}],"id":89,"name":"FunctionDefinition","src":"1088:125:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"addAudit","payable":false,"scope":201,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_codeHash","scope":141,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":90,"name":"ElementaryTypeName","src":"1264:7:0"}],"id":91,"name":"VariableDeclaration","src":"1264:17:0"},{"attributes":{"constant":false,"name":"_level","scope":141,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":92,"name":"ElementaryTypeName","src":"1283:4:0"}],"id":93,"name":"VariableDeclaration","src":"1283:11:0"},{"attributes":{"constant":false,"name":"_ipfsHash","scope":141,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":94,"name":"ElementaryTypeName","src":"1296:7:0"}],"id":95,"name":"VariableDeclaration","src":"1296:17:0"}],"id":96,"name":"ParameterList","src":"1263:51:0"},{"attributes":{"parameters":[null]},"children":[],"id":97,"name":"ParameterList","src":"1322:0:0"},{"children":[{"attributes":{"assignments":[99]},"children":[{"attributes":{"constant":false,"name":"auditor","scope":141,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":98,"name":"ElementaryTypeName","src":"1328:7:0"}],"id":99,"name":"VariableDeclaration","src":"1328:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"msg","value":"msg"},"id":100,"name":"Identifier","src":"1346:3:0"}],"id":101,"name":"MemberAccess","src":"1346:10:0"}],"id":102,"name":"VariableDeclarationStatement","src":"1328:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[219,220],"referencedDeclaration":219,"type":"function (bool) pure","value":"require"},"id":103,"name":"Identifier","src":"1362:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"insertedBlock","referencedDeclaration":5,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => struct Audit.Proof storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"mapping(address => mapping(bytes32 => struct Audit.Proof storage ref))","value":"auditedContracts"},"id":104,"name":"Identifier","src":"1370:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":99,"type":"address","value":"auditor"},"id":105,"name":"Identifier","src":"1387:7:0"}],"id":106,"name":"IndexAccess","src":"1370:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":91,"type":"bytes32","value":"_codeHash"},"id":107,"name":"Identifier","src":"1396:9:0"}],"id":108,"name":"IndexAccess","src":"1370:36:0"}],"id":109,"name":"MemberAccess","src":"1370:50:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":110,"name":"Literal","src":"1424:1:0"}],"id":111,"name":"BinaryOperation","src":"1370:55:0"}],"id":112,"name":"FunctionCall","src":"1362:64:0"}],"id":113,"name":"ExpressionStatement","src":"1362:64:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => struct Audit.Proof storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"mapping(address => mapping(bytes32 => struct Audit.Proof storage ref))","value":"auditedContracts"},"id":114,"name":"Identifier","src":"1432:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":99,"type":"address","value":"auditor"},"id":115,"name":"Identifier","src":"1449:7:0"}],"id":117,"name":"IndexAccess","src":"1432:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":91,"type":"bytes32","value":"_codeHash"},"id":116,"name":"Identifier","src":"1458:9:0"}],"id":118,"name":"IndexAccess","src":"1432:36:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":["level","auditedBy","insertedBlock","ipfsHash"],"type":"struct Audit.Proof memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":10,"type":"type(struct Audit.Proof storage pointer)","value":"Proof"},"id":119,"name":"Identifier","src":"1471:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":93,"type":"uint256","value":"_level"},"id":120,"name":"Identifier","src":"1495:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":99,"type":"address","value":"auditor"},"id":121,"name":"Identifier","src":"1522:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"number","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":206,"type":"block","value":"block"},"id":122,"name":"Identifier","src":"1554:5:0"}],"id":123,"name":"MemberAccess","src":"1554:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":95,"type":"bytes32","value":"_ipfsHash"},"id":124,"name":"Identifier","src":"1586:9:0"}],"id":125,"name":"FunctionCall","src":"1471:131:0"}],"id":126,"name":"Assignment","src":"1432:170:0"}],"id":127,"name":"ExpressionStatement","src":"1432:170:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"push","referencedDeclaration":null,"type":"function (bytes32) returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32[] storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":35,"type":"mapping(address => bytes32[] storage ref)","value":"auditorContracts"},"id":128,"name":"Identifier","src":"1608:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":99,"type":"address","value":"auditor"},"id":129,"name":"Identifier","src":"1625:7:0"}],"id":130,"name":"IndexAccess","src":"1608:25:0"}],"id":131,"name":"MemberAccess","src":"1608:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":91,"type":"bytes32","value":"_codeHash"},"id":132,"name":"Identifier","src":"1639:9:0"}],"id":133,"name":"FunctionCall","src":"1608:41:0"}],"id":134,"name":"ExpressionStatement","src":"1608:41:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"function (address,bytes32)","value":"NewAudit"},"id":135,"name":"Identifier","src":"1660:8:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":99,"type":"address","value":"auditor"},"id":136,"name":"Identifier","src":"1669:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":91,"type":"bytes32","value":"_codeHash"},"id":137,"name":"Identifier","src":"1678:9:0"}],"id":138,"name":"FunctionCall","src":"1660:28:0"}],"id":139,"name":"EmitStatement","src":"1655:33:0"}],"id":140,"name":"Block","src":"1322:371:0"}],"id":141,"name":"FunctionDefinition","src":"1246:447:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"addEvidence","payable":false,"scope":201,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_codeHash","scope":191,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":142,"name":"ElementaryTypeName","src":"1842:7:0"}],"id":143,"name":"VariableDeclaration","src":"1842:17:0"},{"attributes":{"constant":false,"name":"_newLevel","scope":191,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":144,"name":"ElementaryTypeName","src":"1861:4:0"}],"id":145,"name":"VariableDeclaration","src":"1861:14:0"},{"attributes":{"constant":false,"name":"_ipfsHash","scope":191,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":146,"name":"ElementaryTypeName","src":"1877:7:0"}],"id":147,"name":"VariableDeclaration","src":"1877:17:0"}],"id":148,"name":"ParameterList","src":"1841:54:0"},{"attributes":{"parameters":[null]},"children":[],"id":149,"name":"ParameterList","src":"1903:0:0"},{"children":[{"attributes":{"assignments":[151]},"children":[{"attributes":{"constant":false,"name":"auditor","scope":191,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":150,"name":"ElementaryTypeName","src":"1909:7:0"}],"id":151,"name":"VariableDeclaration","src":"1909:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":216,"type":"msg","value":"msg"},"id":152,"name":"Identifier","src":"1927:3:0"}],"id":153,"name":"MemberAccess","src":"1927:10:0"}],"id":154,"name":"VariableDeclarationStatement","src":"1909:28:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[219,220],"referencedDeclaration":219,"type":"function (bool) pure","value":"require"},"id":155,"name":"Identifier","src":"1943:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"insertedBlock","referencedDeclaration":5,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => struct Audit.Proof storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"mapping(address => mapping(bytes32 => struct Audit.Proof storage ref))","value":"auditedContracts"},"id":156,"name":"Identifier","src":"1951:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":151,"type":"address","value":"auditor"},"id":157,"name":"Identifier","src":"1968:7:0"}],"id":158,"name":"IndexAccess","src":"1951:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":143,"type":"bytes32","value":"_codeHash"},"id":159,"name":"Identifier","src":"1977:9:0"}],"id":160,"name":"IndexAccess","src":"1951:36:0"}],"id":161,"name":"MemberAccess","src":"1951:50:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":162,"name":"Literal","src":"2005:1:0"}],"id":163,"name":"BinaryOperation","src":"1951:55:0"}],"id":164,"name":"FunctionCall","src":"1943:64:0"}],"id":165,"name":"ExpressionStatement","src":"1943:64:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"level","referencedDeclaration":3,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => struct Audit.Proof storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"mapping(address => mapping(bytes32 => struct Audit.Proof storage ref))","value":"auditedContracts"},"id":166,"name":"Identifier","src":"2017:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":151,"type":"address","value":"auditor"},"id":167,"name":"Identifier","src":"2034:7:0"}],"id":168,"name":"IndexAccess","src":"2017:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":143,"type":"bytes32","value":"_codeHash"},"id":169,"name":"Identifier","src":"2043:9:0"}],"id":170,"name":"IndexAccess","src":"2017:36:0"}],"id":171,"name":"MemberAccess","src":"2017:42:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":145,"type":"uint256","value":"_newLevel"},"id":172,"name":"Identifier","src":"2063:9:0"}],"id":173,"name":"BinaryOperation","src":"2017:55:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"level","referencedDeclaration":3,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Audit.Proof storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"mapping(bytes32 => struct Audit.Proof storage ref)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"mapping(address => mapping(bytes32 => struct Audit.Proof storage ref))","value":"auditedContracts"},"id":174,"name":"Identifier","src":"2080:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":151,"type":"address","value":"auditor"},"id":175,"name":"Identifier","src":"2097:7:0"}],"id":177,"name":"IndexAccess","src":"2080:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":143,"type":"bytes32","value":"_codeHash"},"id":176,"name":"Identifier","src":"2106:9:0"}],"id":178,"name":"IndexAccess","src":"2080:36:0"}],"id":179,"name":"MemberAccess","src":"2080:42:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":145,"type":"uint256","value":"_newLevel"},"id":180,"name":"Identifier","src":"2125:9:0"}],"id":181,"name":"Assignment","src":"2080:54:0"}],"id":182,"name":"ExpressionStatement","src":"2080:54:0"}],"id":183,"name":"IfStatement","src":"2013:121:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"function (address,bytes32,bytes32)","value":"AttachedEvidence"},"id":184,"name":"Identifier","src":"2145:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":151,"type":"address","value":"auditor"},"id":185,"name":"Identifier","src":"2162:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":143,"type":"bytes32","value":"_codeHash"},"id":186,"name":"Identifier","src":"2171:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":147,"type":"bytes32","value":"_ipfsHash"},"id":187,"name":"Identifier","src":"2182:9:0"}],"id":188,"name":"FunctionCall","src":"2145:47:0"}],"id":189,"name":"EmitStatement","src":"2140:52:0"}],"id":190,"name":"Block","src":"1903:294:0"}],"id":191,"name":"FunctionDefinition","src":"1821:376:0"},{"attributes":{"constant":true,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"codeAt","payable":false,"scope":201,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_addr","scope":200,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":192,"name":"ElementaryTypeName","src":"2217:7:0"}],"id":193,"name":"VariableDeclaration","src":"2217:13:0"}],"id":194,"name":"ParameterList","src":"2216:15:0"},{"children":[{"attributes":{"constant":false,"name":"code","scope":200,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":195,"name":"ElementaryTypeName","src":"2253:5:0"}],"id":196,"name":"VariableDeclaration","src":"2253:10:0"}],"id":197,"name":"ParameterList","src":"2252:12:0"},{"children":[{"attributes":{"externalReferences":[{"_addr":{"declaration":193,"isOffset":false,"isSlot":false,"src":"2372:5:0","valueSize":1}},{"code":{"declaration":196,"isOffset":false,"isSlot":false,"src":"2690:4:0","valueSize":1}},{"code":{"declaration":196,"isOffset":false,"isSlot":false,"src":"2507:4:0","valueSize":1}},{"_addr":{"declaration":193,"isOffset":false,"isSlot":false,"src":"2777:5:0","valueSize":1}},{"code":{"declaration":196,"isOffset":false,"isSlot":false,"src":"2594:4:0","valueSize":1}},{"code":{"declaration":196,"isOffset":false,"isSlot":false,"src":"2788:4:0","valueSize":1}}],"operations":"{\n    let size := extcodesize(_addr)\n    code := mload(0x40)\n    mstore(0x40, add(code, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n    mstore(code, size)\n    extcodecopy(_addr, add(code, 0x20), 0, size)\n}"},"children":[],"id":198,"name":"InlineAssembly","src":"2271:548:0"}],"id":199,"name":"Block","src":"2265:554:0"}],"id":200,"name":"FunctionDefinition","src":"2201:618:0"}],"id":201,"name":"ContractDefinition","src":"26:2795:0"}],"id":202,"name":"SourceUnit","src":"0:2821:0"}}