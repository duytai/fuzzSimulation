{"name":"InAndOut","address":"0x587576d2428deda929cb70bf3dfc5fa3447138e7","source":"pragma solidity ^0.4.24;\n\n/**\n * @title RBAC (Role-Based Access Control)\n * @author Matt Condon (@Shrugs)\n * @dev Stores and provides setters and getters for roles and addresses.\n * Supports unlimited numbers of roles and addresses.\n * See //contracts/mocks/RBACMock.sol for an example of usage.\n * This RBAC method uses strings to key roles. It may be beneficial\n * for you to write your own implementation of this interface using Enums or similar.\n * It's also recommended that you define constants in the contract, like ROLE_ADMIN below,\n * to avoid typos.\n */\ncontract RBAC {\n  using Roles for Roles.Role;\n\n  mapping (string => Roles.Role) private roles;\n\n  event RoleAdded(address indexed operator, string role);\n  event RoleRemoved(address indexed operator, string role);\n\n  /**\n   * @dev reverts if addr does not have role\n   * @param _operator address\n   * @param _role the name of the role\n   * // reverts\n   */\n  function checkRole(address _operator, string _role)\n    view\n    public\n  {\n    roles[_role].check(_operator);\n  }\n\n  /**\n   * @dev determine if addr has role\n   * @param _operator address\n   * @param _role the name of the role\n   * @return bool\n   */\n  function hasRole(address _operator, string _role)\n    view\n    public\n    returns (bool)\n  {\n    return roles[_role].has(_operator);\n  }\n\n  /**\n   * @dev add a role to an address\n   * @param _operator address\n   * @param _role the name of the role\n   */\n  function addRole(address _operator, string _role)\n    internal\n  {\n    roles[_role].add(_operator);\n    emit RoleAdded(_operator, _role);\n  }\n\n  /**\n   * @dev remove a role from an address\n   * @param _operator address\n   * @param _role the name of the role\n   */\n  function removeRole(address _operator, string _role)\n    internal\n  {\n    roles[_role].remove(_operator);\n    emit RoleRemoved(_operator, _role);\n  }\n\n  /**\n   * @dev modifier to scope access to a single role (uses msg.sender as addr)\n   * @param _role the name of the role\n   * // reverts\n   */\n  modifier onlyRole(string _role)\n  {\n    checkRole(msg.sender, _role);\n    _;\n  }\n\n  /**\n   * @dev modifier to scope access to a set of roles (uses msg.sender as addr)\n   * @param _roles the names of the roles to scope access to\n   * // reverts\n   *\n   * @TODO - when solidity supports dynamic arrays as arguments to modifiers, provide this\n   *  see: https://github.com/ethereum/solidity/issues/2467\n   */\n  // modifier onlyRoles(string[] _roles) {\n  //     bool hasAnyRole = false;\n  //     for (uint8 i = 0; i < _roles.length; i++) {\n  //         if (hasRole(msg.sender, _roles[i])) {\n  //             hasAnyRole = true;\n  //             break;\n  //         }\n  //     }\n\n  //     require(hasAnyRole);\n\n  //     _;\n  // }\n}\n\n/**\n * @title Roles\n * @author Francisco Giordano (@frangio)\n * @dev Library for managing addresses assigned to a Role.\n * See RBAC.sol for example usage.\n */\nlibrary Roles {\n  struct Role {\n    mapping (address => bool) bearer;\n  }\n\n  /**\n   * @dev give an address access to this role\n   */\n  function add(Role storage role, address addr)\n    internal\n  {\n    role.bearer[addr] = true;\n  }\n\n  /**\n   * @dev remove an address' access to this role\n   */\n  function remove(Role storage role, address addr)\n    internal\n  {\n    role.bearer[addr] = false;\n  }\n\n  /**\n   * @dev check if an address has this role\n   * // reverts\n   */\n  function check(Role storage role, address addr)\n    view\n    internal\n  {\n    require(has(role, addr));\n  }\n\n  /**\n   * @dev check if an address has this role\n   * @return bool\n   */\n  function has(Role storage role, address addr)\n    view\n    internal\n    returns (bool)\n  {\n    return role.bearer[addr];\n  }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipRenounced(address indexed previousOwner);\n  event OwnershipTransferred(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n  /**\n   * @dev Allows the current owner to relinquish control of the contract.\n   * @notice Renouncing to ownership will leave the contract without an owner.\n   * It will not be possible to call the functions with the `onlyOwner`\n   * modifier anymore.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipRenounced(owner);\n    owner = address(0);\n  }\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address _newOwner) public onlyOwner {\n    _transferOwnership(_newOwner);\n  }\n\n  /**\n   * @dev Transfers control of the contract to a newOwner.\n   * @param _newOwner The address to transfer ownership to.\n   */\n  function _transferOwnership(address _newOwner) internal {\n    require(_newOwner != address(0));\n    emit OwnershipTransferred(owner, _newOwner);\n    owner = _newOwner;\n  }\n}\n\n/**\n * @title Whitelist\n * @dev The Whitelist contract has a whitelist of addresses, and provides basic authorization control functions.\n * This simplifies the implementation of \"user permissions\".\n */\ncontract Whitelist is Ownable, RBAC {\n  string public constant ROLE_WHITELISTED = \"whitelist\";\n\n  /**\n   * @dev Throws if operator is not whitelisted.\n   * @param _operator address\n   */\n  modifier onlyIfWhitelisted(address _operator) {\n    checkRole(_operator, ROLE_WHITELISTED);\n    _;\n  }\n\n  /**\n   * @dev add an address to the whitelist\n   * @param _operator address\n   * @return true if the address was added to the whitelist, false if the address was already in the whitelist\n   */\n  function addAddressToWhitelist(address _operator)\n    onlyOwner\n    public\n  {\n    addRole(_operator, ROLE_WHITELISTED);\n  }\n\n  /**\n   * @dev getter to determine if address is in whitelist\n   */\n  function whitelist(address _operator)\n    public\n    view\n    returns (bool)\n  {\n    return hasRole(_operator, ROLE_WHITELISTED);\n  }\n\n  /**\n   * @dev add addresses to the whitelist\n   * @param _operators addresses\n   * @return true if at least one address was added to the whitelist,\n   * false if all addresses were already in the whitelist\n   */\n  function addAddressesToWhitelist(address[] _operators)\n    onlyOwner\n    public\n  {\n    for (uint256 i = 0; i < _operators.length; i++) {\n      addAddressToWhitelist(_operators[i]);\n    }\n  }\n\n  /**\n   * @dev remove an address from the whitelist\n   * @param _operator address\n   * @return true if the address was removed from the whitelist,\n   * false if the address wasn't in the whitelist in the first place\n   */\n  function removeAddressFromWhitelist(address _operator)\n    onlyOwner\n    public\n  {\n    removeRole(_operator, ROLE_WHITELISTED);\n  }\n\n  /**\n   * @dev remove addresses from the whitelist\n   * @param _operators addresses\n   * @return true if at least one address was removed from the whitelist,\n   * false if all addresses weren't in the whitelist in the first place\n   */\n  function removeAddressesFromWhitelist(address[] _operators)\n    onlyOwner\n    public\n  {\n    for (uint256 i = 0; i < _operators.length; i++) {\n      removeAddressFromWhitelist(_operators[i]);\n    }\n  }\n\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  function safeTransfer(ERC20Basic token, address to, uint256 value) internal {\n    require(token.transfer(to, value));\n  }\n\n  function safeTransferFrom(\n    ERC20 token,\n    address from,\n    address to,\n    uint256 value\n  )\n    internal\n  {\n    require(token.transferFrom(from, to, value));\n  }\n\n  function safeApprove(ERC20 token, address spender, uint256 value) internal {\n    require(token.approve(spender, value));\n  }\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n\ncontract HasNoContracts is Ownable {\n\n  /**\n   * @dev Reclaim ownership of Ownable contracts\n   * @param contractAddr The address of the Ownable to be reclaimed.\n   */\n  function reclaimContract(address contractAddr) external onlyOwner {\n    Ownable contractInst = Ownable(contractAddr);\n    contractInst.transferOwnership(owner);\n  }\n}\n\n/**\n * @title Contracts that should be able to recover tokens\n * @author SylTi\n * @dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\n * This will prevent any accidental loss of tokens.\n */\ncontract CanReclaimToken is Ownable {\n  using SafeERC20 for ERC20Basic;\n\n  /**\n   * @dev Reclaim all ERC20Basic compatible tokens\n   * @param token ERC20Basic The address of the token contract\n   */\n  function reclaimToken(ERC20Basic token) external onlyOwner {\n    uint256 balance = token.balanceOf(this);\n    token.safeTransfer(owner, balance);\n  }\n\n}\n\n/**\n * @title Contracts that should not own Ether\n * @author Remco Bloemen <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"2755424a44486715\">[email protected]</a>π.com>\n * @dev This tries to block incoming ether to prevent accidental loss of Ether. Should Ether end up\n * in the contract, it will allow the owner to reclaim this ether.\n * @notice Ether can still be sent to this contract by:\n * calling functions labeled `payable`\n * `selfdestruct(contract_address)`\n * mining directly to the contract address\n */\ncontract HasNoEther is Ownable {\n\n  /**\n  * @dev Constructor that rejects incoming Ether\n  * The `payable` flag is added so we can access `msg.value` without compiler warning. If we\n  * leave out payable, then Solidity will allow inheriting contracts to implement a payable\n  * constructor. By doing it this way we prevent a payable constructor from working. Alternatively\n  * we could use assembly to access msg.value.\n  */\n  constructor() public payable {\n    require(msg.value == 0);\n  }\n\n  /**\n   * @dev Disallows direct send by settings a default function without the `payable` flag.\n   */\n  function() external {\n  }\n\n  /**\n   * @dev Transfer all Ether held by the contract to the owner.\n   */\n  function reclaimEther() external onlyOwner {\n    owner.transfer(address(this).balance);\n  }\n}\n\n/**\n * @title Contracts that should not own Tokens\n * @author Remco Bloemen <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"7002151d131f3042\">[email protected]</a>π.com>\n * @dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\n * Should tokens (any ERC20Basic compatible) end up in the contract, it allows the\n * owner to reclaim the tokens.\n */\ncontract HasNoTokens is CanReclaimToken {\n\n /**\n  * @dev Reject all ERC223 compatible tokens\n  * @param from_ address The address that is transferring the tokens\n  * @param value_ uint256 the amount of the specified token\n  * @param data_ Bytes The data passed from the caller.\n  */\n  function tokenFallback(address from_, uint256 value_, bytes data_) external {\n    from_;\n    value_;\n    data_;\n    revert();\n  }\n\n}\n\n/**\n * @title Base contract for contracts that should not own things.\n * @author Remco Bloemen <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"1163747c727e5123\">[email protected]</a>π.com>\n * @dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\n * Owned contracts. See respective base contracts for details.\n */\ncontract NoOwner is HasNoEther, HasNoTokens, HasNoContracts {\n}\n\n/**\n * @title InAndOut\n * @dev InAndOut est un contract simulant le processus de vente d'un bien immobilier.\n * Le propriétaire du contrat (eg le notaire du vendeur) est chargé de signifier l'avancement du processus de vente\n * ainsi que de whitelister les différents intervenants qui pourront ancrer les documents nécessaires à la vente.\n * Chacun peut librement suivre l'avancement du processus.\n */\ncontract InAndOut is Whitelist, NoOwner {\n\n    /**\n     * Le propriétaire du contrat trace le processus de vente en incrémentant la variable `processStep` de 0 jusqu'à 6 selon la table suivante\n     * Step 0: Initialisation\n     * Step 1: Remise d'offres\n     * Step 2: Due diligence\n     * Step 3: Négociation\n     * Step 4: Période sous promesse\n     * Step 5: Vente du bien\n     * Step 6: Transaction terminée\n     */\n    uint8 public processStep;\n\n    // Mapping utilisé pour ancrer l'empreinte de documents lors du processus de vente\n    mapping(bytes32 => bool) public anchors;\n\n    // Évènement émis lors de l'ancrage de documents\n    event NewAnchor(bytes32 merkleRoot);\n\n    /**\n     * @dev Fonction appelés par le propriétaire du contrat pour passer à l'étape suivante du processus de vente\n     */\n    function goToNextStep() onlyOwner public {\n        require(processStep < 6);\n        processStep++;\n    }\n\n    /**\n     * @dev Vérifier si la vente est validée\n     * @return Vrai si et seulement si la vente est validée\n     */\n    function isClosedAndValid() public view returns (bool) {\n        return processStep == 6;\n    }\n\n    /**\n     * @dev Sauvegarder un document ou un ensemble de documents identifié(s) par le hash de la racine de l'arbre de Merkle associé\n     * @param _merkleRoot bytes32 Empreinte à ancrer\n     */\n    function saveNewAnchor(bytes32 _merkleRoot) onlyIfWhitelisted(msg.sender) public {\n        require(processStep < 6);\n        anchors[_merkleRoot] = true;\n        emit NewAnchor(_merkleRoot);\n    }\n}","contract":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"checkRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROLE_WHITELISTED\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"hasRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"removeAddressesFromWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeAddressFromWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"goToNextStep\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"saveNewAnchor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"addAddressToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"anchors\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from_\",\"type\":\"address\"},{\"name\":\"value_\",\"type\":\"uint256\"},{\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"addAddressesToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"processStep\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isClosedAndValid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"NewAnchor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"role\",\"type\":\"string\"}],\"name\":\"RoleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","bin":"6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060003414151561005357600080fd5b6117d5806100626000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630988ca8c1461012157806317ffc320146101aa57806318b919e9146101ed578063217fe6c61461027d57806324953eaa1461031e578063286dd3f5146103845780632aed7f3f146103c75780636dcba0591461040a578063715018a6146104215780637634ed39146104385780637b9417c8146104695780638da5cb5b146104ac5780639b19251a146105035780639f727c271461055e578063b01b6d5314610575578063c0ee0b8a146105be578063e2ec6ec314610623578063ec5134ca14610689578063f2fde38b146106ba578063fad5a2af146106fd575b34801561011e57600080fd5b50005b34801561012d57600080fd5b506101a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061072c565b005b3480156101b657600080fd5b506101eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ad565b005b3480156101f957600080fd5b50610202610932565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610242578082015181840152602081019050610227565b50505050905090810190601f16801561026f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028957600080fd5b50610304600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061096b565b604051808215151515815260200191505060405180910390f35b34801561032a57600080fd5b50610382600480360381019080803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506109f2565b005b34801561039057600080fd5b506103c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a8e565b005b3480156103d357600080fd5b50610408600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b2b565b005b34801561041657600080fd5b5061041f610c63565b005b34801561042d57600080fd5b50610436610d13565b005b34801561044457600080fd5b506104676004803603810190808035600019169060200190929190505050610e15565b005b34801561047557600080fd5b506104aa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eed565b005b3480156104b857600080fd5b506104c1610f8a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050f57600080fd5b50610544600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610faf565b604051808215151515815260200191505060405180910390f35b34801561056a57600080fd5b50610573610ff7565b005b34801561058157600080fd5b506105a460048036038101908080356000191690602001909291905050506110d3565b604051808215151515815260200191505060405180910390f35b3480156105ca57600080fd5b50610621600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506110f3565b005b34801561062f57600080fd5b50610687600480360381019080803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506110f8565b005b34801561069557600080fd5b5061069e611194565b604051808260ff1660ff16815260200191505060405180910390f35b3480156106c657600080fd5b506106fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a7565b005b34801561070957600080fd5b5061071261120e565b604051808215151515815260200191505060405180910390f35b6107a9826001836040518082805190602001908083835b6020831015156107685780518252602082019150602081019050602083039250610743565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061122b90919063ffffffff16565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080a57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156108a557600080fd5b505af11580156108b9573d6000803e3d6000fd5b505050506040513d60208110156108cf57600080fd5b8101908080519060200190929190505050905061092e6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166112449092919063ffffffff16565b5050565b6040805190810160405280600981526020017f77686974656c697374000000000000000000000000000000000000000000000081525081565b60006109ea836001846040518082805190602001908083835b6020831015156109a95780518252602082019150602081019050602083039250610984565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061133290919063ffffffff16565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4f57600080fd5b600090505b8151811015610a8a57610a7d8282815181101515610a6e57fe5b90602001906020020151610a8e565b8080600101915050610a54565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ae957600080fd5b610b28816040805190810160405280600981526020017f77686974656c697374000000000000000000000000000000000000000000000081525061138b565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b8857600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610c4757600080fd5b505af1158015610c5b573d6000803e3d6000fd5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cbe57600080fd5b6006600260009054906101000a900460ff1660ff16101515610cdf57600080fd5b6002600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d6e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b33610e55816040805190810160405280600981526020017f77686974656c697374000000000000000000000000000000000000000000000081525061072c565b6006600260009054906101000a900460ff1660ff16101515610e7657600080fd5b600160036000846000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055507f379e8140eb7b9de1741069c8874a6056a2366d3383ee55e4365ea66cb40e09578260405180826000191660001916815260200191505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f4857600080fd5b610f87816040805190810160405280600981526020017f77686974656c69737400000000000000000000000000000000000000000000008152506114bf565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610ff0826040805190810160405280600981526020017f77686974656c697374000000000000000000000000000000000000000000000081525061096b565b9050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561105257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156110d0573d6000803e3d6000fd5b50565b60036020528060005260406000206000915054906101000a900460ff1681565b600080fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561115557600080fd5b600090505b815181101561119057611183828281518110151561117457fe5b90602001906020020151610eed565b808060010191505061115a565b5050565b600260009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561120257600080fd5b61120b816115f3565b50565b60006006600260009054906101000a900460ff1660ff1614905090565b6112358282611332565b151561124057600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112e757600080fd5b505af11580156112fb573d6000803e3d6000fd5b505050506040513d602081101561131157600080fd5b8101908080519060200190929190505050151561132d57600080fd5b505050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611408826001836040518082805190602001908083835b6020831015156113c757805182526020820191506020810190506020830392506113a2565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206116ed90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fd211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803a826040518080602001828103825283818151815260200191508051906020019080838360005b83811015611481578082015181840152602081019050611466565b50505050905090810190601f1680156114ae5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b61153c826001836040518082805190602001908083835b6020831015156114fb57805182526020820191506020810190506020830392506114d6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902061174b90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489826040518080602001828103825283818151815260200191508051906020019080838360005b838110156115b557808201518184015260208101905061159a565b50505050905090810190601f1680156115e25780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561162f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a7230582008f711974b5f839acaffce615400b78af3bd2ede2171210a16dee3424ef38da30029","bin-runtime":"","srcmap":"13141:1564:0:-;;;4216:10;4208:5;;:18;;;;;;;;;;;;;;;;;;11157:1;11144:9;:14;11136:23;;;;;;;;13141:1564;;;;;;","srcmap-runtime":"13141:1564:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13141:1564:0;;923:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;923:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9978:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9978:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5570:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5570:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1177:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1177:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7359:201;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7359:201:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6986:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6986:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;9343:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9343:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;13968:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13968:105:0;;;;;;4642:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4642:111:0;;;;;;14507:196;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14507:196:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6020:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6020:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3879:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3879:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;6217:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6217:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11376:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11376:91:0;;;;;;13691:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13691:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12154:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12154:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6568:191;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6568:191:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13572:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13572:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;4915:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4915:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;14203:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14203:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;923:114;1003:29;1022:9;1003:5;1009;1003:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1003:12:0;;;;;;;;;;;;;;;;;;;;;:18;;:29;;;;:::i;:::-;923:114;;:::o;9978:149::-;10043:15;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;10061:5;:15;;;10077:4;10061:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10061:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10061:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10061:21:0;;;;;;;;;;;;;;;;10043:39;;10088:34;10107:5;;;;;;;;;;;10114:7;10088:5;:18;;;;:34;;;;;:::i;:::-;9978:149;;:::o;5570:53::-;;;;;;;;;;;;;;;;;;;;:::o;1177:136::-;1260:4;1281:27;1298:9;1281:5;1287;1281:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1281:12:0;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;1274:34;;1177:136;;;;:::o;7359:201::-;7457:9;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;7469:1;7457:13;;7452:104;7476:10;:17;7472:1;:21;7452:104;;;7508:41;7535:10;7546:1;7535:13;;;;;;;;;;;;;;;;;;7508:26;:41::i;:::-;7495:3;;;;;;;7452:104;;;7359:201;;:::o;6986:132::-;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;7074:39;7085:9;7096:16;;;;;;;;;;;;;;;;;;7074:10;:39::i;:::-;6986:132;:::o;9343:164::-;9415:20;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;9446:12;9415:44;;9465:12;:30;;;9496:5;;;;;;;;;;;9465:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9465:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9465:37:0;;;;9343:164;;:::o;13968:105::-;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;14041:1;14027:11;;;;;;;;;;;:15;;;14019:24;;;;;;;;14053:11;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13968:105::o;4642:111::-;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;4718:5;;;;;;;;;;;4699:25;;;;;;;;;;;;4746:1;4730:5;;:18;;;;;;;;;;;;;;;;;;4642:111::o;14507:196::-;14569:10;5771:38;5781:9;5792:16;;;;;;;;;;;;;;;;;;5771:9;:38::i;:::-;14620:1;14606:11;;;;;;;;;;;:15;;;14598:24;;;;;;;;14655:4;14632:7;:20;14640:11;14632:20;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;14674:22;14684:11;14674:22;;;;;;;;;;;;;;;;;;;;;;;;14507:196;;:::o;6020:124::-;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;6103:36;6111:9;6122:16;;;;;;;;;;;;;;;;;;6103:7;:36::i;:::-;6020:124;:::o;3879:20::-;;;;;;;;;;;;;:::o;6217:133::-;6288:4;6309:36;6317:9;6328:16;;;;;;;;;;;;;;;;;;6309:7;:36::i;:::-;6302:43;;6217:133;;;:::o;11376:91::-;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;11425:5;;;;;;;;;;;:14;;:37;11448:4;11440:21;;;11425:37;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11425:37:0;11376:91::o;13691:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;12154:129::-;12270:8;;;6568:191;6661:9;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;6673:1;6661:13;;6656:99;6680:10;:17;6676:1;:21;6656:99;;;6712:36;6734:10;6745:1;6734:13;;;;;;;;;;;;;;;;;;6712:21;:36::i;:::-;6699:3;;;;;;;6656:99;;;6568:191;;:::o;13572:24::-;;;;;;;;;;;;;:::o;4915:103::-;4360:5;;;;;;;;;;;4346:19;;:10;:19;;;4338:28;;;;;;;;4984:29;5003:9;4984:18;:29::i;:::-;4915:103;:::o;14203:95::-;14252:4;14290:1;14275:11;;;;;;;;;;;:16;;;14268:23;;14203:95;:::o;3355:107::-;3441:15;3445:4;3451;3441:3;:15::i;:::-;3433:24;;;;;;;;3355:107;;:::o;8270:121::-;8360:5;:14;;;8375:2;8379:5;8360:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8360:25:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8360:25:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8360:25:0;;;;;;;;;;;;;;;;8352:34;;;;;;;;8270:121;;;:::o;3540:124::-;3621:4;3642;:11;;:17;3654:4;3642:17;;;;;;;;;;;;;;;;;;;;;;;;;3635:24;;3540:124;;;;:::o;1699:149::-;1773:30;1793:9;1773:5;1779;1773:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1773:12:0;;;;;;;;;;;;;;;;;;;;;:19;;:30;;;;:::i;:::-;1826:9;1814:29;;;1837:5;1814:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1814:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1699:149;;:::o;1433:141::-;1504:27;1521:9;1504:5;1510;1504:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1504:12:0;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;1552:9;1542:27;;;1563:5;1542:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1542:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1433:141;;:::o;5153:171::-;5244:1;5223:23;;:9;:23;;;;5215:32;;;;;;;;5286:9;5258:38;;5279:5;;;;;;;;;;;5258:38;;;;;;;;;;;;5310:9;5302:5;;:17;;;;;;;;;;;;;;;;;;5153:171;:::o;3179:100::-;3269:5;3249:4;:11;;:17;3261:4;3249:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;3179:100;;:::o;3018:96::-;3105:4;3085;:11;;:17;3097:4;3085:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;3018:96;;:::o"},"ast":{"attributes":{"absolutePath":"/home/worm/Etherscan/downloader/tmp/0x587576d2428deda929cb70bf3dfc5fa3447138e7_InAndOut.sol","exportedSymbols":{"CanReclaimToken":[550],"ERC20":[499],"ERC20Basic":[401],"HasNoContracts":[522],"HasNoEther":[583],"HasNoTokens":[605],"InAndOut":[678],"NoOwner":[612],"Ownable":[257],"RBAC":[105],"Roles":[173],"SafeERC20":[459],"Whitelist":[371]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".24"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title RBAC (Role-Based Access Control)\n@author Matt Condon (@Shrugs)\n@dev Stores and provides setters and getters for roles and addresses.\nSupports unlimited numbers of roles and addresses.\nSee //contracts/mocks/RBACMock.sol for an example of usage.\nThis RBAC method uses strings to key roles. It may be beneficial\nfor you to write your own implementation of this interface using Enums or similar.\nIt's also recommended that you define constants in the contract, like ROLE_ADMIN below,\nto avoid typos.","fullyImplemented":true,"linearizedBaseContracts":[105],"name":"RBAC","scope":679},"children":[{"children":[{"attributes":{"contractScope":null,"name":"Roles","referencedDeclaration":173,"type":"library Roles"},"id":2,"name":"UserDefinedTypeName","src":"588:5:0"},{"attributes":{"contractScope":null,"name":"Roles.Role","referencedDeclaration":110,"type":"struct Roles.Role"},"id":3,"name":"UserDefinedTypeName","src":"598:10:0"}],"id":4,"name":"UsingForDirective","src":"582:27:0"},{"attributes":{"constant":false,"name":"roles","scope":105,"stateVariable":true,"storageLocation":"default","type":"mapping(string => struct Roles.Role)","value":null,"visibility":"private"},"children":[{"attributes":{"type":"mapping(string => struct Roles.Role)"},"children":[{"attributes":{"name":"string","type":"string"},"id":5,"name":"ElementaryTypeName","src":"622:6:0"},{"attributes":{"contractScope":null,"name":"Roles.Role","referencedDeclaration":110,"type":"struct Roles.Role"},"id":6,"name":"UserDefinedTypeName","src":"632:10:0"}],"id":7,"name":"Mapping","src":"613:30:0"}],"id":8,"name":"VariableDeclaration","src":"613:44:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"RoleAdded"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"operator","scope":14,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":9,"name":"ElementaryTypeName","src":"678:7:0"}],"id":10,"name":"VariableDeclaration","src":"678:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"role","scope":14,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":11,"name":"ElementaryTypeName","src":"704:6:0"}],"id":12,"name":"VariableDeclaration","src":"704:11:0"}],"id":13,"name":"ParameterList","src":"677:39:0"}],"id":14,"name":"EventDefinition","src":"662:55:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"RoleRemoved"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"operator","scope":20,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":15,"name":"ElementaryTypeName","src":"738:7:0"}],"id":16,"name":"VariableDeclaration","src":"738:24:0"},{"attributes":{"constant":false,"indexed":false,"name":"role","scope":20,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":17,"name":"ElementaryTypeName","src":"764:6:0"}],"id":18,"name":"VariableDeclaration","src":"764:11:0"}],"id":19,"name":"ParameterList","src":"737:39:0"}],"id":20,"name":"EventDefinition","src":"720:57:0"},{"attributes":{"constant":true,"documentation":"@dev reverts if addr does not have role\n@param _operator address\n@param _role the name of the role\n// reverts","implemented":true,"isConstructor":false,"modifiers":[null],"name":"checkRole","payable":false,"scope":105,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":35,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":21,"name":"ElementaryTypeName","src":"942:7:0"}],"id":22,"name":"VariableDeclaration","src":"942:17:0"},{"attributes":{"constant":false,"name":"_role","scope":35,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":23,"name":"ElementaryTypeName","src":"961:6:0"}],"id":24,"name":"VariableDeclaration","src":"961:12:0"}],"id":25,"name":"ParameterList","src":"941:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":26,"name":"ParameterList","src":"997:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"check","referencedDeclaration":157,"type":"function (struct Roles.Role storage pointer,address) view"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":27,"name":"Identifier","src":"1003:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":24,"type":"string memory","value":"_role"},"id":28,"name":"Identifier","src":"1009:5:0"}],"id":29,"name":"IndexAccess","src":"1003:12:0"}],"id":30,"name":"MemberAccess","src":"1003:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"address","value":"_operator"},"id":31,"name":"Identifier","src":"1022:9:0"}],"id":32,"name":"FunctionCall","src":"1003:29:0"}],"id":33,"name":"ExpressionStatement","src":"1003:29:0"}],"id":34,"name":"Block","src":"997:40:0"}],"id":35,"name":"FunctionDefinition","src":"923:114:0"},{"attributes":{"constant":true,"documentation":"@dev determine if addr has role\n@param _operator address\n@param _role the name of the role\n@return bool","implemented":true,"isConstructor":false,"modifiers":[null],"name":"hasRole","payable":false,"scope":105,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":52,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":36,"name":"ElementaryTypeName","src":"1194:7:0"}],"id":37,"name":"VariableDeclaration","src":"1194:17:0"},{"attributes":{"constant":false,"name":"_role","scope":52,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":38,"name":"ElementaryTypeName","src":"1213:6:0"}],"id":39,"name":"VariableDeclaration","src":"1213:12:0"}],"id":40,"name":"ParameterList","src":"1193:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":52,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":41,"name":"ElementaryTypeName","src":"1260:4:0"}],"id":42,"name":"VariableDeclaration","src":"1260:4:0"}],"id":43,"name":"ParameterList","src":"1259:6:0"},{"children":[{"attributes":{"functionReturnParameters":43},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"has","referencedDeclaration":172,"type":"function (struct Roles.Role storage pointer,address) view returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":44,"name":"Identifier","src":"1281:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"string memory","value":"_role"},"id":45,"name":"Identifier","src":"1287:5:0"}],"id":46,"name":"IndexAccess","src":"1281:12:0"}],"id":47,"name":"MemberAccess","src":"1281:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":37,"type":"address","value":"_operator"},"id":48,"name":"Identifier","src":"1298:9:0"}],"id":49,"name":"FunctionCall","src":"1281:27:0"}],"id":50,"name":"Return","src":"1274:34:0"}],"id":51,"name":"Block","src":"1268:45:0"}],"id":52,"name":"FunctionDefinition","src":"1177:136:0"},{"attributes":{"constant":false,"documentation":"@dev add a role to an address\n@param _operator address\n@param _role the name of the role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"addRole","payable":false,"scope":105,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":72,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":53,"name":"ElementaryTypeName","src":"1450:7:0"}],"id":54,"name":"VariableDeclaration","src":"1450:17:0"},{"attributes":{"constant":false,"name":"_role","scope":72,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":55,"name":"ElementaryTypeName","src":"1469:6:0"}],"id":56,"name":"VariableDeclaration","src":"1469:12:0"}],"id":57,"name":"ParameterList","src":"1449:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":58,"name":"ParameterList","src":"1498:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":126,"type":"function (struct Roles.Role storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":59,"name":"Identifier","src":"1504:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"string memory","value":"_role"},"id":60,"name":"Identifier","src":"1510:5:0"}],"id":61,"name":"IndexAccess","src":"1504:12:0"}],"id":62,"name":"MemberAccess","src":"1504:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"address","value":"_operator"},"id":63,"name":"Identifier","src":"1521:9:0"}],"id":64,"name":"FunctionCall","src":"1504:27:0"}],"id":65,"name":"ExpressionStatement","src":"1504:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"function (address,string memory)","value":"RoleAdded"},"id":66,"name":"Identifier","src":"1542:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"address","value":"_operator"},"id":67,"name":"Identifier","src":"1552:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":56,"type":"string memory","value":"_role"},"id":68,"name":"Identifier","src":"1563:5:0"}],"id":69,"name":"FunctionCall","src":"1542:27:0"}],"id":70,"name":"EmitStatement","src":"1537:32:0"}],"id":71,"name":"Block","src":"1498:76:0"}],"id":72,"name":"FunctionDefinition","src":"1433:141:0"},{"attributes":{"constant":false,"documentation":"@dev remove a role from an address\n@param _operator address\n@param _role the name of the role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"removeRole","payable":false,"scope":105,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":92,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":73,"name":"ElementaryTypeName","src":"1719:7:0"}],"id":74,"name":"VariableDeclaration","src":"1719:17:0"},{"attributes":{"constant":false,"name":"_role","scope":92,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":75,"name":"ElementaryTypeName","src":"1738:6:0"}],"id":76,"name":"VariableDeclaration","src":"1738:12:0"}],"id":77,"name":"ParameterList","src":"1718:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":78,"name":"ParameterList","src":"1767:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"remove","referencedDeclaration":142,"type":"function (struct Roles.Role storage pointer,address)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct Roles.Role storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"mapping(string memory => struct Roles.Role storage ref)","value":"roles"},"id":79,"name":"Identifier","src":"1773:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":76,"type":"string memory","value":"_role"},"id":80,"name":"Identifier","src":"1779:5:0"}],"id":81,"name":"IndexAccess","src":"1773:12:0"}],"id":82,"name":"MemberAccess","src":"1773:19:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":74,"type":"address","value":"_operator"},"id":83,"name":"Identifier","src":"1793:9:0"}],"id":84,"name":"FunctionCall","src":"1773:30:0"}],"id":85,"name":"ExpressionStatement","src":"1773:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":20,"type":"function (address,string memory)","value":"RoleRemoved"},"id":86,"name":"Identifier","src":"1814:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":74,"type":"address","value":"_operator"},"id":87,"name":"Identifier","src":"1826:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":76,"type":"string memory","value":"_role"},"id":88,"name":"Identifier","src":"1837:5:0"}],"id":89,"name":"FunctionCall","src":"1814:29:0"}],"id":90,"name":"EmitStatement","src":"1809:34:0"}],"id":91,"name":"Block","src":"1767:81:0"}],"id":92,"name":"FunctionDefinition","src":"1699:149:0"},{"attributes":{"documentation":"@dev modifier to scope access to a single role (uses msg.sender as addr)\n@param _role the name of the role\n// reverts","name":"onlyRole","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_role","scope":104,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":93,"name":"ElementaryTypeName","src":"2015:6:0"}],"id":94,"name":"VariableDeclaration","src":"2015:12:0"}],"id":95,"name":"ParameterList","src":"2014:14:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":35,"type":"function (address,string memory) view","value":"checkRole"},"id":96,"name":"Identifier","src":"2037:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":693,"type":"msg","value":"msg"},"id":97,"name":"Identifier","src":"2047:3:0"}],"id":98,"name":"MemberAccess","src":"2047:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":94,"type":"string memory","value":"_role"},"id":99,"name":"Identifier","src":"2059:5:0"}],"id":100,"name":"FunctionCall","src":"2037:28:0"}],"id":101,"name":"ExpressionStatement","src":"2037:28:0"},{"id":102,"name":"PlaceholderStatement","src":"2071:1:0"}],"id":103,"name":"Block","src":"2031:46:0"}],"id":104,"name":"ModifierDefinition","src":"1997:80:0"}],"id":105,"name":"ContractDefinition","src":"564:2158:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Roles\n@author Francisco Giordano (@frangio)\n@dev Library for managing addresses assigned to a Role.\nSee RBAC.sol for example usage.","fullyImplemented":true,"linearizedBaseContracts":[173],"name":"Roles","scope":679},"children":[{"attributes":{"canonicalName":"Roles.Role","name":"Role","scope":173,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"bearer","scope":110,"stateVariable":false,"storageLocation":"default","type":"mapping(address => bool)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(address => bool)"},"children":[{"attributes":{"name":"address","type":"address"},"id":106,"name":"ElementaryTypeName","src":"2928:7:0"},{"attributes":{"name":"bool","type":"bool"},"id":107,"name":"ElementaryTypeName","src":"2939:4:0"}],"id":108,"name":"Mapping","src":"2919:25:0"}],"id":109,"name":"VariableDeclaration","src":"2919:32:0"}],"id":110,"name":"StructDefinition","src":"2901:55:0"},{"attributes":{"constant":false,"documentation":"@dev give an address access to this role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"add","payable":false,"scope":173,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"role","scope":126,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":110,"type":"struct Roles.Role"},"id":111,"name":"UserDefinedTypeName","src":"3031:4:0"}],"id":112,"name":"VariableDeclaration","src":"3031:17:0"},{"attributes":{"constant":false,"name":"addr","scope":126,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":113,"name":"ElementaryTypeName","src":"3050:7:0"}],"id":114,"name":"VariableDeclaration","src":"3050:12:0"}],"id":115,"name":"ParameterList","src":"3030:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":116,"name":"ParameterList","src":"3079:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bearer","referencedDeclaration":109,"type":"mapping(address => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":112,"type":"struct Roles.Role storage pointer","value":"role"},"id":117,"name":"Identifier","src":"3085:4:0"}],"id":120,"name":"MemberAccess","src":"3085:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"address","value":"addr"},"id":119,"name":"Identifier","src":"3097:4:0"}],"id":121,"name":"IndexAccess","src":"3085:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":122,"name":"Literal","src":"3105:4:0"}],"id":123,"name":"Assignment","src":"3085:24:0"}],"id":124,"name":"ExpressionStatement","src":"3085:24:0"}],"id":125,"name":"Block","src":"3079:35:0"}],"id":126,"name":"FunctionDefinition","src":"3018:96:0"},{"attributes":{"constant":false,"documentation":"@dev remove an address' access to this role","implemented":true,"isConstructor":false,"modifiers":[null],"name":"remove","payable":false,"scope":173,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"role","scope":142,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":110,"type":"struct Roles.Role"},"id":127,"name":"UserDefinedTypeName","src":"3195:4:0"}],"id":128,"name":"VariableDeclaration","src":"3195:17:0"},{"attributes":{"constant":false,"name":"addr","scope":142,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":129,"name":"ElementaryTypeName","src":"3214:7:0"}],"id":130,"name":"VariableDeclaration","src":"3214:12:0"}],"id":131,"name":"ParameterList","src":"3194:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":132,"name":"ParameterList","src":"3243:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bearer","referencedDeclaration":109,"type":"mapping(address => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"struct Roles.Role storage pointer","value":"role"},"id":133,"name":"Identifier","src":"3249:4:0"}],"id":136,"name":"MemberAccess","src":"3249:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":130,"type":"address","value":"addr"},"id":135,"name":"Identifier","src":"3261:4:0"}],"id":137,"name":"IndexAccess","src":"3249:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":138,"name":"Literal","src":"3269:5:0"}],"id":139,"name":"Assignment","src":"3249:25:0"}],"id":140,"name":"ExpressionStatement","src":"3249:25:0"}],"id":141,"name":"Block","src":"3243:36:0"}],"id":142,"name":"FunctionDefinition","src":"3179:100:0"},{"attributes":{"constant":true,"documentation":"@dev check if an address has this role\n// reverts","implemented":true,"isConstructor":false,"modifiers":[null],"name":"check","payable":false,"scope":173,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"role","scope":157,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":110,"type":"struct Roles.Role"},"id":143,"name":"UserDefinedTypeName","src":"3370:4:0"}],"id":144,"name":"VariableDeclaration","src":"3370:17:0"},{"attributes":{"constant":false,"name":"addr","scope":157,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":145,"name":"ElementaryTypeName","src":"3389:7:0"}],"id":146,"name":"VariableDeclaration","src":"3389:12:0"}],"id":147,"name":"ParameterList","src":"3369:33:0"},{"attributes":{"parameters":[null]},"children":[],"id":148,"name":"ParameterList","src":"3427:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":149,"name":"Identifier","src":"3433:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_struct$_Role_$110_storage_ptr","typeString":"struct Roles.Role storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":172,"type":"function (struct Roles.Role storage pointer,address) view returns (bool)","value":"has"},"id":150,"name":"Identifier","src":"3441:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":144,"type":"struct Roles.Role storage pointer","value":"role"},"id":151,"name":"Identifier","src":"3445:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":146,"type":"address","value":"addr"},"id":152,"name":"Identifier","src":"3451:4:0"}],"id":153,"name":"FunctionCall","src":"3441:15:0"}],"id":154,"name":"FunctionCall","src":"3433:24:0"}],"id":155,"name":"ExpressionStatement","src":"3433:24:0"}],"id":156,"name":"Block","src":"3427:35:0"}],"id":157,"name":"FunctionDefinition","src":"3355:107:0"},{"attributes":{"constant":true,"documentation":"@dev check if an address has this role\n@return bool","implemented":true,"isConstructor":false,"modifiers":[null],"name":"has","payable":false,"scope":173,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"role","scope":172,"stateVariable":false,"storageLocation":"storage","type":"struct Roles.Role","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Role","referencedDeclaration":110,"type":"struct Roles.Role"},"id":158,"name":"UserDefinedTypeName","src":"3553:4:0"}],"id":159,"name":"VariableDeclaration","src":"3553:17:0"},{"attributes":{"constant":false,"name":"addr","scope":172,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":160,"name":"ElementaryTypeName","src":"3572:7:0"}],"id":161,"name":"VariableDeclaration","src":"3572:12:0"}],"id":162,"name":"ParameterList","src":"3552:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":172,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":163,"name":"ElementaryTypeName","src":"3621:4:0"}],"id":164,"name":"VariableDeclaration","src":"3621:4:0"}],"id":165,"name":"ParameterList","src":"3620:6:0"},{"children":[{"attributes":{"functionReturnParameters":165},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bearer","referencedDeclaration":109,"type":"mapping(address => bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":159,"type":"struct Roles.Role storage pointer","value":"role"},"id":166,"name":"Identifier","src":"3642:4:0"}],"id":167,"name":"MemberAccess","src":"3642:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":161,"type":"address","value":"addr"},"id":168,"name":"Identifier","src":"3654:4:0"}],"id":169,"name":"IndexAccess","src":"3642:17:0"}],"id":170,"name":"Return","src":"3635:24:0"}],"id":171,"name":"Block","src":"3629:35:0"}],"id":172,"name":"FunctionDefinition","src":"3540:124:0"}],"id":173,"name":"ContractDefinition","src":"2883:783:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".","fullyImplemented":true,"linearizedBaseContracts":[257],"name":"Ownable","scope":679},"children":[{"attributes":{"constant":false,"name":"owner","scope":257,"stateVariable":true,"storageLocation":"default","type":"address","value":null,"visibility":"public"},"children":[{"attributes":{"name":"address","type":"address"},"id":174,"name":"ElementaryTypeName","src":"3879:7:0"}],"id":175,"name":"VariableDeclaration","src":"3879:20:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipRenounced"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":179,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":176,"name":"ElementaryTypeName","src":"3930:7:0"}],"id":177,"name":"VariableDeclaration","src":"3930:29:0"}],"id":178,"name":"ParameterList","src":"3929:31:0"}],"id":179,"name":"EventDefinition","src":"3905:56:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"OwnershipTransferred"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"previousOwner","scope":185,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":180,"name":"ElementaryTypeName","src":"3996:7:0"}],"id":181,"name":"VariableDeclaration","src":"3996:29:0"},{"attributes":{"constant":false,"indexed":true,"name":"newOwner","scope":185,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":182,"name":"ElementaryTypeName","src":"4031:7:0"}],"id":183,"name":"VariableDeclaration","src":"4031:24:0"}],"id":184,"name":"ParameterList","src":"3990:69:0"}],"id":185,"name":"EventDefinition","src":"3964:96:0"},{"attributes":{"constant":false,"documentation":"@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":false,"scope":257,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":186,"name":"ParameterList","src":"4192:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":187,"name":"ParameterList","src":"4202:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":188,"name":"Identifier","src":"4208:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":693,"type":"msg","value":"msg"},"id":189,"name":"Identifier","src":"4216:3:0"}],"id":190,"name":"MemberAccess","src":"4216:10:0"}],"id":191,"name":"Assignment","src":"4208:18:0"}],"id":192,"name":"ExpressionStatement","src":"4208:18:0"}],"id":193,"name":"Block","src":"4202:29:0"}],"id":194,"name":"FunctionDefinition","src":"4181:50:0"},{"attributes":{"documentation":"@dev Throws if called by any account other than the owner.","name":"onlyOwner","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":195,"name":"ParameterList","src":"4329:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":196,"name":"Identifier","src":"4338:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":693,"type":"msg","value":"msg"},"id":197,"name":"Identifier","src":"4346:3:0"}],"id":198,"name":"MemberAccess","src":"4346:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":199,"name":"Identifier","src":"4360:5:0"}],"id":200,"name":"BinaryOperation","src":"4346:19:0"}],"id":201,"name":"FunctionCall","src":"4338:28:0"}],"id":202,"name":"ExpressionStatement","src":"4338:28:0"},{"id":203,"name":"PlaceholderStatement","src":"4372:1:0"}],"id":204,"name":"Block","src":"4332:46:0"}],"id":205,"name":"ModifierDefinition","src":"4311:67:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.","implemented":true,"isConstructor":false,"name":"renounceOwnership","payable":false,"scope":257,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":206,"name":"ParameterList","src":"4668:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":209,"name":"ParameterList","src":"4688:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":207,"name":"Identifier","src":"4678:9:0"}],"id":208,"name":"ModifierInvocation","src":"4678:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":179,"type":"function (address)","value":"OwnershipRenounced"},"id":210,"name":"Identifier","src":"4699:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":211,"name":"Identifier","src":"4718:5:0"}],"id":212,"name":"FunctionCall","src":"4699:25:0"}],"id":213,"name":"EmitStatement","src":"4694:30:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":214,"name":"Identifier","src":"4730:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":215,"name":"ElementaryTypeNameExpression","src":"4738:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":216,"name":"Literal","src":"4746:1:0"}],"id":217,"name":"FunctionCall","src":"4738:10:0"}],"id":218,"name":"Assignment","src":"4730:18:0"}],"id":219,"name":"ExpressionStatement","src":"4730:18:0"}],"id":220,"name":"Block","src":"4688:65:0"}],"id":221,"name":"FunctionDefinition","src":"4642:111:0"},{"attributes":{"constant":false,"documentation":"@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"name":"transferOwnership","payable":false,"scope":257,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":233,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":222,"name":"ElementaryTypeName","src":"4942:7:0"}],"id":223,"name":"VariableDeclaration","src":"4942:17:0"}],"id":224,"name":"ParameterList","src":"4941:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":227,"name":"ParameterList","src":"4978:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":225,"name":"Identifier","src":"4968:9:0"}],"id":226,"name":"ModifierInvocation","src":"4968:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":256,"type":"function (address)","value":"_transferOwnership"},"id":228,"name":"Identifier","src":"4984:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":223,"type":"address","value":"_newOwner"},"id":229,"name":"Identifier","src":"5003:9:0"}],"id":230,"name":"FunctionCall","src":"4984:29:0"}],"id":231,"name":"ExpressionStatement","src":"4984:29:0"}],"id":232,"name":"Block","src":"4978:40:0"}],"id":233,"name":"FunctionDefinition","src":"4915:103:0"},{"attributes":{"constant":false,"documentation":"@dev Transfers control of the contract to a newOwner.\n@param _newOwner The address to transfer ownership to.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"_transferOwnership","payable":false,"scope":257,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_newOwner","scope":256,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":234,"name":"ElementaryTypeName","src":"5181:7:0"}],"id":235,"name":"VariableDeclaration","src":"5181:17:0"}],"id":236,"name":"ParameterList","src":"5180:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":237,"name":"ParameterList","src":"5209:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":238,"name":"Identifier","src":"5215:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":235,"type":"address","value":"_newOwner"},"id":239,"name":"Identifier","src":"5223:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":240,"name":"ElementaryTypeNameExpression","src":"5236:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":241,"name":"Literal","src":"5244:1:0"}],"id":242,"name":"FunctionCall","src":"5236:10:0"}],"id":243,"name":"BinaryOperation","src":"5223:23:0"}],"id":244,"name":"FunctionCall","src":"5215:32:0"}],"id":245,"name":"ExpressionStatement","src":"5215:32:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":185,"type":"function (address,address)","value":"OwnershipTransferred"},"id":246,"name":"Identifier","src":"5258:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":247,"name":"Identifier","src":"5279:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":235,"type":"address","value":"_newOwner"},"id":248,"name":"Identifier","src":"5286:9:0"}],"id":249,"name":"FunctionCall","src":"5258:38:0"}],"id":250,"name":"EmitStatement","src":"5253:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":251,"name":"Identifier","src":"5302:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":235,"type":"address","value":"_newOwner"},"id":252,"name":"Identifier","src":"5310:9:0"}],"id":253,"name":"Assignment","src":"5302:17:0"}],"id":254,"name":"ExpressionStatement","src":"5302:17:0"}],"id":255,"name":"Block","src":"5209:115:0"}],"id":256,"name":"FunctionDefinition","src":"5153:171:0"}],"id":257,"name":"ContractDefinition","src":"3858:1468:0"},{"attributes":{"contractDependencies":[105,257],"contractKind":"contract","documentation":"@title Whitelist\n@dev The Whitelist contract has a whitelist of addresses, and provides basic authorization control functions.\nThis simplifies the implementation of \"user permissions\".","fullyImplemented":true,"linearizedBaseContracts":[371,105,257],"name":"Whitelist","scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":257,"type":"contract Ownable"},"id":258,"name":"UserDefinedTypeName","src":"5552:7:0"}],"id":259,"name":"InheritanceSpecifier","src":"5552:7:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"RBAC","referencedDeclaration":105,"type":"contract RBAC"},"id":260,"name":"UserDefinedTypeName","src":"5561:4:0"}],"id":261,"name":"InheritanceSpecifier","src":"5561:4:0"},{"attributes":{"constant":true,"name":"ROLE_WHITELISTED","scope":371,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"public"},"children":[{"attributes":{"name":"string","type":"string"},"id":262,"name":"ElementaryTypeName","src":"5570:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"77686974656c697374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"whitelist\"","value":"whitelist"},"id":263,"name":"Literal","src":"5612:11:0"}],"id":264,"name":"VariableDeclaration","src":"5570:53:0"},{"attributes":{"documentation":"@dev Throws if operator is not whitelisted.\n@param _operator address","name":"onlyIfWhitelisted","visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":275,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":265,"name":"ElementaryTypeName","src":"5746:7:0"}],"id":266,"name":"VariableDeclaration","src":"5746:17:0"}],"id":267,"name":"ParameterList","src":"5745:19:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":35,"type":"function (address,string memory) view","value":"checkRole"},"id":268,"name":"Identifier","src":"5771:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":266,"type":"address","value":"_operator"},"id":269,"name":"Identifier","src":"5781:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"string memory","value":"ROLE_WHITELISTED"},"id":270,"name":"Identifier","src":"5792:16:0"}],"id":271,"name":"FunctionCall","src":"5771:38:0"}],"id":272,"name":"ExpressionStatement","src":"5771:38:0"},{"id":273,"name":"PlaceholderStatement","src":"5815:1:0"}],"id":274,"name":"Block","src":"5765:56:0"}],"id":275,"name":"ModifierDefinition","src":"5719:102:0"},{"attributes":{"constant":false,"documentation":"@dev add an address to the whitelist\n@param _operator address\n@return true if the address was added to the whitelist, false if the address was already in the whitelist","implemented":true,"isConstructor":false,"name":"addAddressToWhitelist","payable":false,"scope":371,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":288,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":276,"name":"ElementaryTypeName","src":"6051:7:0"}],"id":277,"name":"VariableDeclaration","src":"6051:17:0"}],"id":278,"name":"ParameterList","src":"6050:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":281,"name":"ParameterList","src":"6097:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":279,"name":"Identifier","src":"6074:9:0"}],"id":280,"name":"ModifierInvocation","src":"6074:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":72,"type":"function (address,string memory)","value":"addRole"},"id":282,"name":"Identifier","src":"6103:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":277,"type":"address","value":"_operator"},"id":283,"name":"Identifier","src":"6111:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"string memory","value":"ROLE_WHITELISTED"},"id":284,"name":"Identifier","src":"6122:16:0"}],"id":285,"name":"FunctionCall","src":"6103:36:0"}],"id":286,"name":"ExpressionStatement","src":"6103:36:0"}],"id":287,"name":"Block","src":"6097:47:0"}],"id":288,"name":"FunctionDefinition","src":"6020:124:0"},{"attributes":{"constant":true,"documentation":"@dev getter to determine if address is in whitelist","implemented":true,"isConstructor":false,"modifiers":[null],"name":"whitelist","payable":false,"scope":371,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":301,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":289,"name":"ElementaryTypeName","src":"6236:7:0"}],"id":290,"name":"VariableDeclaration","src":"6236:17:0"}],"id":291,"name":"ParameterList","src":"6235:19:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":301,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":292,"name":"ElementaryTypeName","src":"6288:4:0"}],"id":293,"name":"VariableDeclaration","src":"6288:4:0"}],"id":294,"name":"ParameterList","src":"6287:6:0"},{"children":[{"attributes":{"functionReturnParameters":294},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"function (address,string memory) view returns (bool)","value":"hasRole"},"id":295,"name":"Identifier","src":"6309:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":290,"type":"address","value":"_operator"},"id":296,"name":"Identifier","src":"6317:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"string memory","value":"ROLE_WHITELISTED"},"id":297,"name":"Identifier","src":"6328:16:0"}],"id":298,"name":"FunctionCall","src":"6309:36:0"}],"id":299,"name":"Return","src":"6302:43:0"}],"id":300,"name":"Block","src":"6296:54:0"}],"id":301,"name":"FunctionDefinition","src":"6217:133:0"},{"attributes":{"constant":false,"documentation":"@dev add addresses to the whitelist\n@param _operators addresses\n@return true if at least one address was added to the whitelist,\nfalse if all addresses were already in the whitelist","implemented":true,"isConstructor":false,"name":"addAddressesToWhitelist","payable":false,"scope":371,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operators","scope":329,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":302,"name":"ElementaryTypeName","src":"6601:7:0"}],"id":303,"name":"ArrayTypeName","src":"6601:9:0"}],"id":304,"name":"VariableDeclaration","src":"6601:20:0"}],"id":305,"name":"ParameterList","src":"6600:22:0"},{"attributes":{"parameters":[null]},"children":[],"id":308,"name":"ParameterList","src":"6650:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":306,"name":"Identifier","src":"6627:9:0"}],"id":307,"name":"ModifierInvocation","src":"6627:9:0"},{"children":[{"children":[{"attributes":{"assignments":[310]},"children":[{"attributes":{"constant":false,"name":"i","scope":329,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":309,"name":"ElementaryTypeName","src":"6661:7:0"}],"id":310,"name":"VariableDeclaration","src":"6661:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":311,"name":"Literal","src":"6673:1:0"}],"id":312,"name":"VariableDeclarationStatement","src":"6661:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":310,"type":"uint256","value":"i"},"id":313,"name":"Identifier","src":"6676:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":304,"type":"address[] memory","value":"_operators"},"id":314,"name":"Identifier","src":"6680:10:0"}],"id":315,"name":"MemberAccess","src":"6680:17:0"}],"id":316,"name":"BinaryOperation","src":"6676:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":310,"type":"uint256","value":"i"},"id":317,"name":"Identifier","src":"6699:1:0"}],"id":318,"name":"UnaryOperation","src":"6699:3:0"}],"id":319,"name":"ExpressionStatement","src":"6699:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":288,"type":"function (address)","value":"addAddressToWhitelist"},"id":320,"name":"Identifier","src":"6712:21:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":304,"type":"address[] memory","value":"_operators"},"id":321,"name":"Identifier","src":"6734:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":310,"type":"uint256","value":"i"},"id":322,"name":"Identifier","src":"6745:1:0"}],"id":323,"name":"IndexAccess","src":"6734:13:0"}],"id":324,"name":"FunctionCall","src":"6712:36:0"}],"id":325,"name":"ExpressionStatement","src":"6712:36:0"}],"id":326,"name":"Block","src":"6704:51:0"}],"id":327,"name":"ForStatement","src":"6656:99:0"}],"id":328,"name":"Block","src":"6650:109:0"}],"id":329,"name":"FunctionDefinition","src":"6568:191:0"},{"attributes":{"constant":false,"documentation":"@dev remove an address from the whitelist\n@param _operator address\n@return true if the address was removed from the whitelist,\nfalse if the address wasn't in the whitelist in the first place","implemented":true,"isConstructor":false,"name":"removeAddressFromWhitelist","payable":false,"scope":371,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operator","scope":342,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":330,"name":"ElementaryTypeName","src":"7022:7:0"}],"id":331,"name":"VariableDeclaration","src":"7022:17:0"}],"id":332,"name":"ParameterList","src":"7021:19:0"},{"attributes":{"parameters":[null]},"children":[],"id":335,"name":"ParameterList","src":"7068:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":333,"name":"Identifier","src":"7045:9:0"}],"id":334,"name":"ModifierInvocation","src":"7045:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"overloadedDeclarations":[null],"referencedDeclaration":92,"type":"function (address,string memory)","value":"removeRole"},"id":336,"name":"Identifier","src":"7074:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":331,"type":"address","value":"_operator"},"id":337,"name":"Identifier","src":"7085:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":264,"type":"string memory","value":"ROLE_WHITELISTED"},"id":338,"name":"Identifier","src":"7096:16:0"}],"id":339,"name":"FunctionCall","src":"7074:39:0"}],"id":340,"name":"ExpressionStatement","src":"7074:39:0"}],"id":341,"name":"Block","src":"7068:50:0"}],"id":342,"name":"FunctionDefinition","src":"6986:132:0"},{"attributes":{"constant":false,"documentation":"@dev remove addresses from the whitelist\n@param _operators addresses\n@return true if at least one address was removed from the whitelist,\nfalse if all addresses weren't in the whitelist in the first place","implemented":true,"isConstructor":false,"name":"removeAddressesFromWhitelist","payable":false,"scope":371,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_operators","scope":370,"stateVariable":false,"storageLocation":"default","type":"address[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"address[]"},"children":[{"attributes":{"name":"address","type":"address"},"id":343,"name":"ElementaryTypeName","src":"7397:7:0"}],"id":344,"name":"ArrayTypeName","src":"7397:9:0"}],"id":345,"name":"VariableDeclaration","src":"7397:20:0"}],"id":346,"name":"ParameterList","src":"7396:22:0"},{"attributes":{"parameters":[null]},"children":[],"id":349,"name":"ParameterList","src":"7446:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":347,"name":"Identifier","src":"7423:9:0"}],"id":348,"name":"ModifierInvocation","src":"7423:9:0"},{"children":[{"children":[{"attributes":{"assignments":[351]},"children":[{"attributes":{"constant":false,"name":"i","scope":370,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":350,"name":"ElementaryTypeName","src":"7457:7:0"}],"id":351,"name":"VariableDeclaration","src":"7457:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":352,"name":"Literal","src":"7469:1:0"}],"id":353,"name":"VariableDeclarationStatement","src":"7457:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"i"},"id":354,"name":"Identifier","src":"7472:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":345,"type":"address[] memory","value":"_operators"},"id":355,"name":"Identifier","src":"7476:10:0"}],"id":356,"name":"MemberAccess","src":"7476:17:0"}],"id":357,"name":"BinaryOperation","src":"7472:21:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"i"},"id":358,"name":"Identifier","src":"7495:1:0"}],"id":359,"name":"UnaryOperation","src":"7495:3:0"}],"id":360,"name":"ExpressionStatement","src":"7495:3:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":342,"type":"function (address)","value":"removeAddressFromWhitelist"},"id":361,"name":"Identifier","src":"7508:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":345,"type":"address[] memory","value":"_operators"},"id":362,"name":"Identifier","src":"7535:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":351,"type":"uint256","value":"i"},"id":363,"name":"Identifier","src":"7546:1:0"}],"id":364,"name":"IndexAccess","src":"7535:13:0"}],"id":365,"name":"FunctionCall","src":"7508:41:0"}],"id":366,"name":"ExpressionStatement","src":"7508:41:0"}],"id":367,"name":"Block","src":"7500:56:0"}],"id":368,"name":"ForStatement","src":"7452:104:0"}],"id":369,"name":"Block","src":"7446:114:0"}],"id":370,"name":"FunctionDefinition","src":"7359:201:0"}],"id":371,"name":"ContractDefinition","src":"5530:2033:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title ERC20Basic\n@dev Simpler version of ERC20 interface\nSee https://github.com/ethereum/EIPs/issues/179","fullyImplemented":false,"linearizedBaseContracts":[401],"name":"ERC20Basic","scope":679},"children":[{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"totalSupply","payable":false,"scope":401,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":372,"name":"ParameterList","src":"7732:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":376,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":373,"name":"ElementaryTypeName","src":"7756:7:0"}],"id":374,"name":"VariableDeclaration","src":"7756:7:0"}],"id":375,"name":"ParameterList","src":"7755:9:0"}],"id":376,"name":"FunctionDefinition","src":"7712:53:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"balanceOf","payable":false,"scope":401,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"who","scope":383,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":377,"name":"ElementaryTypeName","src":"7787:7:0"}],"id":378,"name":"VariableDeclaration","src":"7787:11:0"}],"id":379,"name":"ParameterList","src":"7786:13:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":383,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":380,"name":"ElementaryTypeName","src":"7821:7:0"}],"id":381,"name":"VariableDeclaration","src":"7821:7:0"}],"id":382,"name":"ParameterList","src":"7820:9:0"}],"id":383,"name":"FunctionDefinition","src":"7768:62:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transfer","payable":false,"scope":401,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"to","scope":392,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":384,"name":"ElementaryTypeName","src":"7851:7:0"}],"id":385,"name":"VariableDeclaration","src":"7851:10:0"},{"attributes":{"constant":false,"name":"value","scope":392,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":386,"name":"ElementaryTypeName","src":"7863:7:0"}],"id":387,"name":"VariableDeclaration","src":"7863:13:0"}],"id":388,"name":"ParameterList","src":"7850:27:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":392,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":389,"name":"ElementaryTypeName","src":"7894:4:0"}],"id":390,"name":"VariableDeclaration","src":"7894:4:0"}],"id":391,"name":"ParameterList","src":"7893:6:0"}],"id":392,"name":"FunctionDefinition","src":"7833:67:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":400,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":393,"name":"ElementaryTypeName","src":"7918:7:0"}],"id":394,"name":"VariableDeclaration","src":"7918:20:0"},{"attributes":{"constant":false,"indexed":true,"name":"to","scope":400,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":395,"name":"ElementaryTypeName","src":"7940:7:0"}],"id":396,"name":"VariableDeclaration","src":"7940:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":400,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":397,"name":"ElementaryTypeName","src":"7960:7:0"}],"id":398,"name":"VariableDeclaration","src":"7960:13:0"}],"id":399,"name":"ParameterList","src":"7917:57:0"}],"id":400,"name":"EventDefinition","src":"7903:72:0"}],"id":401,"name":"ContractDefinition","src":"7688:289:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.","fullyImplemented":true,"linearizedBaseContracts":[459],"name":"SafeERC20","scope":679},"children":[{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeTransfer","payable":false,"scope":459,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":419,"stateVariable":false,"storageLocation":"default","type":"contract ERC20Basic","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":401,"type":"contract ERC20Basic"},"id":402,"name":"UserDefinedTypeName","src":"8292:10:0"}],"id":403,"name":"VariableDeclaration","src":"8292:16:0"},{"attributes":{"constant":false,"name":"to","scope":419,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":404,"name":"ElementaryTypeName","src":"8310:7:0"}],"id":405,"name":"VariableDeclaration","src":"8310:10:0"},{"attributes":{"constant":false,"name":"value","scope":419,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":406,"name":"ElementaryTypeName","src":"8322:7:0"}],"id":407,"name":"VariableDeclaration","src":"8322:13:0"}],"id":408,"name":"ParameterList","src":"8291:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":409,"name":"ParameterList","src":"8346:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":410,"name":"Identifier","src":"8352:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":392,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":403,"type":"contract ERC20Basic","value":"token"},"id":411,"name":"Identifier","src":"8360:5:0"}],"id":412,"name":"MemberAccess","src":"8360:14:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":405,"type":"address","value":"to"},"id":413,"name":"Identifier","src":"8375:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":407,"type":"uint256","value":"value"},"id":414,"name":"Identifier","src":"8379:5:0"}],"id":415,"name":"FunctionCall","src":"8360:25:0"}],"id":416,"name":"FunctionCall","src":"8352:34:0"}],"id":417,"name":"ExpressionStatement","src":"8352:34:0"}],"id":418,"name":"Block","src":"8346:45:0"}],"id":419,"name":"FunctionDefinition","src":"8270:121:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeTransferFrom","payable":false,"scope":459,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":440,"stateVariable":false,"storageLocation":"default","type":"contract ERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"ERC20","referencedDeclaration":499,"type":"contract ERC20"},"id":420,"name":"UserDefinedTypeName","src":"8426:5:0"}],"id":421,"name":"VariableDeclaration","src":"8426:11:0"},{"attributes":{"constant":false,"name":"from","scope":440,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":422,"name":"ElementaryTypeName","src":"8443:7:0"}],"id":423,"name":"VariableDeclaration","src":"8443:12:0"},{"attributes":{"constant":false,"name":"to","scope":440,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":424,"name":"ElementaryTypeName","src":"8461:7:0"}],"id":425,"name":"VariableDeclaration","src":"8461:10:0"},{"attributes":{"constant":false,"name":"value","scope":440,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":426,"name":"ElementaryTypeName","src":"8477:7:0"}],"id":427,"name":"VariableDeclaration","src":"8477:13:0"}],"id":428,"name":"ParameterList","src":"8420:74:0"},{"attributes":{"parameters":[null]},"children":[],"id":429,"name":"ParameterList","src":"8510:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":430,"name":"Identifier","src":"8516:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":481,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":421,"type":"contract ERC20","value":"token"},"id":431,"name":"Identifier","src":"8524:5:0"}],"id":432,"name":"MemberAccess","src":"8524:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":423,"type":"address","value":"from"},"id":433,"name":"Identifier","src":"8543:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":425,"type":"address","value":"to"},"id":434,"name":"Identifier","src":"8549:2:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":427,"type":"uint256","value":"value"},"id":435,"name":"Identifier","src":"8553:5:0"}],"id":436,"name":"FunctionCall","src":"8524:35:0"}],"id":437,"name":"FunctionCall","src":"8516:44:0"}],"id":438,"name":"ExpressionStatement","src":"8516:44:0"}],"id":439,"name":"Block","src":"8510:55:0"}],"id":440,"name":"FunctionDefinition","src":"8395:170:0"},{"attributes":{"constant":false,"documentation":null,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"safeApprove","payable":false,"scope":459,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":458,"stateVariable":false,"storageLocation":"default","type":"contract ERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"ERC20","referencedDeclaration":499,"type":"contract ERC20"},"id":441,"name":"UserDefinedTypeName","src":"8590:5:0"}],"id":442,"name":"VariableDeclaration","src":"8590:11:0"},{"attributes":{"constant":false,"name":"spender","scope":458,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":443,"name":"ElementaryTypeName","src":"8603:7:0"}],"id":444,"name":"VariableDeclaration","src":"8603:15:0"},{"attributes":{"constant":false,"name":"value","scope":458,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":445,"name":"ElementaryTypeName","src":"8620:7:0"}],"id":446,"name":"VariableDeclaration","src":"8620:13:0"}],"id":447,"name":"ParameterList","src":"8589:45:0"},{"attributes":{"parameters":[null]},"children":[],"id":448,"name":"ParameterList","src":"8644:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":449,"name":"Identifier","src":"8650:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"approve","referencedDeclaration":490,"type":"function (address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":442,"type":"contract ERC20","value":"token"},"id":450,"name":"Identifier","src":"8658:5:0"}],"id":451,"name":"MemberAccess","src":"8658:13:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":444,"type":"address","value":"spender"},"id":452,"name":"Identifier","src":"8672:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":446,"type":"uint256","value":"value"},"id":453,"name":"Identifier","src":"8681:5:0"}],"id":454,"name":"FunctionCall","src":"8658:29:0"}],"id":455,"name":"FunctionCall","src":"8650:38:0"}],"id":456,"name":"ExpressionStatement","src":"8650:38:0"}],"id":457,"name":"Block","src":"8644:49:0"}],"id":458,"name":"FunctionDefinition","src":"8569:124:0"}],"id":459,"name":"ContractDefinition","src":"8248:447:0"},{"attributes":{"contractDependencies":[401],"contractKind":"contract","documentation":"@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20","fullyImplemented":false,"linearizedBaseContracts":[499,401],"name":"ERC20","scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":401,"type":"contract ERC20Basic"},"id":460,"name":"UserDefinedTypeName","src":"8804:10:0"}],"id":461,"name":"InheritanceSpecifier","src":"8804:10:0"},{"attributes":{"body":null,"constant":true,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"allowance","payable":false,"scope":499,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"owner","scope":470,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":462,"name":"ElementaryTypeName","src":"8838:7:0"}],"id":463,"name":"VariableDeclaration","src":"8838:13:0"},{"attributes":{"constant":false,"name":"spender","scope":470,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":464,"name":"ElementaryTypeName","src":"8853:7:0"}],"id":465,"name":"VariableDeclaration","src":"8853:15:0"}],"id":466,"name":"ParameterList","src":"8837:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":470,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":467,"name":"ElementaryTypeName","src":"8895:7:0"}],"id":468,"name":"VariableDeclaration","src":"8895:7:0"}],"id":469,"name":"ParameterList","src":"8894:9:0"}],"id":470,"name":"FunctionDefinition","src":"8819:85:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"transferFrom","payable":false,"scope":499,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"from","scope":481,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":471,"name":"ElementaryTypeName","src":"8930:7:0"}],"id":472,"name":"VariableDeclaration","src":"8930:12:0"},{"attributes":{"constant":false,"name":"to","scope":481,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":473,"name":"ElementaryTypeName","src":"8944:7:0"}],"id":474,"name":"VariableDeclaration","src":"8944:10:0"},{"attributes":{"constant":false,"name":"value","scope":481,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":475,"name":"ElementaryTypeName","src":"8956:7:0"}],"id":476,"name":"VariableDeclaration","src":"8956:13:0"}],"id":477,"name":"ParameterList","src":"8929:41:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":481,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":478,"name":"ElementaryTypeName","src":"8991:4:0"}],"id":479,"name":"VariableDeclaration","src":"8991:4:0"}],"id":480,"name":"ParameterList","src":"8990:6:0"}],"id":481,"name":"FunctionDefinition","src":"8908:89:0"},{"attributes":{"body":null,"constant":false,"documentation":null,"implemented":false,"isConstructor":false,"modifiers":[null],"name":"approve","payable":false,"scope":499,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":490,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":482,"name":"ElementaryTypeName","src":"9018:7:0"}],"id":483,"name":"VariableDeclaration","src":"9018:15:0"},{"attributes":{"constant":false,"name":"value","scope":490,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":484,"name":"ElementaryTypeName","src":"9035:7:0"}],"id":485,"name":"VariableDeclaration","src":"9035:13:0"}],"id":486,"name":"ParameterList","src":"9017:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":490,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":487,"name":"ElementaryTypeName","src":"9066:4:0"}],"id":488,"name":"VariableDeclaration","src":"9066:4:0"}],"id":489,"name":"ParameterList","src":"9065:6:0"}],"id":490,"name":"FunctionDefinition","src":"9001:71:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"owner","scope":498,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":491,"name":"ElementaryTypeName","src":"9095:7:0"}],"id":492,"name":"VariableDeclaration","src":"9095:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"spender","scope":498,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":493,"name":"ElementaryTypeName","src":"9122:7:0"}],"id":494,"name":"VariableDeclaration","src":"9122:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":498,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":495,"name":"ElementaryTypeName","src":"9151:7:0"}],"id":496,"name":"VariableDeclaration","src":"9151:13:0"}],"id":497,"name":"ParameterList","src":"9089:79:0"}],"id":498,"name":"EventDefinition","src":"9075:94:0"}],"id":499,"name":"ContractDefinition","src":"8786:385:0"},{"attributes":{"contractDependencies":[257],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[522,257],"name":"HasNoContracts","scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":257,"type":"contract Ownable"},"id":500,"name":"UserDefinedTypeName","src":"9200:7:0"}],"id":501,"name":"InheritanceSpecifier","src":"9200:7:0"},{"attributes":{"constant":false,"documentation":"@dev Reclaim ownership of Ownable contracts\n@param contractAddr The address of the Ownable to be reclaimed.","implemented":true,"isConstructor":false,"name":"reclaimContract","payable":false,"scope":522,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"contractAddr","scope":521,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":502,"name":"ElementaryTypeName","src":"9368:7:0"}],"id":503,"name":"VariableDeclaration","src":"9368:20:0"}],"id":504,"name":"ParameterList","src":"9367:22:0"},{"attributes":{"parameters":[null]},"children":[],"id":507,"name":"ParameterList","src":"9409:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":505,"name":"Identifier","src":"9399:9:0"}],"id":506,"name":"ModifierInvocation","src":"9399:9:0"},{"children":[{"attributes":{"assignments":[509]},"children":[{"attributes":{"constant":false,"name":"contractInst","scope":521,"stateVariable":false,"storageLocation":"default","type":"contract Ownable","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":257,"type":"contract Ownable"},"id":508,"name":"UserDefinedTypeName","src":"9415:7:0"}],"id":509,"name":"VariableDeclaration","src":"9415:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"contract Ownable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[null],"referencedDeclaration":257,"type":"type(contract Ownable)","value":"Ownable"},"id":510,"name":"Identifier","src":"9438:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":503,"type":"address","value":"contractAddr"},"id":511,"name":"Identifier","src":"9446:12:0"}],"id":512,"name":"FunctionCall","src":"9438:21:0"}],"id":513,"name":"VariableDeclarationStatement","src":"9415:44:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferOwnership","referencedDeclaration":233,"type":"function (address) external"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":509,"type":"contract Ownable","value":"contractInst"},"id":514,"name":"Identifier","src":"9465:12:0"}],"id":516,"name":"MemberAccess","src":"9465:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":517,"name":"Identifier","src":"9496:5:0"}],"id":518,"name":"FunctionCall","src":"9465:37:0"}],"id":519,"name":"ExpressionStatement","src":"9465:37:0"}],"id":520,"name":"Block","src":"9409:98:0"}],"id":521,"name":"FunctionDefinition","src":"9343:164:0"}],"id":522,"name":"ContractDefinition","src":"9173:336:0"},{"attributes":{"contractDependencies":[257],"contractKind":"contract","documentation":"@title Contracts that should be able to recover tokens\n@author SylTi\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\nThis will prevent any accidental loss of tokens.","fullyImplemented":true,"linearizedBaseContracts":[550,257],"name":"CanReclaimToken","scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":257,"type":"contract Ownable"},"id":523,"name":"UserDefinedTypeName","src":"9805:7:0"}],"id":524,"name":"InheritanceSpecifier","src":"9805:7:0"},{"children":[{"attributes":{"contractScope":null,"name":"SafeERC20","referencedDeclaration":459,"type":"library SafeERC20"},"id":525,"name":"UserDefinedTypeName","src":"9823:9:0"},{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":401,"type":"contract ERC20Basic"},"id":526,"name":"UserDefinedTypeName","src":"9837:10:0"}],"id":527,"name":"UsingForDirective","src":"9817:31:0"},{"attributes":{"constant":false,"documentation":"@dev Reclaim all ERC20Basic compatible tokens\n@param token ERC20Basic The address of the token contract","implemented":true,"isConstructor":false,"name":"reclaimToken","payable":false,"scope":550,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"token","scope":549,"stateVariable":false,"storageLocation":"default","type":"contract ERC20Basic","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"ERC20Basic","referencedDeclaration":401,"type":"contract ERC20Basic"},"id":528,"name":"UserDefinedTypeName","src":"10000:10:0"}],"id":529,"name":"VariableDeclaration","src":"10000:16:0"}],"id":530,"name":"ParameterList","src":"9999:18:0"},{"attributes":{"parameters":[null]},"children":[],"id":533,"name":"ParameterList","src":"10037:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":531,"name":"Identifier","src":"10027:9:0"}],"id":532,"name":"ModifierInvocation","src":"10027:9:0"},{"children":[{"attributes":{"assignments":[535]},"children":[{"attributes":{"constant":false,"name":"balance","scope":549,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":534,"name":"ElementaryTypeName","src":"10043:7:0"}],"id":535,"name":"VariableDeclaration","src":"10043:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_CanReclaimToken_$550","typeString":"contract CanReclaimToken"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balanceOf","referencedDeclaration":383,"type":"function (address) view external returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":529,"type":"contract ERC20Basic","value":"token"},"id":536,"name":"Identifier","src":"10061:5:0"}],"id":537,"name":"MemberAccess","src":"10061:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":722,"type":"contract CanReclaimToken","value":"this"},"id":538,"name":"Identifier","src":"10077:4:0"}],"id":539,"name":"FunctionCall","src":"10061:21:0"}],"id":540,"name":"VariableDeclarationStatement","src":"10043:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"safeTransfer","referencedDeclaration":419,"type":"function (contract ERC20Basic,address,uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":529,"type":"contract ERC20Basic","value":"token"},"id":541,"name":"Identifier","src":"10088:5:0"}],"id":543,"name":"MemberAccess","src":"10088:18:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":544,"name":"Identifier","src":"10107:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":535,"type":"uint256","value":"balance"},"id":545,"name":"Identifier","src":"10114:7:0"}],"id":546,"name":"FunctionCall","src":"10088:34:0"}],"id":547,"name":"ExpressionStatement","src":"10088:34:0"}],"id":548,"name":"Block","src":"10037:90:0"}],"id":549,"name":"FunctionDefinition","src":"9978:149:0"}],"id":550,"name":"ContractDefinition","src":"9777:353:0"},{"attributes":{"contractDependencies":[257],"contractKind":"contract","documentation":"@title Contracts that should not own Ether\n@author Remco Bloemen <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"2755424a44486715\">[email protected]</a>π.com>\n@dev This tries to block incoming ether to prevent accidental loss of Ether. Should Ether end up\nin the contract, it will allow the owner to reclaim this ether.\n@notice Ether can still be sent to this contract by:\ncalling functions labeled `payable`\n`selfdestruct(contract_address)`\nmining directly to the contract address","fullyImplemented":true,"linearizedBaseContracts":[583,257],"name":"HasNoEther","scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Ownable","referencedDeclaration":257,"type":"contract Ownable"},"id":551,"name":"UserDefinedTypeName","src":"10697:7:0"}],"id":552,"name":"InheritanceSpecifier","src":"10697:7:0"},{"attributes":{"constant":false,"documentation":"@dev Constructor that rejects incoming Ether\nThe `payable` flag is added so we can access `msg.value` without compiler warning. If we\nleave out payable, then Solidity will allow inheriting contracts to implement a payable\nconstructor. By doing it this way we prevent a payable constructor from working. Alternatively\nwe could use assembly to access msg.value.","implemented":true,"isConstructor":true,"modifiers":[null],"name":"","payable":true,"scope":583,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":553,"name":"ParameterList","src":"11112:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":554,"name":"ParameterList","src":"11130:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":555,"name":"Identifier","src":"11136:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":693,"type":"msg","value":"msg"},"id":556,"name":"Identifier","src":"11144:3:0"}],"id":557,"name":"MemberAccess","src":"11144:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":558,"name":"Literal","src":"11157:1:0"}],"id":559,"name":"BinaryOperation","src":"11144:14:0"}],"id":560,"name":"FunctionCall","src":"11136:23:0"}],"id":561,"name":"ExpressionStatement","src":"11136:23:0"}],"id":562,"name":"Block","src":"11130:34:0"}],"id":563,"name":"FunctionDefinition","src":"11101:63:0"},{"attributes":{"constant":false,"documentation":"@dev Disallows direct send by settings a default function without the `payable` flag.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"","payable":false,"scope":583,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":564,"name":"ParameterList","src":"11279:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":565,"name":"ParameterList","src":"11291:0:0"},{"attributes":{"statements":[null]},"children":[],"id":566,"name":"Block","src":"11291:5:0"}],"id":567,"name":"FunctionDefinition","src":"11271:25:0"},{"attributes":{"constant":false,"documentation":"@dev Transfer all Ether held by the contract to the owner.","implemented":true,"isConstructor":false,"name":"reclaimEther","payable":false,"scope":583,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":568,"name":"ParameterList","src":"11397:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":571,"name":"ParameterList","src":"11419:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":569,"name":"Identifier","src":"11409:9:0"}],"id":570,"name":"ModifierInvocation","src":"11409:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transfer","referencedDeclaration":null,"type":"function (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":175,"type":"address","value":"owner"},"id":572,"name":"Identifier","src":"11425:5:0"}],"id":574,"name":"MemberAccess","src":"11425:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"balance","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_HasNoEther_$583","typeString":"contract HasNoEther"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":575,"name":"ElementaryTypeNameExpression","src":"11440:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":724,"type":"contract HasNoEther","value":"this"},"id":576,"name":"Identifier","src":"11448:4:0"}],"id":577,"name":"FunctionCall","src":"11440:13:0"}],"id":578,"name":"MemberAccess","src":"11440:21:0"}],"id":579,"name":"FunctionCall","src":"11425:37:0"}],"id":580,"name":"ExpressionStatement","src":"11425:37:0"}],"id":581,"name":"Block","src":"11419:48:0"}],"id":582,"name":"FunctionDefinition","src":"11376:91:0"}],"id":583,"name":"ContractDefinition","src":"10674:795:0"},{"attributes":{"contractDependencies":[550,257],"contractKind":"contract","documentation":"@title Contracts that should not own Tokens\n@author Remco Bloemen <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"7002151d131f3042\">[email protected]</a>π.com>\n@dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\nShould tokens (any ERC20Basic compatible) end up in the contract, it allows the\nowner to reclaim the tokens.","fullyImplemented":true,"linearizedBaseContracts":[605,550,257],"name":"HasNoTokens","scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"CanReclaimToken","referencedDeclaration":550,"type":"contract CanReclaimToken"},"id":584,"name":"UserDefinedTypeName","src":"11893:15:0"}],"id":585,"name":"InheritanceSpecifier","src":"11893:15:0"},{"attributes":{"constant":false,"documentation":"@dev Reject all ERC223 compatible tokens\n@param from_ address The address that is transferring the tokens\n@param value_ uint256 the amount of the specified token\n@param data_ Bytes The data passed from the caller.","implemented":true,"isConstructor":false,"modifiers":[null],"name":"tokenFallback","payable":false,"scope":605,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"from_","scope":604,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":586,"name":"ElementaryTypeName","src":"12177:7:0"}],"id":587,"name":"VariableDeclaration","src":"12177:13:0"},{"attributes":{"constant":false,"name":"value_","scope":604,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":588,"name":"ElementaryTypeName","src":"12192:7:0"}],"id":589,"name":"VariableDeclaration","src":"12192:14:0"},{"attributes":{"constant":false,"name":"data_","scope":604,"stateVariable":false,"storageLocation":"default","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":590,"name":"ElementaryTypeName","src":"12208:5:0"}],"id":591,"name":"VariableDeclaration","src":"12208:11:0"}],"id":592,"name":"ParameterList","src":"12176:44:0"},{"attributes":{"parameters":[null]},"children":[],"id":593,"name":"ParameterList","src":"12230:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":587,"type":"address","value":"from_"},"id":594,"name":"Identifier","src":"12236:5:0"}],"id":595,"name":"ExpressionStatement","src":"12236:5:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":589,"type":"uint256","value":"value_"},"id":596,"name":"Identifier","src":"12247:6:0"}],"id":597,"name":"ExpressionStatement","src":"12247:6:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":591,"type":"bytes calldata","value":"data_"},"id":598,"name":"Identifier","src":"12259:5:0"}],"id":599,"name":"ExpressionStatement","src":"12259:5:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"overloadedDeclarations":[698,699],"referencedDeclaration":698,"type":"function () pure","value":"revert"},"id":600,"name":"Identifier","src":"12270:6:0"}],"id":601,"name":"FunctionCall","src":"12270:8:0"}],"id":602,"name":"ExpressionStatement","src":"12270:8:0"}],"id":603,"name":"Block","src":"12230:53:0"}],"id":604,"name":"FunctionDefinition","src":"12154:129:0"}],"id":605,"name":"ContractDefinition","src":"11869:417:0"},{"attributes":{"contractDependencies":[550,257,522,583,605],"contractKind":"contract","documentation":"@title Base contract for contracts that should not own things.\n@author Remco Bloemen <<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"1163747c727e5123\">[email protected]</a>π.com>\n@dev Solves a class of errors where a contract accidentally becomes owner of Ether, Tokens or\nOwned contracts. See respective base contracts for details.","fullyImplemented":true,"linearizedBaseContracts":[612,522,605,550,583,257],"name":"NoOwner","nodes":[null],"scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"HasNoEther","referencedDeclaration":583,"type":"contract HasNoEther"},"id":606,"name":"UserDefinedTypeName","src":"12689:10:0"}],"id":607,"name":"InheritanceSpecifier","src":"12689:10:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"HasNoTokens","referencedDeclaration":605,"type":"contract HasNoTokens"},"id":608,"name":"UserDefinedTypeName","src":"12701:11:0"}],"id":609,"name":"InheritanceSpecifier","src":"12701:11:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"HasNoContracts","referencedDeclaration":522,"type":"contract HasNoContracts"},"id":610,"name":"UserDefinedTypeName","src":"12714:14:0"}],"id":611,"name":"InheritanceSpecifier","src":"12714:14:0"}],"id":612,"name":"ContractDefinition","src":"12669:63:0"},{"attributes":{"contractDependencies":[550,105,257,371,522,583,605,612],"contractKind":"contract","documentation":"@title InAndOut\n@dev InAndOut est un contract simulant le processus de vente d'un bien immobilier.\nLe propriétaire du contrat (eg le notaire du vendeur) est chargé de signifier l'avancement du processus de vente\nainsi que de whitelister les différents intervenants qui pourront ancrer les documents nécessaires à la vente.\nChacun peut librement suivre l'avancement du processus.","fullyImplemented":true,"linearizedBaseContracts":[678,612,522,605,550,583,371,105,257],"name":"InAndOut","scope":679},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"Whitelist","referencedDeclaration":371,"type":"contract Whitelist"},"id":613,"name":"UserDefinedTypeName","src":"13162:9:0"}],"id":614,"name":"InheritanceSpecifier","src":"13162:9:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"NoOwner","referencedDeclaration":612,"type":"contract NoOwner"},"id":615,"name":"UserDefinedTypeName","src":"13173:7:0"}],"id":616,"name":"InheritanceSpecifier","src":"13173:7:0"},{"attributes":{"constant":false,"name":"processStep","scope":678,"stateVariable":true,"storageLocation":"default","type":"uint8","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint8","type":"uint8"},"id":617,"name":"ElementaryTypeName","src":"13572:5:0"}],"id":618,"name":"VariableDeclaration","src":"13572:24:0"},{"attributes":{"constant":false,"name":"anchors","scope":678,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes32 => bool)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(bytes32 => bool)"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":619,"name":"ElementaryTypeName","src":"13699:7:0"},{"attributes":{"name":"bool","type":"bool"},"id":620,"name":"ElementaryTypeName","src":"13710:4:0"}],"id":621,"name":"Mapping","src":"13691:24:0"}],"id":622,"name":"VariableDeclaration","src":"13691:39:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"NewAnchor"},"children":[{"children":[{"attributes":{"constant":false,"indexed":false,"name":"merkleRoot","scope":626,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":623,"name":"ElementaryTypeName","src":"13809:7:0"}],"id":624,"name":"VariableDeclaration","src":"13809:18:0"}],"id":625,"name":"ParameterList","src":"13808:20:0"}],"id":626,"name":"EventDefinition","src":"13793:36:0"},{"attributes":{"constant":false,"documentation":"@dev Fonction appelés par le propriétaire du contrat pour passer à l'étape suivante du processus de vente","implemented":true,"isConstructor":false,"name":"goToNextStep","payable":false,"scope":678,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":627,"name":"ParameterList","src":"13989:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":630,"name":"ParameterList","src":"14009:0:0"},{"attributes":{"arguments":null},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"modifier ()","value":"onlyOwner"},"id":628,"name":"Identifier","src":"13992:9:0"}],"id":629,"name":"ModifierInvocation","src":"13992:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":631,"name":"Identifier","src":"14019:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":618,"type":"uint8","value":"processStep"},"id":632,"name":"Identifier","src":"14027:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":633,"name":"Literal","src":"14041:1:0"}],"id":634,"name":"BinaryOperation","src":"14027:15:0"}],"id":635,"name":"FunctionCall","src":"14019:24:0"}],"id":636,"name":"ExpressionStatement","src":"14019:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint8"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":618,"type":"uint8","value":"processStep"},"id":637,"name":"Identifier","src":"14053:11:0"}],"id":638,"name":"UnaryOperation","src":"14053:13:0"}],"id":639,"name":"ExpressionStatement","src":"14053:13:0"}],"id":640,"name":"Block","src":"14009:64:0"}],"id":641,"name":"FunctionDefinition","src":"13968:105:0"},{"attributes":{"constant":true,"documentation":"@dev Vérifier si la vente est validée\n@return Vrai si et seulement si la vente est validée","implemented":true,"isConstructor":false,"modifiers":[null],"name":"isClosedAndValid","payable":false,"scope":678,"stateMutability":"view","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":642,"name":"ParameterList","src":"14228:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":651,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":643,"name":"ElementaryTypeName","src":"14252:4:0"}],"id":644,"name":"VariableDeclaration","src":"14252:4:0"}],"id":645,"name":"ParameterList","src":"14251:6:0"},{"children":[{"attributes":{"functionReturnParameters":645},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":618,"type":"uint8","value":"processStep"},"id":646,"name":"Identifier","src":"14275:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":647,"name":"Literal","src":"14290:1:0"}],"id":648,"name":"BinaryOperation","src":"14275:16:0"}],"id":649,"name":"Return","src":"14268:23:0"}],"id":650,"name":"Block","src":"14258:40:0"}],"id":651,"name":"FunctionDefinition","src":"14203:95:0"},{"attributes":{"constant":false,"documentation":"@dev Sauvegarder un document ou un ensemble de documents identifié(s) par le hash de la racine de l'arbre de Merkle associé\n@param _merkleRoot bytes32 Empreinte à ancrer","implemented":true,"isConstructor":false,"name":"saveNewAnchor","payable":false,"scope":678,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"_merkleRoot","scope":677,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":652,"name":"ElementaryTypeName","src":"14530:7:0"}],"id":653,"name":"VariableDeclaration","src":"14530:19:0"}],"id":654,"name":"ParameterList","src":"14529:21:0"},{"attributes":{"parameters":[null]},"children":[],"id":659,"name":"ParameterList","src":"14588:0:0"},{"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":275,"type":"modifier (address)","value":"onlyIfWhitelisted"},"id":655,"name":"Identifier","src":"14551:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":693,"type":"msg","value":"msg"},"id":656,"name":"Identifier","src":"14569:3:0"}],"id":657,"name":"MemberAccess","src":"14569:10:0"}],"id":658,"name":"ModifierInvocation","src":"14551:29:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[696,697],"referencedDeclaration":696,"type":"function (bool) pure","value":"require"},"id":660,"name":"Identifier","src":"14598:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":618,"type":"uint8","value":"processStep"},"id":661,"name":"Identifier","src":"14606:11:0"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 6","value":"6"},"id":662,"name":"Literal","src":"14620:1:0"}],"id":663,"name":"BinaryOperation","src":"14606:15:0"}],"id":664,"name":"FunctionCall","src":"14598:24:0"}],"id":665,"name":"ExpressionStatement","src":"14598:24:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":622,"type":"mapping(bytes32 => bool)","value":"anchors"},"id":666,"name":"Identifier","src":"14632:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":653,"type":"bytes32","value":"_merkleRoot"},"id":667,"name":"Identifier","src":"14640:11:0"}],"id":668,"name":"IndexAccess","src":"14632:20:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":669,"name":"Literal","src":"14655:4:0"}],"id":670,"name":"Assignment","src":"14632:27:0"}],"id":671,"name":"ExpressionStatement","src":"14632:27:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[null],"referencedDeclaration":626,"type":"function (bytes32)","value":"NewAnchor"},"id":672,"name":"Identifier","src":"14674:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":653,"type":"bytes32","value":"_merkleRoot"},"id":673,"name":"Identifier","src":"14684:11:0"}],"id":674,"name":"FunctionCall","src":"14674:22:0"}],"id":675,"name":"EmitStatement","src":"14669:27:0"}],"id":676,"name":"Block","src":"14588:115:0"}],"id":677,"name":"FunctionDefinition","src":"14507:196:0"}],"id":678,"name":"ContractDefinition","src":"13141:1564:0"}],"id":679,"name":"SourceUnit","src":"0:14705:0"}}